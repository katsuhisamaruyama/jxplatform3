Class Name = Test135
   0 constructorEntry [ S135#S135( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Test135#Test135( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ Test135#s2 ]
   1 fieldDeclaration D = { this.s2 } U = { S135.!S135( ), this.s2 }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = {  } TO = S135#S135( )
   4 actualOut D = { S135.!S135( ) } U = {  }
--
   0 methodEntry [ S135#get2( java.lang.String ) ]
   1 formalIn D = { key$0 } U = {  }
   2 ifSt D = {  } U = { key$0.!equals( java.lang.Object ) }
   3 receiver D = {  } U = { key$0 }
   4 methodCall D = {  } U = { key$0.!java.lang.String.COMPACT_STRINGS, key$0.!java.lang.String.coder, key$0.!java.lang.String.value, this.key } TO = java.lang.String#equals( java.lang.Object )
   5 actualOut D = { key$0.!equals( java.lang.Object ) } U = { key$0.!java.lang.String.COMPACT_STRINGS, key$0.!java.lang.String.coder, key$0.!java.lang.String.value }
   6 returnSt D = { $_ } U = { this.value }
   8 returnSt D = { $_ } U = {  }
  10 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ Test135#s1 ]
   1 fieldDeclaration D = { this.s1 } U = { S135.!S135( ), this.s1 }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = {  } TO = S135#S135( )
   4 actualOut D = { S135.!S135( ) } U = {  }
--
   0 fieldEntry [ S135#key ]
   1 fieldDeclaration D = { this.key } U = { this.key }
--
   0 methodEntry [ Test135#m( ) ]
   1 localDeclaration D = { a$0 } U = {  }
   2 assignment D = {  } U = { this.s1.!set2( java.lang.String java.lang.String ) }
   3 receiver D = {  } U = { this.s1 }
   4 methodCall D = {  } U = {  } TO = S135#set2( java.lang.String java.lang.String )
   5 actualIn D = {  } U = { $java.lang.String }
   6 actualIn D = {  } U = { $java.lang.String }
   7 actualOut D = { this.s1.!set2( java.lang.String java.lang.String ) } U = {  }
   8 assignment D = {  } U = { this.s2.!set2( java.lang.String java.lang.String ) }
   9 receiver D = {  } U = { this.s2 }
  10 methodCall D = {  } U = {  } TO = S135#set2( java.lang.String java.lang.String )
  11 actualIn D = {  } U = { $java.lang.String }
  12 actualIn D = {  } U = { $java.lang.String }
  13 actualOut D = { this.s2.!set2( java.lang.String java.lang.String ) } U = {  }
  14 localDeclaration D = { b$1 } U = { a$0 }
  15 localDeclaration D = { v1$2 } U = { this.s1.!get2( java.lang.String ) }
  16 receiver D = {  } U = { this.s1 }
  17 methodCall D = {  } U = { this.s1.key, this.s1.key$0.!java.lang.String.COMPACT_STRINGS, this.s1.key$0.!java.lang.String.coder, this.s1.key$0.!java.lang.String.value, this.s1.value } TO = S135#get2( java.lang.String )
  18 actualIn D = {  } U = { $java.lang.String }
  19 actualOut D = { this.s1.!get2( java.lang.String ) } U = { this.s1.key, this.s1.key$0.!java.lang.String.COMPACT_STRINGS, this.s1.key$0.!java.lang.String.coder, this.s1.key$0.!java.lang.String.value, this.s1.value }
  20 localDeclaration D = { v2$3 } U = { this.s2.!get2( java.lang.String ) }
  21 receiver D = {  } U = { this.s2 }
  22 methodCall D = {  } U = { this.s2.key, this.s2.key$0.!java.lang.String.COMPACT_STRINGS, this.s2.key$0.!java.lang.String.coder, this.s2.key$0.!java.lang.String.value, this.s2.value } TO = S135#get2( java.lang.String )
  23 actualIn D = {  } U = { $java.lang.String }
  24 actualOut D = { this.s2.!get2( java.lang.String ) } U = { this.s2.key, this.s2.key$0.!java.lang.String.COMPACT_STRINGS, this.s2.key$0.!java.lang.String.coder, this.s2.key$0.!java.lang.String.value, this.s2.value }
  25 assignment D = { this.s1.value } U = { $java.lang.String, this.s1, this.s1.key, this.s1.value }
  27 formalOut D = {  } U = { $_ }
   4+715 actualOutByFieldAccess D = { this.s1.key } U = {  }
   4+716 actualOutByFieldAccess D = { this.s1.value } U = {  }
  10+717 actualOutByFieldAccess D = { this.s2.key } U = {  }
  10+718 actualOutByFieldAccess D = { this.s2.value } U = {  }
--
   0 fieldEntry [ S135#value ]
   1 fieldDeclaration D = { this.value } U = { this.value }
--
   0 methodEntry [ S135#set2( java.lang.String java.lang.String ) ]
   1 formalIn D = { key$0 } U = {  }
   2 formalIn D = { value$1 } U = {  }
   3 assignment D = { this.key } U = { key$0 }
   4 assignment D = { this.value } U = { value$1 }
   6 formalOut D = {  } U = { $_ }
--
   0: S135( )
   1:    0 ->    2 trueControlDependence
--
   0: Test135( )
   1:    0 ->    2 trueControlDependence
--
   0: s2
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    4 ->    1 loopIndependentDefUseDependence S135.!S135( )
--
   0: get2( java.lang.String )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->   10 trueControlDependence
   7:    1 ->    3 loopIndependentDefUseDependence key$0
   8:    2 ->    6 trueControlDependence
   9:    2 ->    8 falseControlDependence
  10:    5 ->    2 loopIndependentDefUseDependence key$0.!equals( java.lang.Object )
  11:    6 ->    8 fallThroughControlDependence
  12:    6 ->   10 loopIndependentDefUseDependence $_
  13:    8 ->   10 loopIndependentDefUseDependence $_
--
   0: s1
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    4 ->    1 loopIndependentDefUseDependence S135.!S135( )
--
   0: key
   1:    0 ->    1 trueControlDependence
--
   0: m( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    4+715 trueControlDependence
   6:    0 ->    4+716 trueControlDependence
   7:    0 ->    5 trueControlDependence
   8:    0 ->    6 trueControlDependence
   9:    0 ->    7 trueControlDependence
  10:    0 ->    8 trueControlDependence
  11:    0 ->    9 trueControlDependence
  12:    0 ->   10 trueControlDependence
  13:    0 ->   10+717 trueControlDependence
  14:    0 ->   10+718 trueControlDependence
  15:    0 ->   11 trueControlDependence
  16:    0 ->   12 trueControlDependence
  17:    0 ->   13 trueControlDependence
  18:    0 ->   14 trueControlDependence
  19:    0 ->   15 trueControlDependence
  20:    0 ->   16 trueControlDependence
  21:    0 ->   17 trueControlDependence
  22:    0 ->   18 trueControlDependence
  23:    0 ->   19 trueControlDependence
  24:    0 ->   20 trueControlDependence
  25:    0 ->   21 trueControlDependence
  26:    0 ->   22 trueControlDependence
  27:    0 ->   23 trueControlDependence
  28:    0 ->   24 trueControlDependence
  29:    0 ->   25 trueControlDependence
  30:    0 ->   27 trueControlDependence
  31:    1 ->   14 declaration
  32:    1 ->   14 loopIndependentDefUseDependence a$0
  33:    4+715 ->   17 loopIndependentDefUseDependence this.s1.key
  34:    4+715 ->   19 loopIndependentDefUseDependence this.s1.key
  35:    4+715 ->   25 loopIndependentDefUseDependence this.s1.key
  36:    4+716 ->   17 loopIndependentDefUseDependence this.s1.value
  37:    4+716 ->   19 loopIndependentDefUseDependence this.s1.value
  38:    4+716 ->   25 loopIndependentDefUseDependence this.s1.value
  39:    7 ->    2 loopIndependentDefUseDependence this.s1.!set2( java.lang.String java.lang.String )
  40:   10+717 ->   22 loopIndependentDefUseDependence this.s2.key
  41:   10+717 ->   24 loopIndependentDefUseDependence this.s2.key
  42:   10+718 ->   22 loopIndependentDefUseDependence this.s2.value
  43:   10+718 ->   24 loopIndependentDefUseDependence this.s2.value
  44:   13 ->    8 loopIndependentDefUseDependence this.s2.!set2( java.lang.String java.lang.String )
  45:   19 ->   15 loopIndependentDefUseDependence this.s1.!get2( java.lang.String )
  46:   24 ->   20 loopIndependentDefUseDependence this.s2.!get2( java.lang.String )
--
   0: value
   1:    0 ->    1 trueControlDependence
--
   0: set2( java.lang.String java.lang.String )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    1 ->    3 loopIndependentDefUseDependence key$0
   7:    2 ->    4 loopIndependentDefUseDependence value$1
--
   1: 160 -> 161 MEMBER
   2: 160 -> 164 MEMBER
   3: 160 -> 171 MEMBER
   4: 160 -> 225 MEMBER
   5: 160 -> 228 MEMBER
   6: 163 -> 214 POUT
   7: 163 -> 220 POUT
   8: 167 -> 715 CFACC
   9: 167 -> 717 CFACC
  10: 168 -> 716 CFACC
  11: 168 -> 718 CFACC
  12: 170 -> 189 POUT
  13: 170 -> 195 POUT
  14: 181 -> 201 POUT
  15: 181 -> 206 POUT
  16: 186 -> 164 CALL
  17: 187 -> 165 PIN
  18: 188 -> 166 PIN
  19: 192 -> 164 CALL
  20: 193 -> 165 PIN
  21: 194 -> 166 PIN
  22: 199 -> 171 CALL
  23: 200 -> 172 PIN
  24: 204 -> 171 CALL
  25: 205 -> 172 PIN
  26: 211 -> 185 FACC
  27: 211 -> 198 FACC
  28: 211 -> 207 FACC
  29: 211 -> 211 FACC
  30: 213 -> 161 CALL
  31: 217 -> 191 FACC
  32: 217 -> 203 FACC
  33: 217 -> 217 FACC
  34: 219 -> 161 CALL
  35: 226 -> 177 FACC
  36: 226 -> 199 FACC
  37: 226 -> 201 FACC
  38: 226 -> 204 FACC
  39: 226 -> 206 FACC
  40: 226 -> 207 FACC
  41: 226 -> 226 FACC
  42: 229 -> 175 FACC
  43: 229 -> 199 FACC
  44: 229 -> 201 FACC
  45: 229 -> 204 FACC
  46: 229 -> 206 FACC
  47: 229 -> 207 FACC
  48: 229 -> 229 FACC
  49: 711 -> 182 MEMBER
  50: 711 -> 210 MEMBER
  51: 711 -> 216 MEMBER
  52: 711 -> 712 MEMBER
--

