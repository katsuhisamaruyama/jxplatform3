----- CCFG (from here) -----
Class Name = org.jtool.videostore.before.CustomerTest
   0 methodEntry [ org.jtool.videostore.before.CustomerTest#testName( ) ]
   1 localDeclaration D = { customer$0 } U = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value } TO = org.jtool.videostore.before.Customer#Customer( java.lang.String )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualOut D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value }
   6 assignment D = {  } U = { this.!assertEquals( java.lang.Object java.lang.Object ) }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = { $java.lang.String, customer$0.!getName( ) } TO = org.junit.Assert#assertEquals( java.lang.Object java.lang.Object )
   9 receiver D = {  } U = { customer$0 }
  10 methodCall D = {  } U = { customer$0.name, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).name } TO = org.jtool.videostore.before.Customer#getName( )
  11 actualOut D = { customer$0.!getName( ) } U = { customer$0.name, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).name }
  12 actualOut D = { this.!assertEquals( java.lang.Object java.lang.Object ) } U = {  }
  13 methodExit
  14 formalOut D = {  } U = { $_ }
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ).name } U = {  }
--
   0 methodEntry [ org.jtool.videostore.before.CustomerTest#testNullName( ) ]
   1 localDeclaration D = { customer$0 } U = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value } TO = org.jtool.videostore.before.Customer#Customer( java.lang.String )
   4 actualIn D = {  } U = {  }
   5 actualOut D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value }
   6 assignment D = {  } U = { this.!fail( ) }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = {  } TO = org.junit.Assert#fail( )
   9 actualOut D = { this.!fail( ) } U = {  }
  10 methodExit
  11 formalOut D = {  } U = { $_ }
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ).name } U = {  }
--
   0 methodEntry [ org.jtool.videostore.before.CustomerTest#getHeader( java.lang.String ) ]
   1 formalIn D = { name$0 } U = {  }
   2 returnSt D = { $_ } U = { $java.lang.String, name$0 }
   3 methodExit
   4 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ org.jtool.videostore.before.CustomerTest#getEach( java.lang.String double ) ]
   1 formalIn D = { rental$0 } U = {  }
   2 formalIn D = { charge$1 } U = {  }
   3 returnSt D = { $_ } U = { $java.lang.String, rental$0, this.!valueOf( double ) }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = { charge$1 } TO = java.lang.String#valueOf( double )
   6 actualOut D = { this.!valueOf( double ) } U = {  }
   7 methodExit
   8 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ org.jtool.videostore.before.CustomerTest#RegularMovie ]
   1 fieldDeclaration D = { org.jtool.videostore.before.CustomerTest.RegularMovie } U = { org.jtool.videostore.before.CustomerTest.RegularMovie, org.jtool.videostore.before.Movie.!Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = {  } TO = org.jtool.videostore.before.Movie#Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualIn D = {  } U = { Movie.PriceCode.REGULAR }
   6 actualOut D = { org.jtool.videostore.before.Movie.!Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode ) } U = {  }
   7 fieldExit
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Movie.!Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode ).priceCode } U = {  }
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Movie.!Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode ).title } U = {  }
--
   0 methodEntry [ org.jtool.videostore.before.CustomerTest#getTotal( double int ) ]
   1 formalIn D = { total$0 } U = {  }
   2 formalIn D = { renterPointsEarned$1 } U = {  }
   3 returnSt D = { $_ } U = { $java.lang.String, this.!valueOf( double ), this.!valueOf( int ) }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = { total$0 } TO = java.lang.String#valueOf( double )
   6 actualOut D = { this.!valueOf( double ) } U = {  }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = { renterPointsEarned$1, this.!java.lang.String.COMPACT_STRINGS } TO = java.lang.String#valueOf( int )
   9 actualOut D = { this.!valueOf( int ) } U = { this.!java.lang.String.COMPACT_STRINGS }
  10 methodExit
  11 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ org.jtool.videostore.before.CustomerTest#testStatementZeroDaysRented( ) ]
   1 localDeclaration D = { customer$0 } U = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value } TO = org.jtool.videostore.before.Customer#Customer( java.lang.String )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualOut D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value }
   6 assignment D = {  } U = { customer$0.!addRental( org.jtool.videostore.before.Rental ) }
   7 receiver D = {  } U = { customer$0 }
   8 methodCall D = {  } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie } TO = org.jtool.videostore.before.Customer#addRental( org.jtool.videostore.before.Rental )
   9 actualIn D = {  } U = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) }
  10 receiver D = {  } U = {  }
  11 constructorCall D = {  } U = { movie$0.priceCode, movie$0.title } TO = org.jtool.videostore.before.Rental#Rental( org.jtool.videostore.before.Movie int )
  12 actualIn D = {  } U = { org.jtool.videostore.before.CustomerTest.RegularMovie, org.jtool.videostore.before.CustomerTest.RegularMovie.priceCode, org.jtool.videostore.before.CustomerTest.RegularMovie.title }
  13 actualIn D = {  } U = {  }
  14 actualOut D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) } U = { movie$0.priceCode, movie$0.title }
  15 actualOut D = { customer$0.!addRental( org.jtool.videostore.before.Rental ), customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie }
  16 assignment D = {  } U = { this.!fail( ) }
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = {  } TO = org.junit.Assert#fail( )
  19 actualOut D = { this.!fail( ) } U = {  }
  20 methodExit
  21 formalOut D = {  } U = { $_ }
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ).name } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).daysRented } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).movie } U = {  }
--
   0 methodEntry [ org.jtool.videostore.before.CustomerTest#testStatementForRentingRegularMovie( ) ]
   1 localDeclaration D = { customer$0 } U = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value } TO = org.jtool.videostore.before.Customer#Customer( java.lang.String )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualOut D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value }
   6 assignment D = {  } U = { customer$0.!addRental( org.jtool.videostore.before.Rental ) }
   7 receiver D = {  } U = { customer$0 }
   8 methodCall D = {  } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie } TO = org.jtool.videostore.before.Customer#addRental( org.jtool.videostore.before.Rental )
   9 actualIn D = {  } U = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) }
  10 receiver D = {  } U = {  }
  11 constructorCall D = {  } U = { movie$0.priceCode, movie$0.title } TO = org.jtool.videostore.before.Rental#Rental( org.jtool.videostore.before.Movie int )
  12 actualIn D = {  } U = { org.jtool.videostore.before.CustomerTest.RegularMovie, org.jtool.videostore.before.CustomerTest.RegularMovie.priceCode, org.jtool.videostore.before.CustomerTest.RegularMovie.title }
  13 actualIn D = {  } U = {  }
  14 actualOut D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) } U = { movie$0.priceCode, movie$0.title }
  15 actualOut D = { customer$0.!addRental( org.jtool.videostore.before.Rental ), customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie }
  16 assignment D = {  } U = { this.!assertEquals( java.lang.Object java.lang.Object ) }
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { customer$0.!statement( ), this.!getEach( java.lang.String double ), this.!getHeader( java.lang.String ), this.!getTotal( double int ) } TO = org.junit.Assert#assertEquals( java.lang.Object java.lang.Object )
  19 receiver D = {  } U = {  }
  20 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.CustomerTest#getHeader( java.lang.String )
  21 actualIn D = {  } U = { $java.lang.String }
  22 actualOut D = { this.!getHeader( java.lang.String ) } U = {  }
  23 receiver D = {  } U = {  }
  24 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.CustomerTest#getEach( java.lang.String double )
  25 actualIn D = {  } U = { $java.lang.String }
  26 actualIn D = {  } U = {  }
  27 actualOut D = { this.!getEach( java.lang.String double ) } U = {  }
  28 receiver D = {  } U = {  }
  29 methodCall D = {  } U = { this.!java.lang.String.COMPACT_STRINGS } TO = org.jtool.videostore.before.CustomerTest#getTotal( double int )
  30 actualIn D = {  } U = {  }
  31 actualIn D = {  } U = {  }
  32 actualOut D = { this.!getTotal( double int ) } U = { this.!java.lang.String.COMPACT_STRINGS }
  33 receiver D = {  } U = { customer$0 }
  34 methodCall D = {  } U = { Movie.PriceCode.NEW_RELEASE, customer$0.each$3.!getMovie( ).priceCode, customer$0.each$3.!getMovie( ).title, customer$0.each$3.daysRented, customer$0.each$3.movie, customer$0.rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).priceCode, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).title, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.daysRented, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.movie, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Movie.PriceCode.CHILDRENS, org.jtool.videostore.before.Movie.PriceCode.NEW_RELEASE, org.jtool.videostore.before.Movie.PriceCode.REGULAR, this.!java.lang.String.COMPACT_STRINGS, this.movie.priceCode, this.movie.title, this.name } TO = org.jtool.videostore.before.Customer#statement( )
  35 actualOut D = { customer$0.!statement( ) } U = { Movie.PriceCode.NEW_RELEASE, customer$0.each$3.!getMovie( ).priceCode, customer$0.each$3.!getMovie( ).title, customer$0.each$3.daysRented, customer$0.each$3.movie, customer$0.rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).priceCode, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).title, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.daysRented, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.movie, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Movie.PriceCode.CHILDRENS, org.jtool.videostore.before.Movie.PriceCode.NEW_RELEASE, org.jtool.videostore.before.Movie.PriceCode.REGULAR, this.!java.lang.String.COMPACT_STRINGS, this.movie.priceCode, this.movie.title, this.name }
  36 actualOut D = { this.!assertEquals( java.lang.Object java.lang.Object ) } U = {  }
  37 methodExit
  38 formalOut D = {  } U = { $_ }
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ).name } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).daysRented } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).movie } U = {  }
--
   0 methodEntry [ org.jtool.videostore.before.CustomerTest#testStatementForRentingNewReleaseMovie( ) ]
   1 localDeclaration D = { customer$0 } U = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value } TO = org.jtool.videostore.before.Customer#Customer( java.lang.String )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualOut D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value }
   6 assignment D = {  } U = { customer$0.!addRental( org.jtool.videostore.before.Rental ) }
   7 receiver D = {  } U = { customer$0 }
   8 methodCall D = {  } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie } TO = org.jtool.videostore.before.Customer#addRental( org.jtool.videostore.before.Rental )
   9 actualIn D = {  } U = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) }
  10 receiver D = {  } U = {  }
  11 constructorCall D = {  } U = { movie$0.priceCode, movie$0.title } TO = org.jtool.videostore.before.Rental#Rental( org.jtool.videostore.before.Movie int )
  12 actualIn D = {  } U = { org.jtool.videostore.before.CustomerTest.NewReleaseMovie, org.jtool.videostore.before.CustomerTest.NewReleaseMovie.priceCode, org.jtool.videostore.before.CustomerTest.NewReleaseMovie.title }
  13 actualIn D = {  } U = {  }
  14 actualOut D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) } U = { movie$0.priceCode, movie$0.title }
  15 actualOut D = { customer$0.!addRental( org.jtool.videostore.before.Rental ), customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie }
  16 assignment D = {  } U = { this.!assertEquals( java.lang.Object java.lang.Object ) }
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { customer$0.!statement( ), this.!getEach( java.lang.String double ), this.!getHeader( java.lang.String ), this.!getTotal( double int ) } TO = org.junit.Assert#assertEquals( java.lang.Object java.lang.Object )
  19 receiver D = {  } U = {  }
  20 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.CustomerTest#getHeader( java.lang.String )
  21 actualIn D = {  } U = { $java.lang.String }
  22 actualOut D = { this.!getHeader( java.lang.String ) } U = {  }
  23 receiver D = {  } U = {  }
  24 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.CustomerTest#getEach( java.lang.String double )
  25 actualIn D = {  } U = { $java.lang.String }
  26 actualIn D = {  } U = {  }
  27 actualOut D = { this.!getEach( java.lang.String double ) } U = {  }
  28 receiver D = {  } U = {  }
  29 methodCall D = {  } U = { this.!java.lang.String.COMPACT_STRINGS } TO = org.jtool.videostore.before.CustomerTest#getTotal( double int )
  30 actualIn D = {  } U = {  }
  31 actualIn D = {  } U = {  }
  32 actualOut D = { this.!getTotal( double int ) } U = { this.!java.lang.String.COMPACT_STRINGS }
  33 receiver D = {  } U = { customer$0 }
  34 methodCall D = {  } U = { Movie.PriceCode.NEW_RELEASE, customer$0.each$3.!getMovie( ).priceCode, customer$0.each$3.!getMovie( ).title, customer$0.each$3.daysRented, customer$0.each$3.movie, customer$0.rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).priceCode, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).title, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.daysRented, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.movie, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Movie.PriceCode.CHILDRENS, org.jtool.videostore.before.Movie.PriceCode.NEW_RELEASE, org.jtool.videostore.before.Movie.PriceCode.REGULAR, this.!java.lang.String.COMPACT_STRINGS, this.movie.priceCode, this.movie.title, this.name } TO = org.jtool.videostore.before.Customer#statement( )
  35 actualOut D = { customer$0.!statement( ) } U = { Movie.PriceCode.NEW_RELEASE, customer$0.each$3.!getMovie( ).priceCode, customer$0.each$3.!getMovie( ).title, customer$0.each$3.daysRented, customer$0.each$3.movie, customer$0.rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).priceCode, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).title, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.daysRented, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.movie, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Movie.PriceCode.CHILDRENS, org.jtool.videostore.before.Movie.PriceCode.NEW_RELEASE, org.jtool.videostore.before.Movie.PriceCode.REGULAR, this.!java.lang.String.COMPACT_STRINGS, this.movie.priceCode, this.movie.title, this.name }
  36 actualOut D = { this.!assertEquals( java.lang.Object java.lang.Object ) } U = {  }
  37 methodExit
  38 formalOut D = {  } U = { $_ }
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ).name } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).daysRented } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).movie } U = {  }
--
   0 fieldEntry [ org.jtool.videostore.before.CustomerTest#ChildrensMovie ]
   1 fieldDeclaration D = { org.jtool.videostore.before.CustomerTest.ChildrensMovie } U = { org.jtool.videostore.before.CustomerTest.ChildrensMovie, org.jtool.videostore.before.Movie.!Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = {  } TO = org.jtool.videostore.before.Movie#Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualIn D = {  } U = { Movie.PriceCode.CHILDRENS }
   6 actualOut D = { org.jtool.videostore.before.Movie.!Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode ) } U = {  }
   7 fieldExit
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Movie.!Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode ).priceCode } U = {  }
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Movie.!Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode ).title } U = {  }
--
   0 methodEntry [ org.jtool.videostore.before.CustomerTest#testStatementForRentingTwoMoviesZeroDaysRented( ) ]
   1 localDeclaration D = { customer$0 } U = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value } TO = org.jtool.videostore.before.Customer#Customer( java.lang.String )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualOut D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value }
   6 assignment D = {  } U = { customer$0.!addRental( org.jtool.videostore.before.Rental ) }
   7 receiver D = {  } U = { customer$0 }
   8 methodCall D = {  } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie } TO = org.jtool.videostore.before.Customer#addRental( org.jtool.videostore.before.Rental )
   9 actualIn D = {  } U = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) }
  10 receiver D = {  } U = {  }
  11 constructorCall D = {  } U = { movie$0.priceCode, movie$0.title } TO = org.jtool.videostore.before.Rental#Rental( org.jtool.videostore.before.Movie int )
  12 actualIn D = {  } U = { org.jtool.videostore.before.CustomerTest.RegularMovie, org.jtool.videostore.before.CustomerTest.RegularMovie.priceCode, org.jtool.videostore.before.CustomerTest.RegularMovie.title }
  13 actualIn D = {  } U = {  }
  14 actualOut D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) } U = { movie$0.priceCode, movie$0.title }
  15 actualOut D = { customer$0.!addRental( org.jtool.videostore.before.Rental ), customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie }
  16 assignment D = {  } U = { customer$0.!addRental( org.jtool.videostore.before.Rental ) }
  17 receiver D = {  } U = { customer$0 }
  18 methodCall D = {  } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie } TO = org.jtool.videostore.before.Customer#addRental( org.jtool.videostore.before.Rental )
  19 actualIn D = {  } U = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) }
  20 receiver D = {  } U = {  }
  21 constructorCall D = {  } U = { movie$0.priceCode, movie$0.title } TO = org.jtool.videostore.before.Rental#Rental( org.jtool.videostore.before.Movie int )
  22 actualIn D = {  } U = { org.jtool.videostore.before.CustomerTest.NewReleaseMovie, org.jtool.videostore.before.CustomerTest.NewReleaseMovie.priceCode, org.jtool.videostore.before.CustomerTest.NewReleaseMovie.title }
  23 actualIn D = {  } U = {  }
  24 actualOut D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) } U = { movie$0.priceCode, movie$0.title }
  25 actualOut D = { customer$0.!addRental( org.jtool.videostore.before.Rental ), customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie }
  26 assignment D = {  } U = { this.!fail( ) }
  27 receiver D = {  } U = {  }
  28 methodCall D = {  } U = {  } TO = org.junit.Assert#fail( )
  29 actualOut D = { this.!fail( ) } U = {  }
  30 methodExit
  31 formalOut D = {  } U = { $_ }
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ).name } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).daysRented } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).movie } U = {  }
  21+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).daysRented } U = {  }
  21+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).movie } U = {  }
--
   0 methodEntry [ org.jtool.videostore.before.CustomerTest#testStatementMinusDaysRented( ) ]
   1 localDeclaration D = { customer$0 } U = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value } TO = org.jtool.videostore.before.Customer#Customer( java.lang.String )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualOut D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value }
   6 assignment D = {  } U = { customer$0.!addRental( org.jtool.videostore.before.Rental ) }
   7 receiver D = {  } U = { customer$0 }
   8 methodCall D = {  } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie } TO = org.jtool.videostore.before.Customer#addRental( org.jtool.videostore.before.Rental )
   9 actualIn D = {  } U = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) }
  10 receiver D = {  } U = {  }
  11 constructorCall D = {  } U = { movie$0.priceCode, movie$0.title } TO = org.jtool.videostore.before.Rental#Rental( org.jtool.videostore.before.Movie int )
  12 actualIn D = {  } U = { org.jtool.videostore.before.CustomerTest.RegularMovie, org.jtool.videostore.before.CustomerTest.RegularMovie.priceCode, org.jtool.videostore.before.CustomerTest.RegularMovie.title }
  13 actualIn D = {  } U = {  }
  14 actualOut D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) } U = { movie$0.priceCode, movie$0.title }
  15 actualOut D = { customer$0.!addRental( org.jtool.videostore.before.Rental ), customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie }
  16 assignment D = {  } U = { this.!assertEquals( java.lang.Object java.lang.Object ) }
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { $java.lang.String, customer$0.!statement( ), this.!getHeader( java.lang.String ) } TO = org.junit.Assert#assertEquals( java.lang.Object java.lang.Object )
  19 receiver D = {  } U = {  }
  20 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.CustomerTest#getHeader( java.lang.String )
  21 actualIn D = {  } U = { $java.lang.String }
  22 actualOut D = { this.!getHeader( java.lang.String ) } U = {  }
  23 receiver D = {  } U = { customer$0 }
  24 methodCall D = {  } U = { Movie.PriceCode.NEW_RELEASE, customer$0.each$3.!getMovie( ).priceCode, customer$0.each$3.!getMovie( ).title, customer$0.each$3.daysRented, customer$0.each$3.movie, customer$0.rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).priceCode, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).title, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.daysRented, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.movie, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Movie.PriceCode.CHILDRENS, org.jtool.videostore.before.Movie.PriceCode.NEW_RELEASE, org.jtool.videostore.before.Movie.PriceCode.REGULAR, this.!java.lang.String.COMPACT_STRINGS, this.movie.priceCode, this.movie.title, this.name } TO = org.jtool.videostore.before.Customer#statement( )
  25 actualOut D = { customer$0.!statement( ) } U = { Movie.PriceCode.NEW_RELEASE, customer$0.each$3.!getMovie( ).priceCode, customer$0.each$3.!getMovie( ).title, customer$0.each$3.daysRented, customer$0.each$3.movie, customer$0.rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).priceCode, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).title, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.daysRented, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.movie, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Movie.PriceCode.CHILDRENS, org.jtool.videostore.before.Movie.PriceCode.NEW_RELEASE, org.jtool.videostore.before.Movie.PriceCode.REGULAR, this.!java.lang.String.COMPACT_STRINGS, this.movie.priceCode, this.movie.title, this.name }
  26 actualOut D = { this.!assertEquals( java.lang.Object java.lang.Object ) } U = {  }
  27 methodExit
  28 formalOut D = {  } U = { $_ }
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ).name } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).daysRented } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).movie } U = {  }
--
   0 methodEntry [ org.jtool.videostore.before.CustomerTest#testStatementForRentingTwoMovies( ) ]
   1 localDeclaration D = { customer$0 } U = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value } TO = org.jtool.videostore.before.Customer#Customer( java.lang.String )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualOut D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value }
   6 assignment D = {  } U = { customer$0.!addRental( org.jtool.videostore.before.Rental ) }
   7 receiver D = {  } U = { customer$0 }
   8 methodCall D = {  } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie } TO = org.jtool.videostore.before.Customer#addRental( org.jtool.videostore.before.Rental )
   9 actualIn D = {  } U = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) }
  10 receiver D = {  } U = {  }
  11 constructorCall D = {  } U = { movie$0.priceCode, movie$0.title } TO = org.jtool.videostore.before.Rental#Rental( org.jtool.videostore.before.Movie int )
  12 actualIn D = {  } U = { org.jtool.videostore.before.CustomerTest.RegularMovie, org.jtool.videostore.before.CustomerTest.RegularMovie.priceCode, org.jtool.videostore.before.CustomerTest.RegularMovie.title }
  13 actualIn D = {  } U = {  }
  14 actualOut D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) } U = { movie$0.priceCode, movie$0.title }
  15 actualOut D = { customer$0.!addRental( org.jtool.videostore.before.Rental ), customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie }
  16 assignment D = {  } U = { customer$0.!addRental( org.jtool.videostore.before.Rental ) }
  17 receiver D = {  } U = { customer$0 }
  18 methodCall D = {  } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie } TO = org.jtool.videostore.before.Customer#addRental( org.jtool.videostore.before.Rental )
  19 actualIn D = {  } U = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) }
  20 receiver D = {  } U = {  }
  21 constructorCall D = {  } U = { movie$0.priceCode, movie$0.title } TO = org.jtool.videostore.before.Rental#Rental( org.jtool.videostore.before.Movie int )
  22 actualIn D = {  } U = { org.jtool.videostore.before.CustomerTest.NewReleaseMovie, org.jtool.videostore.before.CustomerTest.NewReleaseMovie.priceCode, org.jtool.videostore.before.CustomerTest.NewReleaseMovie.title }
  23 actualIn D = {  } U = {  }
  24 actualOut D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) } U = { movie$0.priceCode, movie$0.title }
  25 actualOut D = { customer$0.!addRental( org.jtool.videostore.before.Rental ), customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie }
  26 assignment D = {  } U = { this.!assertEquals( java.lang.Object java.lang.Object ) }
  27 receiver D = {  } U = {  }
  28 methodCall D = {  } U = { customer$0.!statement( ), this.!getEach( java.lang.String double ), this.!getHeader( java.lang.String ), this.!getTotal( double int ) } TO = org.junit.Assert#assertEquals( java.lang.Object java.lang.Object )
  29 receiver D = {  } U = {  }
  30 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.CustomerTest#getHeader( java.lang.String )
  31 actualIn D = {  } U = { $java.lang.String }
  32 actualOut D = { this.!getHeader( java.lang.String ) } U = {  }
  33 receiver D = {  } U = {  }
  34 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.CustomerTest#getEach( java.lang.String double )
  35 actualIn D = {  } U = { $java.lang.String }
  36 actualIn D = {  } U = {  }
  37 actualOut D = { this.!getEach( java.lang.String double ) } U = {  }
  38 receiver D = {  } U = {  }
  39 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.CustomerTest#getEach( java.lang.String double )
  40 actualIn D = {  } U = { $java.lang.String }
  41 actualIn D = {  } U = {  }
  42 actualOut D = { this.!getEach( java.lang.String double ) } U = {  }
  43 receiver D = {  } U = {  }
  44 methodCall D = {  } U = { this.!java.lang.String.COMPACT_STRINGS } TO = org.jtool.videostore.before.CustomerTest#getTotal( double int )
  45 actualIn D = {  } U = {  }
  46 actualIn D = {  } U = {  }
  47 actualOut D = { this.!getTotal( double int ) } U = { this.!java.lang.String.COMPACT_STRINGS }
  48 receiver D = {  } U = { customer$0 }
  49 methodCall D = {  } U = { Movie.PriceCode.NEW_RELEASE, customer$0.each$3.!getMovie( ).priceCode, customer$0.each$3.!getMovie( ).title, customer$0.each$3.daysRented, customer$0.each$3.movie, customer$0.rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).priceCode, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).title, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.daysRented, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.movie, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Movie.PriceCode.CHILDRENS, org.jtool.videostore.before.Movie.PriceCode.NEW_RELEASE, org.jtool.videostore.before.Movie.PriceCode.REGULAR, this.!java.lang.String.COMPACT_STRINGS, this.movie.priceCode, this.movie.title, this.name } TO = org.jtool.videostore.before.Customer#statement( )
  50 actualOut D = { customer$0.!statement( ) } U = { Movie.PriceCode.NEW_RELEASE, customer$0.each$3.!getMovie( ).priceCode, customer$0.each$3.!getMovie( ).title, customer$0.each$3.daysRented, customer$0.each$3.movie, customer$0.rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).priceCode, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).title, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.daysRented, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.movie, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Movie.PriceCode.CHILDRENS, org.jtool.videostore.before.Movie.PriceCode.NEW_RELEASE, org.jtool.videostore.before.Movie.PriceCode.REGULAR, this.!java.lang.String.COMPACT_STRINGS, this.movie.priceCode, this.movie.title, this.name }
  51 actualOut D = { this.!assertEquals( java.lang.Object java.lang.Object ) } U = {  }
  52 methodExit
  53 formalOut D = {  } U = { $_ }
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ).name } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).daysRented } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).movie } U = {  }
  21+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).daysRented } U = {  }
  21+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).movie } U = {  }
--
   0 fieldEntry [ org.jtool.videostore.before.CustomerTest#NewReleaseMovie ]
   1 fieldDeclaration D = { org.jtool.videostore.before.CustomerTest.NewReleaseMovie } U = { org.jtool.videostore.before.CustomerTest.NewReleaseMovie, org.jtool.videostore.before.Movie.!Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = {  } TO = org.jtool.videostore.before.Movie#Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualIn D = {  } U = { Movie.PriceCode.NEW_RELEASE }
   6 actualOut D = { org.jtool.videostore.before.Movie.!Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode ) } U = {  }
   7 fieldExit
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Movie.!Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode ).priceCode } U = {  }
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Movie.!Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode ).title } U = {  }
--
   0 methodEntry [ org.jtool.videostore.before.CustomerTest#testStatementOfThreeMovies1( ) ]
   1 localDeclaration D = { customer$0 } U = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value } TO = org.jtool.videostore.before.Customer#Customer( java.lang.String )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualOut D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value }
   6 assignment D = {  } U = { customer$0.!addRental( org.jtool.videostore.before.Rental ) }
   7 receiver D = {  } U = { customer$0 }
   8 methodCall D = {  } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie } TO = org.jtool.videostore.before.Customer#addRental( org.jtool.videostore.before.Rental )
   9 actualIn D = {  } U = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) }
  10 receiver D = {  } U = {  }
  11 constructorCall D = {  } U = { movie$0.priceCode, movie$0.title } TO = org.jtool.videostore.before.Rental#Rental( org.jtool.videostore.before.Movie int )
  12 actualIn D = {  } U = { org.jtool.videostore.before.CustomerTest.RegularMovie, org.jtool.videostore.before.CustomerTest.RegularMovie.priceCode, org.jtool.videostore.before.CustomerTest.RegularMovie.title }
  13 actualIn D = {  } U = {  }
  14 actualOut D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) } U = { movie$0.priceCode, movie$0.title }
  15 actualOut D = { customer$0.!addRental( org.jtool.videostore.before.Rental ), customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie }
  16 assignment D = {  } U = { customer$0.!addRental( org.jtool.videostore.before.Rental ) }
  17 receiver D = {  } U = { customer$0 }
  18 methodCall D = {  } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie } TO = org.jtool.videostore.before.Customer#addRental( org.jtool.videostore.before.Rental )
  19 actualIn D = {  } U = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) }
  20 receiver D = {  } U = {  }
  21 constructorCall D = {  } U = { movie$0.priceCode, movie$0.title } TO = org.jtool.videostore.before.Rental#Rental( org.jtool.videostore.before.Movie int )
  22 actualIn D = {  } U = { org.jtool.videostore.before.CustomerTest.NewReleaseMovie, org.jtool.videostore.before.CustomerTest.NewReleaseMovie.priceCode, org.jtool.videostore.before.CustomerTest.NewReleaseMovie.title }
  23 actualIn D = {  } U = {  }
  24 actualOut D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) } U = { movie$0.priceCode, movie$0.title }
  25 actualOut D = { customer$0.!addRental( org.jtool.videostore.before.Rental ), customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie }
  26 assignment D = {  } U = { customer$0.!addRental( org.jtool.videostore.before.Rental ) }
  27 receiver D = {  } U = { customer$0 }
  28 methodCall D = {  } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie } TO = org.jtool.videostore.before.Customer#addRental( org.jtool.videostore.before.Rental )
  29 actualIn D = {  } U = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) }
  30 receiver D = {  } U = {  }
  31 constructorCall D = {  } U = { movie$0.priceCode, movie$0.title } TO = org.jtool.videostore.before.Rental#Rental( org.jtool.videostore.before.Movie int )
  32 actualIn D = {  } U = { org.jtool.videostore.before.CustomerTest.ChildrensMovie, org.jtool.videostore.before.CustomerTest.ChildrensMovie.priceCode, org.jtool.videostore.before.CustomerTest.ChildrensMovie.title }
  33 actualIn D = {  } U = {  }
  34 actualOut D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) } U = { movie$0.priceCode, movie$0.title }
  35 actualOut D = { customer$0.!addRental( org.jtool.videostore.before.Rental ), customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie }
  36 assignment D = {  } U = { this.!assertEquals( java.lang.Object java.lang.Object ) }
  37 receiver D = {  } U = {  }
  38 methodCall D = {  } U = { customer$0.!statement( ), this.!getEach( java.lang.String double ), this.!getHeader( java.lang.String ), this.!getTotal( double int ) } TO = org.junit.Assert#assertEquals( java.lang.Object java.lang.Object )
  39 receiver D = {  } U = {  }
  40 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.CustomerTest#getHeader( java.lang.String )
  41 actualIn D = {  } U = { $java.lang.String }
  42 actualOut D = { this.!getHeader( java.lang.String ) } U = {  }
  43 receiver D = {  } U = {  }
  44 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.CustomerTest#getEach( java.lang.String double )
  45 actualIn D = {  } U = { $java.lang.String }
  46 actualIn D = {  } U = {  }
  47 actualOut D = { this.!getEach( java.lang.String double ) } U = {  }
  48 receiver D = {  } U = {  }
  49 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.CustomerTest#getEach( java.lang.String double )
  50 actualIn D = {  } U = { $java.lang.String }
  51 actualIn D = {  } U = {  }
  52 actualOut D = { this.!getEach( java.lang.String double ) } U = {  }
  53 receiver D = {  } U = {  }
  54 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.CustomerTest#getEach( java.lang.String double )
  55 actualIn D = {  } U = { $java.lang.String }
  56 actualIn D = {  } U = {  }
  57 actualOut D = { this.!getEach( java.lang.String double ) } U = {  }
  58 receiver D = {  } U = {  }
  59 methodCall D = {  } U = { this.!java.lang.String.COMPACT_STRINGS } TO = org.jtool.videostore.before.CustomerTest#getTotal( double int )
  60 actualIn D = {  } U = {  }
  61 actualIn D = {  } U = {  }
  62 actualOut D = { this.!getTotal( double int ) } U = { this.!java.lang.String.COMPACT_STRINGS }
  63 receiver D = {  } U = { customer$0 }
  64 methodCall D = {  } U = { Movie.PriceCode.NEW_RELEASE, customer$0.each$3.!getMovie( ).priceCode, customer$0.each$3.!getMovie( ).title, customer$0.each$3.daysRented, customer$0.each$3.movie, customer$0.rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).priceCode, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).title, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.daysRented, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.movie, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Movie.PriceCode.CHILDRENS, org.jtool.videostore.before.Movie.PriceCode.NEW_RELEASE, org.jtool.videostore.before.Movie.PriceCode.REGULAR, this.!java.lang.String.COMPACT_STRINGS, this.movie.priceCode, this.movie.title, this.name } TO = org.jtool.videostore.before.Customer#statement( )
  65 actualOut D = { customer$0.!statement( ) } U = { Movie.PriceCode.NEW_RELEASE, customer$0.each$3.!getMovie( ).priceCode, customer$0.each$3.!getMovie( ).title, customer$0.each$3.daysRented, customer$0.each$3.movie, customer$0.rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).priceCode, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).title, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.daysRented, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.movie, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Movie.PriceCode.CHILDRENS, org.jtool.videostore.before.Movie.PriceCode.NEW_RELEASE, org.jtool.videostore.before.Movie.PriceCode.REGULAR, this.!java.lang.String.COMPACT_STRINGS, this.movie.priceCode, this.movie.title, this.name }
  66 actualOut D = { this.!assertEquals( java.lang.Object java.lang.Object ) } U = {  }
  67 methodExit
  68 formalOut D = {  } U = { $_ }
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ).name } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).daysRented } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).movie } U = {  }
  21+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).daysRented } U = {  }
  21+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).movie } U = {  }
  31+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).daysRented } U = {  }
  31+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).movie } U = {  }
--
   0 constructorEntry [ org.jtool.videostore.before.CustomerTest#CustomerTest( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ org.jtool.videostore.before.CustomerTest#testStatementForRentingChildrensMovie( ) ]
   1 localDeclaration D = { customer$0 } U = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value } TO = org.jtool.videostore.before.Customer#Customer( java.lang.String )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualOut D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value }
   6 assignment D = {  } U = { customer$0.!addRental( org.jtool.videostore.before.Rental ) }
   7 receiver D = {  } U = { customer$0 }
   8 methodCall D = {  } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie } TO = org.jtool.videostore.before.Customer#addRental( org.jtool.videostore.before.Rental )
   9 actualIn D = {  } U = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) }
  10 receiver D = {  } U = {  }
  11 constructorCall D = {  } U = { movie$0.priceCode, movie$0.title } TO = org.jtool.videostore.before.Rental#Rental( org.jtool.videostore.before.Movie int )
  12 actualIn D = {  } U = { org.jtool.videostore.before.CustomerTest.ChildrensMovie, org.jtool.videostore.before.CustomerTest.ChildrensMovie.priceCode, org.jtool.videostore.before.CustomerTest.ChildrensMovie.title }
  13 actualIn D = {  } U = {  }
  14 actualOut D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) } U = { movie$0.priceCode, movie$0.title }
  15 actualOut D = { customer$0.!addRental( org.jtool.videostore.before.Rental ), customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie }
  16 assignment D = {  } U = { this.!assertEquals( java.lang.Object java.lang.Object ) }
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { customer$0.!statement( ), this.!getEach( java.lang.String double ), this.!getHeader( java.lang.String ), this.!getTotal( double int ) } TO = org.junit.Assert#assertEquals( java.lang.Object java.lang.Object )
  19 receiver D = {  } U = {  }
  20 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.CustomerTest#getHeader( java.lang.String )
  21 actualIn D = {  } U = { $java.lang.String }
  22 actualOut D = { this.!getHeader( java.lang.String ) } U = {  }
  23 receiver D = {  } U = {  }
  24 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.CustomerTest#getEach( java.lang.String double )
  25 actualIn D = {  } U = { $java.lang.String }
  26 actualIn D = {  } U = {  }
  27 actualOut D = { this.!getEach( java.lang.String double ) } U = {  }
  28 receiver D = {  } U = {  }
  29 methodCall D = {  } U = { this.!java.lang.String.COMPACT_STRINGS } TO = org.jtool.videostore.before.CustomerTest#getTotal( double int )
  30 actualIn D = {  } U = {  }
  31 actualIn D = {  } U = {  }
  32 actualOut D = { this.!getTotal( double int ) } U = { this.!java.lang.String.COMPACT_STRINGS }
  33 receiver D = {  } U = { customer$0 }
  34 methodCall D = {  } U = { Movie.PriceCode.NEW_RELEASE, customer$0.each$3.!getMovie( ).priceCode, customer$0.each$3.!getMovie( ).title, customer$0.each$3.daysRented, customer$0.each$3.movie, customer$0.rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).priceCode, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).title, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.daysRented, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.movie, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Movie.PriceCode.CHILDRENS, org.jtool.videostore.before.Movie.PriceCode.NEW_RELEASE, org.jtool.videostore.before.Movie.PriceCode.REGULAR, this.!java.lang.String.COMPACT_STRINGS, this.movie.priceCode, this.movie.title, this.name } TO = org.jtool.videostore.before.Customer#statement( )
  35 actualOut D = { customer$0.!statement( ) } U = { Movie.PriceCode.NEW_RELEASE, customer$0.each$3.!getMovie( ).priceCode, customer$0.each$3.!getMovie( ).title, customer$0.each$3.daysRented, customer$0.each$3.movie, customer$0.rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).priceCode, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).title, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.daysRented, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.movie, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Movie.PriceCode.CHILDRENS, org.jtool.videostore.before.Movie.PriceCode.NEW_RELEASE, org.jtool.videostore.before.Movie.PriceCode.REGULAR, this.!java.lang.String.COMPACT_STRINGS, this.movie.priceCode, this.movie.title, this.name }
  36 actualOut D = { this.!assertEquals( java.lang.Object java.lang.Object ) } U = {  }
  37 methodExit
  38 formalOut D = {  } U = { $_ }
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ).name } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).daysRented } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).movie } U = {  }
--
   0 methodEntry [ org.jtool.videostore.before.CustomerTest#testEmptyName( ) ]
   1 localDeclaration D = { customer$0 } U = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value } TO = org.jtool.videostore.before.Customer#Customer( java.lang.String )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualOut D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value }
   6 assignment D = {  } U = { this.!assertNull( java.lang.Object ) }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = { customer$0.!getName( ) } TO = org.junit.Assert#assertNull( java.lang.Object )
   9 receiver D = {  } U = { customer$0 }
  10 methodCall D = {  } U = { customer$0.name, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).name } TO = org.jtool.videostore.before.Customer#getName( )
  11 actualOut D = { customer$0.!getName( ) } U = { customer$0.name, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).name }
  12 actualOut D = { this.!assertNull( java.lang.Object ) } U = {  }
  13 methodExit
  14 formalOut D = {  } U = { $_ }
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ).name } U = {  }
--
   0 methodEntry [ org.jtool.videostore.before.CustomerTest#testZeroRental( ) ]
   1 localDeclaration D = { customer$0 } U = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value } TO = org.jtool.videostore.before.Customer#Customer( java.lang.String )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualOut D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value }
   6 assignment D = {  } U = { this.!assertEquals( java.lang.Object java.lang.Object ) }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = { customer$0.!statement( ), this.!getHeader( java.lang.String ), this.!getTotal( double int ) } TO = org.junit.Assert#assertEquals( java.lang.Object java.lang.Object )
   9 receiver D = {  } U = {  }
  10 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.CustomerTest#getHeader( java.lang.String )
  11 actualIn D = {  } U = { $java.lang.String }
  12 actualOut D = { this.!getHeader( java.lang.String ) } U = {  }
  13 receiver D = {  } U = {  }
  14 methodCall D = {  } U = { this.!java.lang.String.COMPACT_STRINGS } TO = org.jtool.videostore.before.CustomerTest#getTotal( double int )
  15 actualIn D = {  } U = {  }
  16 actualIn D = {  } U = {  }
  17 actualOut D = { this.!getTotal( double int ) } U = { this.!java.lang.String.COMPACT_STRINGS }
  18 receiver D = {  } U = { customer$0 }
  19 methodCall D = {  } U = { Movie.PriceCode.NEW_RELEASE, customer$0.each$3.!getMovie( ).priceCode, customer$0.each$3.!getMovie( ).title, customer$0.each$3.daysRented, customer$0.each$3.movie, customer$0.rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).priceCode, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).title, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.daysRented, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.movie, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Movie.PriceCode.CHILDRENS, org.jtool.videostore.before.Movie.PriceCode.NEW_RELEASE, org.jtool.videostore.before.Movie.PriceCode.REGULAR, this.!java.lang.String.COMPACT_STRINGS, this.movie.priceCode, this.movie.title, this.name } TO = org.jtool.videostore.before.Customer#statement( )
  20 actualOut D = { customer$0.!statement( ) } U = { Movie.PriceCode.NEW_RELEASE, customer$0.each$3.!getMovie( ).priceCode, customer$0.each$3.!getMovie( ).title, customer$0.each$3.daysRented, customer$0.each$3.movie, customer$0.rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).priceCode, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.!getMovie( ).title, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.daysRented, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).each$3.movie, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Movie.PriceCode.CHILDRENS, org.jtool.videostore.before.Movie.PriceCode.NEW_RELEASE, org.jtool.videostore.before.Movie.PriceCode.REGULAR, this.!java.lang.String.COMPACT_STRINGS, this.movie.priceCode, this.movie.title, this.name }
  21 actualOut D = { this.!assertEquals( java.lang.Object java.lang.Object ) } U = {  }
  22 methodExit
  23 formalOut D = {  } U = { $_ }
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ).name } U = {  }
--
   0 methodEntry [ org.jtool.videostore.before.CustomerTest#testStatementRentingThreeMoviesZeroDaysRented( ) ]
   1 localDeclaration D = { customer$0 } U = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value } TO = org.jtool.videostore.before.Customer#Customer( java.lang.String )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualOut D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value }
   6 assignment D = {  } U = { customer$0.!addRental( org.jtool.videostore.before.Rental ) }
   7 receiver D = {  } U = { customer$0 }
   8 methodCall D = {  } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie } TO = org.jtool.videostore.before.Customer#addRental( org.jtool.videostore.before.Rental )
   9 actualIn D = {  } U = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) }
  10 receiver D = {  } U = {  }
  11 constructorCall D = {  } U = { movie$0.priceCode, movie$0.title } TO = org.jtool.videostore.before.Rental#Rental( org.jtool.videostore.before.Movie int )
  12 actualIn D = {  } U = { org.jtool.videostore.before.CustomerTest.RegularMovie, org.jtool.videostore.before.CustomerTest.RegularMovie.priceCode, org.jtool.videostore.before.CustomerTest.RegularMovie.title }
  13 actualIn D = {  } U = {  }
  14 actualOut D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) } U = { movie$0.priceCode, movie$0.title }
  15 actualOut D = { customer$0.!addRental( org.jtool.videostore.before.Rental ), customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie }
  16 assignment D = {  } U = { customer$0.!addRental( org.jtool.videostore.before.Rental ) }
  17 receiver D = {  } U = { customer$0 }
  18 methodCall D = {  } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie } TO = org.jtool.videostore.before.Customer#addRental( org.jtool.videostore.before.Rental )
  19 actualIn D = {  } U = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) }
  20 receiver D = {  } U = {  }
  21 constructorCall D = {  } U = { movie$0.priceCode, movie$0.title } TO = org.jtool.videostore.before.Rental#Rental( org.jtool.videostore.before.Movie int )
  22 actualIn D = {  } U = { org.jtool.videostore.before.CustomerTest.NewReleaseMovie, org.jtool.videostore.before.CustomerTest.NewReleaseMovie.priceCode, org.jtool.videostore.before.CustomerTest.NewReleaseMovie.title }
  23 actualIn D = {  } U = {  }
  24 actualOut D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) } U = { movie$0.priceCode, movie$0.title }
  25 actualOut D = { customer$0.!addRental( org.jtool.videostore.before.Rental ), customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie }
  26 assignment D = {  } U = { customer$0.!addRental( org.jtool.videostore.before.Rental ) }
  27 receiver D = {  } U = { customer$0 }
  28 methodCall D = {  } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie } TO = org.jtool.videostore.before.Customer#addRental( org.jtool.videostore.before.Rental )
  29 actualIn D = {  } U = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) }
  30 receiver D = {  } U = {  }
  31 constructorCall D = {  } U = { movie$0.priceCode, movie$0.title } TO = org.jtool.videostore.before.Rental#Rental( org.jtool.videostore.before.Movie int )
  32 actualIn D = {  } U = { org.jtool.videostore.before.CustomerTest.ChildrensMovie, org.jtool.videostore.before.CustomerTest.ChildrensMovie.priceCode, org.jtool.videostore.before.CustomerTest.ChildrensMovie.title }
  33 actualIn D = {  } U = {  }
  34 actualOut D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) } U = { movie$0.priceCode, movie$0.title }
  35 actualOut D = { customer$0.!addRental( org.jtool.videostore.before.Rental ), customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie }
  36 assignment D = {  } U = { this.!fail( ) }
  37 receiver D = {  } U = {  }
  38 methodCall D = {  } U = {  } TO = org.junit.Assert#fail( )
  39 actualOut D = { this.!fail( ) } U = {  }
  40 methodExit
  41 formalOut D = {  } U = { $_ }
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ).name } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).daysRented } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).movie } U = {  }
  21+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).daysRented } U = {  }
  21+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).movie } U = {  }
  31+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).daysRented } U = {  }
  31+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).movie } U = {  }
--
   0 methodEntry [ org.jtool.videostore.before.CustomerTest#testNullMovie( ) ]
   1 localDeclaration D = { customer$0 } U = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value } TO = org.jtool.videostore.before.Customer#Customer( java.lang.String )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualOut D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value }
   6 assignment D = {  } U = { customer$0.!addRental( org.jtool.videostore.before.Rental ) }
   7 receiver D = {  } U = { customer$0 }
   8 methodCall D = {  } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie } TO = org.jtool.videostore.before.Customer#addRental( org.jtool.videostore.before.Rental )
   9 actualIn D = {  } U = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) }
  10 receiver D = {  } U = {  }
  11 constructorCall D = {  } U = { movie$0.priceCode, movie$0.title } TO = org.jtool.videostore.before.Rental#Rental( org.jtool.videostore.before.Movie int )
  12 actualIn D = {  } U = { org.jtool.videostore.before.Movie.!Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode ) }
  13 receiver D = {  } U = {  }
  14 constructorCall D = {  } U = {  } TO = org.jtool.videostore.before.Movie#Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode )
  15 actualIn D = {  } U = {  }
  16 actualIn D = {  } U = { Movie.PriceCode.REGULAR }
  17 actualOut D = { org.jtool.videostore.before.Movie.!Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode ) } U = {  }
  18 actualIn D = {  } U = {  }
  19 actualOut D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) } U = { movie$0.priceCode, movie$0.title }
  20 actualOut D = { customer$0.!addRental( org.jtool.videostore.before.Rental ), customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie }
  21 assignment D = {  } U = { this.!fail( ) }
  22 receiver D = {  } U = {  }
  23 methodCall D = {  } U = {  } TO = org.junit.Assert#fail( )
  24 actualOut D = { this.!fail( ) } U = {  }
  25 methodExit
  26 formalOut D = {  } U = { $_ }
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ).name } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).daysRented } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).movie } U = {  }
  14+ actualOutByFieldAccess D = { org.jtool.videostore.before.Movie.!Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode ).priceCode } U = {  }
  14+ actualOutByFieldAccess D = { org.jtool.videostore.before.Movie.!Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode ).title } U = {  }
--
   0 methodEntry [ org.jtool.videostore.before.CustomerTest#testNullRental( ) ]
   1 localDeclaration D = { customer$0 } U = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value } TO = org.jtool.videostore.before.Customer#Customer( java.lang.String )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualOut D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ) } U = { org.jtool.videostore.before.Customer.name$0.!java.lang.String.COMPACT_STRINGS, org.jtool.videostore.before.Customer.name$0.!java.lang.String.coder, org.jtool.videostore.before.Customer.name$0.!java.lang.String.value }
   6 assignment D = {  } U = { customer$0.!addRental( org.jtool.videostore.before.Rental ) }
   7 receiver D = {  } U = { customer$0 }
   8 methodCall D = {  } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie } TO = org.jtool.videostore.before.Customer#addRental( org.jtool.videostore.before.Rental )
   9 actualIn D = {  } U = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) }
  10 receiver D = {  } U = {  }
  11 constructorCall D = {  } U = { movie$0.priceCode, movie$0.title } TO = org.jtool.videostore.before.Rental#Rental( org.jtool.videostore.before.Movie int )
  12 actualIn D = {  } U = { org.jtool.videostore.before.CustomerTest.RegularMovie, org.jtool.videostore.before.CustomerTest.RegularMovie.priceCode, org.jtool.videostore.before.CustomerTest.RegularMovie.title }
  13 actualIn D = {  } U = {  }
  14 actualOut D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ) } U = { movie$0.priceCode, movie$0.title }
  15 actualOut D = { customer$0.!addRental( org.jtool.videostore.before.Rental ), customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie }
  16 assignment D = {  } U = { customer$0.!addRental( org.jtool.videostore.before.Rental ) }
  17 receiver D = {  } U = { customer$0 }
  18 methodCall D = {  } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie } TO = org.jtool.videostore.before.Customer#addRental( org.jtool.videostore.before.Rental )
  19 actualIn D = {  } U = {  }
  20 actualOut D = { customer$0.!addRental( org.jtool.videostore.before.Rental ), customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size } U = { customer$0.rentals, customer$0.rentals.!java.util.ArrayList.elementData, customer$0.rentals.!java.util.ArrayList.modCount, customer$0.rentals.!java.util.ArrayList.size, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.elementData, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.modCount, org.jtool.videostore.before.Customer.!Customer( java.lang.String ).rentals.!java.util.ArrayList.size, rental$0.daysRented, rental$0.movie }
  21 assignment D = {  } U = { this.!fail( ) }
  22 receiver D = {  } U = {  }
  23 methodCall D = {  } U = {  } TO = org.junit.Assert#fail( )
  24 actualOut D = { this.!fail( ) } U = {  }
  25 methodExit
  26 formalOut D = {  } U = { $_ }
   3+ actualOutByFieldAccess D = { org.jtool.videostore.before.Customer.!Customer( java.lang.String ).name } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).daysRented } U = {  }
  11+ actualOutByFieldAccess D = { org.jtool.videostore.before.Rental.!Rental( org.jtool.videostore.before.Movie int ).movie } U = {  }
--
   0: testName( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    7 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    3+ trueControlFlow
   5:    4 ->    3 trueControlFlow
   6:    5 ->    1 trueControlFlow
   7:    6 ->   14 trueControlFlow
   8:    7 ->    9 trueControlFlow
   9:    8 ->   12 trueControlFlow
  10:    9 ->   10 trueControlFlow
  11:   10 ->   11 trueControlFlow
  12:   11 ->    8 trueControlFlow
  13:   12 ->    6 trueControlFlow
  14:   14 ->   13 trueControlFlow
  15:    3+ ->    5 trueControlFlow
--
   0: testNullName( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    7 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    3+ trueControlFlow
   5:    4 ->    3 trueControlFlow
   6:    5 ->    1 trueControlFlow
   7:    6 ->   11 trueControlFlow
   8:    7 ->    8 trueControlFlow
   9:    8 ->    9 trueControlFlow
  10:    9 ->    6 trueControlFlow
  11:   11 ->   10 trueControlFlow
  12:    3+ ->    5 trueControlFlow
--
   0: getHeader( java.lang.String )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
   3:    2 ->    4 fallThroughFlow
   4:    2 ->    4 trueControlFlow
   5:    4 ->    3 trueControlFlow
--
   0: getEach( java.lang.String double )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    8 fallThroughFlow
   5:    3 ->    8 trueControlFlow
   6:    4 ->    5 trueControlFlow
   7:    5 ->    6 trueControlFlow
   8:    6 ->    3 trueControlFlow
   9:    8 ->    7 trueControlFlow
--
   0: RegularMovie
   1:    0 ->    2 trueControlFlow
   2:    1 ->    7 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    3+ trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    3 trueControlFlow
   7:    6 ->    1 trueControlFlow
   8:    3+ ->    3+ trueControlFlow
   9:    3+ ->    6 trueControlFlow
--
   0: getTotal( double int )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->   11 fallThroughFlow
   5:    3 ->   11 trueControlFlow
   6:    4 ->    5 trueControlFlow
   7:    5 ->    6 trueControlFlow
   8:    6 ->    7 trueControlFlow
   9:    7 ->    8 trueControlFlow
  10:    8 ->    9 trueControlFlow
  11:    9 ->    3 trueControlFlow
  12:   11 ->   10 trueControlFlow
--
   0: testStatementZeroDaysRented( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    7 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    3+ trueControlFlow
   5:    4 ->    3 trueControlFlow
   6:    5 ->    1 trueControlFlow
   7:    6 ->   17 trueControlFlow
   8:    7 ->   10 trueControlFlow
   9:    8 ->   15 trueControlFlow
  10:    9 ->    8 trueControlFlow
  11:   10 ->   12 trueControlFlow
  12:   11 ->   11+ trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   11 trueControlFlow
  15:   14 ->    9 trueControlFlow
  16:   15 ->    6 trueControlFlow
  17:   16 ->   21 trueControlFlow
  18:   17 ->   18 trueControlFlow
  19:   18 ->   19 trueControlFlow
  20:   19 ->   16 trueControlFlow
  21:   21 ->   20 trueControlFlow
  22:    3+ ->    5 trueControlFlow
  23:   11+ ->   11+ trueControlFlow
  24:   11+ ->   14 trueControlFlow
--
   0: testStatementForRentingRegularMovie( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    7 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    3+ trueControlFlow
   5:    4 ->    3 trueControlFlow
   6:    5 ->    1 trueControlFlow
   7:    6 ->   17 trueControlFlow
   8:    7 ->   10 trueControlFlow
   9:    8 ->   15 trueControlFlow
  10:    9 ->    8 trueControlFlow
  11:   10 ->   12 trueControlFlow
  12:   11 ->   11+ trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   11 trueControlFlow
  15:   14 ->    9 trueControlFlow
  16:   15 ->    6 trueControlFlow
  17:   16 ->   38 trueControlFlow
  18:   17 ->   19 trueControlFlow
  19:   18 ->   36 trueControlFlow
  20:   19 ->   21 trueControlFlow
  21:   20 ->   22 trueControlFlow
  22:   21 ->   20 trueControlFlow
  23:   22 ->   23 trueControlFlow
  24:   23 ->   25 trueControlFlow
  25:   24 ->   27 trueControlFlow
  26:   25 ->   26 trueControlFlow
  27:   26 ->   24 trueControlFlow
  28:   27 ->   28 trueControlFlow
  29:   28 ->   30 trueControlFlow
  30:   29 ->   32 trueControlFlow
  31:   30 ->   31 trueControlFlow
  32:   31 ->   29 trueControlFlow
  33:   32 ->   33 trueControlFlow
  34:   33 ->   34 trueControlFlow
  35:   34 ->   35 trueControlFlow
  36:   35 ->   18 trueControlFlow
  37:   36 ->   16 trueControlFlow
  38:   38 ->   37 trueControlFlow
  39:    3+ ->    5 trueControlFlow
  40:   11+ ->   11+ trueControlFlow
  41:   11+ ->   14 trueControlFlow
--
   0: testStatementForRentingNewReleaseMovie( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    7 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    3+ trueControlFlow
   5:    4 ->    3 trueControlFlow
   6:    5 ->    1 trueControlFlow
   7:    6 ->   17 trueControlFlow
   8:    7 ->   10 trueControlFlow
   9:    8 ->   15 trueControlFlow
  10:    9 ->    8 trueControlFlow
  11:   10 ->   12 trueControlFlow
  12:   11 ->   11+ trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   11 trueControlFlow
  15:   14 ->    9 trueControlFlow
  16:   15 ->    6 trueControlFlow
  17:   16 ->   38 trueControlFlow
  18:   17 ->   19 trueControlFlow
  19:   18 ->   36 trueControlFlow
  20:   19 ->   21 trueControlFlow
  21:   20 ->   22 trueControlFlow
  22:   21 ->   20 trueControlFlow
  23:   22 ->   23 trueControlFlow
  24:   23 ->   25 trueControlFlow
  25:   24 ->   27 trueControlFlow
  26:   25 ->   26 trueControlFlow
  27:   26 ->   24 trueControlFlow
  28:   27 ->   28 trueControlFlow
  29:   28 ->   30 trueControlFlow
  30:   29 ->   32 trueControlFlow
  31:   30 ->   31 trueControlFlow
  32:   31 ->   29 trueControlFlow
  33:   32 ->   33 trueControlFlow
  34:   33 ->   34 trueControlFlow
  35:   34 ->   35 trueControlFlow
  36:   35 ->   18 trueControlFlow
  37:   36 ->   16 trueControlFlow
  38:   38 ->   37 trueControlFlow
  39:    3+ ->    5 trueControlFlow
  40:   11+ ->   11+ trueControlFlow
  41:   11+ ->   14 trueControlFlow
--
   0: ChildrensMovie
   1:    0 ->    2 trueControlFlow
   2:    1 ->    7 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    3+ trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    3 trueControlFlow
   7:    6 ->    1 trueControlFlow
   8:    3+ ->    3+ trueControlFlow
   9:    3+ ->    6 trueControlFlow
--
   0: testStatementForRentingTwoMoviesZeroDaysRented( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    7 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    3+ trueControlFlow
   5:    4 ->    3 trueControlFlow
   6:    5 ->    1 trueControlFlow
   7:    6 ->   17 trueControlFlow
   8:    7 ->   10 trueControlFlow
   9:    8 ->   15 trueControlFlow
  10:    9 ->    8 trueControlFlow
  11:   10 ->   12 trueControlFlow
  12:   11 ->   11+ trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   11 trueControlFlow
  15:   14 ->    9 trueControlFlow
  16:   15 ->    6 trueControlFlow
  17:   16 ->   27 trueControlFlow
  18:   17 ->   20 trueControlFlow
  19:   18 ->   25 trueControlFlow
  20:   19 ->   18 trueControlFlow
  21:   20 ->   22 trueControlFlow
  22:   21 ->   21+ trueControlFlow
  23:   22 ->   23 trueControlFlow
  24:   23 ->   21 trueControlFlow
  25:   24 ->   19 trueControlFlow
  26:   25 ->   16 trueControlFlow
  27:   26 ->   31 trueControlFlow
  28:   27 ->   28 trueControlFlow
  29:   28 ->   29 trueControlFlow
  30:   29 ->   26 trueControlFlow
  31:   31 ->   30 trueControlFlow
  32:    3+ ->    5 trueControlFlow
  33:   11+ ->   11+ trueControlFlow
  34:   11+ ->   14 trueControlFlow
  35:   21+ ->   21+ trueControlFlow
  36:   21+ ->   24 trueControlFlow
--
   0: testStatementMinusDaysRented( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    7 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    3+ trueControlFlow
   5:    4 ->    3 trueControlFlow
   6:    5 ->    1 trueControlFlow
   7:    6 ->   17 trueControlFlow
   8:    7 ->   10 trueControlFlow
   9:    8 ->   15 trueControlFlow
  10:    9 ->    8 trueControlFlow
  11:   10 ->   12 trueControlFlow
  12:   11 ->   11+ trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   11 trueControlFlow
  15:   14 ->    9 trueControlFlow
  16:   15 ->    6 trueControlFlow
  17:   16 ->   28 trueControlFlow
  18:   17 ->   19 trueControlFlow
  19:   18 ->   26 trueControlFlow
  20:   19 ->   21 trueControlFlow
  21:   20 ->   22 trueControlFlow
  22:   21 ->   20 trueControlFlow
  23:   22 ->   23 trueControlFlow
  24:   23 ->   24 trueControlFlow
  25:   24 ->   25 trueControlFlow
  26:   25 ->   18 trueControlFlow
  27:   26 ->   16 trueControlFlow
  28:   28 ->   27 trueControlFlow
  29:    3+ ->    5 trueControlFlow
  30:   11+ ->   11+ trueControlFlow
  31:   11+ ->   14 trueControlFlow
--
   0: testStatementForRentingTwoMovies( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    7 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    3+ trueControlFlow
   5:    4 ->    3 trueControlFlow
   6:    5 ->    1 trueControlFlow
   7:    6 ->   17 trueControlFlow
   8:    7 ->   10 trueControlFlow
   9:    8 ->   15 trueControlFlow
  10:    9 ->    8 trueControlFlow
  11:   10 ->   12 trueControlFlow
  12:   11 ->   11+ trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   11 trueControlFlow
  15:   14 ->    9 trueControlFlow
  16:   15 ->    6 trueControlFlow
  17:   16 ->   27 trueControlFlow
  18:   17 ->   20 trueControlFlow
  19:   18 ->   25 trueControlFlow
  20:   19 ->   18 trueControlFlow
  21:   20 ->   22 trueControlFlow
  22:   21 ->   21+ trueControlFlow
  23:   22 ->   23 trueControlFlow
  24:   23 ->   21 trueControlFlow
  25:   24 ->   19 trueControlFlow
  26:   25 ->   16 trueControlFlow
  27:   26 ->   53 trueControlFlow
  28:   27 ->   29 trueControlFlow
  29:   28 ->   51 trueControlFlow
  30:   29 ->   31 trueControlFlow
  31:   30 ->   32 trueControlFlow
  32:   31 ->   30 trueControlFlow
  33:   32 ->   33 trueControlFlow
  34:   33 ->   35 trueControlFlow
  35:   34 ->   37 trueControlFlow
  36:   35 ->   36 trueControlFlow
  37:   36 ->   34 trueControlFlow
  38:   37 ->   38 trueControlFlow
  39:   38 ->   40 trueControlFlow
  40:   39 ->   42 trueControlFlow
  41:   40 ->   41 trueControlFlow
  42:   41 ->   39 trueControlFlow
  43:   42 ->   43 trueControlFlow
  44:   43 ->   45 trueControlFlow
  45:   44 ->   47 trueControlFlow
  46:   45 ->   46 trueControlFlow
  47:   46 ->   44 trueControlFlow
  48:   47 ->   48 trueControlFlow
  49:   48 ->   49 trueControlFlow
  50:   49 ->   50 trueControlFlow
  51:   50 ->   28 trueControlFlow
  52:   51 ->   26 trueControlFlow
  53:   53 ->   52 trueControlFlow
  54:    3+ ->    5 trueControlFlow
  55:   11+ ->   11+ trueControlFlow
  56:   11+ ->   14 trueControlFlow
  57:   21+ ->   21+ trueControlFlow
  58:   21+ ->   24 trueControlFlow
--
   0: NewReleaseMovie
   1:    0 ->    2 trueControlFlow
   2:    1 ->    7 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    3+ trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    3 trueControlFlow
   7:    6 ->    1 trueControlFlow
   8:    3+ ->    3+ trueControlFlow
   9:    3+ ->    6 trueControlFlow
--
   0: testStatementOfThreeMovies1( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    7 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    3+ trueControlFlow
   5:    4 ->    3 trueControlFlow
   6:    5 ->    1 trueControlFlow
   7:    6 ->   17 trueControlFlow
   8:    7 ->   10 trueControlFlow
   9:    8 ->   15 trueControlFlow
  10:    9 ->    8 trueControlFlow
  11:   10 ->   12 trueControlFlow
  12:   11 ->   11+ trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   11 trueControlFlow
  15:   14 ->    9 trueControlFlow
  16:   15 ->    6 trueControlFlow
  17:   16 ->   27 trueControlFlow
  18:   17 ->   20 trueControlFlow
  19:   18 ->   25 trueControlFlow
  20:   19 ->   18 trueControlFlow
  21:   20 ->   22 trueControlFlow
  22:   21 ->   21+ trueControlFlow
  23:   22 ->   23 trueControlFlow
  24:   23 ->   21 trueControlFlow
  25:   24 ->   19 trueControlFlow
  26:   25 ->   16 trueControlFlow
  27:   26 ->   37 trueControlFlow
  28:   27 ->   30 trueControlFlow
  29:   28 ->   35 trueControlFlow
  30:   29 ->   28 trueControlFlow
  31:   30 ->   32 trueControlFlow
  32:   31 ->   31+ trueControlFlow
  33:   32 ->   33 trueControlFlow
  34:   33 ->   31 trueControlFlow
  35:   34 ->   29 trueControlFlow
  36:   35 ->   26 trueControlFlow
  37:   36 ->   68 trueControlFlow
  38:   37 ->   39 trueControlFlow
  39:   38 ->   66 trueControlFlow
  40:   39 ->   41 trueControlFlow
  41:   40 ->   42 trueControlFlow
  42:   41 ->   40 trueControlFlow
  43:   42 ->   43 trueControlFlow
  44:   43 ->   45 trueControlFlow
  45:   44 ->   47 trueControlFlow
  46:   45 ->   46 trueControlFlow
  47:   46 ->   44 trueControlFlow
  48:   47 ->   48 trueControlFlow
  49:   48 ->   50 trueControlFlow
  50:   49 ->   52 trueControlFlow
  51:   50 ->   51 trueControlFlow
  52:   51 ->   49 trueControlFlow
  53:   52 ->   53 trueControlFlow
  54:   53 ->   55 trueControlFlow
  55:   54 ->   57 trueControlFlow
  56:   55 ->   56 trueControlFlow
  57:   56 ->   54 trueControlFlow
  58:   57 ->   58 trueControlFlow
  59:   58 ->   60 trueControlFlow
  60:   59 ->   62 trueControlFlow
  61:   60 ->   61 trueControlFlow
  62:   61 ->   59 trueControlFlow
  63:   62 ->   63 trueControlFlow
  64:   63 ->   64 trueControlFlow
  65:   64 ->   65 trueControlFlow
  66:   65 ->   38 trueControlFlow
  67:   66 ->   36 trueControlFlow
  68:   68 ->   67 trueControlFlow
  69:    3+ ->    5 trueControlFlow
  70:   11+ ->   11+ trueControlFlow
  71:   11+ ->   14 trueControlFlow
  72:   21+ ->   21+ trueControlFlow
  73:   21+ ->   24 trueControlFlow
  74:   31+ ->   31+ trueControlFlow
  75:   31+ ->   34 trueControlFlow
--
   0: CustomerTest( )
   1:    0 ->    2 trueControlFlow
   2:    2 ->    1 trueControlFlow
--
   0: testStatementForRentingChildrensMovie( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    7 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    3+ trueControlFlow
   5:    4 ->    3 trueControlFlow
   6:    5 ->    1 trueControlFlow
   7:    6 ->   17 trueControlFlow
   8:    7 ->   10 trueControlFlow
   9:    8 ->   15 trueControlFlow
  10:    9 ->    8 trueControlFlow
  11:   10 ->   12 trueControlFlow
  12:   11 ->   11+ trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   11 trueControlFlow
  15:   14 ->    9 trueControlFlow
  16:   15 ->    6 trueControlFlow
  17:   16 ->   38 trueControlFlow
  18:   17 ->   19 trueControlFlow
  19:   18 ->   36 trueControlFlow
  20:   19 ->   21 trueControlFlow
  21:   20 ->   22 trueControlFlow
  22:   21 ->   20 trueControlFlow
  23:   22 ->   23 trueControlFlow
  24:   23 ->   25 trueControlFlow
  25:   24 ->   27 trueControlFlow
  26:   25 ->   26 trueControlFlow
  27:   26 ->   24 trueControlFlow
  28:   27 ->   28 trueControlFlow
  29:   28 ->   30 trueControlFlow
  30:   29 ->   32 trueControlFlow
  31:   30 ->   31 trueControlFlow
  32:   31 ->   29 trueControlFlow
  33:   32 ->   33 trueControlFlow
  34:   33 ->   34 trueControlFlow
  35:   34 ->   35 trueControlFlow
  36:   35 ->   18 trueControlFlow
  37:   36 ->   16 trueControlFlow
  38:   38 ->   37 trueControlFlow
  39:    3+ ->    5 trueControlFlow
  40:   11+ ->   11+ trueControlFlow
  41:   11+ ->   14 trueControlFlow
--
   0: testEmptyName( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    7 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    3+ trueControlFlow
   5:    4 ->    3 trueControlFlow
   6:    5 ->    1 trueControlFlow
   7:    6 ->   14 trueControlFlow
   8:    7 ->    9 trueControlFlow
   9:    8 ->   12 trueControlFlow
  10:    9 ->   10 trueControlFlow
  11:   10 ->   11 trueControlFlow
  12:   11 ->    8 trueControlFlow
  13:   12 ->    6 trueControlFlow
  14:   14 ->   13 trueControlFlow
  15:    3+ ->    5 trueControlFlow
--
   0: testZeroRental( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    7 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    3+ trueControlFlow
   5:    4 ->    3 trueControlFlow
   6:    5 ->    1 trueControlFlow
   7:    6 ->   23 trueControlFlow
   8:    7 ->    9 trueControlFlow
   9:    8 ->   21 trueControlFlow
  10:    9 ->   11 trueControlFlow
  11:   10 ->   12 trueControlFlow
  12:   11 ->   10 trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   15 trueControlFlow
  15:   14 ->   17 trueControlFlow
  16:   15 ->   16 trueControlFlow
  17:   16 ->   14 trueControlFlow
  18:   17 ->   18 trueControlFlow
  19:   18 ->   19 trueControlFlow
  20:   19 ->   20 trueControlFlow
  21:   20 ->    8 trueControlFlow
  22:   21 ->    6 trueControlFlow
  23:   23 ->   22 trueControlFlow
  24:    3+ ->    5 trueControlFlow
--
   0: testStatementRentingThreeMoviesZeroDaysRented( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    7 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    3+ trueControlFlow
   5:    4 ->    3 trueControlFlow
   6:    5 ->    1 trueControlFlow
   7:    6 ->   17 trueControlFlow
   8:    7 ->   10 trueControlFlow
   9:    8 ->   15 trueControlFlow
  10:    9 ->    8 trueControlFlow
  11:   10 ->   12 trueControlFlow
  12:   11 ->   11+ trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   11 trueControlFlow
  15:   14 ->    9 trueControlFlow
  16:   15 ->    6 trueControlFlow
  17:   16 ->   27 trueControlFlow
  18:   17 ->   20 trueControlFlow
  19:   18 ->   25 trueControlFlow
  20:   19 ->   18 trueControlFlow
  21:   20 ->   22 trueControlFlow
  22:   21 ->   21+ trueControlFlow
  23:   22 ->   23 trueControlFlow
  24:   23 ->   21 trueControlFlow
  25:   24 ->   19 trueControlFlow
  26:   25 ->   16 trueControlFlow
  27:   26 ->   37 trueControlFlow
  28:   27 ->   30 trueControlFlow
  29:   28 ->   35 trueControlFlow
  30:   29 ->   28 trueControlFlow
  31:   30 ->   32 trueControlFlow
  32:   31 ->   31+ trueControlFlow
  33:   32 ->   33 trueControlFlow
  34:   33 ->   31 trueControlFlow
  35:   34 ->   29 trueControlFlow
  36:   35 ->   26 trueControlFlow
  37:   36 ->   41 trueControlFlow
  38:   37 ->   38 trueControlFlow
  39:   38 ->   39 trueControlFlow
  40:   39 ->   36 trueControlFlow
  41:   41 ->   40 trueControlFlow
  42:    3+ ->    5 trueControlFlow
  43:   11+ ->   11+ trueControlFlow
  44:   11+ ->   14 trueControlFlow
  45:   21+ ->   21+ trueControlFlow
  46:   21+ ->   24 trueControlFlow
  47:   31+ ->   31+ trueControlFlow
  48:   31+ ->   34 trueControlFlow
--
   0: testNullMovie( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    7 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    3+ trueControlFlow
   5:    4 ->    3 trueControlFlow
   6:    5 ->    1 trueControlFlow
   7:    6 ->   22 trueControlFlow
   8:    7 ->   10 trueControlFlow
   9:    8 ->   20 trueControlFlow
  10:    9 ->    8 trueControlFlow
  11:   10 ->   13 trueControlFlow
  12:   11 ->   11+ trueControlFlow
  13:   12 ->   18 trueControlFlow
  14:   13 ->   15 trueControlFlow
  15:   14 ->   14+ trueControlFlow
  16:   15 ->   16 trueControlFlow
  17:   16 ->   14 trueControlFlow
  18:   17 ->   12 trueControlFlow
  19:   18 ->   11 trueControlFlow
  20:   19 ->    9 trueControlFlow
  21:   20 ->    6 trueControlFlow
  22:   21 ->   26 trueControlFlow
  23:   22 ->   23 trueControlFlow
  24:   23 ->   24 trueControlFlow
  25:   24 ->   21 trueControlFlow
  26:   26 ->   25 trueControlFlow
  27:    3+ ->    5 trueControlFlow
  28:   11+ ->   11+ trueControlFlow
  29:   11+ ->   19 trueControlFlow
  30:   14+ ->   14+ trueControlFlow
  31:   14+ ->   17 trueControlFlow
--
   0: testNullRental( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    7 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    3+ trueControlFlow
   5:    4 ->    3 trueControlFlow
   6:    5 ->    1 trueControlFlow
   7:    6 ->   17 trueControlFlow
   8:    7 ->   10 trueControlFlow
   9:    8 ->   15 trueControlFlow
  10:    9 ->    8 trueControlFlow
  11:   10 ->   12 trueControlFlow
  12:   11 ->   11+ trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   11 trueControlFlow
  15:   14 ->    9 trueControlFlow
  16:   15 ->    6 trueControlFlow
  17:   16 ->   22 trueControlFlow
  18:   17 ->   19 trueControlFlow
  19:   18 ->   20 trueControlFlow
  20:   19 ->   18 trueControlFlow
  21:   20 ->   16 trueControlFlow
  22:   21 ->   26 trueControlFlow
  23:   22 ->   23 trueControlFlow
  24:   23 ->   24 trueControlFlow
  25:   24 ->   21 trueControlFlow
  26:   26 ->   25 trueControlFlow
  27:    3+ ->    5 trueControlFlow
  28:   11+ ->   11+ trueControlFlow
  29:   11+ ->   14 trueControlFlow
--
----- CCFG (to here) -----

