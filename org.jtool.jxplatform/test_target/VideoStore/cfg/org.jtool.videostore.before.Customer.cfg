----- CCFG (from here) -----
Class Name = org.jtool.videostore.before.Customer
   0 methodEntry [ statement( ) ]
   1 localDeclaration D = { totalAmount$0 } U = {  }
   2 localDeclaration D = { frequentRenterPoints$1 } U = {  }
   3 localDeclaration D = { result$2 } U = { $java.lang.String, this.!getName }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = { this.name } TO = org.jtool.videostore.before.Customer#getName( )
   6 actualOut D = { this.!getName } U = { this.name }
   7 forSt D = {  } U = { each$3, this.rentals }
   8 localDeclaration D = { thisAmount$5 } U = {  }
   9 switchSt D = {  } U = { each$3.!getMovie.!getPriceCode }
  10 receiver D = {  } U = { each$3.!getMovie }
  11 receiver D = {  } U = { each$3 }
  12 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.Rental#getMovie( )
  13 actualOut D = { each$3.!getMovie } U = {  }
  14 methodCall D = {  } U = { each$3.!getMovie.priceCode } TO = org.jtool.videostore.before.Movie#getPriceCode( )
  15 actualOut D = { each$3.!getMovie.!getPriceCode } U = { each$3.!getMovie.priceCode }
  16 switchCase D = {  } U = { each$3.!getMovie.!getPriceCode, org.jtool.videostore.before.Movie.PriceCode.REGULAR }
  17 assignment D = { thisAmount$5 } U = { thisAmount$5 }
  18 ifSt D = {  } U = { each$3.!getDaysRented }
  19 receiver D = {  } U = { each$3 }
  20 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.Rental#getDaysRented( )
  21 actualOut D = { each$3.!getDaysRented } U = {  }
  22 assignment D = { thisAmount$5 } U = { each$3.!getDaysRented, thisAmount$5 }
  23 receiver D = {  } U = { each$3 }
  24 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.Rental#getDaysRented( )
  25 actualOut D = { each$3.!getDaysRented } U = {  }
  26 merge ifSt(18)
  27 breakSt D = {  } U = {  }
  28 switchCase D = {  } U = { each$3.!getMovie.!getPriceCode, org.jtool.videostore.before.Movie.PriceCode.NEW_RELEASE }
  29 assignment D = { thisAmount$5 } U = { each$3.!getDaysRented, thisAmount$5 }
  30 receiver D = {  } U = { each$3 }
  31 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.Rental#getDaysRented( )
  32 actualOut D = { each$3.!getDaysRented } U = {  }
  33 breakSt D = {  } U = {  }
  34 switchCase D = {  } U = { each$3.!getMovie.!getPriceCode, org.jtool.videostore.before.Movie.PriceCode.CHILDRENS }
  35 assignment D = { thisAmount$5 } U = { thisAmount$5 }
  36 ifSt D = {  } U = { each$3.!getDaysRented }
  37 receiver D = {  } U = { each$3 }
  38 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.Rental#getDaysRented( )
  39 actualOut D = { each$3.!getDaysRented } U = {  }
  40 assignment D = { thisAmount$5 } U = { each$3.!getDaysRented, thisAmount$5 }
  41 receiver D = {  } U = { each$3 }
  42 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.Rental#getDaysRented( )
  43 actualOut D = { each$3.!getDaysRented } U = {  }
  44 merge ifSt(36)
  45 breakSt D = {  } U = {  }
  46 merge switchSt(9)
  47 assignment D = { frequentRenterPoints$1 } U = { frequentRenterPoints$1 }
  48 ifSt D = {  } U = { each$3.!getDaysRented, each$3.!getMovie.!getPriceCode, each$3.!getMovie.!getPriceCode.NEW_RELEASE }
  49 receiver D = {  } U = { each$3.!getMovie }
  50 receiver D = {  } U = { each$3 }
  51 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.Rental#getMovie( )
  52 actualOut D = { each$3.!getMovie } U = {  }
  53 methodCall D = {  } U = { each$3.!getMovie.priceCode } TO = org.jtool.videostore.before.Movie#getPriceCode( )
  54 actualOut D = { each$3.!getMovie.!getPriceCode } U = { each$3.!getMovie.priceCode }
  55 receiver D = {  } U = { each$3 }
  56 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.Rental#getDaysRented( )
  57 actualOut D = { each$3.!getDaysRented } U = {  }
  58 assignment D = { frequentRenterPoints$1 } U = { frequentRenterPoints$1 }
  59 merge ifSt(48)
  60 assignment D = { result$2 } U = { $java.lang.String, each$3.!getMovie.!getTitle, result$2, this.!valueOf }
  61 receiver D = {  } U = { each$3.!getMovie }
  62 receiver D = {  } U = { each$3 }
  63 methodCall D = {  } U = {  } TO = org.jtool.videostore.before.Rental#getMovie( )
  64 actualOut D = { each$3.!getMovie } U = {  }
  65 methodCall D = {  } U = { each$3.!getMovie.title } TO = org.jtool.videostore.before.Movie#getTitle( )
  66 actualOut D = { each$3.!getMovie.!getTitle } U = { each$3.!getMovie.title }
  67 receiver D = {  } U = {  }
  68 methodCall D = {  } U = { thisAmount$5 } TO = java.lang.String#valueOf( double )
  69 actualOut D = { this.!valueOf } U = {  }
  70 assignment D = { totalAmount$0 } U = { thisAmount$5, totalAmount$0 }
  71 assignment D = { result$2 } U = { $java.lang.String, result$2, this.!valueOf }
  72 receiver D = {  } U = {  }
  73 methodCall D = {  } U = { totalAmount$0 } TO = java.lang.String#valueOf( double )
  74 actualOut D = { this.!valueOf } U = {  }
  75 assignment D = { result$2 } U = { $java.lang.String, result$2, this.!valueOf }
  76 receiver D = {  } U = {  }
  77 methodCall D = {  } U = { frequentRenterPoints$1, this.COMPACT_STRINGS } TO = java.lang.String#valueOf( int )
  78 actualOut D = { this.!valueOf } U = { this.COMPACT_STRINGS }
  79 returnSt D = { $_ } U = { result$2 }
  80 methodExit
  81 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ addRental( org.jtool.videostore.before.Rental ) ]
   1 formalIn D = { rental$0 } U = {  }
   2 assertSt D = {  } U = { rental$0 }
   3 assignment D = {  } U = { this.rentals.!add }
   4 receiver D = {  } U = { this, this.rentals }
   5 methodCall D = { java.util.AbstractList.modCount, this, this.rentals, this.rentals.size } U = { java.util.AbstractList.modCount, rental$0, this, this.rentals, this.rentals.elementData, this.rentals.size } TO = java.util.List#add( java.lang.Object )
   6 actualOut D = { java.util.AbstractList.modCount, this, this.rentals, this.rentals.!add, this.rentals.size } U = { java.util.AbstractList.modCount, this, this.rentals, this.rentals.elementData, this.rentals.size }
   7 methodExit
   8 formalOut D = {  } U = { $_, java.util.AbstractList.modCount, this.rentals, this.rentals.size }
--
   0 fieldEntry [ name ]
   1 fieldDeclaration D = { this.name } U = { this.name }
   2 fieldExit
--
   0 methodEntry [ getName( ) ]
   1 returnSt D = { $_ } U = { this.name }
   2 methodExit
   3 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ rentals ]
   1 fieldDeclaration D = { this.rentals } U = { ArrayList<Rental>.!ArrayList<Rental>, this.rentals }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { ArrayList<Rental>.elementData, java.util.AbstractList.modCount } U = { ArrayList<Rental>.DEFAULTCAPACITY_EMPTY_ELEMENTDATA } TO = java.util.ArrayList#ArrayList( )
   4 actualOut D = { ArrayList<Rental>.!ArrayList<Rental>, ArrayList<Rental>.elementData, java.util.AbstractList.modCount } U = { ArrayList<Rental>.DEFAULTCAPACITY_EMPTY_ELEMENTDATA }
   5 fieldExit
--
   0 constructorEntry [ Customer( java.lang.String ) ]
   1 formalIn D = { name$0 } U = {  }
   2 assertSt D = {  } U = { name$0, name$0.!length }
   3 receiver D = {  } U = { name$0 }
   4 methodCall D = {  } U = { name$0, name$0.COMPACT_STRINGS, name$0.coder, name$0.value } TO = java.lang.String#length( )
   5 actualOut D = { name$0.!length } U = { name$0.COMPACT_STRINGS, name$0.coder, name$0.value }
   6 assignment D = { this.name } U = { name$0, this }
   7 constructorExit
   8 formalOut D = {  } U = { $_, this.name }
--
   0: statement( )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 7 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 6 trueControlFlow
   7: 6 -> 3 trueControlFlow
   8: 7 -> 8 trueControlFlow
   9: 7 -> 72 falseControlFlow
  10: 8 -> 11 trueControlFlow
  11: 9 -> 16 trueControlFlow
  12: 10 -> 14 trueControlFlow
  13: 11 -> 12 trueControlFlow
  14: 12 -> 13 trueControlFlow
  15: 13 -> 10 trueControlFlow
  16: 14 -> 15 trueControlFlow
  17: 15 -> 9 trueControlFlow
  18: 16 -> 17 trueControlFlow
  19: 16 -> 28 falseControlFlow
  20: 17 -> 19 trueControlFlow
  21: 18 -> 23 trueControlFlow
  22: 18 -> 26 falseControlFlow
  23: 19 -> 20 trueControlFlow
  24: 20 -> 21 trueControlFlow
  25: 21 -> 18 trueControlFlow
  26: 22 -> 26 trueControlFlow
  27: 23 -> 24 trueControlFlow
  28: 24 -> 25 trueControlFlow
  29: 25 -> 22 trueControlFlow
  30: 26 -> 27 trueControlFlow
  31: 27 -> 28 fallThroughFlow
  32: 27 -> 46 trueControlFlow
  33: 28 -> 30 trueControlFlow
  34: 28 -> 34 falseControlFlow
  35: 29 -> 33 trueControlFlow
  36: 30 -> 31 trueControlFlow
  37: 31 -> 32 trueControlFlow
  38: 32 -> 29 trueControlFlow
  39: 33 -> 34 fallThroughFlow
  40: 33 -> 46 trueControlFlow
  41: 34 -> 35 trueControlFlow
  42: 34 -> 46 falseControlFlow
  43: 35 -> 37 trueControlFlow
  44: 36 -> 41 trueControlFlow
  45: 36 -> 44 falseControlFlow
  46: 37 -> 38 trueControlFlow
  47: 38 -> 39 trueControlFlow
  48: 39 -> 36 trueControlFlow
  49: 40 -> 44 trueControlFlow
  50: 41 -> 42 trueControlFlow
  51: 42 -> 43 trueControlFlow
  52: 43 -> 40 trueControlFlow
  53: 44 -> 45 trueControlFlow
  54: 45 -> 46 trueControlFlow
  55: 45 -> 46 fallThroughFlow
  56: 46 -> 47 trueControlFlow
  57: 47 -> 50 trueControlFlow
  58: 48 -> 58 trueControlFlow
  59: 48 -> 59 falseControlFlow
  60: 49 -> 53 trueControlFlow
  61: 50 -> 51 trueControlFlow
  62: 51 -> 52 trueControlFlow
  63: 52 -> 49 trueControlFlow
  64: 53 -> 54 trueControlFlow
  65: 54 -> 55 trueControlFlow
  66: 55 -> 56 trueControlFlow
  67: 56 -> 57 trueControlFlow
  68: 57 -> 48 trueControlFlow
  69: 58 -> 59 trueControlFlow
  70: 59 -> 62 trueControlFlow
  71: 60 -> 70 trueControlFlow
  72: 61 -> 65 trueControlFlow
  73: 62 -> 63 trueControlFlow
  74: 63 -> 64 trueControlFlow
  75: 64 -> 61 trueControlFlow
  76: 65 -> 66 trueControlFlow
  77: 66 -> 67 trueControlFlow
  78: 67 -> 68 trueControlFlow
  79: 68 -> 69 trueControlFlow
  80: 69 -> 60 trueControlFlow
  81: 70 -> 7 trueControlFlow (LC = 7)
  82: 71 -> 76 trueControlFlow
  83: 72 -> 73 trueControlFlow
  84: 73 -> 74 trueControlFlow
  85: 74 -> 71 trueControlFlow
  86: 75 -> 79 trueControlFlow
  87: 76 -> 77 trueControlFlow
  88: 77 -> 78 trueControlFlow
  89: 78 -> 75 trueControlFlow
  90: 79 -> 81 trueControlFlow
  91: 79 -> 81 fallThroughFlow
  92: 81 -> 80 trueControlFlow
--
   0: addRental( org.jtool.videostore.before.Rental )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 8 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 6 trueControlFlow
   7: 6 -> 3 trueControlFlow
   8: 8 -> 7 trueControlFlow
--
   0: name
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: getName( )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 1 -> 3 fallThroughFlow
   4: 3 -> 2 trueControlFlow
--
   0: rentals
   1: 0 -> 2 trueControlFlow
   2: 1 -> 5 trueControlFlow
   3: 2 -> 3 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 1 trueControlFlow
--
   0: Customer( java.lang.String )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 2 -> 6 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 2 trueControlFlow
   7: 6 -> 8 trueControlFlow
   8: 8 -> 7 trueControlFlow
--
----- CCFG (to here) -----

