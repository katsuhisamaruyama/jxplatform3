----- CCFG (from here) -----
Class Name = org.jtool.videostore.before.MovieTest
   0 methodEntry [ testPriceCodeOfRegularMovie( ) ]
   1 localDeclaration D = { movie$0 } U = { movie$0.!Movie }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { movie$0.priceCode, movie$0.title } U = {  } TO = org.jtool.videostore.before.Movie#Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualIn D = {  } U = { Movie.PriceCode.REGULAR }
   6 actualOut D = { movie$0.!Movie } U = {  }
   7 assignment D = {  } U = { this.!assertEquals }
   8 receiver D = {  } U = {  }
   9 methodCall D = {  } U = { Movie.PriceCode.REGULAR, movie$0.!getPriceCode } TO = org.junit.Assert#assertEquals( java.lang.Object java.lang.Object )
  10 receiver D = {  } U = { movie$0 }
  11 methodCall D = {  } U = { movie$0.priceCode } TO = org.jtool.videostore.before.Movie#getPriceCode( )
  12 actualOut D = { movie$0.!getPriceCode } U = {  }
  13 actualOut D = { this.!assertEquals } U = {  }
  14 methodExit
  15 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ testPriceCodeOfNewReleaseMovie( ) ]
   1 localDeclaration D = { movie$0 } U = { movie$0.!Movie }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { movie$0.priceCode, movie$0.title } U = {  } TO = org.jtool.videostore.before.Movie#Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualIn D = {  } U = { Movie.PriceCode.NEW_RELEASE }
   6 actualOut D = { movie$0.!Movie } U = {  }
   7 assignment D = {  } U = { this.!assertEquals }
   8 receiver D = {  } U = {  }
   9 methodCall D = {  } U = { Movie.PriceCode.NEW_RELEASE, movie$0.!getPriceCode } TO = org.junit.Assert#assertEquals( java.lang.Object java.lang.Object )
  10 receiver D = {  } U = { movie$0 }
  11 methodCall D = {  } U = { movie$0.priceCode } TO = org.jtool.videostore.before.Movie#getPriceCode( )
  12 actualOut D = { movie$0.!getPriceCode } U = {  }
  13 actualOut D = { this.!assertEquals } U = {  }
  14 methodExit
  15 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ testTitleOfNewReleaseMovie( ) ]
   1 localDeclaration D = { movie$0 } U = { movie$0.!Movie }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { movie$0.priceCode, movie$0.title } U = {  } TO = org.jtool.videostore.before.Movie#Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualIn D = {  } U = { Movie.PriceCode.NEW_RELEASE }
   6 actualOut D = { movie$0.!Movie } U = {  }
   7 assignment D = {  } U = { this.!assertEquals }
   8 receiver D = {  } U = {  }
   9 methodCall D = {  } U = { $java.lang.String, movie$0.!getTitle } TO = org.junit.Assert#assertEquals( java.lang.Object java.lang.Object )
  10 receiver D = {  } U = { movie$0 }
  11 methodCall D = {  } U = { movie$0.title } TO = org.jtool.videostore.before.Movie#getTitle( )
  12 actualOut D = { movie$0.!getTitle } U = {  }
  13 actualOut D = { this.!assertEquals } U = {  }
  14 methodExit
  15 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ testTitleOfChildrensMovie( ) ]
   1 localDeclaration D = { movie$0 } U = { movie$0.!Movie }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { movie$0.priceCode, movie$0.title } U = {  } TO = org.jtool.videostore.before.Movie#Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualIn D = {  } U = { Movie.PriceCode.CHILDRENS }
   6 actualOut D = { movie$0.!Movie } U = {  }
   7 assignment D = {  } U = { this.!assertEquals }
   8 receiver D = {  } U = {  }
   9 methodCall D = {  } U = { $java.lang.String, movie$0.!getTitle } TO = org.junit.Assert#assertEquals( java.lang.Object java.lang.Object )
  10 receiver D = {  } U = { movie$0 }
  11 methodCall D = {  } U = { movie$0.title } TO = org.jtool.videostore.before.Movie#getTitle( )
  12 actualOut D = { movie$0.!getTitle } U = {  }
  13 actualOut D = { this.!assertEquals } U = {  }
  14 methodExit
  15 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ MovieTest( ) ]
   1 constructorExit
--
   0 methodEntry [ testTitleOfRegularMovie( ) ]
   1 localDeclaration D = { movie$0 } U = { movie$0.!Movie }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { movie$0.priceCode, movie$0.title } U = {  } TO = org.jtool.videostore.before.Movie#Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualIn D = {  } U = { Movie.PriceCode.REGULAR }
   6 actualOut D = { movie$0.!Movie } U = {  }
   7 assignment D = {  } U = { this.!assertEquals }
   8 receiver D = {  } U = {  }
   9 methodCall D = {  } U = { $java.lang.String, movie$0.!getTitle } TO = org.junit.Assert#assertEquals( java.lang.Object java.lang.Object )
  10 receiver D = {  } U = { movie$0 }
  11 methodCall D = {  } U = { movie$0.title } TO = org.jtool.videostore.before.Movie#getTitle( )
  12 actualOut D = { movie$0.!getTitle } U = {  }
  13 actualOut D = { this.!assertEquals } U = {  }
  14 methodExit
  15 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ testPriceCodeOfChildrensMovie( ) ]
   1 localDeclaration D = { movie$0 } U = { movie$0.!Movie }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { movie$0.priceCode, movie$0.title } U = {  } TO = org.jtool.videostore.before.Movie#Movie( java.lang.String org.jtool.videostore.before.Movie.PriceCode )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualIn D = {  } U = { Movie.PriceCode.CHILDRENS }
   6 actualOut D = { movie$0.!Movie } U = {  }
   7 assignment D = {  } U = { this.!assertEquals }
   8 receiver D = {  } U = {  }
   9 methodCall D = {  } U = { Movie.PriceCode.CHILDRENS, movie$0.!getPriceCode } TO = org.junit.Assert#assertEquals( java.lang.Object java.lang.Object )
  10 receiver D = {  } U = { movie$0 }
  11 methodCall D = {  } U = { movie$0.priceCode } TO = org.jtool.videostore.before.Movie#getPriceCode( )
  12 actualOut D = { movie$0.!getPriceCode } U = {  }
  13 actualOut D = { this.!assertEquals } U = {  }
  14 methodExit
  15 formalOut D = {  } U = { $_ }
--
   0: testPriceCodeOfRegularMovie( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 8 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 6 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 3 trueControlFlow
   7: 6 -> 1 trueControlFlow
   8: 7 -> 15 trueControlFlow
   9: 8 -> 10 trueControlFlow
  10: 9 -> 13 trueControlFlow
  11: 10 -> 11 trueControlFlow
  12: 11 -> 12 trueControlFlow
  13: 12 -> 9 trueControlFlow
  14: 13 -> 7 trueControlFlow
  15: 15 -> 14 trueControlFlow
--
   0: testPriceCodeOfNewReleaseMovie( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 8 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 6 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 3 trueControlFlow
   7: 6 -> 1 trueControlFlow
   8: 7 -> 15 trueControlFlow
   9: 8 -> 10 trueControlFlow
  10: 9 -> 13 trueControlFlow
  11: 10 -> 11 trueControlFlow
  12: 11 -> 12 trueControlFlow
  13: 12 -> 9 trueControlFlow
  14: 13 -> 7 trueControlFlow
  15: 15 -> 14 trueControlFlow
--
   0: testTitleOfNewReleaseMovie( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 8 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 6 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 3 trueControlFlow
   7: 6 -> 1 trueControlFlow
   8: 7 -> 15 trueControlFlow
   9: 8 -> 10 trueControlFlow
  10: 9 -> 13 trueControlFlow
  11: 10 -> 11 trueControlFlow
  12: 11 -> 12 trueControlFlow
  13: 12 -> 9 trueControlFlow
  14: 13 -> 7 trueControlFlow
  15: 15 -> 14 trueControlFlow
--
   0: testTitleOfChildrensMovie( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 8 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 6 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 3 trueControlFlow
   7: 6 -> 1 trueControlFlow
   8: 7 -> 15 trueControlFlow
   9: 8 -> 10 trueControlFlow
  10: 9 -> 13 trueControlFlow
  11: 10 -> 11 trueControlFlow
  12: 11 -> 12 trueControlFlow
  13: 12 -> 9 trueControlFlow
  14: 13 -> 7 trueControlFlow
  15: 15 -> 14 trueControlFlow
--
   0: MovieTest( )
   1: 0 -> 1 trueControlFlow
--
   0: testTitleOfRegularMovie( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 8 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 6 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 3 trueControlFlow
   7: 6 -> 1 trueControlFlow
   8: 7 -> 15 trueControlFlow
   9: 8 -> 10 trueControlFlow
  10: 9 -> 13 trueControlFlow
  11: 10 -> 11 trueControlFlow
  12: 11 -> 12 trueControlFlow
  13: 12 -> 9 trueControlFlow
  14: 13 -> 7 trueControlFlow
  15: 15 -> 14 trueControlFlow
--
   0: testPriceCodeOfChildrensMovie( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 8 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 6 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 3 trueControlFlow
   7: 6 -> 1 trueControlFlow
   8: 7 -> 15 trueControlFlow
   9: 8 -> 10 trueControlFlow
  10: 9 -> 13 trueControlFlow
  11: 10 -> 11 trueControlFlow
  12: 11 -> 12 trueControlFlow
  13: 12 -> 9 trueControlFlow
  14: 13 -> 7 trueControlFlow
  15: 15 -> 14 trueControlFlow
--
----- CCFG (to here) -----

