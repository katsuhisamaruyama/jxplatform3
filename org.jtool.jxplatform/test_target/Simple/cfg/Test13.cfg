----- CCFG (from here) -----
Class Name = Test13
   0 methodEntry [ Test13#m( ) ]
   1 localDeclaration D = { a$0 } U = {  }
   2 assignment D = {  } U = { this.!doReturn( int ) }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = {  } TO = Test13#doReturn( int )
   5 actualIn D = {  } U = { a$0 }
   6 actualOut D = { this.!doReturn( int ) } U = {  }
   7 localDeclaration D = { out$1 } U = { this.!doReturn( int ) }
   8 receiver D = {  } U = {  }
   9 methodCall D = {  } U = {  } TO = Test13#doReturn( int )
  10 actualIn D = {  } U = { a$0 }
  11 actualOut D = { this.!doReturn( int ) } U = {  }
  12 assignment D = {  } U = { System.out.!println( int ) }
  13 receiver D = {  } U = { System.out }
  14 methodCall D = {  } U = { System.out.!java.io.PrintStream.lock, out$1 } TO = java.io.PrintStream#println( int )
  15 actualOut D = { System.out.!java.io.PrintStream.trouble, System.out.!println( int ) } U = { System.out.!java.io.PrintStream.lock }
  16 methodExit
  17 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Test13#Test13( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Test13#doReturn( int ) ]
   1 formalIn D = { in$0 } U = {  }
   2 whileSt D = {  } U = { in$0 }
   3 assignment D = { in$0 } U = { in$0 }
   4 returnSt D = { $_ } U = { in$0 }
   5 returnSt D = { $_ } U = {  }
   6 methodExit
   7 formalOut D = {  } U = { $_ }
--
   0: m( )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    8 trueControlFlow
   4:    3 ->    5 trueControlFlow
   5:    4 ->    6 trueControlFlow
   6:    5 ->    4 trueControlFlow
   7:    6 ->    2 trueControlFlow
   8:    7 ->   13 trueControlFlow
   9:    8 ->   10 trueControlFlow
  10:    9 ->   11 trueControlFlow
  11:   10 ->    9 trueControlFlow
  12:   11 ->    7 trueControlFlow
  13:   12 ->   17 trueControlFlow
  14:   13 ->   14 trueControlFlow
  15:   14 ->   15 trueControlFlow
  16:   15 ->   12 trueControlFlow
  17:   17 ->   16 trueControlFlow
--
   0: Test13( )
   1:    0 ->    2 trueControlFlow
   2:    2 ->    1 trueControlFlow
--
   0: doReturn( int )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
   3:    2 ->    3 trueControlFlow
   4:    2 ->    5 falseControlFlow
   5:    3 ->    4 trueControlFlow
   6:    4 ->    2 trueControlFlow (L = 2)
   7:    4 ->    5 fallThroughFlow
   8:    5 ->    7 fallThroughFlow
   9:    5 ->    7 trueControlFlow
  10:    7 ->    6 trueControlFlow
--
----- CCFG (to here) -----


