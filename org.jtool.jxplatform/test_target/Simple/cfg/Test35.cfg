----- CCFG (from here) -----
Class Name = Test35
   0 methodEntry [ Test35#m3( ) ]
   1 localDeclaration D = { x$0 } U = {  }
   2 forSt D = {  } U = { x$0 }
   3 localDeclaration D = { y$1 } U = {  }
   4 forSt D = {  } U = { y$1 }
   5 ifSt D = {  } U = { x$0, y$1 }
   6 breakSt D = {  } U = {  }
   7 merge ifSt(5)
   8 assignment D = { y$1 } U = { y$1 }
   9 assignment D = { x$0 } U = { x$0 }
  10 localDeclaration D = { y$2 } U = {  }
  11 methodExit
  12 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Test35#m2( ) ]
   1 localDeclaration D = { x$0 } U = {  }
   2 whileSt D = {  } U = { x$0 }
   3 ifSt D = {  } U = { x$0 }
   4 assignment D = { x$0 } U = { x$0 }
   5 continueSt D = {  } U = {  }
   6 merge ifSt(3)
   7 assignment D = { x$0 } U = { x$0 }
   8 localDeclaration D = { y$1 } U = {  }
   9 methodExit
  10 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Test35#m6( ) ]
   1 localDeclaration D = { z$0 } U = {  }
   2 localDeclaration D = { x$1 } U = {  }
   3 forSt D = {  } U = { x$1 }
   4 ifSt D = {  } U = { x$1 }
   5 continueSt D = {  } U = {  }
   6 merge ifSt(4)
   7 assignment D = { z$0 } U = { z$0 }
   8 assignment D = { x$1 } U = { x$1 }
   9 localDeclaration D = { y$2 } U = {  }
  10 methodExit
  11 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Test35#m1( ) ]
   1 localDeclaration D = { x$0 } U = {  }
   2 whileSt D = {  } U = { x$0 }
   3 ifSt D = {  } U = { x$0 }
   4 breakSt D = {  } U = {  }
   5 merge ifSt(3)
   6 assignment D = { x$0 } U = { x$0 }
   7 localDeclaration D = { y$1 } U = {  }
   8 methodExit
   9 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Test35#m4( ) ]
   1 localDeclaration D = { x$0 } U = {  }
   2 forSt D = {  } U = { x$0 }
   3 localDeclaration D = { y$1 } U = {  }
   4 forSt D = {  } U = { y$1 }
   5 ifSt D = {  } U = { x$0, y$1 }
   6 continueSt D = {  } U = {  }
   7 merge ifSt(5)
   8 assignment D = { y$1 } U = { y$1 }
   9 assignment D = { x$0 } U = { x$0 }
  10 localDeclaration D = { y$2 } U = {  }
  11 methodExit
  12 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Test35#m5( ) ]
   1 localDeclaration D = { z$0 } U = {  }
   2 localDeclaration D = { x$1 } U = {  }
   3 forSt D = {  } U = { x$1 }
   4 ifSt D = {  } U = { x$1 }
   5 breakSt D = {  } U = {  }
   6 merge ifSt(4)
   7 assignment D = { z$0 } U = { z$0 }
   8 assignment D = { x$1 } U = { x$1 }
   9 localDeclaration D = { y$2 } U = {  }
  10 methodExit
  11 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Test35#Test35( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0: m3( )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
   3:    2 ->    3 trueControlFlow
   4:    2 ->   10 falseControlFlow
   5:    3 ->    4 trueControlFlow
   6:    4 ->    5 trueControlFlow
   7:    4 ->    9 falseControlFlow
   8:    5 ->    6 trueControlFlow
   9:    5 ->    7 falseControlFlow
  10:    6 ->    7 fallThroughFlow
  11:    6 ->   10 trueControlFlow
  12:    7 ->    8 trueControlFlow
  13:    8 ->    4 trueControlFlow (L = 4)
  14:    9 ->    2 trueControlFlow (L = 2)
  15:   10 ->   12 trueControlFlow
  16:   12 ->   11 trueControlFlow
--
   0: m2( )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
   3:    2 ->    3 trueControlFlow
   4:    2 ->    8 falseControlFlow
   5:    3 ->    4 trueControlFlow
   6:    3 ->    6 falseControlFlow
   7:    4 ->    5 trueControlFlow
   8:    5 ->    2 trueControlFlow
   9:    5 ->    6 fallThroughFlow
  10:    6 ->    7 trueControlFlow
  11:    7 ->    2 trueControlFlow (L = 2)
  12:    8 ->   10 trueControlFlow
  13:   10 ->    9 trueControlFlow
--
   0: m6( )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
   3:    2 ->    3 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    3 ->    9 falseControlFlow
   6:    4 ->    5 trueControlFlow
   7:    4 ->    6 falseControlFlow
   8:    5 ->    3 trueControlFlow
   9:    5 ->    6 fallThroughFlow
  10:    6 ->    7 trueControlFlow
  11:    7 ->    8 trueControlFlow
  12:    8 ->    3 trueControlFlow (L = 3)
  13:    9 ->   11 trueControlFlow
  14:   11 ->   10 trueControlFlow
--
   0: m1( )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
   3:    2 ->    3 trueControlFlow
   4:    2 ->    7 falseControlFlow
   5:    3 ->    4 trueControlFlow
   6:    3 ->    5 falseControlFlow
   7:    4 ->    5 fallThroughFlow
   8:    4 ->    7 trueControlFlow
   9:    5 ->    6 trueControlFlow
  10:    6 ->    2 trueControlFlow (L = 2)
  11:    7 ->    9 trueControlFlow
  12:    9 ->    8 trueControlFlow
--
   0: m4( )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
   3:    2 ->    3 trueControlFlow
   4:    2 ->   10 falseControlFlow
   5:    3 ->    4 trueControlFlow
   6:    4 ->    5 trueControlFlow
   7:    4 ->    9 falseControlFlow
   8:    5 ->    6 trueControlFlow
   9:    5 ->    7 falseControlFlow
  10:    6 ->    2 trueControlFlow
  11:    6 ->    7 fallThroughFlow
  12:    7 ->    8 trueControlFlow
  13:    8 ->    4 trueControlFlow (L = 4)
  14:    9 ->    2 trueControlFlow (L = 2)
  15:   10 ->   12 trueControlFlow
  16:   12 ->   11 trueControlFlow
--
   0: m5( )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
   3:    2 ->    3 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    3 ->    9 falseControlFlow
   6:    4 ->    5 trueControlFlow
   7:    4 ->    6 falseControlFlow
   8:    5 ->    6 fallThroughFlow
   9:    5 ->    9 trueControlFlow
  10:    6 ->    7 trueControlFlow
  11:    7 ->    8 trueControlFlow
  12:    8 ->    3 trueControlFlow (L = 3)
  13:    9 ->   11 trueControlFlow
  14:   11 ->   10 trueControlFlow
--
   0: Test35( )
   1:    0 ->    2 trueControlFlow
   2:    2 ->    1 trueControlFlow
--
----- CCFG (to here) -----

