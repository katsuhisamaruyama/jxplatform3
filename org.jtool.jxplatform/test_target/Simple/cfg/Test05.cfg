----- CCFG (from here) -----
Class Name = Test05
   0 methodEntry [ Test05#m( ) ]
   1 localDeclaration D = { a$0 } U = {  }
   2 localDeclaration D = { b$1 } U = {  }
   3 localDeclaration D = { c$2 } U = {  }
   4 localDeclaration D = { d$3 } U = {  }
   5 ifSt D = { d$3 } U = { a$0, b$1, c$2 }
   6 whileSt D = {  } U = { b$1 }
   7 assignment D = { b$1 } U = { b$1 }
   8 whileSt D = { a$0 } U = { a$0 }
   9 assignment D = {  } U = { System.out.!println( int ) }
  10 receiver D = {  } U = { System.out }
  11 methodCall D = {  } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut, a$0 } TO = java.io.PrintStream#println( int )
  12 actualOut D = { System.out.!java.io.PrintStream.trouble, System.out.!println( int ) } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut }
  13 merge ifSt(5)
  14 assignment D = {  } U = { System.out.!println( int ) }
  15 receiver D = {  } U = { System.out }
  16 methodCall D = {  } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut, a$0 } TO = java.io.PrintStream#println( int )
  17 actualOut D = { System.out.!java.io.PrintStream.trouble, System.out.!println( int ) } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut }
  18 assignment D = {  } U = { System.out.!println( int ) }
  19 receiver D = {  } U = { System.out }
  20 methodCall D = {  } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut, b$1 } TO = java.io.PrintStream#println( int )
  21 actualOut D = { System.out.!java.io.PrintStream.trouble, System.out.!println( int ) } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut }
  22 assignment D = {  } U = { System.out.!println( int ) }
  23 receiver D = {  } U = { System.out }
  24 methodCall D = {  } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut, c$2 } TO = java.io.PrintStream#println( int )
  25 actualOut D = { System.out.!java.io.PrintStream.trouble, System.out.!println( int ) } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut }
  26 assignment D = {  } U = { System.out.!println( int ) }
  27 receiver D = {  } U = { System.out }
  28 methodCall D = {  } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut, d$3 } TO = java.io.PrintStream#println( int )
  29 actualOut D = { System.out.!java.io.PrintStream.trouble, System.out.!println( int ) } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut }
  30 methodExit
  31 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Test05#Test05( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0: m( )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
   3:    2 ->    3 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    6 trueControlFlow
   7:    5 ->    8 falseControlFlow
   8:    6 ->    7 trueControlFlow
   9:    6 ->   13 falseControlFlow
  10:    7 ->    6 trueControlFlow (L = 6)
  11:    8 ->   10 trueControlFlow
  12:    8 ->   13 falseControlFlow
  13:    9 ->    8 trueControlFlow (L = 8)
  14:   10 ->   11 trueControlFlow
  15:   11 ->   12 trueControlFlow
  16:   12 ->    9 trueControlFlow
  17:   13 ->   15 trueControlFlow
  18:   14 ->   19 trueControlFlow
  19:   15 ->   16 trueControlFlow
  20:   16 ->   17 trueControlFlow
  21:   17 ->   14 trueControlFlow
  22:   18 ->   23 trueControlFlow
  23:   19 ->   20 trueControlFlow
  24:   20 ->   21 trueControlFlow
  25:   21 ->   18 trueControlFlow
  26:   22 ->   27 trueControlFlow
  27:   23 ->   24 trueControlFlow
  28:   24 ->   25 trueControlFlow
  29:   25 ->   22 trueControlFlow
  30:   26 ->   31 trueControlFlow
  31:   27 ->   28 trueControlFlow
  32:   28 ->   29 trueControlFlow
  33:   29 ->   26 trueControlFlow
  34:   31 ->   30 trueControlFlow
--
   0: Test05( )
   1:    0 ->    2 trueControlFlow
   2:    2 ->    1 trueControlFlow
--
----- CCFG (to here) -----

