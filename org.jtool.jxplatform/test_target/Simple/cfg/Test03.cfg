----- CCFG (from here) -----
Class Name = Test03
   0 constructorEntry [ Test03#Test03( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Test03#m( ) ]
   1 localDeclaration D = { a$0 } U = {  }
   2 localDeclaration D = { b$1 } U = {  }
   3 switchSt D = { $SwitchDef } U = { a$0 }
   4 switchCase D = {  } U = { $SwitchDef }
   5 assignment D = {  } U = { System.out.!println( int ) }
   6 receiver D = {  } U = { System.out }
   7 methodCall D = {  } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut, a$0 } TO = java.io.PrintStream#println( int )
* actualOut D = { System.out.!java.io.PrintStream.trouble, System.out.!println( int ) } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut }
   9 assignment D = { b$1 } U = { a$0 }
  10 breakSt D = {  } U = {  }
  11 switchCase D = {  } U = { $SwitchDef }
  12 assignment D = {  } U = { System.out.!println( int ) }
  13 receiver D = {  } U = { System.out }
  14 methodCall D = {  } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut, a$0 } TO = java.io.PrintStream#println( int )
* actualOut D = { System.out.!java.io.PrintStream.trouble, System.out.!println( int ) } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut }
  16 assignment D = { a$0 } U = { a$0 }
  17 breakSt D = {  } U = {  }
  18 switchCase D = {  } U = { $SwitchDef }
  19 assignment D = {  } U = { System.out.!println( int ) }
  20 receiver D = {  } U = { System.out }
  21 methodCall D = {  } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut, a$0 } TO = java.io.PrintStream#println( int )
* actualOut D = { System.out.!java.io.PrintStream.trouble, System.out.!println( int ) } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut }
  23 breakSt D = {  } U = {  }
  24 merge switchSt(3)
  25 assignment D = {  } U = { System.out.!println( int ) }
  26 receiver D = {  } U = { System.out }
  27 methodCall D = {  } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut, a$0 } TO = java.io.PrintStream#println( int )
* actualOut D = { System.out.!java.io.PrintStream.trouble, System.out.!println( int ) } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut }
  29 assignment D = {  } U = { System.out.!println( int ) }
  30 receiver D = {  } U = { System.out }
  31 methodCall D = {  } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut, b$1 } TO = java.io.PrintStream#println( int )
* actualOut D = { System.out.!java.io.PrintStream.trouble, System.out.!println( int ) } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut }
  33 methodExit
  34 formalOut D = {  } U = { $_ }
--
   0: Test03( )
   1:    0 ->    2 trueControlFlow
   2:    2 ->    1 trueControlFlow
--
   0: m( )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
   3:    2 ->    3 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    6 trueControlFlow
   6:    4 ->   11 falseControlFlow
   7:    5 ->    9 trueControlFlow
   8:    6 ->    7 trueControlFlow
   9:    7 -> * trueControlFlow
  10: * ->    5 trueControlFlow
  11:    9 ->   10 trueControlFlow
  12:   10 ->   11 fallThroughFlow
  13:   10 ->   24 trueControlFlow
  14:   11 ->   13 trueControlFlow
  15:   11 ->   18 falseControlFlow
  16:   12 ->   16 trueControlFlow
  17:   13 ->   14 trueControlFlow
  18:   14 -> * trueControlFlow
  19: * ->   12 trueControlFlow
  20:   16 ->   17 trueControlFlow
  21:   17 ->   18 fallThroughFlow
  22:   17 ->   24 trueControlFlow
  23:   18 ->   20 trueControlFlow
  24:   18 ->   24 falseControlFlow
  25:   19 ->   23 trueControlFlow
  26:   20 ->   21 trueControlFlow
  27:   21 -> * trueControlFlow
  28: * ->   19 trueControlFlow
  29:   23 ->   24 fallThroughFlow
  30:   23 ->   24 trueControlFlow
  31:   24 ->   26 trueControlFlow
  32:   25 ->   30 trueControlFlow
  33:   26 ->   27 trueControlFlow
  34:   27 -> * trueControlFlow
  35: * ->   25 trueControlFlow
  36:   29 ->   34 trueControlFlow
  37:   30 ->   31 trueControlFlow
  38:   31 -> * trueControlFlow
  39: * ->   29 trueControlFlow
  40:   34 ->   33 trueControlFlow
--
----- CCFG (to here) -----

