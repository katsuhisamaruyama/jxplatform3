----- ClDG (from here) -----
Class Name = Test20
   0 methodEntry [ Test20#get( ) ]
   1 returnSt D = { $_ } U = { this.priVar2 }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Test20#calc( int ) ]
   1 formalIn D = { a$0 } U = {  }
   2 returnSt D = { $_ } U = { a$0 }
   4 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ Test20#priVar2 ]
   1 fieldDeclaration D = { this.priVar2 } U = { this.priVar2 }
--
   0 constructorEntry [ Test20#Test20( int ) ]
   1 formalIn D = { i$0 } U = {  }
   2 assignment D = { this.priVar } U = { i$0 }
   4 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Test20#main( java.lang.String[] ) ]
   1 formalIn D = { args$0 } U = {  }
   2 localDeclaration D = { t20$1 } U = { Test20.!Test20( int ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = {  } TO = Test20#Test20( int )
   5 actualIn D = {  } U = {  }
   6 actualOut D = { Test20.!Test20( int ) } U = {  }
   7 localDeclaration D = { a$2 } U = { t20$1.!get( ) }
   8 receiver D = {  } U = { t20$1 }
   9 methodCall D = {  } U = { Test20.!Test20( int ).priVar2, t20$1.priVar2 } TO = Test20#get( )
  10 actualOut D = { t20$1.!get( ) } U = { Test20.!Test20( int ).priVar2, t20$1.priVar2 }
  11 ifSt D = {  } U = { a$2 }
  12 localDeclaration D = { b$3 } U = { t20$1.!calc( int ) }
  13 receiver D = {  } U = { t20$1 }
  14 methodCall D = {  } U = {  } TO = Test20#calc( int )
  15 actualIn D = {  } U = { a$2 }
  16 actualOut D = { t20$1.!calc( int ) } U = {  }
  18 assignment D = {  } U = { System.out.!println( java.lang.Object ) }
  19 receiver D = {  } U = { System.out }
  20 methodCall D = {  } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut, Test20.!Test20( int ).priVar, Test20.!Test20( int ).priVar2, t20$1, t20$1.priVar, t20$1.priVar2 } TO = java.io.PrintStream#println( java.lang.Object )
* actualOut D = { System.out.!java.io.PrintStream.trouble, System.out.!println( java.lang.Object ) } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut }
  23 formalOut D = {  } U = { $_ }
* actualOut D = { Test20.!Test20( int ).priVar } U = {  }
--
   0 fieldEntry [ Test20#priVar ]
   1 fieldDeclaration D = { this.priVar } U = { this.priVar }
--
   0: get( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    1 ->    3 loopIndependentDefUseDependence $_
--
   0: calc( int )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    1 ->    2 loopIndependentDefUseDependence a$0
   5:    2 ->    4 loopIndependentDefUseDependence $_
--
   0: priVar2
   1:    0 ->    1 trueControlDependence
--
   0: Test20( int )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    1 ->    2 loopIndependentDefUseDependence i$0
--
   0: main( java.lang.String[] )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   18 trueControlDependence
  13:    0 ->   19 trueControlDependence
  14:    0 ->   20 trueControlDependence
  15:    0 ->   23 trueControlDependence
  16:    0 -> * trueControlDependence
  17:    0 -> * trueControlDependence
  18:    2 ->    8 declaration
  19:    2 ->    8 loopIndependentDefUseDependence t20$1
  20:    2 ->   13 declaration
  21:    2 ->   13 loopIndependentDefUseDependence t20$1
  22:    2 ->   20 declaration
  23:    2 ->   20 loopIndependentDefUseDependence t20$1
  24:    6 ->    2 loopIndependentDefUseDependence Test20.!Test20( int )
  25:    7 ->   11 declaration
  26:    7 ->   11 loopIndependentDefUseDependence a$2
  27:    7 ->   15 declaration
  28:    7 ->   15 loopIndependentDefUseDependence a$2
  29:   10 ->    7 loopIndependentDefUseDependence t20$1.!get( )
  30:   11 ->   12 trueControlDependence
  31:   11 ->   13 trueControlDependence
  32:   11 ->   14 trueControlDependence
  33:   11 ->   15 trueControlDependence
  34:   11 ->   16 trueControlDependence
  35:   16 ->   12 loopIndependentDefUseDependence t20$1.!calc( int )
  36: * ->   18 loopIndependentDefUseDependence System.out.!println( java.lang.Object )
  37: * ->   20 loopIndependentDefUseDependence Test20.!Test20( int ).priVar
--
   0: priVar
   1:    0 ->    1 trueControlDependence
--
----- ClDG (to here) -----

