----- CCFG (from here) -----
Class Name = CustomerTest
   0 methodEntry [ testStatement1( ) ]
   1 localDeclaration D = { customer$0 } U = { customer$0.!Customer }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { customer$0.name } U = {  } TO = Customer#Customer( java.lang.String )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualOut D = { customer$0.!Customer } U = {  }
   6 assignment D = {  } U = { customer$0.!setDiscount }
   7 receiver D = {  } U = { customer$0 }
   8 methodCall D = { customer$0.discount } U = {  } TO = Customer#setDiscount( double )
   9 actualIn D = {  } U = {  }
  10 actualOut D = { customer$0.!setDiscount } U = {  }
  11 localDeclaration D = { order$1 } U = { order$1.!Order }
  12 receiver D = {  } U = {  }
  13 constructorCall D = {  } U = {  } TO = Order#Order( )
  14 actualOut D = { order$1.!Order } U = {  }
  15 localDeclaration D = { r1$2 } U = { r1$2.!Rental }
  16 receiver D = {  } U = {  }
  17 constructorCall D = { r1$2.days, r1$2.price } U = {  } TO = Rental#Rental( int int )
  18 actualIn D = {  } U = {  }
  19 actualIn D = {  } U = {  }
  20 actualOut D = { r1$2.!Rental } U = {  }
  21 assignment D = {  } U = { order$1.!addRental }
  22 receiver D = {  } U = { order$1 }
  23 methodCall D = { order$1, order$1.rentals } U = { order$1, order$1.rentals } TO = Order#addRental( Rental )
  24 actualIn D = {  } U = { r1$2 }
  25 actualOut D = { order$1, order$1.!addRental } U = { order$1 }
  26 localDeclaration D = { message$3 } U = { customer$0.!statement }
  27 receiver D = {  } U = { customer$0 }
  28 methodCall D = { customer$0.discount } U = { customer$0.discount, customer$0.name } TO = Customer#statement( Order )
  29 actualIn D = {  } U = { order$1 }
  30 actualOut D = { customer$0.!statement } U = {  }
  31 methodExit
  32 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ testStatement2( ) ]
   1 localDeclaration D = { customer$0 } U = { customer$0.!Customer }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { customer$0.name } U = {  } TO = Customer#Customer( java.lang.String )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualOut D = { customer$0.!Customer } U = {  }
   6 assignment D = {  } U = { customer$0.!setDiscount }
   7 receiver D = {  } U = { customer$0 }
   8 methodCall D = { customer$0.discount } U = {  } TO = Customer#setDiscount( double )
   9 actualIn D = {  } U = {  }
  10 actualOut D = { customer$0.!setDiscount } U = {  }
  11 localDeclaration D = { order$1 } U = { order$1.!Order }
  12 receiver D = {  } U = {  }
  13 constructorCall D = {  } U = {  } TO = Order#Order( )
  14 actualOut D = { order$1.!Order } U = {  }
  15 localDeclaration D = { r1$2 } U = { r1$2.!Rental }
  16 receiver D = {  } U = {  }
  17 constructorCall D = { r1$2.days, r1$2.price } U = {  } TO = Rental#Rental( int int )
  18 actualIn D = {  } U = {  }
  19 actualIn D = {  } U = {  }
  20 actualOut D = { r1$2.!Rental } U = {  }
  21 localDeclaration D = { r2$3 } U = { r2$3.!Rental }
  22 receiver D = {  } U = {  }
  23 constructorCall D = { r2$3.days, r2$3.price } U = {  } TO = Rental#Rental( int int )
  24 actualIn D = {  } U = {  }
  25 actualIn D = {  } U = {  }
  26 actualOut D = { r2$3.!Rental } U = {  }
  27 assignment D = {  } U = { order$1.!addRental }
  28 receiver D = {  } U = { order$1 }
  29 methodCall D = { order$1, order$1.rentals } U = { order$1, order$1.rentals } TO = Order#addRental( Rental )
  30 actualIn D = {  } U = { r1$2 }
  31 actualOut D = { order$1, order$1.!addRental } U = { order$1 }
  32 assignment D = {  } U = { order$1.!addRental }
  33 receiver D = {  } U = { order$1 }
  34 methodCall D = { order$1, order$1.rentals } U = { order$1, order$1.rentals } TO = Order#addRental( Rental )
  35 actualIn D = {  } U = { r2$3 }
  36 actualOut D = { order$1, order$1.!addRental } U = { order$1 }
  37 localDeclaration D = { message$4 } U = { customer$0.!statement }
  38 receiver D = {  } U = { customer$0 }
  39 methodCall D = { customer$0.discount } U = { customer$0.discount, customer$0.name } TO = Customer#statement( Order )
  40 actualIn D = {  } U = { order$1 }
  41 actualOut D = { customer$0.!statement } U = {  }
  42 methodExit
  43 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ CustomerTest( ) ]
   1 constructorExit
--
   0: testStatement1( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 7 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 5 trueControlFlow
   5: 4 -> 3 trueControlFlow
   6: 5 -> 1 trueControlFlow
   7: 6 -> 12 trueControlFlow
   8: 7 -> 9 trueControlFlow
   9: 8 -> 10 trueControlFlow
  10: 9 -> 8 trueControlFlow
  11: 10 -> 6 trueControlFlow
  12: 11 -> 16 trueControlFlow
  13: 12 -> 13 trueControlFlow
  14: 13 -> 14 trueControlFlow
  15: 14 -> 11 trueControlFlow
  16: 15 -> 22 trueControlFlow
  17: 16 -> 18 trueControlFlow
  18: 17 -> 20 trueControlFlow
  19: 18 -> 19 trueControlFlow
  20: 19 -> 17 trueControlFlow
  21: 20 -> 15 trueControlFlow
  22: 21 -> 27 trueControlFlow
  23: 22 -> 24 trueControlFlow
  24: 23 -> 25 trueControlFlow
  25: 24 -> 23 trueControlFlow
  26: 25 -> 21 trueControlFlow
  27: 26 -> 32 trueControlFlow
  28: 27 -> 29 trueControlFlow
  29: 28 -> 30 trueControlFlow
  30: 29 -> 28 trueControlFlow
  31: 30 -> 26 trueControlFlow
  32: 32 -> 31 trueControlFlow
--
   0: testStatement2( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 7 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 5 trueControlFlow
   5: 4 -> 3 trueControlFlow
   6: 5 -> 1 trueControlFlow
   7: 6 -> 12 trueControlFlow
   8: 7 -> 9 trueControlFlow
   9: 8 -> 10 trueControlFlow
  10: 9 -> 8 trueControlFlow
  11: 10 -> 6 trueControlFlow
  12: 11 -> 16 trueControlFlow
  13: 12 -> 13 trueControlFlow
  14: 13 -> 14 trueControlFlow
  15: 14 -> 11 trueControlFlow
  16: 15 -> 22 trueControlFlow
  17: 16 -> 18 trueControlFlow
  18: 17 -> 20 trueControlFlow
  19: 18 -> 19 trueControlFlow
  20: 19 -> 17 trueControlFlow
  21: 20 -> 15 trueControlFlow
  22: 21 -> 28 trueControlFlow
  23: 22 -> 24 trueControlFlow
  24: 23 -> 26 trueControlFlow
  25: 24 -> 25 trueControlFlow
  26: 25 -> 23 trueControlFlow
  27: 26 -> 21 trueControlFlow
  28: 27 -> 33 trueControlFlow
  29: 28 -> 30 trueControlFlow
  30: 29 -> 31 trueControlFlow
  31: 30 -> 29 trueControlFlow
  32: 31 -> 27 trueControlFlow
  33: 32 -> 38 trueControlFlow
  34: 33 -> 35 trueControlFlow
  35: 34 -> 36 trueControlFlow
  36: 35 -> 34 trueControlFlow
  37: 36 -> 32 trueControlFlow
  38: 37 -> 43 trueControlFlow
  39: 38 -> 40 trueControlFlow
  40: 39 -> 41 trueControlFlow
  41: 40 -> 39 trueControlFlow
  42: 41 -> 37 trueControlFlow
  43: 43 -> 42 trueControlFlow
--
   0: CustomerTest( )
   1: 0 -> 1 trueControlFlow
--
----- CCFG (to here) -----

