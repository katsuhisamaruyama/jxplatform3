----- CCFG (from here) -----
Class Name = Test134
   0 constructorEntry [ Test134( ) ]
   1 constructorExit
--
   0 methodEntry [ getP( ) ]
   1 returnSt D = { $_ } U = { P134.!P134 }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = {  } TO = P134#P134( )
   4 actualOut D = { P134.!P134 } U = {  }
   5 methodExit
   6 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ a2( ) ]
   1 assignment D = {  } U = { this.!n2 }
   2 receiver D = {  } U = {  }
   3 methodCall D = {  } U = {  } TO = Test134#n2( P134 int )
   4 actualIn D = {  } U = { Q134.!Q134 }
   5 receiver D = {  } U = {  }
   6 constructorCall D = {  } U = {  } TO = Q134#Q134( )
   7 actualOut D = { Q134.!Q134 } U = {  }
   8 actualIn D = {  } U = {  }
   9 actualOut D = { this.!n2 } U = {  }
  10 methodExit
  11 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ a1( ) ]
   1 assignment D = {  } U = { this.!n1 }
   2 receiver D = {  } U = { this }
   3 methodCall D = {  } U = {  } TO = Test134#n1( P134 int )
   4 actualIn D = {  } U = { P134.!P134 }
   5 receiver D = {  } U = {  }
   6 constructorCall D = {  } U = {  } TO = P134#P134( )
   7 actualOut D = { P134.!P134 } U = {  }
   8 actualIn D = {  } U = {  }
   9 actualOut D = { this.!n1 } U = {  }
  10 methodExit
  11 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ getQ( ) ]
   1 returnSt D = { $_ } U = { Q134.!Q134 }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = {  } TO = Q134#Q134( )
   4 actualOut D = { Q134.!Q134 } U = {  }
   5 methodExit
   6 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ m3( ) ]
   1 localDeclaration D = { x$0 } U = {  }
   2 localDeclaration D = { p$1 } U = { p$1.!R134 }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = {  } TO = R134#R134( )
   5 actualOut D = { p$1.!R134 } U = {  }
   6 localDeclaration D = { d1$2 } U = { p$1.!f }
   7 receiver D = {  } U = { p$1 }
   8 methodCall D = {  } U = {  } TO = P134#f( int )
   9 actualIn D = {  } U = { x$0 }
  10 actualOut D = { p$1.!f } U = {  }
  11 localDeclaration D = { d2$3 } U = { p$1.!f }
  12 receiver D = {  } U = { p$1 }
  13 methodCall D = {  } U = {  } TO = Q134#f( int )
  14 actualIn D = {  } U = { x$0 }
  15 actualOut D = { p$1.!f } U = {  }
  16 methodExit
  17 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ m2( ) ]
   1 localDeclaration D = { x$0 } U = {  }
   2 localDeclaration D = { p$1 } U = {  }
   3 ifSt D = {  } U = { x$0 }
   4 assignment D = { p$1 } U = { p$1.!Q134 }
   5 receiver D = {  } U = {  }
   6 constructorCall D = {  } U = {  } TO = Q134#Q134( )
   7 actualOut D = { p$1.!Q134 } U = {  }
   8 assignment D = { p$1 } U = { p$1.!R134 }
   9 receiver D = {  } U = {  }
  10 constructorCall D = {  } U = {  } TO = R134#R134( )
  11 actualOut D = { p$1.!R134 } U = {  }
  12 merge ifSt(3)
  13 localDeclaration D = { d$2 } U = { p$1.!f }
  14 receiver D = {  } U = { p$1 }
  15 methodCall D = {  } U = {  } TO = P134#f( int )
  16 actualIn D = {  } U = { x$0 }
  17 actualOut D = { p$1.!f } U = {  }
  18 localDeclaration D = { l1$3 } U = { l1$3.!ArrayList<String> }
  19 receiver D = {  } U = {  }
  20 constructorCall D = { l1$3.elementData, java.util.AbstractList.modCount } U = { l1$3.DEFAULTCAPACITY_EMPTY_ELEMENTDATA } TO = java.util.ArrayList#ArrayList( )
  21 actualOut D = { l1$3.!ArrayList<String> } U = {  }
  22 assignment D = {  } U = { l1$3.!add }
  23 receiver D = {  } U = { l1$3 }
  24 methodCall D = { java.util.AbstractList.modCount, l1$3.size, l1$3 } U = { $java.lang.String, l1$3.elementData, java.util.AbstractList.modCount, l1$3.size, l1$3 } TO = java.util.ArrayList#add( java.lang.Object )
  25 actualOut D = { l1$3.!add, l1$3 } U = { l1$3 }
  26 localDeclaration D = { l2$4 } U = { l2$4.!ArrayList<String> }
  27 receiver D = {  } U = {  }
  28 constructorCall D = { l2$4.elementData, java.util.AbstractList.modCount } U = { l2$4.DEFAULTCAPACITY_EMPTY_ELEMENTDATA } TO = java.util.ArrayList#ArrayList( )
  29 actualOut D = { l2$4.!ArrayList<String> } U = {  }
  30 assignment D = {  } U = { l2$4.!add }
  31 receiver D = {  } U = { l2$4 }
  32 methodCall D = { java.util.AbstractList.modCount, l2$4.size, l2$4 } U = { $java.lang.String, l2$4.elementData, java.util.AbstractList.modCount, l2$4.size, l2$4 } TO = java.util.List#add( java.lang.Object )
  33 actualOut D = { l2$4.!add, l2$4 } U = { l2$4 }
  34 methodExit
  35 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ inc( int ) ]
   1 formalIn D = { a$0 } U = {  }
   2 returnSt D = { $_ } U = { a$0 }
   3 methodExit
   4 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ getPQ( ) ]
   1 returnSt D = { $_ } U = { Q134.!Q134 }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = {  } TO = Q134#Q134( )
   4 actualOut D = { Q134.!Q134 } U = {  }
   5 methodExit
   6 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ m( ) ]
   1 localDeclaration D = { x$0 } U = {  }
   2 localDeclaration D = { y1$1 } U = { this.!inc }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = {  } TO = Test134#inc( int )
   5 actualIn D = {  } U = { x$0 }
   6 actualOut D = { this.!inc } U = {  }
   7 localDeclaration D = { y2$2 } U = { this.!dec }
   8 receiver D = {  } U = {  }
   9 methodCall D = {  } U = {  } TO = Test134#dec( int )
  10 actualIn D = {  } U = { x$0 }
  11 actualOut D = { this.!dec } U = {  }
  12 localDeclaration D = { p$3 } U = { p$3.!P134 }
  13 receiver D = {  } U = {  }
  14 constructorCall D = {  } U = {  } TO = P134#P134( )
  15 actualOut D = { p$3.!P134 } U = {  }
  16 localDeclaration D = { z$4 } U = { p$3.!f }
  17 receiver D = {  } U = { p$3 }
  18 methodCall D = {  } U = {  } TO = P134#f( int )
  19 actualIn D = {  } U = { x$0 }
  20 actualOut D = { p$3.!f } U = {  }
  21 localDeclaration D = { q1$5 } U = { q1$5.!Q134 }
  22 receiver D = {  } U = {  }
  23 constructorCall D = {  } U = {  } TO = Q134#Q134( )
  24 actualOut D = { q1$5.!Q134 } U = {  }
  25 localDeclaration D = { z1$6 } U = { q1$5.!f }
  26 receiver D = {  } U = { q1$5 }
  27 methodCall D = {  } U = {  } TO = Q134#f( int )
  28 actualIn D = {  } U = { x$0 }
  29 actualOut D = { q1$5.!f } U = {  }
  30 localDeclaration D = { q2$7 } U = { q2$7.!Q134 }
  31 receiver D = {  } U = {  }
  32 constructorCall D = {  } U = {  } TO = Q134#Q134( )
  33 actualOut D = { q2$7.!Q134 } U = {  }
  34 localDeclaration D = { z2$8 } U = { q2$7.!f }
  35 receiver D = {  } U = { q2$7 }
  36 methodCall D = {  } U = {  } TO = P134#f( int )
  37 actualIn D = {  } U = { x$0 }
  38 actualOut D = { q2$7.!f } U = {  }
  39 localDeclaration D = { q3$9 } U = { q1$5 }
  40 localDeclaration D = { z3$10 } U = { q3$9.!f, q1$5.!f }
  41 receiver D = {  } U = { q3$9, q1$5 }
  42 methodCall D = {  } U = {  } TO = P134#f( int )
  43 actualIn D = {  } U = { x$0 }
  44 actualOut D = { q3$9.!f } U = {  }
  45 localDeclaration D = { q4$11 } U = { q2$7 }
  46 localDeclaration D = { z4$12 } U = { q4$11.!f, q2$7.!f }
  47 receiver D = {  } U = { q4$11, q2$7 }
  48 methodCall D = {  } U = {  } TO = P134#f( int )
  49 actualIn D = {  } U = { x$0 }
  50 actualOut D = { q4$11.!f } U = {  }
  51 localDeclaration D = { r1$13 } U = { r1$13.!R134 }
  52 receiver D = {  } U = {  }
  53 constructorCall D = {  } U = {  } TO = R134#R134( )
  54 actualOut D = { r1$13.!R134 } U = {  }
  55 localDeclaration D = { e1$14 } U = { r1$13.!f }
  56 receiver D = {  } U = { r1$13 }
  57 methodCall D = {  } U = {  } TO = R134#f( int )
  58 actualIn D = {  } U = { x$0 }
  59 actualOut D = { r1$13.!f } U = {  }
  60 localDeclaration D = { r2$15 } U = { r2$15.!R134 }
  61 receiver D = {  } U = {  }
  62 constructorCall D = {  } U = {  } TO = R134#R134( )
  63 actualOut D = { r2$15.!R134 } U = {  }
  64 localDeclaration D = { e2$16 } U = { r2$15.!f }
  65 receiver D = {  } U = { r2$15 }
  66 methodCall D = {  } U = {  } TO = I134#f( int )
  67 actualIn D = {  } U = { x$0 }
  68 actualOut D = { r2$15.!f } U = {  }
  69 localDeclaration D = { r3$17 } U = { r3$17.!R134 }
  70 receiver D = {  } U = {  }
  71 constructorCall D = {  } U = {  } TO = R134#R134( )
  72 actualOut D = { r3$17.!R134 } U = {  }
  73 localDeclaration D = { e3$18 } U = { r3$17.!f }
  74 receiver D = {  } U = { r3$17 }
  75 methodCall D = {  } U = {  } TO = P134#f( int )
  76 actualIn D = {  } U = { x$0 }
  77 actualOut D = { r3$17.!f } U = {  }
  78 localDeclaration D = { p2$19 } U = { this.!getP }
  79 receiver D = {  } U = {  }
  80 methodCall D = {  } U = {  } TO = Test134#getP( )
  81 actualOut D = { this.!getP } U = {  }
  82 localDeclaration D = { d1$20 } U = { p2$19.!f, this.!getP.!f }
  83 receiver D = {  } U = { p2$19, this.!getP }
  84 methodCall D = {  } U = {  } TO = P134#f( int )
  85 actualIn D = {  } U = { x$0 }
  86 actualOut D = { p2$19.!f } U = {  }
  87 localDeclaration D = { p3$21 } U = { this.!getQ }
  88 receiver D = {  } U = {  }
  89 methodCall D = {  } U = {  } TO = Test134#getQ( )
  90 actualOut D = { this.!getQ } U = {  }
  91 localDeclaration D = { d2$22 } U = { p3$21.!f, this.!getQ.!f }
  92 receiver D = {  } U = { p3$21, this.!getQ }
  93 methodCall D = {  } U = {  } TO = Q134#f( int )
  94 actualIn D = {  } U = { x$0 }
  95 actualOut D = { p3$21.!f } U = {  }
  96 localDeclaration D = { p4$23 } U = { this.!getPQ }
  97 receiver D = {  } U = {  }
  98 methodCall D = {  } U = {  } TO = Test134#getPQ( )
  99 actualOut D = { this.!getPQ } U = {  }
 100 localDeclaration D = { d3$24 } U = { p4$23.!f, this.!getPQ.!f }
 101 receiver D = {  } U = { p4$23, this.!getPQ }
 102 methodCall D = {  } U = {  } TO = P134#f( int )
 103 actualIn D = {  } U = { x$0 }
 104 actualOut D = { p4$23.!f } U = {  }
 105 methodExit
 106 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ dec( int ) ]
   1 formalIn D = { a$0 } U = {  }
   2 returnSt D = { $_ } U = { a$0 }
   3 methodExit
   4 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ n1( P134 int ) ]
   1 formalIn D = { p$0 } U = {  }
   2 formalIn D = { x$1 } U = {  }
   3 localDeclaration D = { z$2 } U = { p$0.!f }
   4 receiver D = {  } U = { p$0 }
   5 methodCall D = {  } U = {  } TO = P134#f( int )
   6 actualIn D = {  } U = { x$1 }
   7 actualOut D = { p$0.!f } U = {  }
   8 methodExit
   9 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ n2( P134 int ) ]
   1 formalIn D = { p$0 } U = {  }
   2 formalIn D = { x$1 } U = {  }
   3 localDeclaration D = { z$2 } U = { p$0.!f }
   4 receiver D = {  } U = { p$0 }
   5 methodCall D = {  } U = {  } TO = P134#f( int )
   6 actualIn D = {  } U = { x$1 }
   7 actualOut D = { p$0.!f } U = {  }
   8 methodExit
   9 formalOut D = {  } U = { $_ }
--
   0: Test134( )
   1: 0 -> 1 trueControlFlow
--
   0: getP( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 6 trueControlFlow
   3: 1 -> 6 fallThroughFlow
   4: 2 -> 3 trueControlFlow
   5: 3 -> 4 trueControlFlow
   6: 4 -> 1 trueControlFlow
   7: 6 -> 5 trueControlFlow
--
   0: a2( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 11 trueControlFlow
   3: 2 -> 5 trueControlFlow
   4: 3 -> 9 trueControlFlow
   5: 4 -> 8 trueControlFlow
   6: 5 -> 6 trueControlFlow
   7: 6 -> 7 trueControlFlow
   8: 7 -> 4 trueControlFlow
   9: 8 -> 3 trueControlFlow
  10: 9 -> 1 trueControlFlow
  11: 11 -> 10 trueControlFlow
--
   0: a1( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 11 trueControlFlow
   3: 2 -> 5 trueControlFlow
   4: 3 -> 9 trueControlFlow
   5: 4 -> 8 trueControlFlow
   6: 5 -> 6 trueControlFlow
   7: 6 -> 7 trueControlFlow
   8: 7 -> 4 trueControlFlow
   9: 8 -> 3 trueControlFlow
  10: 9 -> 1 trueControlFlow
  11: 11 -> 10 trueControlFlow
--
   0: getQ( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 6 trueControlFlow
   3: 1 -> 6 fallThroughFlow
   4: 2 -> 3 trueControlFlow
   5: 3 -> 4 trueControlFlow
   6: 4 -> 1 trueControlFlow
   7: 6 -> 5 trueControlFlow
--
   0: m3( )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 2 -> 7 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 2 trueControlFlow
   7: 6 -> 12 trueControlFlow
   8: 7 -> 9 trueControlFlow
   9: 8 -> 10 trueControlFlow
  10: 9 -> 8 trueControlFlow
  11: 10 -> 6 trueControlFlow
  12: 11 -> 17 trueControlFlow
  13: 12 -> 14 trueControlFlow
  14: 13 -> 15 trueControlFlow
  15: 14 -> 13 trueControlFlow
  16: 15 -> 11 trueControlFlow
  17: 17 -> 16 trueControlFlow
--
   0: m2( )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 3 trueControlFlow
   4: 3 -> 5 trueControlFlow
   5: 3 -> 9 falseControlFlow
   6: 4 -> 12 trueControlFlow
   7: 5 -> 6 trueControlFlow
   8: 6 -> 7 trueControlFlow
   9: 7 -> 4 trueControlFlow
  10: 8 -> 12 trueControlFlow
  11: 9 -> 10 trueControlFlow
  12: 10 -> 11 trueControlFlow
  13: 11 -> 8 trueControlFlow
  14: 12 -> 14 trueControlFlow
  15: 13 -> 19 trueControlFlow
  16: 14 -> 16 trueControlFlow
  17: 15 -> 17 trueControlFlow
  18: 16 -> 15 trueControlFlow
  19: 17 -> 13 trueControlFlow
  20: 18 -> 23 trueControlFlow
  21: 19 -> 20 trueControlFlow
  22: 20 -> 21 trueControlFlow
  23: 21 -> 18 trueControlFlow
  24: 22 -> 27 trueControlFlow
  25: 23 -> 24 trueControlFlow
  26: 24 -> 25 trueControlFlow
  27: 25 -> 22 trueControlFlow
  28: 26 -> 31 trueControlFlow
  29: 27 -> 28 trueControlFlow
  30: 28 -> 29 trueControlFlow
  31: 29 -> 26 trueControlFlow
  32: 30 -> 35 trueControlFlow
  33: 31 -> 32 trueControlFlow
  34: 32 -> 33 trueControlFlow
  35: 33 -> 30 trueControlFlow
  36: 35 -> 34 trueControlFlow
--
   0: inc( int )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 2 -> 4 fallThroughFlow
   5: 4 -> 3 trueControlFlow
--
   0: getPQ( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 6 trueControlFlow
   3: 1 -> 6 fallThroughFlow
   4: 2 -> 3 trueControlFlow
   5: 3 -> 4 trueControlFlow
   6: 4 -> 1 trueControlFlow
   7: 6 -> 5 trueControlFlow
--
   0: m( )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 2 -> 8 trueControlFlow
   4: 3 -> 5 trueControlFlow
   5: 4 -> 6 trueControlFlow
   6: 5 -> 4 trueControlFlow
   7: 6 -> 2 trueControlFlow
   8: 7 -> 13 trueControlFlow
   9: 8 -> 10 trueControlFlow
  10: 9 -> 11 trueControlFlow
  11: 10 -> 9 trueControlFlow
  12: 11 -> 7 trueControlFlow
  13: 12 -> 17 trueControlFlow
  14: 13 -> 14 trueControlFlow
  15: 14 -> 15 trueControlFlow
  16: 15 -> 12 trueControlFlow
  17: 16 -> 22 trueControlFlow
  18: 17 -> 19 trueControlFlow
  19: 18 -> 20 trueControlFlow
  20: 19 -> 18 trueControlFlow
  21: 20 -> 16 trueControlFlow
  22: 21 -> 26 trueControlFlow
  23: 22 -> 23 trueControlFlow
  24: 23 -> 24 trueControlFlow
  25: 24 -> 21 trueControlFlow
  26: 25 -> 31 trueControlFlow
  27: 26 -> 28 trueControlFlow
  28: 27 -> 29 trueControlFlow
  29: 28 -> 27 trueControlFlow
  30: 29 -> 25 trueControlFlow
  31: 30 -> 35 trueControlFlow
  32: 31 -> 32 trueControlFlow
  33: 32 -> 33 trueControlFlow
  34: 33 -> 30 trueControlFlow
  35: 34 -> 39 trueControlFlow
  36: 35 -> 37 trueControlFlow
  37: 36 -> 38 trueControlFlow
  38: 37 -> 36 trueControlFlow
  39: 38 -> 34 trueControlFlow
  40: 39 -> 41 trueControlFlow
  41: 40 -> 45 trueControlFlow
  42: 41 -> 43 trueControlFlow
  43: 42 -> 44 trueControlFlow
  44: 43 -> 42 trueControlFlow
  45: 44 -> 40 trueControlFlow
  46: 45 -> 47 trueControlFlow
  47: 46 -> 52 trueControlFlow
  48: 47 -> 49 trueControlFlow
  49: 48 -> 50 trueControlFlow
  50: 49 -> 48 trueControlFlow
  51: 50 -> 46 trueControlFlow
  52: 51 -> 56 trueControlFlow
  53: 52 -> 53 trueControlFlow
  54: 53 -> 54 trueControlFlow
  55: 54 -> 51 trueControlFlow
  56: 55 -> 61 trueControlFlow
  57: 56 -> 58 trueControlFlow
  58: 57 -> 59 trueControlFlow
  59: 58 -> 57 trueControlFlow
  60: 59 -> 55 trueControlFlow
  61: 60 -> 65 trueControlFlow
  62: 61 -> 62 trueControlFlow
  63: 62 -> 63 trueControlFlow
  64: 63 -> 60 trueControlFlow
  65: 64 -> 70 trueControlFlow
  66: 65 -> 67 trueControlFlow
  67: 66 -> 68 trueControlFlow
  68: 67 -> 66 trueControlFlow
  69: 68 -> 64 trueControlFlow
  70: 69 -> 74 trueControlFlow
  71: 70 -> 71 trueControlFlow
  72: 71 -> 72 trueControlFlow
  73: 72 -> 69 trueControlFlow
  74: 73 -> 79 trueControlFlow
  75: 74 -> 76 trueControlFlow
  76: 75 -> 77 trueControlFlow
  77: 76 -> 75 trueControlFlow
  78: 77 -> 73 trueControlFlow
  79: 78 -> 83 trueControlFlow
  80: 79 -> 80 trueControlFlow
  81: 80 -> 81 trueControlFlow
  82: 81 -> 78 trueControlFlow
  83: 82 -> 88 trueControlFlow
  84: 83 -> 85 trueControlFlow
  85: 84 -> 86 trueControlFlow
  86: 85 -> 84 trueControlFlow
  87: 86 -> 82 trueControlFlow
  88: 87 -> 92 trueControlFlow
  89: 88 -> 89 trueControlFlow
  90: 89 -> 90 trueControlFlow
  91: 90 -> 87 trueControlFlow
  92: 91 -> 97 trueControlFlow
  93: 92 -> 94 trueControlFlow
  94: 93 -> 95 trueControlFlow
  95: 94 -> 93 trueControlFlow
  96: 95 -> 91 trueControlFlow
  97: 96 -> 101 trueControlFlow
  98: 97 -> 98 trueControlFlow
  99: 98 -> 99 trueControlFlow
 100: 99 -> 96 trueControlFlow
 101: 100 -> 106 trueControlFlow
 102: 101 -> 103 trueControlFlow
 103: 102 -> 104 trueControlFlow
 104: 103 -> 102 trueControlFlow
 105: 104 -> 100 trueControlFlow
 106: 106 -> 105 trueControlFlow
--
   0: dec( int )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 2 -> 4 fallThroughFlow
   5: 4 -> 3 trueControlFlow
--
   0: n1( P134 int )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 9 trueControlFlow
   5: 4 -> 6 trueControlFlow
   6: 5 -> 7 trueControlFlow
   7: 6 -> 5 trueControlFlow
   8: 7 -> 3 trueControlFlow
   9: 9 -> 8 trueControlFlow
--
   0: n2( P134 int )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 9 trueControlFlow
   5: 4 -> 6 trueControlFlow
   6: 5 -> 7 trueControlFlow
   7: 6 -> 5 trueControlFlow
   8: 7 -> 3 trueControlFlow
   9: 9 -> 8 trueControlFlow
--
----- CCFG (to here) -----

