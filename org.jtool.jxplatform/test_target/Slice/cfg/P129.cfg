----- CCFG (from here) -----
Class Name = P129
   0 methodEntry [ set2( java.lang.String java.lang.String ) ]
   1 formalIn D = { key$0 } U = {  }
   2 formalIn D = { value$1 } U = {  }
   3 assignment D = { this.key } U = { key$0, this }
   4 assignment D = { this.value } U = { this, value$1 }
   5 methodExit
   6 formalOut D = {  } U = { $_, this.key, this.value }
--
   0 methodEntry [ get1( java.lang.String ) ]
   1 formalIn D = { key$0 } U = {  }
   2 returnSt D = { $_ } U = { this.map.!get }
   3 receiver D = {  } U = { this.map }
   4 methodCall D = {  } U = { key$0, this.map, this.map$Node.hash, this.map$Node.key, this.map$Node.next, this.map$Node.value, this.map.table } TO = java.util.Map#get( java.lang.Object )
   5 actualOut D = { this.map.!get } U = { this.map$Node.hash, this.map$Node.key, this.map$Node.next, this.map$Node.value, this.map.table }
   6 methodExit
   7 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ key ]
   1 fieldDeclaration D = { this.key } U = { this.key }
   2 fieldExit
--
   0 methodEntry [ set1( java.lang.String java.lang.String ) ]
   1 formalIn D = { key$0 } U = {  }
   2 formalIn D = { value$1 } U = {  }
   3 assignment D = {  } U = { this.map.!put }
   4 receiver D = {  } U = { this.map }
   5 methodCall D = { this.map, this.map$Node.next, this.map$Node.value, this.map.modCount, this.map.size } U = { key$0, this.map, this.map$Node.hash, this.map$Node.key, this.map$Node.next, this.map$Node.value, this.map.modCount, this.map.size, this.map.table, this.map.threshold, value$1 } TO = java.util.Map#put( java.lang.Object java.lang.Object )
   6 actualOut D = { this.map, this.map$Node.next, this.map$Node.value, this.map.!put, this.map.modCount, this.map.size } U = { this.map, this.map$Node.hash, this.map$Node.key, this.map$Node.next, this.map$Node.value, this.map.modCount, this.map.size, this.map.table, this.map.threshold }
   7 methodExit
   8 formalOut D = {  } U = { $_, this.map, this.map$Node.next, this.map$Node.value, this.map.modCount, this.map.size }
--
   0 fieldEntry [ value ]
   1 fieldDeclaration D = { this.value } U = { this.value }
   2 fieldExit
--
   0 fieldEntry [ map ]
   1 fieldDeclaration D = { this.map } U = { HashMap<String,String>.!HashMap<String,String>, this.map }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { HashMap<String,String>.loadFactor } U = {  } TO = java.util.HashMap#HashMap( )
   4 actualOut D = { HashMap<String,String>.!HashMap<String,String>, HashMap<String,String>.loadFactor } U = {  }
   5 fieldExit
--
   0 methodEntry [ get2( java.lang.String ) ]
   1 formalIn D = { key$0 } U = {  }
   2 ifSt D = {  } U = { key$0.!equals }
   3 receiver D = {  } U = { key$0 }
   4 methodCall D = {  } U = { key$0, key$0.COMPACT_STRINGS, key$0.coder, key$0.value, this, this.key } TO = java.lang.String#equals( java.lang.Object )
   5 actualOut D = { key$0.!equals } U = { key$0.COMPACT_STRINGS, key$0.coder, key$0.value }
   6 returnSt D = { $_ } U = { this.value }
   7 merge ifSt(2)
   8 returnSt D = { $_ } U = {  }
   9 methodExit
  10 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ P129( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0: set2( java.lang.String java.lang.String )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 3 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 6 trueControlFlow
   6: 6 -> 5 trueControlFlow
--
   0: get1( java.lang.String )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 2 -> 7 trueControlFlow
   4: 2 -> 7 fallThroughFlow
   5: 3 -> 4 trueControlFlow
   6: 4 -> 5 trueControlFlow
   7: 5 -> 2 trueControlFlow
   8: 7 -> 6 trueControlFlow
--
   0: key
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: set1( java.lang.String java.lang.String )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 8 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 6 trueControlFlow
   7: 6 -> 3 trueControlFlow
   8: 8 -> 7 trueControlFlow
--
   0: value
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: map
   1: 0 -> 2 trueControlFlow
   2: 1 -> 5 trueControlFlow
   3: 2 -> 3 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 1 trueControlFlow
--
   0: get2( java.lang.String )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 2 -> 6 trueControlFlow
   4: 2 -> 7 falseControlFlow
   5: 3 -> 4 trueControlFlow
   6: 4 -> 5 trueControlFlow
   7: 5 -> 2 trueControlFlow
   8: 6 -> 7 fallThroughFlow
   9: 6 -> 10 trueControlFlow
  10: 7 -> 8 trueControlFlow
  11: 8 -> 10 trueControlFlow
  12: 8 -> 10 fallThroughFlow
  13: 10 -> 9 trueControlFlow
--
   0: P129( )
   1: 0 -> 2 trueControlFlow
   2: 2 -> 1 trueControlFlow
--
----- CCFG (to here) -----

