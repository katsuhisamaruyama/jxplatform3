Class Name = Test145
   0 fieldEntry [ Test145#list ]
   1 fieldDeclaration D = { this.list } U = { java.util.ArrayList.!ArrayList( ), this.list }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA } TO = java.util.ArrayList#ArrayList( )
   4 actualOut D = { java.util.ArrayList.!ArrayList( ), java.util.ArrayList.!java.util.AbstractList.modCount, java.util.ArrayList.!java.util.ArrayList.elementData } U = { java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA }
   5 fieldExit
--
   0 methodEntry [ Test145#m( ) ]
   1 assignment D = {  } U = { this.list.!add( java.lang.Object ) }
   2 receiver D = {  } U = { this.list }
   3 methodCall D = {  } U = { T145.!T145( int ), this.list.!java.util.ArrayList.elementData, this.list.!java.util.ArrayList.modCount, this.list.!java.util.ArrayList.size } TO = java.util.List#add( java.lang.Object )
   4 receiver D = {  } U = {  }
   5 constructorCall D = {  } U = {  } TO = T145#T145( int )
   6 actualIn D = {  } U = {  }
   7 actualOut D = { T145.!T145( int ) } U = {  }
   8 actualOut D = { this.list.!add( java.lang.Object ), this.list.!java.util.ArrayList.modCount, this.list.!java.util.ArrayList.size } U = { this.list.!java.util.ArrayList.elementData, this.list.!java.util.ArrayList.modCount, this.list.!java.util.ArrayList.size }
   9 localDeclaration D = { t$0 } U = { this.list.!get( int ) }
  10 receiver D = {  } U = { this.list }
  11 methodCall D = {  } U = { this.list.!java.util.ArrayList.elementData, this.list.!java.util.ArrayList.size } TO = java.util.List#get( int )
  12 actualOut D = { this.list.!get( int ) } U = { this.list.!java.util.ArrayList.elementData, this.list.!java.util.ArrayList.size }
  13 localDeclaration D = { a$1 } U = { t$0.!getA( ) }
  14 receiver D = {  } U = { t$0 }
  15 methodCall D = {  } U = { t$0.a, this.list.!get( int ).a } TO = T145#getA( )
  16 actualOut D = { t$0.!getA( ) } U = { t$0.a, this.list.!get( int ).a }
  17 localDeclaration D = { h$2 } U = { t$0.!hashCode( ) }
  18 receiver D = {  } U = { t$0 }
  19 methodCall D = {  } U = {  } TO = T145#hashCode( )
  20 actualOut D = { t$0.!hashCode( ) } U = {  }
  21 localDeclaration D = { l$3 } U = { this.!getList( ) }
  22 receiver D = {  } U = {  }
  23 methodCall D = {  } U = { this.list } TO = Test145#getList( )
  24 actualOut D = { this.!getList( ) } U = { this.list }
  25 methodExit
  26 formalOut D = {  } U = { $_ }
   5+2703 actualOutByFieldAccess D = { T145.!T145( int ).a } U = {  }
--
   0 methodEntry [ Test145#getList( ) ]
   1 returnSt D = { $_ } U = { this.list }
   2 methodExit
   3 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Test145#Test145( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0: list
   1:    0 ->    2 trueControlFlow
   2:    1 ->    5 trueControlFlow
   3:    2 ->    3 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    1 trueControlFlow
--
   0: m( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->   10 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    8 trueControlFlow
   5:    4 ->    6 trueControlFlow
   6:    5 ->    5+2703 trueControlFlow
   7:    6 ->    5 trueControlFlow
   8:    7 ->    3 trueControlFlow
   9:    8 ->    1 trueControlFlow
  10:    9 ->   14 trueControlFlow
  11:   10 ->   11 trueControlFlow
  12:   11 ->   12 trueControlFlow
  13:   12 ->    9 trueControlFlow
  14:   13 ->   18 trueControlFlow
  15:   14 ->   15 trueControlFlow
  16:   15 ->   16 trueControlFlow
  17:   16 ->   13 trueControlFlow
  18:   17 ->   22 trueControlFlow
  19:   18 ->   19 trueControlFlow
  20:   19 ->   20 trueControlFlow
  21:   20 ->   17 trueControlFlow
  22:   21 ->   26 trueControlFlow
  23:   22 ->   23 trueControlFlow
  24:   23 ->   24 trueControlFlow
  25:   24 ->   21 trueControlFlow
  26:   26 ->   25 trueControlFlow
  27:    5+2703 ->    7 trueControlFlow
--
   0: getList( )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 fallThroughFlow
   3:    1 ->    3 trueControlFlow
   4:    3 ->    2 trueControlFlow
--
   0: Test145( )
   1:    0 ->    2 trueControlFlow
   2:    2 ->    1 trueControlFlow
--

