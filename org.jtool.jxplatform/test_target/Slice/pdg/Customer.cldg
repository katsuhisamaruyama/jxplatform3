Class Name = Customer
   0 methodEntry [ Customer#getAmount( Order ) ]
   1 formalIn D = { order$0 } U = {  }
   2 localDeclaration D = { amount$1 } U = {  }
   3 enhancedForSt D = { rental$2 } U = { order$0, order$0.rentals }
   4 assignment D = { amount$1 } U = { amount$1, rental$2.!getCharge( double ) }
   5 receiver D = {  } U = { rental$2 }
   6 methodCall D = {  } U = { rental$2.days, rental$2.price } TO = Rental#getCharge( double )
   7 actualIn D = {  } U = { this.discount }
   8 actualOut D = { rental$2.!getCharge( double ) } U = { rental$2.days, rental$2.price }
   9 returnSt D = { $_ } U = { amount$1 }
  11 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Customer#statement( Order ) ]
   1 formalIn D = { order$0 } U = {  }
   2 ifSt D = {  } U = { order$0, order$0.rentals }
   3 returnSt D = { $_ } U = { $java.lang.String }
   5 ifSt D = {  } U = { order$0.!getSize( ), this.discount }
   6 receiver D = {  } U = { order$0 }
   7 methodCall D = {  } U = {  } TO = Order#getSize( )
   8 actualOut D = { order$0.!getSize( ) } U = {  }
   9 assignment D = { this.discount } U = { this.discount }
  11 localDeclaration D = { amount$1 } U = { this.!getAmount( Order ) }
  12 receiver D = {  } U = {  }
  13 methodCall D = {  } U = { order$0.rentals, this.discount, this.rental$2.days, this.rental$2.price } TO = Customer#getAmount( Order )
  14 actualIn D = {  } U = { order$0, order$0.rentals }
  15 actualOut D = { this.!getAmount( Order ) } U = { order$0.rentals, this.discount, this.rental$2.days, this.rental$2.price }
  16 returnSt D = { $_ } U = { $java.lang.String, amount$1, this.name }
  18 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Customer#Customer( java.lang.String ) ]
   1 formalIn D = { name$0 } U = {  }
   2 assignment D = { this.name } U = { name$0 }
   4 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Rental#getCharge( double ) ]
   1 formalIn D = { discount$0 } U = {  }
   2 localDeclaration D = { charge$1 } U = { this.!floor( double ) }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { discount$0, this.days, this.price } TO = java.lang.Math#floor( double )
   5 actualOut D = { this.!floor( double ) } U = {  }
   6 returnSt D = { $_ } U = { charge$1 }
   8 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Customer#setDiscount( double ) ]
   1 formalIn D = { dis$0 } U = {  }
   2 assignment D = { this.discount } U = { dis$0 }
   4 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ Customer#discount ]
   1 fieldDeclaration D = { this.discount } U = { this.discount }
--
   0 fieldEntry [ Rental#price ]
   1 fieldDeclaration D = { this.price } U = { this.price }
--
   0 methodEntry [ Order#getSize( ) ]
   1 returnSt D = { $_ } U = { this.rentals.!size( ) }
   2 receiver D = {  } U = { this.rentals }
   3 methodCall D = {  } U = { this.rentals.!java.util.ArrayList.size } TO = java.util.List#size( )
   4 actualOut D = { this.rentals.!size( ) } U = { this.rentals.!java.util.ArrayList.size }
   6 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Order#addRental( Rental ) ]
   1 formalIn D = { rental$0 } U = {  }
   2 assignment D = {  } U = { this.rentals.!add( java.lang.Object ) }
   3 receiver D = {  } U = { this.rentals }
   4 methodCall D = {  } U = { rental$0, rental$0.days, rental$0.price, this.rentals.!java.util.ArrayList.elementData, this.rentals.!java.util.ArrayList.modCount, this.rentals.!java.util.ArrayList.size } TO = java.util.List#add( java.lang.Object )
   5 actualOut D = { this.rentals.!add( java.lang.Object ), this.rentals.!java.util.ArrayList.modCount, this.rentals.!java.util.ArrayList.size } U = { this.rentals.!java.util.ArrayList.elementData, this.rentals.!java.util.ArrayList.modCount, this.rentals.!java.util.ArrayList.size }
   7 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ Rental#days ]
   1 fieldDeclaration D = { this.days } U = { this.days }
--
   0 fieldEntry [ Customer#name ]
   1 fieldDeclaration D = { this.name } U = { $java.lang.String, this.name }
--
   0 fieldEntry [ Order#rentals ]
   1 fieldDeclaration D = { this.rentals } U = { java.util.ArrayList.!ArrayList( ), this.rentals }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA } TO = java.util.ArrayList#ArrayList( )
   4 actualOut D = { java.util.ArrayList.!ArrayList( ), java.util.ArrayList.!java.util.AbstractList.modCount, java.util.ArrayList.!java.util.ArrayList.elementData } U = { java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA }
--
   0 constructorEntry [ Rental#Rental( int int ) ]
   1 formalIn D = { price$0 } U = {  }
   2 formalIn D = { days$1 } U = {  }
   3 assignment D = { this.price } U = { price$0 }
   4 assignment D = { this.days } U = { days$1 }
   6 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Order#Order( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0: getAmount( Order )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    9 trueControlDependence
   5:    0 ->   11 trueControlDependence
   6:    1 ->    3 loopIndependentDefUseDependence order$0
   7:    2 ->    4 declaration
   8:    2 ->    4 loopIndependentDefUseDependence amount$1
   9:    2 ->    9 declaration
  10:    2 ->    9 loopIndependentDefUseDependence amount$1
  11:    3 ->    3 defOrderDependence rental$2
  12:    3 ->    4 trueControlDependence
  13:    3 ->    5 loopIndependentDefUseDependence rental$2
  14:    3 ->    5 trueControlDependence
  15:    3 ->    6 trueControlDependence
  16:    3 ->    7 trueControlDependence
  17:    3 ->    8 trueControlDependence
  18:    4 ->    4 loopCarriedDefUseDependence amount$1 (LC = 3)
  19:    4 ->    9 loopIndependentDefUseDependence amount$1
  20:    8 ->    4 loopIndependentDefUseDependence rental$2.!getCharge( double )
  21:    8 ->    8 defOrderDependence rental$2.!getCharge( double )
  22:    9 ->   11 loopIndependentDefUseDependence $_
--
   0: statement( Order )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->   18 trueControlDependence
   4:    1 ->    2 loopIndependentDefUseDependence order$0
   5:    1 ->    6 loopIndependentDefUseDependence order$0
   6:    1 ->   14 loopIndependentDefUseDependence order$0
   7:    2 ->    3 trueControlDependence
   8:    2 ->    5 falseControlDependence
   9:    2 ->    6 falseControlDependence
  10:    2 ->    7 falseControlDependence
  11:    2 ->    8 falseControlDependence
  12:    2 ->   11 falseControlDependence
  13:    2 ->   12 falseControlDependence
  14:    2 ->   13 falseControlDependence
  15:    2 ->   14 falseControlDependence
  16:    2 ->   15 falseControlDependence
  17:    2 ->   16 falseControlDependence
  18:    3 ->    5 fallThroughControlDependence
  19:    3 ->    6 fallThroughControlDependence
  20:    3 ->    7 fallThroughControlDependence
  21:    3 ->    8 fallThroughControlDependence
  22:    3 ->   11 fallThroughControlDependence
  23:    3 ->   12 fallThroughControlDependence
  24:    3 ->   13 fallThroughControlDependence
  25:    3 ->   14 fallThroughControlDependence
  26:    3 ->   15 fallThroughControlDependence
  27:    3 ->   16 fallThroughControlDependence
  28:    3 ->   18 loopIndependentDefUseDependence $_
  29:    5 ->    9 trueControlDependence
  30:    8 ->    5 loopIndependentDefUseDependence order$0.!getSize( )
  31:    9 ->   13 loopIndependentDefUseDependence this.discount
  32:    9 ->   15 loopIndependentDefUseDependence this.discount
  33:   11 ->   16 declaration
  34:   11 ->   16 loopIndependentDefUseDependence amount$1
  35:   15 ->   11 loopIndependentDefUseDependence this.!getAmount( Order )
  36:   16 ->   18 loopIndependentDefUseDependence $_
--
   0: Customer( java.lang.String )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    1 ->    2 loopIndependentDefUseDependence name$0
--
   0: getCharge( double )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    8 trueControlDependence
   8:    1 ->    4 loopIndependentDefUseDependence discount$0
   9:    2 ->    6 declaration
  10:    2 ->    6 loopIndependentDefUseDependence charge$1
  11:    5 ->    2 loopIndependentDefUseDependence this.!floor( double )
  12:    6 ->    8 loopIndependentDefUseDependence $_
--
   0: setDiscount( double )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    1 ->    2 loopIndependentDefUseDependence dis$0
--
   0: discount
   1:    0 ->    1 trueControlDependence
--
   0: price
   1:    0 ->    1 trueControlDependence
--
   0: getSize( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    1 ->    6 loopIndependentDefUseDependence $_
   7:    4 ->    1 loopIndependentDefUseDependence this.rentals.!size( )
--
   0: addRental( Rental )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    7 trueControlDependence
   7:    1 ->    4 loopIndependentDefUseDependence rental$0
   8:    5 ->    2 loopIndependentDefUseDependence this.rentals.!add( java.lang.Object )
--
   0: days
   1:    0 ->    1 trueControlDependence
--
   0: name
   1:    0 ->    1 trueControlDependence
--
   0: rentals
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    4 ->    1 loopIndependentDefUseDependence java.util.ArrayList.!ArrayList( )
--
   0: Rental( int int )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    1 ->    3 loopIndependentDefUseDependence price$0
   7:    2 ->    4 loopIndependentDefUseDependence days$1
--
   0: Order( )
   1:    0 ->    2 trueControlDependence
--
   1: 130 -> 131 MEMBER
   2: 130 -> 136 MEMBER
   3: 130 -> 233 MEMBER
   4: 130 -> 257 MEMBER
   5: 130 -> 262 MEMBER
   6: 130 -> 265 MEMBER
   7: 149 -> 233 CALL
   8: 150 -> 234 PIN
   9: 239 -> 245 CALL
  10: 240 -> 246 PIN
  11: 244 -> 151 POUT
  12: 253 -> 241 POUT
  13: 263 -> 152 FACC
  14: 263 -> 263 FACC
  15: 266 -> 141 FACC
  16: 266 -> 145 FACC
  17: 266 -> 149 FACC
  18: 266 -> 151 FACC
  19: 266 -> 240 FACC
  20: 266 -> 266 FACC
  21: 268 -> 269 MEMBER
  22: 268 -> 272 MEMBER
  23: 268 -> 280 MEMBER
  24: 268 -> 286 MEMBER
  25: 281 -> 138 FACC
  26: 281 -> 149 FACC
  27: 281 -> 150 FACC
  28: 281 -> 151 FACC
  29: 281 -> 236 FACC
  30: 281 -> 275 FACC
  31: 281 -> 281 FACC
  32: 281 -> 288 FACC
  33: 296 -> 245 MEMBER
  34: 296 -> 297 MEMBER
  35: 296 -> 304 MEMBER
  36: 296 -> 307 MEMBER
  37: 305 -> 149 FACC
  38: 305 -> 151 FACC
  39: 305 -> 239 FACC
  40: 305 -> 241 FACC
  41: 305 -> 249 FACC
  42: 305 -> 276 FACC
  43: 305 -> 305 FACC
  44: 308 -> 149 FACC
  45: 308 -> 151 FACC
  46: 308 -> 239 FACC
  47: 308 -> 241 FACC
  48: 308 -> 249 FACC
  49: 308 -> 276 FACC
  50: 308 -> 308 FACC
--

