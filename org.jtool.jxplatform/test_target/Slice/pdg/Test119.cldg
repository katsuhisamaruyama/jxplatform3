Class Name = Test119
   0 methodEntry [ Test119#m( ) ]
   1 assignment D = { this.p } U = {  }
   2 localDeclaration D = { a$0 } U = { A119.!A119( ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = {  } TO = A119#A119( )
   5 actualOut D = { A119.!A119( ) } U = {  }
   6 assignment D = {  } U = { a$0.!setX( int ) }
   7 receiver D = {  } U = { a$0 }
   8 methodCall D = {  } U = {  } TO = A119#setX( int )
   9 actualIn D = {  } U = {  }
  10 actualOut D = { a$0.!setX( int ) } U = {  }
  11 localDeclaration D = { b$1 } U = { a$0.!getX( ) }
  12 receiver D = {  } U = { a$0 }
  13 methodCall D = {  } U = { A119.!A119( ).x, a$0.x } TO = A119#getX( )
  14 actualOut D = { a$0.!getX( ) } U = { A119.!A119( ).x, a$0.x }
  15 assignment D = {  } U = { a$0.!setX( int ) }
  16 receiver D = {  } U = { a$0 }
  17 methodCall D = {  } U = {  } TO = A119#setX( int )
  18 actualIn D = {  } U = {  }
  19 actualOut D = { a$0.!setX( int ) } U = {  }
  20 localDeclaration D = { c$2 } U = { a$0.!getX( ) }
  21 receiver D = {  } U = { a$0 }
  22 methodCall D = {  } U = { A119.!A119( ).x, a$0.x } TO = A119#getX( )
  23 actualOut D = { a$0.!getX( ) } U = { A119.!A119( ).x, a$0.x }
  24 localDeclaration D = { d$3 } U = { A119.!A119( ).x, A119.!A119( ).y, a$0, a$0.x, a$0.y, this.p }
  25 localDeclaration D = { e$4 } U = { this.!getP( ) }
  26 receiver D = {  } U = {  }
  27 methodCall D = {  } U = { this.p } TO = Test119#getP( )
  28 actualOut D = { this.!getP( ) } U = { this.p }
  30 formalOut D = {  } U = { $_ }
   8+2212 actualOutByFieldAccess D = { a$0.x } U = {  }
  17+2213 actualOutByFieldAccess D = { a$0.x } U = {  }
--
   0 fieldEntry [ Test119#p ]
   1 fieldDeclaration D = { this.p } U = { this.p }
--
   0 methodEntry [ A119#getX( ) ]
   1 returnSt D = { $_ } U = { this.x }
   3 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ A119#x ]
   1 fieldDeclaration D = { this.x } U = { this.x }
--
   0 fieldEntry [ A119#y ]
   1 fieldDeclaration D = { this.y } U = { this.y }
--
   0 constructorEntry [ A119#A119( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Test119#Test119( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Test119#getP( ) ]
   1 returnSt D = { $_ } U = { this.p }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ A119#setX( int ) ]
   1 formalIn D = { x$0 } U = {  }
   2 assignment D = { this.x } U = { x$0 }
   4 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Test119#m2( ) ]
   1 localDeclaration D = { a$0 } U = { A119.!A119( ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = {  } TO = A119#A119( )
   4 actualOut D = { A119.!A119( ) } U = {  }
   5 assignment D = { a$0.x } U = { A119.!A119( ).x, A119.!A119( ).y, a$0, a$0.x, a$0.y }
   6 assignment D = { a$0.y } U = { A119.!A119( ).x, A119.!A119( ).y, a$0, a$0.x, a$0.y }
   8 formalOut D = {  } U = { $_ }
--
   0: m( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    8+2212 trueControlDependence
  10:    0 ->    9 trueControlDependence
  11:    0 ->   10 trueControlDependence
  12:    0 ->   11 trueControlDependence
  13:    0 ->   12 trueControlDependence
  14:    0 ->   13 trueControlDependence
  15:    0 ->   14 trueControlDependence
  16:    0 ->   15 trueControlDependence
  17:    0 ->   16 trueControlDependence
  18:    0 ->   17 trueControlDependence
  19:    0 ->   17+2213 trueControlDependence
  20:    0 ->   18 trueControlDependence
  21:    0 ->   19 trueControlDependence
  22:    0 ->   20 trueControlDependence
  23:    0 ->   21 trueControlDependence
  24:    0 ->   22 trueControlDependence
  25:    0 ->   23 trueControlDependence
  26:    0 ->   24 trueControlDependence
  27:    0 ->   25 trueControlDependence
  28:    0 ->   26 trueControlDependence
  29:    0 ->   27 trueControlDependence
  30:    0 ->   28 trueControlDependence
  31:    0 ->   30 trueControlDependence
  32:    1 ->   24 loopIndependentDefUseDependence this.p
  33:    1 ->   27 loopIndependentDefUseDependence this.p
  34:    1 ->   28 loopIndependentDefUseDependence this.p
  35:    2 ->    7 declaration
  36:    2 ->    7 loopIndependentDefUseDependence a$0
  37:    2 ->   12 declaration
  38:    2 ->   12 loopIndependentDefUseDependence a$0
  39:    2 ->   16 declaration
  40:    2 ->   16 loopIndependentDefUseDependence a$0
  41:    2 ->   21 declaration
  42:    2 ->   21 loopIndependentDefUseDependence a$0
  43:    2 ->   24 declaration
  44:    2 ->   24 loopIndependentDefUseDependence a$0
  45:    5 ->    2 loopIndependentDefUseDependence A119.!A119( )
  46:    8+2212 ->   13 loopIndependentDefUseDependence a$0.x
  47:    8+2212 ->   14 loopIndependentDefUseDependence a$0.x
  48:    8+2212 ->   17+2213 outputDependence a$0.x
  49:   10 ->    6 loopIndependentDefUseDependence a$0.!setX( int )
  50:   10 ->   19 outputDependence a$0.!setX( int )
  51:   14 ->   11 loopIndependentDefUseDependence a$0.!getX( )
  52:   14 ->   23 outputDependence a$0.!getX( )
  53:   17+2213 ->   22 loopIndependentDefUseDependence a$0.x
  54:   17+2213 ->   23 loopIndependentDefUseDependence a$0.x
  55:   17+2213 ->   24 loopIndependentDefUseDependence a$0.x
  56:   19 ->   15 loopIndependentDefUseDependence a$0.!setX( int )
  57:   23 ->   20 loopIndependentDefUseDependence a$0.!getX( )
  58:   28 ->   25 loopIndependentDefUseDependence this.!getP( )
--
   0: p
   1:    0 ->    1 trueControlDependence
--
   0: getX( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    1 ->    3 loopIndependentDefUseDependence $_
--
   0: x
   1:    0 ->    1 trueControlDependence
--
   0: y
   1:    0 ->    1 trueControlDependence
--
   0: A119( )
   1:    0 ->    2 trueControlDependence
--
   0: Test119( )
   1:    0 ->    2 trueControlDependence
--
   0: getP( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    1 ->    3 loopIndependentDefUseDependence $_
--
   0: setX( int )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    1 ->    2 loopIndependentDefUseDependence x$0
--
   0: m2( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    8 trueControlDependence
   8:    1 ->    5 declaration
   9:    1 ->    5 loopIndependentDefUseDependence a$0
  10:    1 ->    6 declaration
  11:    1 ->    6 loopIndependentDefUseDependence a$0
  12:    4 ->    1 loopIndependentDefUseDependence A119.!A119( )
  13:    5 ->    6 loopIndependentDefUseDependence a$0.x
--
   1: 1326 -> 1327 MEMBER
   2: 1326 -> 1330 MEMBER
   3: 1326 -> 1335 MEMBER
   4: 1326 -> 1339 MEMBER
   5: 1326 -> 1342 MEMBER
   6: 1329 -> 2186 POUT
   7: 1329 -> 2222 POUT
   8: 1332 -> 2212 CFACC
   9: 1332 -> 2213 CFACC
  10: 1334 -> 2191 POUT
  11: 1334 -> 2200 POUT
  12: 1338 -> 2195 POUT
  13: 1338 -> 2204 POUT
  14: 1340 -> 1336 FACC
  15: 1340 -> 1340 FACC
  16: 1340 -> 2194 FACC
  17: 1340 -> 2195 FACC
  18: 1340 -> 2203 FACC
  19: 1340 -> 2204 FACC
  20: 1340 -> 2205 FACC
  21: 1340 -> 2223 FACC
  22: 1340 -> 2224 FACC
  23: 1343 -> 1343 FACC
  24: 1343 -> 2205 FACC
  25: 1343 -> 2223 FACC
  26: 1343 -> 2224 FACC
  27: 2177 -> 2178 MEMBER
  28: 2177 -> 2181 MEMBER
  29: 2177 -> 2214 MEMBER
  30: 2177 -> 2218 MEMBER
  31: 2177 -> 2227 MEMBER
  32: 2185 -> 1327 CALL
  33: 2189 -> 1330 CALL
  34: 2190 -> 1331 PIN
  35: 2194 -> 1335 CALL
  36: 2198 -> 1330 CALL
  37: 2199 -> 1331 PIN
  38: 2203 -> 1335 CALL
  39: 2208 -> 2214 CALL
  40: 2217 -> 2209 POUT
  41: 2221 -> 1327 CALL
  42: 2228 -> 2205 FACC
  43: 2228 -> 2208 FACC
  44: 2228 -> 2209 FACC
  45: 2228 -> 2215 FACC
  46: 2228 -> 2228 FACC
--

