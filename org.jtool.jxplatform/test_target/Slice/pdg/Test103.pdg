----- ClDG (from here) -----
Class Name = Test103
   0 fieldEntry [ Test103#a ]
   1 fieldDeclaration D = { this.a } U = { this.a }
--
   0 methodEntry [ Test103#m( ) ]
   1 assignment D = { this.a } U = {  }
   2 assignment D = { this.a } U = {  }
   3 localDeclaration D = { p$0 } U = { this.a }
   4 assignment D = {  } U = { this.!setA( int ) }
   5 receiver D = {  } U = {  }
   6 methodCall D = {  } U = {  } TO = Test103#setA( int )
   7 actualIn D = {  } U = {  }
   8 actualOut D = { this.!setA( int ) } U = {  }
   9 assignment D = {  } U = { this.!setA( int ) }
  10 receiver D = {  } U = {  }
  11 methodCall D = {  } U = {  } TO = Test103#setA( int )
  12 actualIn D = {  } U = {  }
  13 actualOut D = { this.!setA( int ) } U = {  }
  14 localDeclaration D = { q$1 } U = { this.a }
  15 localDeclaration D = { r$2 } U = { this.!getA( ) }
  16 receiver D = {  } U = {  }
  17 methodCall D = {  } U = { this.a } TO = Test103#getA( )
  18 actualOut D = { this.!getA( ) } U = { this.a }
  19 localDeclaration D = { s$3 } U = { this.!getA( ) }
  20 receiver D = {  } U = {  }
  21 methodCall D = {  } U = { this.a } TO = Test103#getA( )
  22 actualOut D = { this.!getA( ) } U = { this.a }
  23 assignment D = {  } U = { this.!incA( ) }
  24 receiver D = {  } U = {  }
  25 methodCall D = {  } U = { this.a } TO = Test103#incA( )
  26 actualOut D = { this.!incA( ) } U = { this.a }
  27 assignment D = {  } U = { this.!incA( ) }
  28 receiver D = {  } U = {  }
  29 methodCall D = {  } U = { this.a } TO = Test103#incA( )
  30 actualOut D = { this.!incA( ) } U = { this.a }
  31 localDeclaration D = { t$4 } U = { this.!getA( ) }
  32 receiver D = {  } U = {  }
  33 methodCall D = {  } U = { this.a } TO = Test103#getA( )
  34 actualOut D = { this.!getA( ) } U = { this.a }
  36 formalOut D = {  } U = { $_ }
* actualOut D = { this.a } U = {  }
* actualOut D = { this.a } U = {  }
* actualOut D = { this.a } U = {  }
* actualOut D = { this.a } U = {  }
--
   0 methodEntry [ Test103#getA( ) ]
   1 returnSt D = { $_ } U = { this.a }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Test103#incA( ) ]
   1 assignment D = { this.a } U = { this.a }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Test103#setA( int ) ]
   1 formalIn D = { a$0 } U = {  }
   2 assignment D = { this.a } U = { a$0 }
   4 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Test103#Test103( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0: a
   1:    0 ->    1 trueControlDependence
--
   0: m( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   17 trueControlDependence
  18:    0 ->   18 trueControlDependence
  19:    0 ->   19 trueControlDependence
  20:    0 ->   20 trueControlDependence
  21:    0 ->   21 trueControlDependence
  22:    0 ->   22 trueControlDependence
  23:    0 ->   23 trueControlDependence
  24:    0 ->   24 trueControlDependence
  25:    0 ->   25 trueControlDependence
  26:    0 ->   26 trueControlDependence
  27:    0 ->   27 trueControlDependence
  28:    0 ->   28 trueControlDependence
  29:    0 ->   29 trueControlDependence
  30:    0 ->   30 trueControlDependence
  31:    0 ->   31 trueControlDependence
  32:    0 ->   32 trueControlDependence
  33:    0 ->   33 trueControlDependence
  34:    0 ->   34 trueControlDependence
  35:    0 ->   36 trueControlDependence
  36:    0 -> * trueControlDependence
  37:    0 -> * trueControlDependence
  38:    0 -> * trueControlDependence
  39:    0 -> * trueControlDependence
  40:    1 ->    2 outputDependence this.a
  41:    2 ->    3 loopIndependentDefUseDependence this.a
  42:    2 -> * outputDependence this.a
  43:    8 ->    4 loopIndependentDefUseDependence this.!setA( int )
  44:    8 ->   13 outputDependence this.!setA( int )
  45:   13 ->    9 loopIndependentDefUseDependence this.!setA( int )
  46:   18 ->   15 loopIndependentDefUseDependence this.!getA( )
  47:   18 ->   22 outputDependence this.!getA( )
  48:   22 ->   19 loopIndependentDefUseDependence this.!getA( )
  49:   22 ->   34 outputDependence this.!getA( )
  50:   26 ->   23 loopIndependentDefUseDependence this.!incA( )
  51:   26 ->   30 outputDependence this.!incA( )
  52:   30 ->   27 loopIndependentDefUseDependence this.!incA( )
  53:   34 ->   31 loopIndependentDefUseDependence this.!getA( )
  54: * ->   14 loopIndependentDefUseDependence this.a
  55: * ->   17 loopIndependentDefUseDependence this.a
  56: * ->   18 loopIndependentDefUseDependence this.a
  57: * ->   21 loopIndependentDefUseDependence this.a
  58: * ->   22 loopIndependentDefUseDependence this.a
  59: * ->   25 loopIndependentDefUseDependence this.a
  60: * ->   26 loopIndependentDefUseDependence this.a
  61: * ->   29 loopIndependentDefUseDependence this.a
  62: * ->   30 loopIndependentDefUseDependence this.a
  63: * ->   33 loopIndependentDefUseDependence this.a
  64: * ->   34 loopIndependentDefUseDependence this.a
  65: * -> * outputDependence this.a
  66: * -> * outputDependence this.a
  67: * -> * outputDependence this.a
--
   0: getA( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    1 ->    3 loopIndependentDefUseDependence $_
--
   0: incA( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    3 trueControlDependence
--
   0: setA( int )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    1 ->    2 loopIndependentDefUseDependence a$0
--
   0: Test103( )
   1:    0 ->    2 trueControlDependence
--
----- ClDG (to here) -----

