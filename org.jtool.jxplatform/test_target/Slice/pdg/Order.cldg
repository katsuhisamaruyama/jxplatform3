Class Name = Order
   0 methodEntry [ Rental#getCharge( double ) ]
   1 formalIn D = { discount$0 } U = {  }
   2 localDeclaration D = { charge$1 } U = { this.!floor( double ) }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { discount$0, this.days, this.price } TO = java.lang.Math#floor( double )
   5 actualOut D = { this.!floor( double ) } U = {  }
   6 returnSt D = { $_ } U = { charge$1 }
   8 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ Rental#price ]
   1 fieldDeclaration D = { this.price } U = { this.price }
--
   0 methodEntry [ Order#getSize( ) ]
   1 returnSt D = { $_ } U = { this.rentals.!size( ) }
   2 receiver D = {  } U = { this.rentals }
   3 methodCall D = {  } U = { this.rentals.!java.util.ArrayList.size } TO = java.util.List#size( )
   4 actualOut D = { this.rentals.!size( ) } U = { this.rentals.!java.util.ArrayList.size }
   6 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Order#addRental( Rental ) ]
   1 formalIn D = { rental$0 } U = {  }
   2 assignment D = {  } U = { this.rentals.!add( java.lang.Object ) }
   3 receiver D = {  } U = { this.rentals }
   4 methodCall D = {  } U = { rental$0, rental$0.days, rental$0.price, this.rentals.!java.util.ArrayList.elementData, this.rentals.!java.util.ArrayList.modCount, this.rentals.!java.util.ArrayList.size } TO = java.util.List#add( java.lang.Object )
   5 actualOut D = { this.rentals.!add( java.lang.Object ), this.rentals.!java.util.ArrayList.modCount, this.rentals.!java.util.ArrayList.size } U = { this.rentals.!java.util.ArrayList.elementData, this.rentals.!java.util.ArrayList.modCount, this.rentals.!java.util.ArrayList.size }
   7 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ Rental#days ]
   1 fieldDeclaration D = { this.days } U = { this.days }
--
   0 fieldEntry [ Order#rentals ]
   1 fieldDeclaration D = { this.rentals } U = { java.util.ArrayList.!ArrayList( ), this.rentals }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA } TO = java.util.ArrayList#ArrayList( )
   4 actualOut D = { java.util.ArrayList.!ArrayList( ), java.util.ArrayList.!java.util.AbstractList.modCount, java.util.ArrayList.!java.util.ArrayList.elementData } U = { java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA }
--
   0 constructorEntry [ Rental#Rental( int int ) ]
   1 formalIn D = { price$0 } U = {  }
   2 formalIn D = { days$1 } U = {  }
   3 assignment D = { this.price } U = { price$0 }
   4 assignment D = { this.days } U = { days$1 }
   6 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Order#Order( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0: getCharge( double )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    8 trueControlDependence
   8:    1 ->    4 loopIndependentDefUseDependence discount$0
   9:    2 ->    6 declaration
  10:    2 ->    6 loopIndependentDefUseDependence charge$1
  11:    5 ->    2 loopIndependentDefUseDependence this.!floor( double )
  12:    6 ->    8 loopIndependentDefUseDependence $_
--
   0: price
   1:    0 ->    1 trueControlDependence
--
   0: getSize( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    1 ->    6 loopIndependentDefUseDependence $_
   7:    4 ->    1 loopIndependentDefUseDependence this.rentals.!size( )
--
   0: addRental( Rental )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    7 trueControlDependence
   7:    1 ->    4 loopIndependentDefUseDependence rental$0
   8:    5 ->    2 loopIndependentDefUseDependence this.rentals.!add( java.lang.Object )
--
   0: days
   1:    0 ->    1 trueControlDependence
--
   0: rentals
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    4 ->    1 loopIndependentDefUseDependence java.util.ArrayList.!ArrayList( )
--
   0: Rental( int int )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    1 ->    3 loopIndependentDefUseDependence price$0
   7:    2 ->    4 loopIndependentDefUseDependence days$1
--
   0: Order( )
   1:    0 ->    2 trueControlDependence
--
   1: 268 -> 269 MEMBER
   2: 268 -> 272 MEMBER
   3: 268 -> 280 MEMBER
   4: 268 -> 286 MEMBER
   5: 281 -> 275 FACC
   6: 281 -> 281 FACC
   7: 281 -> 288 FACC
   8: 296 -> 245 MEMBER
   9: 296 -> 297 MEMBER
  10: 296 -> 304 MEMBER
  11: 296 -> 307 MEMBER
  12: 305 -> 249 FACC
  13: 305 -> 276 FACC
  14: 305 -> 305 FACC
  15: 308 -> 249 FACC
  16: 308 -> 276 FACC
  17: 308 -> 308 FACC
--

