----- ClDG (from here) -----
Class Name = Test119
   0 methodEntry [ m( ) ]
   1 assignment D = { this.p } U = {  }
   2 localDeclaration D = { a$0 } U = { A119.!A119( ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = {  } TO = A119#A119( )
   5 actualOut D = { A119.!A119( ) } U = {  }
   6 assignment D = {  } U = { a$0.!setX( int ) }
   7 receiver D = {  } U = { a$0 }
   8 methodCall D = {  } U = {  } TO = A119#setX( int )
   9 actualIn D = {  } U = {  }
  10 actualOut D = { a$0.!setX( int ) } U = {  }
  11 localDeclaration D = { b$1 } U = { a$0.!getX( ) }
  12 receiver D = {  } U = { a$0 }
  13 methodCall D = {  } U = { A119.!A119( ).x, a$0.x } TO = A119#getX( )
  14 actualOut D = { a$0.!getX( ) } U = { A119.!A119( ).x, a$0.x }
  15 assignment D = {  } U = { a$0.!setX( int ) }
  16 receiver D = {  } U = { a$0 }
  17 methodCall D = {  } U = {  } TO = A119#setX( int )
  18 actualIn D = {  } U = {  }
  19 actualOut D = { a$0.!setX( int ) } U = {  }
  20 localDeclaration D = { c$2 } U = { a$0.!getX( ) }
  21 receiver D = {  } U = { a$0 }
  22 methodCall D = {  } U = { A119.!A119( ).x, a$0.x } TO = A119#getX( )
  23 actualOut D = { a$0.!getX( ) } U = { A119.!A119( ).x, a$0.x }
  24 localDeclaration D = { d$3 } U = { A119.!A119( ).x, A119.!A119( ).y, a$0, a$0.x, a$0.y, this.p }
  25 localDeclaration D = { e$4 } U = { this.!getP( ) }
  26 receiver D = {  } U = {  }
  27 methodCall D = {  } U = { this.p } TO = Test119#getP( )
  28 actualOut D = { this.!getP( ) } U = { this.p }
  30 formalOut D = {  } U = { $_ }
* actualOut D = { a$0.x } U = {  }
* actualOut D = { a$0.x } U = {  }
--
   0 fieldEntry [ p ]
   1 fieldDeclaration D = { this.p } U = { this.p }
--
   0 constructorEntry [ Test119( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ getP( ) ]
   1 returnSt D = { $_ } U = { this.p }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ m2( ) ]
   1 localDeclaration D = { a$0 } U = { A119.!A119( ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = {  } TO = A119#A119( )
   4 actualOut D = { A119.!A119( ) } U = {  }
   5 assignment D = { a$0.x } U = { A119.!A119( ).x, A119.!A119( ).y, a$0, a$0.x, a$0.y }
   6 assignment D = { a$0.y } U = { A119.!A119( ).x, A119.!A119( ).y, a$0, a$0.x, a$0.y }
   8 formalOut D = {  } U = { $_ }
--
   0: m( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   17 trueControlDependence
  18:    0 ->   18 trueControlDependence
  19:    0 ->   19 trueControlDependence
  20:    0 ->   20 trueControlDependence
  21:    0 ->   21 trueControlDependence
  22:    0 ->   22 trueControlDependence
  23:    0 ->   23 trueControlDependence
  24:    0 ->   24 trueControlDependence
  25:    0 ->   25 trueControlDependence
  26:    0 ->   26 trueControlDependence
  27:    0 ->   27 trueControlDependence
  28:    0 ->   28 trueControlDependence
  29:    0 ->   30 trueControlDependence
  30:    0 -> * trueControlDependence
  31:    0 -> * trueControlDependence
  32:    1 ->   24 loopIndependentDefUseDependence this.p
  33:    1 ->   27 loopIndependentDefUseDependence this.p
  34:    1 ->   28 loopIndependentDefUseDependence this.p
  35:    2 ->    7 declaration
  36:    2 ->    7 loopIndependentDefUseDependence a$0
  37:    2 ->   12 declaration
  38:    2 ->   12 loopIndependentDefUseDependence a$0
  39:    2 ->   16 declaration
  40:    2 ->   16 loopIndependentDefUseDependence a$0
  41:    2 ->   21 declaration
  42:    2 ->   21 loopIndependentDefUseDependence a$0
  43:    2 ->   24 declaration
  44:    2 ->   24 loopIndependentDefUseDependence a$0
  45:    5 ->    2 loopIndependentDefUseDependence A119.!A119( )
  46:   10 ->    6 loopIndependentDefUseDependence a$0.!setX( int )
  47:   10 ->   19 outputDependence a$0.!setX( int )
  48:   14 ->   11 loopIndependentDefUseDependence a$0.!getX( )
  49:   14 ->   23 outputDependence a$0.!getX( )
  50:   19 ->   15 loopIndependentDefUseDependence a$0.!setX( int )
  51:   23 ->   20 loopIndependentDefUseDependence a$0.!getX( )
  52:   28 ->   25 loopIndependentDefUseDependence this.!getP( )
  53: * ->   13 loopIndependentDefUseDependence a$0.x
  54: * ->   14 loopIndependentDefUseDependence a$0.x
  55: * ->   22 loopIndependentDefUseDependence a$0.x
  56: * ->   23 loopIndependentDefUseDependence a$0.x
  57: * ->   24 loopIndependentDefUseDependence a$0.x
  58: * -> * outputDependence a$0.x
--
   0: p
   1:    0 ->    1 trueControlDependence
--
   0: Test119( )
   1:    0 ->    2 trueControlDependence
--
   0: getP( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    1 ->    3 loopIndependentDefUseDependence $_
--
   0: m2( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    8 trueControlDependence
   8:    1 ->    5 declaration
   9:    1 ->    5 loopIndependentDefUseDependence a$0
  10:    1 ->    6 declaration
  11:    1 ->    6 loopIndependentDefUseDependence a$0
  12:    4 ->    1 loopIndependentDefUseDependence A119.!A119( )
  13:    5 ->    6 loopIndependentDefUseDependence a$0.x
--
----- ClDG (to here) -----

