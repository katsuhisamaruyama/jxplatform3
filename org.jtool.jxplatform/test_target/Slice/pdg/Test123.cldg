Class Name = Test123
   0 constructorEntry [ SubException#SubException( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Test123#n( int ) ]
   1 throwsClause D = {  } U = { $SubException }
   2 formalIn D = { x$0 } U = {  }
   3 ifSt D = {  } U = { x$0 }
   4 throwSt D = {  } U = { SubSubException.!SubSubException( ) }
   5 receiver D = {  } U = {  }
   6 constructorCall D = {  } U = {  } TO = SubSubException#SubSubException( )
   7 actualOut D = { SubSubException.!SubSubException( ) } U = {  }
   9 returnSt D = { $_ } U = { x$0 }
  11 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Test123#m2( ) ]
   1 trySt D = {  } U = {  }
   2 localDeclaration D = { b$0 } U = { this.!n2( int ) }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = {  } TO = Test123#n2( int )
   5 actualIn D = {  } U = {  }
   6 actualOut D = { this.!n2( int ) } U = {  }
   8 catchClause D = { e$1 } U = {  }
   9 localDeclaration D = { f$2 } U = { e$1 }
  11 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ SubRuntimeException#SubRuntimeException( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Test123#Test123( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Test123#n2( int ) ]
   1 throwsClause D = {  } U = { $SubRuntimeException }
   2 formalIn D = { x$0 } U = {  }
   3 returnSt D = { $_ } U = { this.!n3( int ) }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = {  } TO = Test123#n3( int )
   6 actualIn D = {  } U = { x$0 }
   7 actualOut D = { this.!n3( int ) } U = {  }
   9 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Test123#n3( int ) ]
   1 throwsClause D = {  } U = { $SubRuntimeException }
   2 formalIn D = { x$0 } U = {  }
   3 ifSt D = {  } U = { x$0 }
   4 throwSt D = {  } U = { SubRuntimeException.!SubRuntimeException( ) }
   5 receiver D = {  } U = {  }
   6 constructorCall D = {  } U = {  } TO = SubRuntimeException#SubRuntimeException( )
   7 actualOut D = { SubRuntimeException.!SubRuntimeException( ) } U = {  }
   9 returnSt D = { $_ } U = { x$0 }
  11 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ SubSubException#SubSubException( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Test123#m( ) ]
   1 localDeclaration D = { a$0 } U = {  }
   2 localDeclaration D = { b$1 } U = {  }
   3 trySt D = {  } U = {  }
   4 localDeclaration D = { p$4 } U = { a$0 }
   5 assignment D = { b$1 } U = { this.!n( int ) }
   6 receiver D = {  } U = {  }
   7 methodCall D = {  } U = {  } TO = Test123#n( int )
   8 actualIn D = {  } U = { a$0 }
   9 actualOut D = { this.!n( int ) } U = {  }
  10 localDeclaration D = { q$5 } U = { b$1 }
  12 catchClause D = { e$6 } U = {  }
  13 localDeclaration D = { f$7 } U = { e$6 }
  14 finallyClause D = {  } U = {  }
  15 localDeclaration D = { r$3 } U = { b$1 }
  16 localDeclaration D = { c$8 } U = { b$1 }
  18 formalOut D = {  } U = { $_ }
--
   0: SubException( )
   1:    0 ->    2 trueControlDependence
--
   0: n( int )
   1:    0 ->    2 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    2 ->    3 loopIndependentDefUseDependence x$0
   4:    2 ->    9 loopIndependentDefUseDependence x$0
   5:    3 ->    4 trueControlDependence
   6:    3 ->    5 trueControlDependence
   7:    3 ->    6 trueControlDependence
   8:    3 ->    7 trueControlDependence
   9:    3 ->    9 falseControlDependence
  10:    3 ->   11 falseControlDependence
  11:    4 ->    1 trueControlDependence
  12:    4 ->    9 fallThroughControlDependence
  13:    4 ->   11 fallThroughControlDependence
  14:    7 ->    4 loopIndependentDefUseDependence SubSubException.!SubSubException( )
  15:    9 ->   11 loopIndependentDefUseDependence $_
--
   0: m2( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    0 ->    5 trueControlDependence
   5:    0 ->   11 trueControlDependence
   6:    1 ->    8 trueControlDependence
   7:    4 ->    2 trueControlDependence
   8:    4 ->    6 trueControlDependence
   9:    4 ->    8 exceptionCatch
  10:    6 ->    2 loopIndependentDefUseDependence this.!n2( int )
  11:    8 ->    9 loopIndependentDefUseDependence e$1
  12:    8 ->    9 trueControlDependence
--
   0: SubRuntimeException( )
   1:    0 ->    2 trueControlDependence
--
   0: Test123( )
   1:    0 ->    2 trueControlDependence
--
   0: n2( int )
   1:    0 ->    2 trueControlDependence
   2:    0 ->    4 trueControlDependence
   3:    0 ->    5 trueControlDependence
   4:    0 ->    6 trueControlDependence
   5:    2 ->    6 loopIndependentDefUseDependence x$0
   6:    3 ->    9 loopIndependentDefUseDependence $_
   7:    5 ->    1 exceptionCatch
   8:    5 ->    3 trueControlDependence
   9:    5 ->    7 trueControlDependence
  10:    5 ->    9 trueControlDependence
  11:    7 ->    3 loopIndependentDefUseDependence this.!n3( int )
--
   0: n3( int )
   1:    0 ->    2 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    2 ->    3 loopIndependentDefUseDependence x$0
   4:    2 ->    9 loopIndependentDefUseDependence x$0
   5:    3 ->    4 trueControlDependence
   6:    3 ->    5 trueControlDependence
   7:    3 ->    6 trueControlDependence
   8:    3 ->    7 trueControlDependence
   9:    3 ->    9 falseControlDependence
  10:    3 ->   11 falseControlDependence
  11:    4 ->    1 trueControlDependence
  12:    4 ->    9 fallThroughControlDependence
  13:    4 ->   11 fallThroughControlDependence
  14:    7 ->    4 loopIndependentDefUseDependence SubRuntimeException.!SubRuntimeException( )
  15:    9 ->   11 loopIndependentDefUseDependence $_
--
   0: SubSubException( )
   1:    0 ->    2 trueControlDependence
--
   0: m( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    0 ->    7 trueControlDependence
   7:    0 ->    8 trueControlDependence
   8:    0 ->   16 trueControlDependence
   9:    0 ->   18 trueControlDependence
  10:    1 ->    4 declaration
  11:    1 ->    4 loopIndependentDefUseDependence a$0
  12:    1 ->    8 declaration
  13:    1 ->    8 loopIndependentDefUseDependence a$0
  14:    2 ->    5 declaration
  15:    2 ->    5 outputDependence b$1
  16:    2 ->   10 declaration
  17:    2 ->   15 declaration
  18:    2 ->   15 loopIndependentDefUseDependence b$1
  19:    2 ->   16 declaration
  20:    2 ->   16 loopIndependentDefUseDependence b$1
  21:    3 ->   12 trueControlDependence
  22:    3 ->   14 trueControlDependence
  23:    5 ->   10 loopIndependentDefUseDependence b$1
  24:    5 ->   15 loopIndependentDefUseDependence b$1
  25:    5 ->   16 loopIndependentDefUseDependence b$1
  26:    7 ->    5 trueControlDependence
  27:    7 ->    9 trueControlDependence
  28:    7 ->   10 trueControlDependence
  29:    7 ->   12 exceptionCatch
  30:    9 ->    5 loopIndependentDefUseDependence this.!n( int )
  31:   12 ->   13 loopIndependentDefUseDependence e$6
  32:   12 ->   13 trueControlDependence
  33:   14 ->   15 trueControlDependence
--
   1: 1698 -> 1699 MEMBER
   2: 1698 -> 1702 MEMBER
   3: 1698 -> 1721 MEMBER
   4: 1698 -> 1736 MEMBER
   5: 1698 -> 1748 MEMBER
   6: 1698 -> 1758 MEMBER
   7: 1709 -> 1721 CALL
   8: 1710 -> 1723 PIN
   9: 1722 -> 1714 EXCP
  10: 1727 -> 442 CALL
  11: 1732 -> 1711 POUT
  12: 1740 -> 1748 CALL
  13: 1741 -> 1750 PIN
  14: 1749 -> 1744 EXCP
  15: 1753 -> 1758 CALL
  16: 1754 -> 1760 PIN
  17: 1757 -> 1742 POUT
  18: 1759 -> 1749 EXCP
  19: 1764 -> 36 CALL
  20: 1769 -> 1755 POUT
  21: 35 -> 36 MEMBER
  22: 38 -> 1765 POUT
  23: 441 -> 442 MEMBER
  24: 444 -> 1728 POUT
  25: 445 -> 446 MEMBER
--

