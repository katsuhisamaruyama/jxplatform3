----- ClDG (from here) -----
Class Name = Test123
   0 methodEntry [ n( int ) ]
   1 throwsClause D = {  } U = { $SubException }
   2 formalIn D = { x$0 } U = {  }
   3 ifSt D = {  } U = { x$0 }
   4 throwSt D = {  } U = { SubSubException.!SubSubException }
   5 receiver D = {  } U = {  }
   6 constructorCall D = {  } U = {  } TO = SubSubException#SubSubException( )
   7 actualOut D = { SubSubException.!SubSubException } U = {  }
   9 returnSt D = { $_ } U = { x$0 }
  11 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ m2( ) ]
   1 trySt D = {  } U = {  }
   2 localDeclaration D = { b$0 } U = { this.!n2 }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = {  } TO = Test123#n2( int )
   5 actualIn D = {  } U = {  }
   6 actualOut D = { this.!n2 } U = {  }
   8 catchClause D = { e$1 } U = {  }
   9 localDeclaration D = { f$2 } U = { e$1 }
  11 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Test123( ) ]
--
   0 methodEntry [ n2( int ) ]
   1 throwsClause D = {  } U = { $SubRuntimeException }
   2 formalIn D = { x$0 } U = {  }
   3 returnSt D = { $_ } U = { this.!n3 }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = {  } TO = Test123#n3( int )
   6 actualIn D = {  } U = { x$0 }
   7 actualOut D = { this.!n3 } U = {  }
   9 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ n3( int ) ]
   1 throwsClause D = {  } U = { $SubRuntimeException }
   2 formalIn D = { x$0 } U = {  }
   3 ifSt D = {  } U = { x$0 }
   4 throwSt D = {  } U = { SubRuntimeException.!SubRuntimeException }
   5 receiver D = {  } U = {  }
   6 constructorCall D = {  } U = {  } TO = SubRuntimeException#SubRuntimeException( )
   7 actualOut D = { SubRuntimeException.!SubRuntimeException } U = {  }
   9 returnSt D = { $_ } U = { x$0 }
  11 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ m( ) ]
   1 localDeclaration D = { a$0 } U = {  }
   2 localDeclaration D = { b$1 } U = {  }
   3 trySt D = {  } U = {  }
   4 localDeclaration D = { p$4 } U = { a$0 }
   5 assignment D = { b$1 } U = { this.!n }
   6 receiver D = {  } U = {  }
   7 methodCall D = {  } U = {  } TO = Test123#n( int )
   8 actualIn D = {  } U = { a$0 }
   9 actualOut D = { this.!n } U = {  }
  10 localDeclaration D = { q$5 } U = { b$1 }
  12 catchClause D = { e$6 } U = {  }
  13 localDeclaration D = { f$7 } U = { e$6 }
  14 finallyClause D = {  } U = {  }
  15 localDeclaration D = { r$3 } U = { b$1 }
  16 localDeclaration D = { c$8 } U = { b$1 }
  18 formalOut D = {  } U = { $_ }
--
   0: n( int )
   1: 0 -> 2 trueControlDependence
   2: 0 -> 3 trueControlDependence
   3: 0 -> 5 trueControlDependence
   4: 0 -> 11 trueControlDependence
   5: 2 -> 3 loopIndependentDefUseDependence
   6: 2 -> 9 loopIndependentDefUseDependence
   7: 3 -> 4 trueControlDependence
   8: 3 -> 6 trueControlDependence
   9: 3 -> 9 falseControlDependence
  10: 4 -> 1 trueControlDependence
  11: 4 -> 9 fallThroughControlDependence
  12: 5 -> 6 trueControlDependence
  13: 6 -> 7 trueControlDependence
  14: 7 -> 4 loopIndependentDefUseDependence
  15: 9 -> 11 loopIndependentDefUseDependence
--
   0: m2( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 3 trueControlDependence
   3: 0 -> 8 trueControlDependence
   4: 0 -> 9 trueControlDependence
   5: 0 -> 11 trueControlDependence
   6: 1 -> 4 trueControlDependence
   7: 2 -> 2 declarationDependence
   8: 3 -> 4 trueControlDependence
   9: 4 -> 2 trueControlDependence
  10: 4 -> 5 trueControlDependence
  11: 4 -> 6 trueControlDependence
  12: 4 -> 8 exceptionCatchDependence
  13: 4 -> 9 exceptionCatchDependence
  14: 4 -> 12 call
  15: 5 -> 14 parameterIn
  16: 6 -> 2 loopIndependentDefUseDependence
  17: 8 -> 9 loopIndependentDefUseDependence
  18: 9 -> 9 declarationDependence
  19: 13 -> 8 exceptionCatchDependence
  20: 21 -> 6 parameterOut
--
   0: Test123( )
--
   0: n2( int )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 4 trueControlDependence
   4: 0 -> 9 trueControlDependence
   5: 2 -> 6 loopIndependentDefUseDependence
   6: 3 -> 9 loopIndependentDefUseDependence
   7: 4 -> 5 trueControlDependence
   8: 5 -> 1 exceptionCatchDependence
   9: 5 -> 3 trueControlDependence
  10: 5 -> 6 trueControlDependence
  11: 5 -> 7 trueControlDependence
  12: 5 -> 10 call
  13: 6 -> 12 parameterIn
  14: 7 -> 3 loopIndependentDefUseDependence
  15: 11 -> 1 exceptionCatchDependence
  16: 21 -> 7 parameterOut
--
   0: n3( int )
   1: 0 -> 2 trueControlDependence
   2: 0 -> 3 trueControlDependence
   3: 0 -> 5 trueControlDependence
   4: 0 -> 11 trueControlDependence
   5: 2 -> 3 loopIndependentDefUseDependence
   6: 2 -> 9 loopIndependentDefUseDependence
   7: 3 -> 4 trueControlDependence
   8: 3 -> 6 trueControlDependence
   9: 3 -> 9 falseControlDependence
  10: 4 -> 1 trueControlDependence
  11: 4 -> 9 fallThroughControlDependence
  12: 5 -> 6 trueControlDependence
  13: 6 -> 7 trueControlDependence
  14: 7 -> 4 loopIndependentDefUseDependence
  15: 9 -> 11 loopIndependentDefUseDependence
--
   0: m( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 0 -> 6 trueControlDependence
   5: 0 -> 12 trueControlDependence
   6: 0 -> 13 trueControlDependence
   7: 0 -> 14 trueControlDependence
   8: 0 -> 15 trueControlDependence
   9: 0 -> 16 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 1 -> 1 declarationDependence
  12: 1 -> 4 loopIndependentDefUseDependence
  13: 1 -> 4 declarationDependence
  14: 1 -> 8 loopIndependentDefUseDependence
  15: 1 -> 8 declarationDependence
  16: 2 -> 2 declarationDependence
  17: 2 -> 5 outputDependence
  18: 2 -> 5 declarationDependence
  19: 2 -> 10 declarationDependence
  20: 2 -> 15 loopIndependentDefUseDependence
  21: 2 -> 15 declarationDependence
  22: 2 -> 16 loopIndependentDefUseDependence
  23: 2 -> 16 declarationDependence
  24: 3 -> 4 trueControlDependence
  25: 3 -> 7 trueControlDependence
  26: 4 -> 4 declarationDependence
  27: 5 -> 10 loopIndependentDefUseDependence
  28: 5 -> 15 loopIndependentDefUseDependence
  29: 5 -> 16 loopIndependentDefUseDependence
  30: 6 -> 7 trueControlDependence
  31: 7 -> 5 trueControlDependence
  32: 7 -> 8 trueControlDependence
  33: 7 -> 9 trueControlDependence
  34: 7 -> 10 trueControlDependence
  35: 7 -> 12 exceptionCatchDependence
  36: 7 -> 13 exceptionCatchDependence
  37: 7 -> 19 call
  38: 8 -> 21 parameterIn
  39: 9 -> 5 loopIndependentDefUseDependence
  40: 10 -> 10 declarationDependence
  41: 12 -> 13 loopIndependentDefUseDependence
  42: 13 -> 13 declarationDependence
  43: 15 -> 15 declarationDependence
  44: 16 -> 16 declarationDependence
  45: 20 -> 12 exceptionCatchDependence
  46: 30 -> 9 parameterOut
--
----- ClDG (to here) -----

