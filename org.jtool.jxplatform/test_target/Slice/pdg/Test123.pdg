----- ClDG (from here) -----
Class Name = Test123
   0 methodEntry [ n( int ) ]
   1 throwsClause D = {  } U = { $SubException }
   2 formalIn D = { x$0 } U = {  }
   3 ifSt D = {  } U = { x$0 }
   4 throwSt D = {  } U = { SubSubException.!SubSubException }
   5 receiver D = {  } U = {  }
   6 constructorCall D = {  } U = {  } TO = SubSubException#SubSubException( )
   7 actualOut D = { SubSubException.!SubSubException } U = {  }
   9 returnSt D = { $_ } U = { x$0 }
  11 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ m2( ) ]
   1 trySt D = {  } U = {  }
   2 localDeclaration D = { b$0 } U = { this.!n2 }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = {  } TO = Test123#n2( int )
   5 actualIn D = {  } U = {  }
   6 actualOut D = { this.!n2 } U = {  }
   8 catchClause D = { e$1 } U = {  }
   9 localDeclaration D = { f$2 } U = { e$1 }
  11 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Test123( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ n2( int ) ]
   1 throwsClause D = {  } U = { $SubRuntimeException }
   2 formalIn D = { x$0 } U = {  }
   3 returnSt D = { $_ } U = { this.!n3 }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = {  } TO = Test123#n3( int )
   6 actualIn D = {  } U = { x$0 }
   7 actualOut D = { this.!n3 } U = {  }
   9 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ n3( int ) ]
   1 throwsClause D = {  } U = { $SubRuntimeException }
   2 formalIn D = { x$0 } U = {  }
   3 ifSt D = {  } U = { x$0 }
   4 throwSt D = {  } U = { SubRuntimeException.!SubRuntimeException }
   5 receiver D = {  } U = {  }
   6 constructorCall D = {  } U = {  } TO = SubRuntimeException#SubRuntimeException( )
   7 actualOut D = { SubRuntimeException.!SubRuntimeException } U = {  }
   9 returnSt D = { $_ } U = { x$0 }
  11 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ m( ) ]
   1 localDeclaration D = { a$0 } U = {  }
   2 localDeclaration D = { b$1 } U = {  }
   3 trySt D = {  } U = {  }
   4 localDeclaration D = { p$4 } U = { a$0 }
   5 assignment D = { b$1 } U = { this.!n }
   6 receiver D = {  } U = {  }
   7 methodCall D = {  } U = {  } TO = Test123#n( int )
   8 actualIn D = {  } U = { a$0 }
   9 actualOut D = { this.!n } U = {  }
  10 localDeclaration D = { q$5 } U = { b$1 }
  12 catchClause D = { e$6 } U = {  }
  13 localDeclaration D = { f$7 } U = { e$6 }
  14 finallyClause D = {  } U = {  }
  15 localDeclaration D = { r$3 } U = { b$1 }
  16 localDeclaration D = { c$8 } U = { b$1 }
  18 formalOut D = {  } U = { $_ }
--
   0: n( int )
   1: 0 -> 11 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 2 -> 3 loopIndependentDefUseDependence x$0
   5: 2 -> 9 loopIndependentDefUseDependence x$0
   6: 3 -> 4 trueControlDependence
   7: 3 -> 5 trueControlDependence
   8: 3 -> 6 trueControlDependence
   9: 3 -> 7 trueControlDependence
  10: 3 -> 9 falseControlDependence
  11: 4 -> 1 trueControlDependence
  12: 4 -> 9 fallThroughControlDependence
  13: 7 -> 4 loopIndependentDefUseDependence SubSubException.!SubSubException
  14: 9 -> 11 loopIndependentDefUseDependence $_
--
   0: m2( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 11 trueControlDependence
   3: 0 -> 8 trueControlDependence
   4: 0 -> 9 trueControlDependence
   5: 1 -> 3 trueControlDependence
   6: 1 -> 4 trueControlDependence
   7: 1 -> 5 trueControlDependence
   8: 1 -> 6 trueControlDependence
   9: 4 -> 2 trueControlDependence
  10: 4 -> 8 exceptionCatch
  11: 4 -> 9 exceptionCatch
  12: 5 -> 6 summary
  13: 6 -> 2 loopIndependentDefUseDependence this.!n2
  14: 8 -> 9 loopIndependentDefUseDependence e$1
--
   0: Test123( )
   1: 0 -> 2 trueControlDependence
--
   0: n2( int )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 4 trueControlDependence
   4: 0 -> 5 trueControlDependence
   5: 0 -> 6 trueControlDependence
   6: 0 -> 7 trueControlDependence
   7: 0 -> 9 trueControlDependence
   8: 2 -> 6 loopIndependentDefUseDependence x$0
   9: 3 -> 9 loopIndependentDefUseDependence $_
  10: 5 -> 1 exceptionCatch
  11: 5 -> 3 trueControlDependence
  12: 6 -> 7 summary
  13: 7 -> 3 loopIndependentDefUseDependence this.!n3
--
   0: n3( int )
   1: 0 -> 11 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 2 -> 3 loopIndependentDefUseDependence x$0
   5: 2 -> 9 loopIndependentDefUseDependence x$0
   6: 3 -> 4 trueControlDependence
   7: 3 -> 5 trueControlDependence
   8: 3 -> 6 trueControlDependence
   9: 3 -> 7 trueControlDependence
  10: 3 -> 9 falseControlDependence
  11: 4 -> 1 trueControlDependence
  12: 4 -> 9 fallThroughControlDependence
  13: 7 -> 4 loopIndependentDefUseDependence SubRuntimeException.!SubRuntimeException
  14: 9 -> 11 loopIndependentDefUseDependence $_
--
   0: m( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 12 trueControlDependence
   3: 0 -> 13 trueControlDependence
   4: 0 -> 14 trueControlDependence
   5: 0 -> 15 trueControlDependence
   6: 0 -> 16 trueControlDependence
   7: 0 -> 18 trueControlDependence
   8: 0 -> 2 trueControlDependence
   9: 0 -> 3 trueControlDependence
  10: 1 -> 4 declaration
  11: 1 -> 4 loopIndependentDefUseDependence a$0
  12: 1 -> 8 declaration
  13: 1 -> 8 loopIndependentDefUseDependence a$0
  14: 12 -> 13 loopIndependentDefUseDependence e$6
  15: 2 -> 10 declaration
  16: 2 -> 15 declaration
  17: 2 -> 15 loopIndependentDefUseDependence b$1
  18: 2 -> 16 declaration
  19: 2 -> 16 loopIndependentDefUseDependence b$1
  20: 2 -> 5 declaration
  21: 2 -> 5 outputDependence b$1
  22: 3 -> 4 trueControlDependence
  23: 3 -> 6 trueControlDependence
  24: 3 -> 7 trueControlDependence
  25: 3 -> 8 trueControlDependence
  26: 3 -> 9 trueControlDependence
  27: 5 -> 10 loopIndependentDefUseDependence b$1
  28: 5 -> 15 loopIndependentDefUseDependence b$1
  29: 5 -> 16 loopIndependentDefUseDependence b$1
  30: 7 -> 10 trueControlDependence
  31: 7 -> 12 exceptionCatch
  32: 7 -> 13 exceptionCatch
  33: 7 -> 5 trueControlDependence
  34: 8 -> 9 summary
  35: 9 -> 5 loopIndependentDefUseDependence this.!n
--
----- ClDG (to here) -----

