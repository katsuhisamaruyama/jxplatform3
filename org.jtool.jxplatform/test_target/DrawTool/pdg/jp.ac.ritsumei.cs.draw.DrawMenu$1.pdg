----- ClDG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.DrawMenu$1
   0 methodEntry [ actionPerformed( java.awt.event.ActionEvent ) ]
   1 formalIn D = { evt$4 } U = {  }
   2 localDeclaration D = { wi$5 } U = { evt$4.!getSource( ) }
   3 receiver D = {  } U = { evt$4 }
   4 methodCall D = {  } U = { evt$4.!java.util.EventObject.source } TO = java.util.EventObject#getSource( )
   5 actualOut D = { evt$4.!getSource( ) } U = { evt$4.!java.util.EventObject.source }
   6 localDeclaration D = { canvas$6 } U = { this.tabbedCanvas.!getCanvas( java.lang.String ) }
   7 receiver D = {  } U = { this.tabbedCanvas }
   8 methodCall D = {  } U = { canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvases } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCanvas( java.lang.String )
   9 actualIn D = {  } U = { wi$5.!getActionCommand( ) }
  10 receiver D = {  } U = { wi$5 }
  11 methodCall D = {  } U = { wi$5.!javax.swing.AbstractButton.model, wi$5.!javax.swing.AbstractButton.text } TO = javax.swing.AbstractButton#getActionCommand( )
  12 actualOut D = { wi$5.!getActionCommand( ) } U = { wi$5.!javax.swing.AbstractButton.model, wi$5.!javax.swing.AbstractButton.text }
  13 actualOut D = { this.tabbedCanvas.!getCanvas( java.lang.String ) } U = { canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvases }
  14 assignment D = {  } U = { this.tabbedCanvas.!selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
  15 receiver D = {  } U = { this.tabbedCanvas }
  16 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.!javax.swing.JTabbedPane.model } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
  17 actualIn D = {  } U = { canvas$6, canvas$6.changed, canvas$6.curX, canvas$6.curY, canvas$6.currentFigure, canvas$6.figureManager, canvas$6.grabbedFigure, canvas$6.isGrabMode, canvas$6.menu, canvas$6.selector, canvas$6.support, canvas$6.undoManager, this.tabbedCanvas.!getCanvas( java.lang.String ).changed, this.tabbedCanvas.!getCanvas( java.lang.String ).curX, this.tabbedCanvas.!getCanvas( java.lang.String ).curY, this.tabbedCanvas.!getCanvas( java.lang.String ).currentFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager, this.tabbedCanvas.!getCanvas( java.lang.String ).grabbedFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).isGrabMode, this.tabbedCanvas.!getCanvas( java.lang.String ).menu, this.tabbedCanvas.!getCanvas( java.lang.String ).selector, this.tabbedCanvas.!getCanvas( java.lang.String ).support, this.tabbedCanvas.!getCanvas( java.lang.String ).undoManager }
  18 actualOut D = { this.tabbedCanvas.!selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.!javax.swing.JTabbedPane.model }
  20 formalOut D = {  } U = { $_ }
* actualOut D = { this.tabbedCanvas.selectedTab } U = {  }
--
   0: actionPerformed( java.awt.event.ActionEvent )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   17 trueControlDependence
  18:    0 ->   18 trueControlDependence
  19:    0 ->   20 trueControlDependence
  20:    0 -> * trueControlDependence
  21:    1 ->    3 loopIndependentDefUseDependence evt$4
  22:    2 ->   10 declaration
  23:    2 ->   10 loopIndependentDefUseDependence wi$5
  24:    5 ->    2 loopIndependentDefUseDependence evt$4.!getSource( )
  25:    6 ->   17 declaration
  26:    6 ->   17 loopIndependentDefUseDependence canvas$6
  27:   12 ->    9 loopIndependentDefUseDependence wi$5.!getActionCommand( )
  28:   13 ->    6 loopIndependentDefUseDependence this.tabbedCanvas.!getCanvas( java.lang.String )
  29:   18 ->   14 loopIndependentDefUseDependence this.tabbedCanvas.!selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
--
----- ClDG (to here) -----

