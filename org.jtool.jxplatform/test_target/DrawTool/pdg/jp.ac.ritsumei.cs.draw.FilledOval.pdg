----- ClDG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.FilledOval
   0 fieldEntry [ name ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.FilledOval.name } U = { $java.lang.String, jp.ac.ritsumei.cs.draw.FilledOval.name }
--
   0 methodEntry [ createClone( ) ]
   1 localDeclaration D = { figure$0 } U = { figure$0.!FilledOval }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.FilledOval#FilledOval( java.awt.Color float )
   4 actualIn D = {  } U = { this.color }
   5 actualIn D = {  } U = { this.outlineWidth }
   6 actualOut D = { figure$0.!FilledOval } U = {  }
   7 assignment D = {  } U = { figure$0.!setStart }
   8 receiver D = {  } U = { figure$0 }
   9 methodCall D = { figure$0.startX, figure$0.startY } U = { figure$0.startX, figure$0.startY } TO = jp.ac.ritsumei.cs.draw.Figure#setStart( int int )
  10 actualIn D = {  } U = { this.startX }
  11 actualIn D = {  } U = { this.startY }
  12 actualOut D = { figure$0.!setStart, figure$0.startX, figure$0.startY } U = { figure$0.startX, figure$0.startY }
  13 assignment D = {  } U = { figure$0.!setEnd }
  14 receiver D = {  } U = { figure$0 }
  15 methodCall D = { figure$0.endX, figure$0.endY } U = { figure$0.endX, figure$0.endY } TO = jp.ac.ritsumei.cs.draw.Figure#setEnd( int int )
  16 actualIn D = {  } U = { this.endX }
  17 actualIn D = {  } U = { this.endY }
  18 actualOut D = { figure$0.!setEnd, figure$0.endX, figure$0.endY } U = { figure$0.endX, figure$0.endY }
  19 returnSt D = { $_ } U = { figure$0 }
  21 formalOut D = {  } U = { $_, figure$0.endX, figure$0.endY, figure$0.startX, figure$0.startY }
--
   0 methodEntry [ isGrabbed( int int ) ]
   1 formalIn D = { x$0 } U = {  }
   2 formalIn D = { y$1 } U = {  }
   3 returnSt D = { $_ } U = { this.!isInOval }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Oval#isInOval( int int int int int int )
   6 actualIn D = {  } U = { x$0 }
   7 actualIn D = {  } U = { y$1 }
   8 actualIn D = {  } U = { this.!getLeft }
   9 receiver D = {  } U = {  }
  10 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getLeft( )
  11 actualOut D = { this.!getLeft } U = { this.endX, this.startX }
  12 actualIn D = {  } U = { this.!getTop }
  13 receiver D = {  } U = {  }
  14 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getTop( )
  15 actualOut D = { this.!getTop } U = { this.endY, this.startY }
  16 actualIn D = {  } U = { this.!getWidth }
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getWidth( )
  19 actualOut D = { this.!getWidth } U = { this.endX, this.startX }
  20 actualIn D = {  } U = { this.!getHeight }
  21 receiver D = {  } U = {  }
  22 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getHeight( )
  23 actualOut D = { this.!getHeight } U = { this.endY, this.startY }
  24 actualOut D = { this.!isInOval } U = {  }
  26 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ getName( ) ]
   1 returnSt D = { $_ } U = { jp.ac.ritsumei.cs.draw.FilledOval.name }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ draw( java.awt.Graphics ) ]
   1 formalIn D = { g$0 } U = {  }
   2 localDeclaration D = { g2$1 } U = { g$0 }
   3 assignment D = {  } U = { g2$1.!setColor }
   4 receiver D = {  } U = { g2$1 }
   5 methodCall D = {  } U = { this.color } TO = java.awt.Graphics#setColor( java.awt.Color )
   6 actualOut D = { g2$1.!setColor } U = {  }
   7 assignment D = {  } U = { g2$1.!setStroke }
   8 receiver D = {  } U = { g2$1 }
   9 methodCall D = {  } U = { BasicStroke.!BasicStroke } TO = java.awt.Graphics2D#setStroke( java.awt.Stroke )
  10 receiver D = {  } U = {  }
  11 constructorCall D = { BasicStroke.cap, BasicStroke.dash, BasicStroke.dash_phase, BasicStroke.join, BasicStroke.miterlimit, BasicStroke.width } U = { this.outlineWidth } TO = java.awt.BasicStroke#BasicStroke( float )
  12 actualOut D = { BasicStroke.!BasicStroke, BasicStroke.cap, BasicStroke.dash, BasicStroke.dash_phase, BasicStroke.join, BasicStroke.miterlimit, BasicStroke.width } U = {  }
  13 actualOut D = { g2$1.!setStroke } U = {  }
  14 assignment D = {  } U = { g$0.!fillOval }
  15 receiver D = {  } U = { g$0 }
  16 methodCall D = {  } U = { this.!getHeight, this.!getLeft, this.!getTop, this.!getWidth } TO = java.awt.Graphics#fillOval( int int int int )
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getLeft( )
  19 actualOut D = { this.!getLeft } U = { this.endX, this.startX }
  20 receiver D = {  } U = {  }
  21 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getTop( )
  22 actualOut D = { this.!getTop } U = { this.endY, this.startY }
  23 receiver D = {  } U = {  }
  24 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getWidth( )
  25 actualOut D = { this.!getWidth } U = { this.endX, this.startX }
  26 receiver D = {  } U = {  }
  27 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getHeight( )
  28 actualOut D = { this.!getHeight } U = { this.endY, this.startY }
  29 actualOut D = { g$0.!fillOval } U = {  }
  31 formalOut D = {  } U = { $_, BasicStroke.cap, BasicStroke.dash, BasicStroke.dash_phase, BasicStroke.join, BasicStroke.miterlimit, BasicStroke.width }
--
   0 constructorEntry [ FilledOval( int ) ]
   1 formalIn D = { w$0 } U = {  }
   2 assignment D = {  } U = {  }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Oval#Oval( int )
   5 actualIn D = {  } U = { w$0 }
   6 actualOut D = {  } U = {  }
   8 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ create( java.awt.Color float ) ]
   1 formalIn D = { c$0 } U = {  }
   2 formalIn D = { w$1 } U = {  }
   3 returnSt D = { $_ } U = { FilledOval.!FilledOval }
   4 receiver D = {  } U = {  }
   5 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.FilledOval#FilledOval( java.awt.Color float )
   6 actualIn D = {  } U = { c$0 }
   7 actualIn D = {  } U = { w$1 }
   8 actualOut D = { FilledOval.!FilledOval } U = {  }
  10 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ FilledOval( ) ]
   1 assignment D = {  } U = {  }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Oval#Oval( )
   4 actualOut D = {  } U = {  }
   6 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ FilledOval( java.awt.Color float ) ]
   1 formalIn D = { c$0 } U = {  }
   2 formalIn D = { w$1 } U = {  }
   3 assignment D = {  } U = {  }
   4 receiver D = {  } U = {  }
   5 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Oval#Oval( java.awt.Color float )
   6 actualIn D = {  } U = { c$0 }
   7 actualIn D = {  } U = { w$1 }
   8 actualOut D = {  } U = {  }
  10 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ FilledOval( java.awt.Color ) ]
   1 formalIn D = { c$0 } U = {  }
   2 assignment D = {  } U = {  }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Oval#Oval( java.awt.Color )
   5 actualIn D = {  } U = { c$0 }
   6 actualOut D = {  } U = {  }
   8 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ paintIcon( java.awt.Graphics int int int int ) ]
   1 formalIn D = { g$0 } U = {  }
   2 formalIn D = { x$1 } U = {  }
   3 formalIn D = { y$2 } U = {  }
   4 formalIn D = { w$3 } U = {  }
   5 formalIn D = { h$4 } U = {  }
   6 assignment D = {  } U = { g$0.!fillOval }
   7 receiver D = {  } U = { g$0 }
   8 methodCall D = {  } U = { h$4, w$3, x$1, y$2 } TO = java.awt.Graphics#fillOval( int int int int )
   9 actualOut D = { g$0.!fillOval } U = {  }
  11 formalOut D = {  } U = { $_ }
--
   0: name
   1: 0 -> 1 trueControlDependence
--
   0: createClone( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 21 trueControlDependence
  14: 0 -> 3 trueControlDependence
  15: 0 -> 4 trueControlDependence
  16: 0 -> 5 trueControlDependence
  17: 0 -> 6 trueControlDependence
  18: 0 -> 7 trueControlDependence
  19: 0 -> 8 trueControlDependence
  20: 0 -> 9 trueControlDependence
  21: 1 -> 14 declaration
  22: 1 -> 14 loopIndependentDefUseDependence figure$0
  23: 1 -> 19 declaration
  24: 1 -> 19 loopIndependentDefUseDependence figure$0
  25: 1 -> 8 declaration
  26: 1 -> 8 loopIndependentDefUseDependence figure$0
  27: 10 -> 12 summary
  28: 11 -> 12 summary
  29: 12 -> 21 loopIndependentDefUseDependence figure$0.startX
  30: 12 -> 21 loopIndependentDefUseDependence figure$0.startY
  31: 12 -> 7 loopIndependentDefUseDependence figure$0.!setStart
  32: 15 -> 18 loopIndependentDefUseDependence figure$0.endX
  33: 15 -> 18 loopIndependentDefUseDependence figure$0.endY
  34: 16 -> 18 summary
  35: 17 -> 18 summary
  36: 18 -> 13 loopIndependentDefUseDependence figure$0.!setEnd
  37: 18 -> 21 loopIndependentDefUseDependence figure$0.endX
  38: 18 -> 21 loopIndependentDefUseDependence figure$0.endY
  39: 19 -> 21 loopIndependentDefUseDependence $_
  40: 6 -> 1 loopIndependentDefUseDependence figure$0.!FilledOval
  41: 9 -> 12 loopIndependentDefUseDependence figure$0.startX
  42: 9 -> 12 loopIndependentDefUseDependence figure$0.startY
--
   0: isGrabbed( int int )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 23 trueControlDependence
  17: 0 -> 24 trueControlDependence
  18: 0 -> 26 trueControlDependence
  19: 0 -> 3 trueControlDependence
  20: 0 -> 4 trueControlDependence
  21: 0 -> 5 trueControlDependence
  22: 0 -> 6 trueControlDependence
  23: 0 -> 7 trueControlDependence
  24: 0 -> 8 trueControlDependence
  25: 0 -> 9 trueControlDependence
  26: 1 -> 6 loopIndependentDefUseDependence x$0
  27: 11 -> 8 loopIndependentDefUseDependence this.!getLeft
  28: 12 -> 24 summary
  29: 15 -> 12 loopIndependentDefUseDependence this.!getTop
  30: 16 -> 24 summary
  31: 19 -> 16 loopIndependentDefUseDependence this.!getWidth
  32: 2 -> 7 loopIndependentDefUseDependence y$1
  33: 20 -> 24 summary
  34: 23 -> 20 loopIndependentDefUseDependence this.!getHeight
  35: 24 -> 3 loopIndependentDefUseDependence this.!isInOval
  36: 3 -> 26 loopIndependentDefUseDependence $_
  37: 6 -> 24 summary
  38: 7 -> 24 summary
  39: 8 -> 24 summary
--
   0: getName( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 3 trueControlDependence
   3: 1 -> 3 loopIndependentDefUseDependence $_
--
   0: draw( java.awt.Graphics )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 23 trueControlDependence
  17: 0 -> 24 trueControlDependence
  18: 0 -> 25 trueControlDependence
  19: 0 -> 26 trueControlDependence
  20: 0 -> 27 trueControlDependence
  21: 0 -> 28 trueControlDependence
  22: 0 -> 29 trueControlDependence
  23: 0 -> 3 trueControlDependence
  24: 0 -> 31 trueControlDependence
  25: 0 -> 4 trueControlDependence
  26: 0 -> 5 trueControlDependence
  27: 0 -> 6 trueControlDependence
  28: 0 -> 7 trueControlDependence
  29: 0 -> 8 trueControlDependence
  30: 0 -> 9 trueControlDependence
  31: 1 -> 15 loopIndependentDefUseDependence g$0
  32: 1 -> 2 loopIndependentDefUseDependence g$0
  33: 11 -> 12 outputDependence BasicStroke.cap
  34: 11 -> 12 outputDependence BasicStroke.dash
  35: 11 -> 12 outputDependence BasicStroke.dash_phase
  36: 11 -> 12 outputDependence BasicStroke.join
  37: 11 -> 12 outputDependence BasicStroke.miterlimit
  38: 11 -> 12 outputDependence BasicStroke.width
  39: 12 -> 31 loopIndependentDefUseDependence BasicStroke.cap
  40: 12 -> 31 loopIndependentDefUseDependence BasicStroke.dash
  41: 12 -> 31 loopIndependentDefUseDependence BasicStroke.dash_phase
  42: 12 -> 31 loopIndependentDefUseDependence BasicStroke.join
  43: 12 -> 31 loopIndependentDefUseDependence BasicStroke.miterlimit
  44: 12 -> 31 loopIndependentDefUseDependence BasicStroke.width
  45: 12 -> 9 loopIndependentDefUseDependence BasicStroke.!BasicStroke
  46: 13 -> 7 loopIndependentDefUseDependence g2$1.!setStroke
  47: 19 -> 16 loopIndependentDefUseDependence this.!getLeft
  48: 2 -> 4 declaration
  49: 2 -> 4 loopIndependentDefUseDependence g2$1
  50: 2 -> 8 declaration
  51: 2 -> 8 loopIndependentDefUseDependence g2$1
  52: 22 -> 16 loopIndependentDefUseDependence this.!getTop
  53: 25 -> 16 loopIndependentDefUseDependence this.!getWidth
  54: 28 -> 16 loopIndependentDefUseDependence this.!getHeight
  55: 29 -> 14 loopIndependentDefUseDependence g$0.!fillOval
  56: 6 -> 3 loopIndependentDefUseDependence g2$1.!setColor
--
   0: FilledOval( int )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 0 -> 4 trueControlDependence
   5: 0 -> 5 trueControlDependence
   6: 0 -> 6 trueControlDependence
   7: 0 -> 8 trueControlDependence
   8: 1 -> 5 loopIndependentDefUseDependence w$0
   9: 5 -> 6 summary
  10: 6 -> 2 loopIndependentDefUseDependence 
--
   0: create( java.awt.Color float )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 2 trueControlDependence
   4: 0 -> 3 trueControlDependence
   5: 0 -> 4 trueControlDependence
   6: 0 -> 5 trueControlDependence
   7: 0 -> 6 trueControlDependence
   8: 0 -> 7 trueControlDependence
   9: 0 -> 8 trueControlDependence
  10: 1 -> 6 loopIndependentDefUseDependence c$0
  11: 2 -> 7 loopIndependentDefUseDependence w$1
  12: 3 -> 10 loopIndependentDefUseDependence $_
  13: 8 -> 3 loopIndependentDefUseDependence FilledOval.!FilledOval
--
   0: FilledOval( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 0 -> 4 trueControlDependence
   5: 0 -> 6 trueControlDependence
   6: 4 -> 1 loopIndependentDefUseDependence 
--
   0: FilledOval( java.awt.Color float )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 2 trueControlDependence
   4: 0 -> 3 trueControlDependence
   5: 0 -> 4 trueControlDependence
   6: 0 -> 5 trueControlDependence
   7: 0 -> 6 trueControlDependence
   8: 0 -> 7 trueControlDependence
   9: 0 -> 8 trueControlDependence
  10: 1 -> 6 loopIndependentDefUseDependence c$0
  11: 2 -> 7 loopIndependentDefUseDependence w$1
  12: 6 -> 8 summary
  13: 7 -> 8 summary
  14: 8 -> 3 loopIndependentDefUseDependence 
--
   0: FilledOval( java.awt.Color )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 0 -> 4 trueControlDependence
   5: 0 -> 5 trueControlDependence
   6: 0 -> 6 trueControlDependence
   7: 0 -> 8 trueControlDependence
   8: 1 -> 5 loopIndependentDefUseDependence c$0
   9: 5 -> 6 summary
  10: 6 -> 2 loopIndependentDefUseDependence 
--
   0: paintIcon( java.awt.Graphics int int int int )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 11 trueControlDependence
   3: 0 -> 2 trueControlDependence
   4: 0 -> 3 trueControlDependence
   5: 0 -> 4 trueControlDependence
   6: 0 -> 5 trueControlDependence
   7: 0 -> 6 trueControlDependence
   8: 0 -> 7 trueControlDependence
   9: 0 -> 8 trueControlDependence
  10: 0 -> 9 trueControlDependence
  11: 1 -> 7 loopIndependentDefUseDependence g$0
  12: 2 -> 8 loopIndependentDefUseDependence x$1
  13: 3 -> 8 loopIndependentDefUseDependence y$2
  14: 4 -> 8 loopIndependentDefUseDependence w$3
  15: 5 -> 8 loopIndependentDefUseDependence h$4
  16: 9 -> 6 loopIndependentDefUseDependence g$0.!fillOval
--
----- ClDG (to here) -----

