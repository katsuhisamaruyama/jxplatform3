----- ClDG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.DrawMenu$6
   0 fieldEntry [ serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.DrawMenu$6.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.DrawMenu$6.serialVersionUID }
--
   0 methodEntry [ actionPerformed( java.awt.event.ActionEvent ) ]
   1 formalIn D = { evt$0 } U = {  }
   2 localDeclaration D = { canvas$1 } U = { this.tabbedCanvas.!getCurrentCanvas }
   3 receiver D = {  } U = { this.tabbedCanvas }
   4 methodCall D = {  } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCurrentCanvas( )
   5 actualOut D = { this.tabbedCanvas.!getCurrentCanvas } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
   6 localDeclaration D = { undoManager$2 } U = { canvas$1.!getUndoManager, this.tabbedCanvas.!getCurrentCanvas.!getUndoManager }
   7 receiver D = {  } U = { canvas$1, this.tabbedCanvas.!getCurrentCanvas }
   8 methodCall D = {  } U = { canvas$1.undoManager, this.tabbedCanvas.!getCurrentCanvas.undoManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getUndoManager( )
   9 actualOut D = { canvas$1.!getUndoManager } U = { canvas$1.undoManager, this.tabbedCanvas.!getCurrentCanvas.undoManager }
  10 trySt D = {  } U = {  }
  11 assignment D = {  } U = { canvas$1.!getUndoManager.!undo, undoManager$2.!undo }
  12 receiver D = {  } U = { canvas$1.!getUndoManager, undoManager$2 }
  13 methodCall D = {  } U = { canvas$1.!getUndoManager, canvas$1.!getUndoManager.indexOfNextAdd, javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, undoManager$2, undoManager$2$Action.ANY, undoManager$2$Action.UNDO, undoManager$2.indexOfNextAdd } TO = javax.swing.undo.UndoManager#undo( )
  14 actualOut D = { undoManager$2.!undo } U = { canvas$1.!getUndoManager.indexOfNextAdd, javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, undoManager$2$Action.ANY, undoManager$2$Action.UNDO, undoManager$2.indexOfNextAdd }
  15 assignment D = {  } U = { this.!updateUndoState }
  16 receiver D = {  } U = {  }
  17 methodCall D = {  } U = { this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateUndoState( )
  18 actualOut D = { this.!updateUndoState } U = { this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoAction }
  19 assignment D = {  } U = { this.!updateRedoState }
  20 receiver D = {  } U = {  }
  21 methodCall D = {  } U = { this.redoAction, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateRedoState( )
  22 actualOut D = { this.!updateRedoState } U = { this.redoAction, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
  23 assignment D = {  } U = { canvas$1.!clearFigure, this.tabbedCanvas.!getCurrentCanvas.!clearFigure }
  24 receiver D = {  } U = { canvas$1, this.tabbedCanvas.!getCurrentCanvas }
  25 methodCall D = { canvas$1.currentFigure, canvas$1.grabbedFigure } U = { canvas$1.currentFigure, canvas$1.grabbedFigure, this.tabbedCanvas.!getCurrentCanvas.currentFigure, this.tabbedCanvas.!getCurrentCanvas.grabbedFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#clearFigure( )
  26 actualOut D = { canvas$1.!clearFigure, canvas$1.currentFigure, canvas$1.grabbedFigure } U = { canvas$1.currentFigure, canvas$1.grabbedFigure, this.tabbedCanvas.!getCurrentCanvas.currentFigure, this.tabbedCanvas.!getCurrentCanvas.grabbedFigure }
  28 catchClause D = { e$3 } U = {  }
  30 formalOut D = {  } U = { $_, canvas$1.currentFigure, canvas$1.grabbedFigure }
--
   0: serialVersionUID
   1: 0 -> 1 trueControlDependence
--
   0: actionPerformed( java.awt.event.ActionEvent )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 2 trueControlDependence
   4: 0 -> 28 trueControlDependence
   5: 0 -> 3 trueControlDependence
   6: 0 -> 30 trueControlDependence
   7: 0 -> 4 trueControlDependence
   8: 0 -> 5 trueControlDependence
   9: 0 -> 6 trueControlDependence
  10: 0 -> 7 trueControlDependence
  11: 0 -> 8 trueControlDependence
  12: 0 -> 9 trueControlDependence
  13: 10 -> 12 trueControlDependence
  14: 10 -> 13 trueControlDependence
  15: 10 -> 14 trueControlDependence
  16: 13 -> 11 trueControlDependence
  17: 13 -> 15 trueControlDependence
  18: 13 -> 16 trueControlDependence
  19: 13 -> 17 trueControlDependence
  20: 13 -> 18 trueControlDependence
  21: 13 -> 19 trueControlDependence
  22: 13 -> 20 trueControlDependence
  23: 13 -> 21 trueControlDependence
  24: 13 -> 22 trueControlDependence
  25: 13 -> 23 trueControlDependence
  26: 13 -> 24 trueControlDependence
  27: 13 -> 25 trueControlDependence
  28: 13 -> 26 trueControlDependence
  29: 13 -> 28 exceptionCatch
  30: 14 -> 11 loopIndependentDefUseDependence undoManager$2.!undo
  31: 18 -> 15 loopIndependentDefUseDependence this.!updateUndoState
  32: 2 -> 24 declaration
  33: 2 -> 24 loopIndependentDefUseDependence canvas$1
  34: 2 -> 7 declaration
  35: 2 -> 7 loopIndependentDefUseDependence canvas$1
  36: 22 -> 19 loopIndependentDefUseDependence this.!updateRedoState
  37: 25 -> 26 loopIndependentDefUseDependence canvas$1.currentFigure
  38: 25 -> 26 loopIndependentDefUseDependence canvas$1.grabbedFigure
  39: 26 -> 23 loopIndependentDefUseDependence canvas$1.!clearFigure
  40: 26 -> 30 loopIndependentDefUseDependence canvas$1.currentFigure
  41: 26 -> 30 loopIndependentDefUseDependence canvas$1.grabbedFigure
  42: 5 -> 2 loopIndependentDefUseDependence this.tabbedCanvas.!getCurrentCanvas
  43: 5 -> 24 loopIndependentDefUseDependence this.tabbedCanvas.!getCurrentCanvas
  44: 5 -> 7 loopIndependentDefUseDependence this.tabbedCanvas.!getCurrentCanvas
  45: 6 -> 12 declaration
  46: 6 -> 12 loopIndependentDefUseDependence undoManager$2
  47: 6 -> 13 declaration
  48: 6 -> 13 loopIndependentDefUseDependence undoManager$2
  49: 9 -> 12 loopIndependentDefUseDependence canvas$1.!getUndoManager
  50: 9 -> 13 loopIndependentDefUseDependence canvas$1.!getUndoManager
  51: 9 -> 6 loopIndependentDefUseDependence canvas$1.!getUndoManager
--
----- ClDG (to here) -----

