----- ClDG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.DrawMenu$9
   0 methodEntry [ actionPerformed( java.awt.event.ActionEvent ) ]
   1 formalIn D = { evt$16 } U = {  }
   2 localDeclaration D = { canvas$17 } U = { this.tabbedCanvas.!getCurrentCanvas( ) }
   3 receiver D = {  } U = { this.tabbedCanvas }
   4 methodCall D = {  } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCurrentCanvas( )
   5 actualOut D = { this.tabbedCanvas.!getCurrentCanvas( ) } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
   6 assignment D = { this.clipboard } U = { canvas$17.!getGrabbedFigure( ) }
   7 receiver D = {  } U = { canvas$17 }
   8 methodCall D = {  } U = { canvas$17.grabbedFigure, this.grabbedFigure.color, this.grabbedFigure.endX, this.grabbedFigure.endY, this.grabbedFigure.outlineWidth, this.grabbedFigure.startX, this.grabbedFigure.startY, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getGrabbedFigure( )
   9 actualOut D = { canvas$17.!getGrabbedFigure( ) } U = { canvas$17.grabbedFigure, this.grabbedFigure.color, this.grabbedFigure.endX, this.grabbedFigure.endY, this.grabbedFigure.outlineWidth, this.grabbedFigure.startX, this.grabbedFigure.startY, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure }
  10 assignment D = {  } U = { this.!updateEditState( boolean ) }
  11 receiver D = {  } U = {  }
  12 methodCall D = {  } U = { canvas$17.!getGrabbedFigure( ).color, canvas$17.!getGrabbedFigure( ).endX, canvas$17.!getGrabbedFigure( ).endY, canvas$17.!getGrabbedFigure( ).outlineWidth, canvas$17.!getGrabbedFigure( ).startX, canvas$17.!getGrabbedFigure( ).startY, this.clipboard, this.clipboard.color, this.clipboard.endX, this.clipboard.endY, this.clipboard.outlineWidth, this.clipboard.startX, this.clipboard.startY, this.copyAction, this.cutAction, this.deleteAction, this.pasteAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateEditState( boolean )
  13 actualIn D = {  } U = {  }
  14 actualOut D = { this.!updateEditState( boolean ) } U = { canvas$17.!getGrabbedFigure( ).color, canvas$17.!getGrabbedFigure( ).endX, canvas$17.!getGrabbedFigure( ).endY, canvas$17.!getGrabbedFigure( ).outlineWidth, canvas$17.!getGrabbedFigure( ).startX, canvas$17.!getGrabbedFigure( ).startY, this.clipboard, this.clipboard.color, this.clipboard.endX, this.clipboard.endY, this.clipboard.outlineWidth, this.clipboard.startX, this.clipboard.startY, this.copyAction, this.cutAction, this.deleteAction, this.pasteAction }
  15 assignment D = {  } U = { this.!updateUndoState( ) }
  16 receiver D = {  } U = {  }
  17 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoAction, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateUndoState( )
  18 actualOut D = { this.!updateUndoState( ) } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoAction, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd }
  19 assignment D = {  } U = { this.!updateRedoState( ) }
  20 receiver D = {  } U = {  }
  21 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.redoAction, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateRedoState( )
  22 actualOut D = { this.!updateRedoState( ) } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.redoAction, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd }
  24 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.DrawMenu$9.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.DrawMenu$9.serialVersionUID }
--
   0: actionPerformed( java.awt.event.ActionEvent )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   17 trueControlDependence
  18:    0 ->   18 trueControlDependence
  19:    0 ->   19 trueControlDependence
  20:    0 ->   20 trueControlDependence
  21:    0 ->   21 trueControlDependence
  22:    0 ->   22 trueControlDependence
  23:    0 ->   24 trueControlDependence
  24:    2 ->    7 declaration
  25:    2 ->    7 loopIndependentDefUseDependence canvas$17
  26:    5 ->    2 loopIndependentDefUseDependence this.tabbedCanvas.!getCurrentCanvas( )
  27:    6 ->   12 loopIndependentDefUseDependence this.clipboard
  28:    6 ->   14 loopIndependentDefUseDependence this.clipboard
  29:    9 ->    6 loopIndependentDefUseDependence canvas$17.!getGrabbedFigure( )
  30:   14 ->   10 loopIndependentDefUseDependence this.!updateEditState( boolean )
  31:   18 ->   15 loopIndependentDefUseDependence this.!updateUndoState( )
  32:   22 ->   19 loopIndependentDefUseDependence this.!updateRedoState( )
--
   0: serialVersionUID
   1:    0 ->    1 trueControlDependence
--
----- ClDG (to here) -----

