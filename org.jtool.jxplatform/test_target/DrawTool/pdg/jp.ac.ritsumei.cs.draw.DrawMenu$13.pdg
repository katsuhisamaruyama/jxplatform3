----- ClDG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.DrawMenu$13
   0 methodEntry [ actionPerformed( java.awt.event.ActionEvent ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { evt$7 } U = {  }
   3 localDeclaration D = { canvas$8 } U = { this.tabbedCanvas.!getCurrentCanvas( ) }
   4 receiver D = {  } U = { this.tabbedCanvas }
   5 methodCall D = {  } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCurrentCanvas( )
   6 actualOut D = { this.tabbedCanvas.!getCurrentCanvas( ) } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
   7 ifSt D = {  } U = { this.!saveAsFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
   8 receiver D = {  } U = {  }
   9 methodCall D = {  } U = { File.separator, System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES, result$2.APPROVE_OPTION, this.!java.awt.Component.height, this.!java.awt.Component.width, this.!java.lang.String.COMPACT_STRINGS, this.!java.lang.String.value, this.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.!javax.swing.JComponent.revalidateRunnableScheduled, this.!javax.swing.JTabbedPane$Page.tip, this.!javax.swing.JTabbedPane$Page.title, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.!javax.swing.ToolTipManager.accessibilityKeyListener, this.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.recentFiles, this.tabbedCanvas, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.coder, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.value, this.tabbedCanvas.selectedTab, this.tool, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#saveAsFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
  10 actualIn D = {  } U = { canvas$8, canvas$8.changed, canvas$8.curX, canvas$8.curY, canvas$8.currentFigure, canvas$8.figureManager, canvas$8.grabbedFigure, canvas$8.isGrabMode, canvas$8.menu, canvas$8.selector, canvas$8.support, canvas$8.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).changed, this.tabbedCanvas.!getCurrentCanvas( ).curX, this.tabbedCanvas.!getCurrentCanvas( ).curY, this.tabbedCanvas.!getCurrentCanvas( ).currentFigure, this.tabbedCanvas.!getCurrentCanvas( ).figureManager, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure, this.tabbedCanvas.!getCurrentCanvas( ).isGrabMode, this.tabbedCanvas.!getCurrentCanvas( ).menu, this.tabbedCanvas.!getCurrentCanvas( ).selector, this.tabbedCanvas.!getCurrentCanvas( ).support, this.tabbedCanvas.!getCurrentCanvas( ).undoManager }
* actualOut D = { this.!javax.swing.JTabbedPane$Page.tip, this.!javax.swing.JTabbedPane$Page.title, this.!javax.swing.JTabbedPane.haveRegistered, this.!saveAsFile( jp.ac.ritsumei.cs.draw.DrawCanvas ), this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, this.canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessibleContext, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonMnemonic, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonToolTipText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.controlsShown, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.currentDirectory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialog, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogTitle, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogType, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dragEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSelectionMode, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSystemView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.filters, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.multiSelectionEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.selectedFile, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.showFilesListener, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useAcceptAllFileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useFileHiding, this.tool.!java.awt.Frame.title } U = { File.separator, System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES, result$2.APPROVE_OPTION, this.!java.awt.Component.height, this.!java.awt.Component.width, this.!java.lang.String.COMPACT_STRINGS, this.!java.lang.String.value, this.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.!javax.swing.JComponent.revalidateRunnableScheduled, this.!javax.swing.JTabbedPane$Page.tip, this.!javax.swing.JTabbedPane$Page.title, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.!javax.swing.ToolTipManager.accessibilityKeyListener, this.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.recentFiles, this.tabbedCanvas, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.coder, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.value, this.tabbedCanvas.selectedTab, this.tool, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  12 assignment D = {  } U = { this.!buildRecentFileMenu( ) }
  13 receiver D = {  } U = {  }
  14 methodCall D = {  } U = { this.fileItem$2.!javax.swing.AbstractButton.listenerList, this.fileItem$2.!javax.swing.event.EventListenerList.NULL_ARRAY, this.fileItem$2.!javax.swing.event.EventListenerList.listenerList, this.fileListMenu, this.fileListMenu.!java.awt.Container.component, this.fileListMenu.!java.awt.Container.containerListener, this.fileListMenu.!java.awt.Container.descendantsCount, this.fileListMenu.!java.awt.Container.eventMask, this.fileListMenu.!java.awt.Container.layoutMgr, this.fileListMenu.!java.awt.Container.listeningBoundsChildren, this.fileListMenu.!java.awt.Container.listeningChildren, this.fileListMenu.!java.awt.Container.peer, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.fileListener, this.recentFiles } TO = jp.ac.ritsumei.cs.draw.DrawMenu#buildRecentFileMenu( )
* actualOut D = { this.!buildRecentFileMenu( ), this.fileItem$2.!javax.swing.event.EventListenerList.listenerList, this.fileListMenu.!java.awt.Component.parent, this.fileListMenu.!javax.swing.JMenu.popupListener, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged } U = { this.fileItem$2.!javax.swing.AbstractButton.listenerList, this.fileItem$2.!javax.swing.event.EventListenerList.NULL_ARRAY, this.fileItem$2.!javax.swing.event.EventListenerList.listenerList, this.fileListMenu, this.fileListMenu.!java.awt.Container.component, this.fileListMenu.!java.awt.Container.containerListener, this.fileListMenu.!java.awt.Container.descendantsCount, this.fileListMenu.!java.awt.Container.eventMask, this.fileListMenu.!java.awt.Container.layoutMgr, this.fileListMenu.!java.awt.Container.listeningBoundsChildren, this.fileListMenu.!java.awt.Container.listeningChildren, this.fileListMenu.!java.awt.Container.peer, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.fileListener, this.recentFiles }
  16 assignment D = {  } U = { this.!updateUndoState( ) }
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoAction, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateUndoState( )
  19 actualOut D = { this.!updateUndoState( ) } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoAction, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd }
  20 assignment D = {  } U = { this.!updateRedoState( ) }
  21 receiver D = {  } U = {  }
  22 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.redoAction, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateRedoState( )
  23 actualOut D = { this.!updateRedoState( ) } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.redoAction, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd }
  26 formalOut D = {  } U = { $_ }
* actualOut D = { this.directory } U = {  }
--
   0: actionPerformed( java.awt.event.ActionEvent )
   1:    0 ->    2 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    0 ->    5 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    0 ->    8 trueControlDependence
   7:    0 ->    9 trueControlDependence
   8:    0 ->   10 trueControlDependence
   9:    3 ->   10 declaration
  10:    3 ->   10 loopIndependentDefUseDependence canvas$8
  11:    6 ->    3 loopIndependentDefUseDependence this.tabbedCanvas.!getCurrentCanvas( )
  12:    7 ->   12 trueControlDependence
  13:    7 ->   13 trueControlDependence
  14:    7 ->   14 trueControlDependence
  15:    7 ->   16 trueControlDependence
  16:    7 ->   17 trueControlDependence
  17:    7 ->   18 trueControlDependence
  18:    7 ->   19 trueControlDependence
  19:    7 ->   20 trueControlDependence
  20:    7 ->   21 trueControlDependence
  21:    7 ->   22 trueControlDependence
  22:    7 ->   23 trueControlDependence
  23:    7 -> * trueControlDependence
  24:    9 ->    1 exceptionCatch
  25:    9 ->    7 trueControlDependence
  26:    9 ->   26 trueControlDependence
  27:    9 -> * trueControlDependence
  28:    9 -> * trueControlDependence
  29:   19 ->   16 loopIndependentDefUseDependence this.!updateUndoState( )
  30:   23 ->   20 loopIndependentDefUseDependence this.!updateRedoState( )
  31: * ->    7 loopIndependentDefUseDependence this.!saveAsFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
  32: * ->   12 loopIndependentDefUseDependence this.!buildRecentFileMenu( )
  33: * -> * loopIndependentDefUseDependence this.directory
--
----- ClDG (to here) -----

