----- ClDG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.Rect
   0 methodEntry [ drawGrabbedFigure( java.awt.Graphics ) ]
   1 formalIn D = { g$0 } U = {  }
   2 assignment D = {  } U = { g$0.!setColor }
   3 receiver D = {  } U = { g$0 }
   4 methodCall D = {  } U = { this.color } TO = java.awt.Graphics#setColor( java.awt.Color )
   5 actualOut D = { g$0.!setColor } U = {  }
   6 assignment D = {  } U = { this.!drawGrabbedMark }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#drawGrabbedMark( java.awt.Graphics int int )
   9 actualIn D = {  } U = { g$0 }
  10 actualIn D = {  } U = { this.!getLeft }
  11 receiver D = {  } U = {  }
  12 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getLeft( )
  13 actualOut D = { this.!getLeft } U = { this.endX, this.startX }
  14 actualIn D = {  } U = { this.!getTop }
  15 receiver D = {  } U = {  }
  16 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getTop( )
  17 actualOut D = { this.!getTop } U = { this.endY, this.startY }
  18 actualOut D = { this.!drawGrabbedMark } U = {  }
  19 assignment D = {  } U = { this.!drawGrabbedMark }
  20 receiver D = {  } U = {  }
  21 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#drawGrabbedMark( java.awt.Graphics int int )
  22 actualIn D = {  } U = { g$0 }
  23 actualIn D = {  } U = { this.!getLeft }
  24 receiver D = {  } U = {  }
  25 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getLeft( )
  26 actualOut D = { this.!getLeft } U = { this.endX, this.startX }
  27 actualIn D = {  } U = { this.!getBottom }
  28 receiver D = {  } U = {  }
  29 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getBottom( )
  30 actualOut D = { this.!getBottom } U = { this.endY, this.startY }
  31 actualOut D = { this.!drawGrabbedMark } U = {  }
  32 assignment D = {  } U = { this.!drawGrabbedMark }
  33 receiver D = {  } U = {  }
  34 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#drawGrabbedMark( java.awt.Graphics int int )
  35 actualIn D = {  } U = { g$0 }
  36 actualIn D = {  } U = { this.!getRight }
  37 receiver D = {  } U = {  }
  38 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getRight( )
  39 actualOut D = { this.!getRight } U = { this.endX, this.startX }
  40 actualIn D = {  } U = { this.!getTop }
  41 receiver D = {  } U = {  }
  42 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getTop( )
  43 actualOut D = { this.!getTop } U = { this.endY, this.startY }
  44 actualOut D = { this.!drawGrabbedMark } U = {  }
  45 assignment D = {  } U = { this.!drawGrabbedMark }
  46 receiver D = {  } U = {  }
  47 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#drawGrabbedMark( java.awt.Graphics int int )
  48 actualIn D = {  } U = { g$0 }
  49 actualIn D = {  } U = { this.!getRight }
  50 receiver D = {  } U = {  }
  51 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getRight( )
  52 actualOut D = { this.!getRight } U = { this.endX, this.startX }
  53 actualIn D = {  } U = { this.!getBottom }
  54 receiver D = {  } U = {  }
  55 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getBottom( )
  56 actualOut D = { this.!getBottom } U = { this.endY, this.startY }
  57 actualOut D = { this.!drawGrabbedMark } U = {  }
  59 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Rect( int ) ]
   1 formalIn D = { w$0 } U = {  }
   2 assignment D = {  } U = {  }
   3 receiver D = {  } U = {  }
   4 constructorCall D = { super.color, super.outlineWidth } U = { super.color, super.outlineWidth } TO = jp.ac.ritsumei.cs.draw.Figure#Figure( float )
   5 actualIn D = {  } U = { w$0 }
   6 actualOut D = { , super.color, super.outlineWidth } U = { super.color, super.outlineWidth }
   8 formalOut D = {  } U = { $_, super.color, super.outlineWidth }
--
   0 methodEntry [ drawOutline( java.awt.Graphics ) ]
   1 formalIn D = { g$0 } U = {  }
   2 localDeclaration D = { g2$1 } U = { g$0 }
   3 assignment D = {  } U = { g2$1.!setColor }
   4 receiver D = {  } U = { g2$1 }
   5 methodCall D = {  } U = { this.color } TO = java.awt.Graphics#setColor( java.awt.Color )
   6 actualOut D = { g2$1.!setColor } U = {  }
   7 assignment D = {  } U = { g2$1.!setStroke }
   8 receiver D = {  } U = { g2$1 }
   9 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.Figure.dotted } TO = java.awt.Graphics2D#setStroke( java.awt.Stroke )
  10 actualOut D = { g2$1.!setStroke } U = {  }
  11 assignment D = {  } U = { g2$1.!drawRect }
  12 receiver D = {  } U = { g2$1 }
  13 methodCall D = {  } U = { this.!getHeight, this.!getLeft, this.!getTop, this.!getWidth } TO = java.awt.Graphics#drawRect( int int int int )
  14 receiver D = {  } U = {  }
  15 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getLeft( )
  16 actualOut D = { this.!getLeft } U = { this.endX, this.startX }
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getTop( )
  19 actualOut D = { this.!getTop } U = { this.endY, this.startY }
  20 receiver D = {  } U = {  }
  21 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getWidth( )
  22 actualOut D = { this.!getWidth } U = { this.endX, this.startX }
  23 receiver D = {  } U = {  }
  24 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getHeight( )
  25 actualOut D = { this.!getHeight } U = { this.endY, this.startY }
  26 actualOut D = { g2$1.!drawRect } U = {  }
  28 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ createClone( ) ]
   1 localDeclaration D = { figure$0 } U = { figure$0.!Rect }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Rect#Rect( java.awt.Color float )
   4 actualIn D = {  } U = { this.color }
   5 actualIn D = {  } U = { this.outlineWidth }
   6 actualOut D = { figure$0.!Rect } U = {  }
   7 assignment D = {  } U = { figure$0.!setStart }
   8 receiver D = {  } U = { figure$0 }
   9 methodCall D = { figure$0.startX, figure$0.startY } U = { figure$0.startX, figure$0.startY } TO = jp.ac.ritsumei.cs.draw.Figure#setStart( int int )
  10 actualIn D = {  } U = { this.startX }
  11 actualIn D = {  } U = { this.startY }
  12 actualOut D = { figure$0.!setStart, figure$0.startX, figure$0.startY } U = { figure$0.startX, figure$0.startY }
  13 assignment D = {  } U = { figure$0.!setEnd }
  14 receiver D = {  } U = { figure$0 }
  15 methodCall D = { figure$0.endX, figure$0.endY } U = { figure$0.endX, figure$0.endY } TO = jp.ac.ritsumei.cs.draw.Figure#setEnd( int int )
  16 actualIn D = {  } U = { this.endX }
  17 actualIn D = {  } U = { this.endY }
  18 actualOut D = { figure$0.!setEnd, figure$0.endX, figure$0.endY } U = { figure$0.endX, figure$0.endY }
  19 returnSt D = { $_ } U = { figure$0 }
  21 formalOut D = {  } U = { $_, figure$0.endX, figure$0.endY, figure$0.startX, figure$0.startY }
--
   0 methodEntry [ drawRubber( java.awt.Graphics ) ]
   1 formalIn D = { g$0 } U = {  }
   2 localDeclaration D = { g2$1 } U = { g$0 }
   3 assignment D = {  } U = { g2$1.!setColor }
   4 receiver D = {  } U = { g2$1 }
   5 methodCall D = {  } U = { this.color } TO = java.awt.Graphics#setColor( java.awt.Color )
   6 actualOut D = { g2$1.!setColor } U = {  }
   7 assignment D = {  } U = { g2$1.!drawRect }
   8 receiver D = {  } U = { g2$1 }
   9 methodCall D = {  } U = { this.!getHeight, this.!getLeft, this.!getTop, this.!getWidth } TO = java.awt.Graphics#drawRect( int int int int )
  10 receiver D = {  } U = {  }
  11 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getLeft( )
  12 actualOut D = { this.!getLeft } U = { this.endX, this.startX }
  13 receiver D = {  } U = {  }
  14 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getTop( )
  15 actualOut D = { this.!getTop } U = { this.endY, this.startY }
  16 receiver D = {  } U = {  }
  17 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getWidth( )
  18 actualOut D = { this.!getWidth } U = { this.endX, this.startX }
  19 receiver D = {  } U = {  }
  20 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getHeight( )
  21 actualOut D = { this.!getHeight } U = { this.endY, this.startY }
  22 actualOut D = { g2$1.!drawRect } U = {  }
  24 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Rect( java.awt.Color ) ]
   1 formalIn D = { c$0 } U = {  }
   2 assignment D = {  } U = {  }
   3 receiver D = {  } U = {  }
   4 constructorCall D = { super.color, super.outlineWidth } U = { super.color, super.outlineWidth } TO = jp.ac.ritsumei.cs.draw.Figure#Figure( java.awt.Color )
   5 actualIn D = {  } U = { c$0 }
   6 actualOut D = { , super.color, super.outlineWidth } U = { super.color, super.outlineWidth }
   8 formalOut D = {  } U = { $_, super.color, super.outlineWidth }
--
   0 methodEntry [ isInRect( int int int int int int ) ]
   1 formalIn D = { x$0 } U = {  }
   2 formalIn D = { y$1 } U = {  }
   3 formalIn D = { x1$2 } U = {  }
   4 formalIn D = { y1$3 } U = {  }
   5 formalIn D = { x2$4 } U = {  }
   6 formalIn D = { y2$5 } U = {  }
   7 returnSt D = { $_ } U = { x$0, x1$2, x2$4, y$1, y1$3, y2$5 }
   9 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ isGrabbed( int int ) ]
   1 formalIn D = { x$0 } U = {  }
   2 formalIn D = { y$1 } U = {  }
   3 localDeclaration D = { ox1$2 } U = { jp.ac.ritsumei.cs.draw.Figure.ALLOWABLE_GAP_WHEN_GRABBED, this.!getLeft }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getLeft( )
   6 actualOut D = { this.!getLeft } U = { this.endX, this.startX }
   7 localDeclaration D = { oy1$3 } U = { jp.ac.ritsumei.cs.draw.Figure.ALLOWABLE_GAP_WHEN_GRABBED, this.!getTop }
   8 receiver D = {  } U = {  }
   9 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getTop( )
  10 actualOut D = { this.!getTop } U = { this.endY, this.startY }
  11 localDeclaration D = { ox2$4 } U = { jp.ac.ritsumei.cs.draw.Figure.ALLOWABLE_GAP_WHEN_GRABBED, this.!getRight }
  12 receiver D = {  } U = {  }
  13 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getRight( )
  14 actualOut D = { this.!getRight } U = { this.endX, this.startX }
  15 localDeclaration D = { oy2$5 } U = { jp.ac.ritsumei.cs.draw.Figure.ALLOWABLE_GAP_WHEN_GRABBED, this.!getBottom }
  16 receiver D = {  } U = {  }
  17 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getBottom( )
  18 actualOut D = { this.!getBottom } U = { this.endY, this.startY }
  19 ifSt D = {  } U = { this.!isInRect }
  20 receiver D = {  } U = {  }
  21 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Rect#isInRect( int int int int int int )
  22 actualIn D = {  } U = { x$0 }
  23 actualIn D = {  } U = { y$1 }
  24 actualIn D = {  } U = { ox1$2 }
  25 actualIn D = {  } U = { oy1$3 }
  26 actualIn D = {  } U = { ox2$4 }
  27 actualIn D = {  } U = { oy2$5 }
  28 actualOut D = { this.!isInRect } U = {  }
  29 returnSt D = { $_ } U = {  }
  31 localDeclaration D = { ix1$6 } U = { jp.ac.ritsumei.cs.draw.Figure.ALLOWABLE_GAP_WHEN_GRABBED, this.!getLeft }
  32 receiver D = {  } U = {  }
  33 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getLeft( )
  34 actualOut D = { this.!getLeft } U = { this.endX, this.startX }
  35 localDeclaration D = { iy1$7 } U = { jp.ac.ritsumei.cs.draw.Figure.ALLOWABLE_GAP_WHEN_GRABBED, this.!getTop }
  36 receiver D = {  } U = {  }
  37 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getTop( )
  38 actualOut D = { this.!getTop } U = { this.endY, this.startY }
  39 localDeclaration D = { ix2$8 } U = { jp.ac.ritsumei.cs.draw.Figure.ALLOWABLE_GAP_WHEN_GRABBED, this.!getRight }
  40 receiver D = {  } U = {  }
  41 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getRight( )
  42 actualOut D = { this.!getRight } U = { this.endX, this.startX }
  43 localDeclaration D = { iy2$9 } U = { jp.ac.ritsumei.cs.draw.Figure.ALLOWABLE_GAP_WHEN_GRABBED, this.!getBottom }
  44 receiver D = {  } U = {  }
  45 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getBottom( )
  46 actualOut D = { this.!getBottom } U = { this.endY, this.startY }
  47 returnSt D = { $_ } U = { this.!isInRect }
  48 receiver D = {  } U = {  }
  49 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Rect#isInRect( int int int int int int )
  50 actualIn D = {  } U = { x$0 }
  51 actualIn D = {  } U = { y$1 }
  52 actualIn D = {  } U = { ix1$6 }
  53 actualIn D = {  } U = { iy1$7 }
  54 actualIn D = {  } U = { ix2$8 }
  55 actualIn D = {  } U = { iy2$9 }
  56 actualOut D = { this.!isInRect } U = {  }
  58 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ paintIcon( java.awt.Graphics int int int int ) ]
   1 formalIn D = { g$0 } U = {  }
   2 formalIn D = { x$1 } U = {  }
   3 formalIn D = { y$2 } U = {  }
   4 formalIn D = { w$3 } U = {  }
   5 formalIn D = { h$4 } U = {  }
   6 assignment D = {  } U = { g$0.!drawRect }
   7 receiver D = {  } U = { g$0 }
   8 methodCall D = {  } U = { h$4, w$3, x$1, y$2 } TO = java.awt.Graphics#drawRect( int int int int )
   9 actualOut D = { g$0.!drawRect } U = {  }
  11 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Rect( java.awt.Color float ) ]
   1 formalIn D = { c$0 } U = {  }
   2 formalIn D = { w$1 } U = {  }
   3 assignment D = {  } U = {  }
   4 receiver D = {  } U = {  }
   5 constructorCall D = { super.color, super.outlineWidth } U = { super.color, super.outlineWidth } TO = jp.ac.ritsumei.cs.draw.Figure#Figure( java.awt.Color float )
   6 actualIn D = {  } U = { c$0 }
   7 actualIn D = {  } U = { w$1 }
   8 actualOut D = { , super.color, super.outlineWidth } U = { super.color, super.outlineWidth }
  10 formalOut D = {  } U = { $_, super.color, super.outlineWidth }
--
   0 methodEntry [ getName( ) ]
   1 returnSt D = { $_ } U = { jp.ac.ritsumei.cs.draw.Rect.name }
   3 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Rect( ) ]
   1 assignment D = {  } U = {  }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { super.color, super.outlineWidth } U = { super.color, super.outlineWidth } TO = jp.ac.ritsumei.cs.draw.Figure#Figure( )
   4 actualOut D = { , super.color, super.outlineWidth } U = { super.color, super.outlineWidth }
   6 formalOut D = {  } U = { $_, super.color, super.outlineWidth }
--
   0 methodEntry [ create( java.awt.Color float ) ]
   1 formalIn D = { c$0 } U = {  }
   2 formalIn D = { w$1 } U = {  }
   3 returnSt D = { $_ } U = { Rect.!Rect }
   4 receiver D = {  } U = {  }
   5 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Rect#Rect( java.awt.Color float )
   6 actualIn D = {  } U = { c$0 }
   7 actualIn D = {  } U = { w$1 }
   8 actualOut D = { Rect.!Rect } U = {  }
  10 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ draw( java.awt.Graphics ) ]
   1 formalIn D = { g$0 } U = {  }
   2 localDeclaration D = { g2$1 } U = { g$0 }
   3 assignment D = {  } U = { g2$1.!setColor }
   4 receiver D = {  } U = { g2$1 }
   5 methodCall D = {  } U = { this.color } TO = java.awt.Graphics#setColor( java.awt.Color )
   6 actualOut D = { g2$1.!setColor } U = {  }
   7 assignment D = {  } U = { g2$1.!setStroke }
   8 receiver D = {  } U = { g2$1 }
   9 methodCall D = {  } U = { BasicStroke.!BasicStroke } TO = java.awt.Graphics2D#setStroke( java.awt.Stroke )
  10 receiver D = {  } U = {  }
  11 constructorCall D = { BasicStroke.cap, BasicStroke.dash, BasicStroke.dash_phase, BasicStroke.join, BasicStroke.miterlimit, BasicStroke.width } U = { this.outlineWidth } TO = java.awt.BasicStroke#BasicStroke( float )
  12 actualOut D = { BasicStroke.!BasicStroke, BasicStroke.cap, BasicStroke.dash, BasicStroke.dash_phase, BasicStroke.join, BasicStroke.miterlimit, BasicStroke.width } U = {  }
  13 actualOut D = { g2$1.!setStroke } U = {  }
  14 assignment D = {  } U = { g$0.!drawRect }
  15 receiver D = {  } U = { g$0 }
  16 methodCall D = {  } U = { this.!getHeight, this.!getLeft, this.!getTop, this.!getWidth } TO = java.awt.Graphics#drawRect( int int int int )
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getLeft( )
  19 actualOut D = { this.!getLeft } U = { this.endX, this.startX }
  20 receiver D = {  } U = {  }
  21 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getTop( )
  22 actualOut D = { this.!getTop } U = { this.endY, this.startY }
  23 receiver D = {  } U = {  }
  24 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getWidth( )
  25 actualOut D = { this.!getWidth } U = { this.endX, this.startX }
  26 receiver D = {  } U = {  }
  27 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getHeight( )
  28 actualOut D = { this.!getHeight } U = { this.endY, this.startY }
  29 actualOut D = { g$0.!drawRect } U = {  }
  31 formalOut D = {  } U = { $_, BasicStroke.cap, BasicStroke.dash, BasicStroke.dash_phase, BasicStroke.join, BasicStroke.miterlimit, BasicStroke.width }
--
   0 fieldEntry [ name ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.Rect.name } U = { $java.lang.String, jp.ac.ritsumei.cs.draw.Rect.name }
--
   0: drawGrabbedFigure( java.awt.Graphics )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 23 trueControlDependence
  17: 0 -> 24 trueControlDependence
  18: 0 -> 25 trueControlDependence
  19: 0 -> 26 trueControlDependence
  20: 0 -> 27 trueControlDependence
  21: 0 -> 28 trueControlDependence
  22: 0 -> 29 trueControlDependence
  23: 0 -> 3 trueControlDependence
  24: 0 -> 30 trueControlDependence
  25: 0 -> 31 trueControlDependence
  26: 0 -> 32 trueControlDependence
  27: 0 -> 33 trueControlDependence
  28: 0 -> 34 trueControlDependence
  29: 0 -> 35 trueControlDependence
  30: 0 -> 36 trueControlDependence
  31: 0 -> 37 trueControlDependence
  32: 0 -> 38 trueControlDependence
  33: 0 -> 39 trueControlDependence
  34: 0 -> 4 trueControlDependence
  35: 0 -> 40 trueControlDependence
  36: 0 -> 41 trueControlDependence
  37: 0 -> 42 trueControlDependence
  38: 0 -> 43 trueControlDependence
  39: 0 -> 44 trueControlDependence
  40: 0 -> 45 trueControlDependence
  41: 0 -> 46 trueControlDependence
  42: 0 -> 47 trueControlDependence
  43: 0 -> 48 trueControlDependence
  44: 0 -> 49 trueControlDependence
  45: 0 -> 5 trueControlDependence
  46: 0 -> 50 trueControlDependence
  47: 0 -> 51 trueControlDependence
  48: 0 -> 52 trueControlDependence
  49: 0 -> 53 trueControlDependence
  50: 0 -> 54 trueControlDependence
  51: 0 -> 55 trueControlDependence
  52: 0 -> 56 trueControlDependence
  53: 0 -> 57 trueControlDependence
  54: 0 -> 59 trueControlDependence
  55: 0 -> 6 trueControlDependence
  56: 0 -> 7 trueControlDependence
  57: 0 -> 8 trueControlDependence
  58: 0 -> 9 trueControlDependence
  59: 1 -> 22 loopIndependentDefUseDependence g$0
  60: 1 -> 3 loopIndependentDefUseDependence g$0
  61: 1 -> 35 loopIndependentDefUseDependence g$0
  62: 1 -> 48 loopIndependentDefUseDependence g$0
  63: 1 -> 9 loopIndependentDefUseDependence g$0
  64: 13 -> 10 loopIndependentDefUseDependence this.!getLeft
  65: 13 -> 26 outputDependence this.!getLeft
  66: 17 -> 14 loopIndependentDefUseDependence this.!getTop
  67: 17 -> 43 outputDependence this.!getTop
  68: 18 -> 31 outputDependence this.!drawGrabbedMark
  69: 18 -> 6 loopIndependentDefUseDependence this.!drawGrabbedMark
  70: 26 -> 23 loopIndependentDefUseDependence this.!getLeft
  71: 30 -> 27 loopIndependentDefUseDependence this.!getBottom
  72: 30 -> 56 outputDependence this.!getBottom
  73: 31 -> 19 loopIndependentDefUseDependence this.!drawGrabbedMark
  74: 31 -> 44 outputDependence this.!drawGrabbedMark
  75: 39 -> 36 loopIndependentDefUseDependence this.!getRight
  76: 39 -> 52 outputDependence this.!getRight
  77: 43 -> 40 loopIndependentDefUseDependence this.!getTop
  78: 44 -> 32 loopIndependentDefUseDependence this.!drawGrabbedMark
  79: 44 -> 57 outputDependence this.!drawGrabbedMark
  80: 5 -> 2 loopIndependentDefUseDependence g$0.!setColor
  81: 52 -> 49 loopIndependentDefUseDependence this.!getRight
  82: 56 -> 53 loopIndependentDefUseDependence this.!getBottom
  83: 57 -> 45 loopIndependentDefUseDependence this.!drawGrabbedMark
--
   0: Rect( int )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 0 -> 4 trueControlDependence
   5: 0 -> 5 trueControlDependence
   6: 0 -> 6 trueControlDependence
   7: 0 -> 8 trueControlDependence
   8: 1 -> 5 loopIndependentDefUseDependence w$0
   9: 4 -> 6 loopIndependentDefUseDependence super.color
  10: 4 -> 6 loopIndependentDefUseDependence super.outlineWidth
  11: 5 -> 6 summary
  12: 6 -> 2 loopIndependentDefUseDependence 
  13: 6 -> 8 loopIndependentDefUseDependence super.color
  14: 6 -> 8 loopIndependentDefUseDependence super.outlineWidth
--
   0: drawOutline( java.awt.Graphics )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 23 trueControlDependence
  17: 0 -> 24 trueControlDependence
  18: 0 -> 25 trueControlDependence
  19: 0 -> 26 trueControlDependence
  20: 0 -> 28 trueControlDependence
  21: 0 -> 3 trueControlDependence
  22: 0 -> 4 trueControlDependence
  23: 0 -> 5 trueControlDependence
  24: 0 -> 6 trueControlDependence
  25: 0 -> 7 trueControlDependence
  26: 0 -> 8 trueControlDependence
  27: 0 -> 9 trueControlDependence
  28: 1 -> 2 loopIndependentDefUseDependence g$0
  29: 10 -> 7 loopIndependentDefUseDependence g2$1.!setStroke
  30: 16 -> 13 loopIndependentDefUseDependence this.!getLeft
  31: 19 -> 13 loopIndependentDefUseDependence this.!getTop
  32: 2 -> 12 declaration
  33: 2 -> 12 loopIndependentDefUseDependence g2$1
  34: 2 -> 4 declaration
  35: 2 -> 4 loopIndependentDefUseDependence g2$1
  36: 2 -> 8 declaration
  37: 2 -> 8 loopIndependentDefUseDependence g2$1
  38: 22 -> 13 loopIndependentDefUseDependence this.!getWidth
  39: 25 -> 13 loopIndependentDefUseDependence this.!getHeight
  40: 26 -> 11 loopIndependentDefUseDependence g2$1.!drawRect
  41: 6 -> 3 loopIndependentDefUseDependence g2$1.!setColor
--
   0: createClone( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 21 trueControlDependence
  14: 0 -> 3 trueControlDependence
  15: 0 -> 4 trueControlDependence
  16: 0 -> 5 trueControlDependence
  17: 0 -> 6 trueControlDependence
  18: 0 -> 7 trueControlDependence
  19: 0 -> 8 trueControlDependence
  20: 0 -> 9 trueControlDependence
  21: 1 -> 14 declaration
  22: 1 -> 14 loopIndependentDefUseDependence figure$0
  23: 1 -> 19 declaration
  24: 1 -> 19 loopIndependentDefUseDependence figure$0
  25: 1 -> 8 declaration
  26: 1 -> 8 loopIndependentDefUseDependence figure$0
  27: 10 -> 12 summary
  28: 11 -> 12 summary
  29: 12 -> 21 loopIndependentDefUseDependence figure$0.startX
  30: 12 -> 21 loopIndependentDefUseDependence figure$0.startY
  31: 12 -> 7 loopIndependentDefUseDependence figure$0.!setStart
  32: 15 -> 18 loopIndependentDefUseDependence figure$0.endX
  33: 15 -> 18 loopIndependentDefUseDependence figure$0.endY
  34: 16 -> 18 summary
  35: 17 -> 18 summary
  36: 18 -> 13 loopIndependentDefUseDependence figure$0.!setEnd
  37: 18 -> 21 loopIndependentDefUseDependence figure$0.endX
  38: 18 -> 21 loopIndependentDefUseDependence figure$0.endY
  39: 19 -> 21 loopIndependentDefUseDependence $_
  40: 4 -> 6 summary
  41: 5 -> 6 summary
  42: 6 -> 1 loopIndependentDefUseDependence figure$0.!Rect
  43: 9 -> 12 loopIndependentDefUseDependence figure$0.startX
  44: 9 -> 12 loopIndependentDefUseDependence figure$0.startY
--
   0: drawRubber( java.awt.Graphics )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 24 trueControlDependence
  17: 0 -> 3 trueControlDependence
  18: 0 -> 4 trueControlDependence
  19: 0 -> 5 trueControlDependence
  20: 0 -> 6 trueControlDependence
  21: 0 -> 7 trueControlDependence
  22: 0 -> 8 trueControlDependence
  23: 0 -> 9 trueControlDependence
  24: 1 -> 2 loopIndependentDefUseDependence g$0
  25: 12 -> 9 loopIndependentDefUseDependence this.!getLeft
  26: 15 -> 9 loopIndependentDefUseDependence this.!getTop
  27: 18 -> 9 loopIndependentDefUseDependence this.!getWidth
  28: 2 -> 4 declaration
  29: 2 -> 4 loopIndependentDefUseDependence g2$1
  30: 2 -> 8 declaration
  31: 2 -> 8 loopIndependentDefUseDependence g2$1
  32: 21 -> 9 loopIndependentDefUseDependence this.!getHeight
  33: 22 -> 7 loopIndependentDefUseDependence g2$1.!drawRect
  34: 6 -> 3 loopIndependentDefUseDependence g2$1.!setColor
--
   0: Rect( java.awt.Color )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 0 -> 4 trueControlDependence
   5: 0 -> 5 trueControlDependence
   6: 0 -> 6 trueControlDependence
   7: 0 -> 8 trueControlDependence
   8: 1 -> 5 loopIndependentDefUseDependence c$0
   9: 4 -> 6 loopIndependentDefUseDependence super.color
  10: 4 -> 6 loopIndependentDefUseDependence super.outlineWidth
  11: 5 -> 6 summary
  12: 6 -> 2 loopIndependentDefUseDependence 
  13: 6 -> 8 loopIndependentDefUseDependence super.color
  14: 6 -> 8 loopIndependentDefUseDependence super.outlineWidth
--
   0: isInRect( int int int int int int )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 0 -> 4 trueControlDependence
   5: 0 -> 5 trueControlDependence
   6: 0 -> 6 trueControlDependence
   7: 0 -> 7 trueControlDependence
   8: 0 -> 9 trueControlDependence
   9: 1 -> 7 loopIndependentDefUseDependence x$0
  10: 2 -> 7 loopIndependentDefUseDependence y$1
  11: 3 -> 7 loopIndependentDefUseDependence x1$2
  12: 4 -> 7 loopIndependentDefUseDependence y1$3
  13: 5 -> 7 loopIndependentDefUseDependence x2$4
  14: 6 -> 7 loopIndependentDefUseDependence y2$5
  15: 7 -> 9 loopIndependentDefUseDependence $_
--
   0: isGrabbed( int int )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 23 trueControlDependence
  17: 0 -> 24 trueControlDependence
  18: 0 -> 25 trueControlDependence
  19: 0 -> 26 trueControlDependence
  20: 0 -> 27 trueControlDependence
  21: 0 -> 28 trueControlDependence
  22: 0 -> 3 trueControlDependence
  23: 0 -> 4 trueControlDependence
  24: 0 -> 5 trueControlDependence
  25: 0 -> 58 trueControlDependence
  26: 0 -> 6 trueControlDependence
  27: 0 -> 7 trueControlDependence
  28: 0 -> 8 trueControlDependence
  29: 0 -> 9 trueControlDependence
  30: 1 -> 22 loopIndependentDefUseDependence x$0
  31: 1 -> 50 loopIndependentDefUseDependence x$0
  32: 10 -> 38 outputDependence this.!getTop
  33: 10 -> 7 loopIndependentDefUseDependence this.!getTop
  34: 11 -> 26 declaration
  35: 11 -> 26 loopIndependentDefUseDependence ox2$4
  36: 14 -> 11 loopIndependentDefUseDependence this.!getRight
  37: 14 -> 42 outputDependence this.!getRight
  38: 15 -> 27 declaration
  39: 15 -> 27 loopIndependentDefUseDependence oy2$5
  40: 18 -> 15 loopIndependentDefUseDependence this.!getBottom
  41: 18 -> 46 outputDependence this.!getBottom
  42: 19 -> 29 trueControlDependence
  43: 19 -> 31 falseControlDependence
  44: 19 -> 32 trueControlDependence
  45: 19 -> 33 falseControlDependence
  46: 19 -> 34 trueControlDependence
  47: 19 -> 35 falseControlDependence
  48: 19 -> 36 trueControlDependence
  49: 19 -> 37 falseControlDependence
  50: 19 -> 38 trueControlDependence
  51: 19 -> 39 falseControlDependence
  52: 19 -> 40 trueControlDependence
  53: 19 -> 41 falseControlDependence
  54: 19 -> 42 trueControlDependence
  55: 19 -> 43 falseControlDependence
  56: 19 -> 44 trueControlDependence
  57: 19 -> 45 falseControlDependence
  58: 19 -> 46 trueControlDependence
  59: 19 -> 47 falseControlDependence
  60: 19 -> 48 trueControlDependence
  61: 19 -> 49 falseControlDependence
  62: 19 -> 50 trueControlDependence
  63: 19 -> 51 trueControlDependence
  64: 19 -> 52 trueControlDependence
  65: 19 -> 53 trueControlDependence
  66: 19 -> 54 trueControlDependence
  67: 19 -> 55 trueControlDependence
  68: 19 -> 56 trueControlDependence
  69: 2 -> 23 loopIndependentDefUseDependence y$1
  70: 2 -> 51 loopIndependentDefUseDependence y$1
  71: 22 -> 28 summary
  72: 23 -> 28 summary
  73: 24 -> 28 summary
  74: 25 -> 28 summary
  75: 26 -> 28 summary
  76: 27 -> 28 summary
  77: 28 -> 19 loopIndependentDefUseDependence this.!isInRect
  78: 28 -> 56 outputDependence this.!isInRect
  79: 29 -> 31 fallThroughControlDependence
  80: 29 -> 32 trueControlDependence
  81: 29 -> 33 fallThroughControlDependence
  82: 29 -> 34 trueControlDependence
  83: 29 -> 35 fallThroughControlDependence
  84: 29 -> 36 trueControlDependence
  85: 29 -> 37 fallThroughControlDependence
  86: 29 -> 38 trueControlDependence
  87: 29 -> 39 fallThroughControlDependence
  88: 29 -> 40 trueControlDependence
  89: 29 -> 41 fallThroughControlDependence
  90: 29 -> 42 trueControlDependence
  91: 29 -> 43 fallThroughControlDependence
  92: 29 -> 44 trueControlDependence
  93: 29 -> 45 fallThroughControlDependence
  94: 29 -> 46 trueControlDependence
  95: 29 -> 47 fallThroughControlDependence
  96: 29 -> 48 trueControlDependence
  97: 29 -> 49 fallThroughControlDependence
  98: 29 -> 50 trueControlDependence
  99: 29 -> 51 trueControlDependence
 100: 29 -> 52 trueControlDependence
 101: 29 -> 53 trueControlDependence
 102: 29 -> 54 trueControlDependence
 103: 29 -> 55 trueControlDependence
 104: 29 -> 56 trueControlDependence
 105: 29 -> 58 loopIndependentDefUseDependence $_
 106: 3 -> 24 declaration
 107: 3 -> 24 loopIndependentDefUseDependence ox1$2
 108: 31 -> 52 declaration
 109: 31 -> 52 loopIndependentDefUseDependence ix1$6
 110: 34 -> 31 loopIndependentDefUseDependence this.!getLeft
 111: 35 -> 53 declaration
 112: 35 -> 53 loopIndependentDefUseDependence iy1$7
 113: 38 -> 35 loopIndependentDefUseDependence this.!getTop
 114: 39 -> 54 declaration
 115: 39 -> 54 loopIndependentDefUseDependence ix2$8
 116: 42 -> 39 loopIndependentDefUseDependence this.!getRight
 117: 43 -> 55 declaration
 118: 43 -> 55 loopIndependentDefUseDependence iy2$9
 119: 46 -> 43 loopIndependentDefUseDependence this.!getBottom
 120: 47 -> 58 loopIndependentDefUseDependence $_
 121: 50 -> 56 summary
 122: 51 -> 56 summary
 123: 52 -> 56 summary
 124: 53 -> 56 summary
 125: 54 -> 56 summary
 126: 55 -> 56 summary
 127: 56 -> 47 loopIndependentDefUseDependence this.!isInRect
 128: 6 -> 3 loopIndependentDefUseDependence this.!getLeft
 129: 6 -> 34 outputDependence this.!getLeft
 130: 7 -> 25 declaration
 131: 7 -> 25 loopIndependentDefUseDependence oy1$3
--
   0: paintIcon( java.awt.Graphics int int int int )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 11 trueControlDependence
   3: 0 -> 2 trueControlDependence
   4: 0 -> 3 trueControlDependence
   5: 0 -> 4 trueControlDependence
   6: 0 -> 5 trueControlDependence
   7: 0 -> 6 trueControlDependence
   8: 0 -> 7 trueControlDependence
   9: 0 -> 8 trueControlDependence
  10: 0 -> 9 trueControlDependence
  11: 1 -> 7 loopIndependentDefUseDependence g$0
  12: 2 -> 8 loopIndependentDefUseDependence x$1
  13: 3 -> 8 loopIndependentDefUseDependence y$2
  14: 4 -> 8 loopIndependentDefUseDependence w$3
  15: 5 -> 8 loopIndependentDefUseDependence h$4
  16: 9 -> 6 loopIndependentDefUseDependence g$0.!drawRect
--
   0: Rect( java.awt.Color float )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 2 trueControlDependence
   4: 0 -> 3 trueControlDependence
   5: 0 -> 4 trueControlDependence
   6: 0 -> 5 trueControlDependence
   7: 0 -> 6 trueControlDependence
   8: 0 -> 7 trueControlDependence
   9: 0 -> 8 trueControlDependence
  10: 1 -> 6 loopIndependentDefUseDependence c$0
  11: 2 -> 7 loopIndependentDefUseDependence w$1
  12: 5 -> 8 loopIndependentDefUseDependence super.color
  13: 5 -> 8 loopIndependentDefUseDependence super.outlineWidth
  14: 6 -> 8 summary
  15: 7 -> 8 summary
  16: 8 -> 10 loopIndependentDefUseDependence super.color
  17: 8 -> 10 loopIndependentDefUseDependence super.outlineWidth
  18: 8 -> 3 loopIndependentDefUseDependence 
--
   0: getName( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 3 trueControlDependence
   3: 1 -> 3 loopIndependentDefUseDependence $_
--
   0: Rect( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 0 -> 4 trueControlDependence
   5: 0 -> 6 trueControlDependence
   6: 3 -> 4 loopIndependentDefUseDependence super.color
   7: 3 -> 4 loopIndependentDefUseDependence super.outlineWidth
   8: 4 -> 1 loopIndependentDefUseDependence 
   9: 4 -> 6 loopIndependentDefUseDependence super.color
  10: 4 -> 6 loopIndependentDefUseDependence super.outlineWidth
--
   0: create( java.awt.Color float )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 2 trueControlDependence
   4: 0 -> 3 trueControlDependence
   5: 0 -> 4 trueControlDependence
   6: 0 -> 5 trueControlDependence
   7: 0 -> 6 trueControlDependence
   8: 0 -> 7 trueControlDependence
   9: 0 -> 8 trueControlDependence
  10: 1 -> 6 loopIndependentDefUseDependence c$0
  11: 2 -> 7 loopIndependentDefUseDependence w$1
  12: 3 -> 10 loopIndependentDefUseDependence $_
  13: 6 -> 8 summary
  14: 7 -> 8 summary
  15: 8 -> 3 loopIndependentDefUseDependence Rect.!Rect
--
   0: draw( java.awt.Graphics )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 23 trueControlDependence
  17: 0 -> 24 trueControlDependence
  18: 0 -> 25 trueControlDependence
  19: 0 -> 26 trueControlDependence
  20: 0 -> 27 trueControlDependence
  21: 0 -> 28 trueControlDependence
  22: 0 -> 29 trueControlDependence
  23: 0 -> 3 trueControlDependence
  24: 0 -> 31 trueControlDependence
  25: 0 -> 4 trueControlDependence
  26: 0 -> 5 trueControlDependence
  27: 0 -> 6 trueControlDependence
  28: 0 -> 7 trueControlDependence
  29: 0 -> 8 trueControlDependence
  30: 0 -> 9 trueControlDependence
  31: 1 -> 15 loopIndependentDefUseDependence g$0
  32: 1 -> 2 loopIndependentDefUseDependence g$0
  33: 11 -> 12 outputDependence BasicStroke.cap
  34: 11 -> 12 outputDependence BasicStroke.dash
  35: 11 -> 12 outputDependence BasicStroke.dash_phase
  36: 11 -> 12 outputDependence BasicStroke.join
  37: 11 -> 12 outputDependence BasicStroke.miterlimit
  38: 11 -> 12 outputDependence BasicStroke.width
  39: 12 -> 31 loopIndependentDefUseDependence BasicStroke.cap
  40: 12 -> 31 loopIndependentDefUseDependence BasicStroke.dash
  41: 12 -> 31 loopIndependentDefUseDependence BasicStroke.dash_phase
  42: 12 -> 31 loopIndependentDefUseDependence BasicStroke.join
  43: 12 -> 31 loopIndependentDefUseDependence BasicStroke.miterlimit
  44: 12 -> 31 loopIndependentDefUseDependence BasicStroke.width
  45: 12 -> 9 loopIndependentDefUseDependence BasicStroke.!BasicStroke
  46: 13 -> 7 loopIndependentDefUseDependence g2$1.!setStroke
  47: 19 -> 16 loopIndependentDefUseDependence this.!getLeft
  48: 2 -> 4 declaration
  49: 2 -> 4 loopIndependentDefUseDependence g2$1
  50: 2 -> 8 declaration
  51: 2 -> 8 loopIndependentDefUseDependence g2$1
  52: 22 -> 16 loopIndependentDefUseDependence this.!getTop
  53: 25 -> 16 loopIndependentDefUseDependence this.!getWidth
  54: 28 -> 16 loopIndependentDefUseDependence this.!getHeight
  55: 29 -> 14 loopIndependentDefUseDependence g$0.!drawRect
  56: 6 -> 3 loopIndependentDefUseDependence g2$1.!setColor
--
   0: name
   1: 0 -> 1 trueControlDependence
--
----- ClDG (to here) -----

