----- ClDG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.Rect
   0 methodEntry [ jp.ac.ritsumei.cs.draw.Rect#drawGrabbedFigure( java.awt.Graphics ) ]
   1 formalIn D = { g$0 } U = {  }
   2 assignment D = {  } U = { g$0.!setColor( java.awt.Color ) }
   3 receiver D = {  } U = { g$0 }
   4 methodCall D = {  } U = { this.color } TO = java.awt.Graphics#setColor( java.awt.Color )
   5 actualOut D = { g$0.!setColor( java.awt.Color ) } U = {  }
   6 assignment D = {  } U = { this.!drawGrabbedMark( java.awt.Graphics int int ) }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#drawGrabbedMark( java.awt.Graphics int int )
   9 actualIn D = {  } U = { g$0 }
  10 actualIn D = {  } U = { this.!getLeft( ) }
  11 receiver D = {  } U = {  }
  12 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getLeft( )
  13 actualOut D = { this.!getLeft( ) } U = { this.endX, this.startX }
  14 actualIn D = {  } U = { this.!getTop( ) }
  15 receiver D = {  } U = {  }
  16 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getTop( )
  17 actualOut D = { this.!getTop( ) } U = { this.endY, this.startY }
  18 actualOut D = { this.!drawGrabbedMark( java.awt.Graphics int int ) } U = {  }
  19 assignment D = {  } U = { this.!drawGrabbedMark( java.awt.Graphics int int ) }
  20 receiver D = {  } U = {  }
  21 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#drawGrabbedMark( java.awt.Graphics int int )
  22 actualIn D = {  } U = { g$0 }
  23 actualIn D = {  } U = { this.!getLeft( ) }
  24 receiver D = {  } U = {  }
  25 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getLeft( )
  26 actualOut D = { this.!getLeft( ) } U = { this.endX, this.startX }
  27 actualIn D = {  } U = { this.!getBottom( ) }
  28 receiver D = {  } U = {  }
  29 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getBottom( )
  30 actualOut D = { this.!getBottom( ) } U = { this.endY, this.startY }
  31 actualOut D = { this.!drawGrabbedMark( java.awt.Graphics int int ) } U = {  }
  32 assignment D = {  } U = { this.!drawGrabbedMark( java.awt.Graphics int int ) }
  33 receiver D = {  } U = {  }
  34 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#drawGrabbedMark( java.awt.Graphics int int )
  35 actualIn D = {  } U = { g$0 }
  36 actualIn D = {  } U = { this.!getRight( ) }
  37 receiver D = {  } U = {  }
  38 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getRight( )
  39 actualOut D = { this.!getRight( ) } U = { this.endX, this.startX }
  40 actualIn D = {  } U = { this.!getTop( ) }
  41 receiver D = {  } U = {  }
  42 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getTop( )
  43 actualOut D = { this.!getTop( ) } U = { this.endY, this.startY }
  44 actualOut D = { this.!drawGrabbedMark( java.awt.Graphics int int ) } U = {  }
  45 assignment D = {  } U = { this.!drawGrabbedMark( java.awt.Graphics int int ) }
  46 receiver D = {  } U = {  }
  47 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#drawGrabbedMark( java.awt.Graphics int int )
  48 actualIn D = {  } U = { g$0 }
  49 actualIn D = {  } U = { this.!getRight( ) }
  50 receiver D = {  } U = {  }
  51 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getRight( )
  52 actualOut D = { this.!getRight( ) } U = { this.endX, this.startX }
  53 actualIn D = {  } U = { this.!getBottom( ) }
  54 receiver D = {  } U = {  }
  55 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getBottom( )
  56 actualOut D = { this.!getBottom( ) } U = { this.endY, this.startY }
  57 actualOut D = { this.!drawGrabbedMark( java.awt.Graphics int int ) } U = {  }
  59 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ jp.ac.ritsumei.cs.draw.Rect#Rect( int ) ]
   1 formalIn D = { w$0 } U = {  }
   2 assignment D = {  } U = { super.!Figure( float ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = { Color.black } TO = jp.ac.ritsumei.cs.draw.Figure#Figure( float )
   5 actualIn D = {  } U = { w$0 }
   6 actualOut D = { super.!Figure( float ) } U = { Color.black }
   8 formalOut D = {  } U = { $_ }
   4+ actualOutByFieldAccess D = { super.color } U = {  }
   4+ actualOutByFieldAccess D = { super.outlineWidth } U = {  }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.Rect#drawOutline( java.awt.Graphics ) ]
   1 formalIn D = { g$0 } U = {  }
   2 localDeclaration D = { g2$1 } U = { g$0 }
   3 assignment D = {  } U = { g2$1.!setColor( java.awt.Color ) }
   4 receiver D = {  } U = { g2$1 }
   5 methodCall D = {  } U = { this.color } TO = java.awt.Graphics#setColor( java.awt.Color )
   6 actualOut D = { g2$1.!setColor( java.awt.Color ) } U = {  }
   7 assignment D = {  } U = { g2$1.!setStroke( java.awt.Stroke ) }
   8 receiver D = {  } U = { g2$1 }
   9 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.Figure.dotted } TO = java.awt.Graphics2D#setStroke( java.awt.Stroke )
  10 actualOut D = { g2$1.!setStroke( java.awt.Stroke ) } U = {  }
  11 assignment D = {  } U = { g2$1.!drawRect( int int int int ) }
  12 receiver D = {  } U = { g2$1 }
  13 methodCall D = {  } U = { this.!getHeight( ), this.!getLeft( ), this.!getTop( ), this.!getWidth( ) } TO = java.awt.Graphics#drawRect( int int int int )
  14 receiver D = {  } U = {  }
  15 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getLeft( )
  16 actualOut D = { this.!getLeft( ) } U = { this.endX, this.startX }
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getTop( )
  19 actualOut D = { this.!getTop( ) } U = { this.endY, this.startY }
  20 receiver D = {  } U = {  }
  21 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getWidth( )
  22 actualOut D = { this.!getWidth( ) } U = { this.endX, this.startX }
  23 receiver D = {  } U = {  }
  24 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getHeight( )
  25 actualOut D = { this.!getHeight( ) } U = { this.endY, this.startY }
  26 actualOut D = { g2$1.!drawRect( int int int int ) } U = {  }
  28 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.Rect#createClone( ) ]
   1 localDeclaration D = { figure$0 } U = { jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Rect#Rect( java.awt.Color float )
   4 actualIn D = {  } U = { this.color }
   5 actualIn D = {  } U = { this.outlineWidth }
   6 actualOut D = { jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ) } U = {  }
   7 assignment D = {  } U = { figure$0.!setStart( int int ) }
   8 receiver D = {  } U = { figure$0 }
   9 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#setStart( int int )
  10 actualIn D = {  } U = { this.startX }
  11 actualIn D = {  } U = { this.startY }
  12 actualOut D = { figure$0.!setStart( int int ) } U = {  }
  13 assignment D = {  } U = { figure$0.!setEnd( int int ) }
  14 receiver D = {  } U = { figure$0 }
  15 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#setEnd( int int )
  16 actualIn D = {  } U = { this.endX }
  17 actualIn D = {  } U = { this.endY }
  18 actualOut D = { figure$0.!setEnd( int int ) } U = {  }
  19 returnSt D = { $_ } U = { figure$0, figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY, jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ).color, jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ).endX, jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ).endY, jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ).outlineWidth, jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ).startX, jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ).startY }
  21 formalOut D = {  } U = { $_ }
   3+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ).color } U = {  }
   3+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ).outlineWidth } U = {  }
   9+ actualOutByFieldAccess D = { figure$0.startX } U = {  }
   9+ actualOutByFieldAccess D = { figure$0.startY } U = {  }
  15+ actualOutByFieldAccess D = { figure$0.endX } U = {  }
  15+ actualOutByFieldAccess D = { figure$0.endY } U = {  }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.Rect#drawRubber( java.awt.Graphics ) ]
   1 formalIn D = { g$0 } U = {  }
   2 localDeclaration D = { g2$1 } U = { g$0 }
   3 assignment D = {  } U = { g2$1.!setColor( java.awt.Color ) }
   4 receiver D = {  } U = { g2$1 }
   5 methodCall D = {  } U = { this.color } TO = java.awt.Graphics#setColor( java.awt.Color )
   6 actualOut D = { g2$1.!setColor( java.awt.Color ) } U = {  }
   7 assignment D = {  } U = { g2$1.!drawRect( int int int int ) }
   8 receiver D = {  } U = { g2$1 }
   9 methodCall D = {  } U = { this.!getHeight( ), this.!getLeft( ), this.!getTop( ), this.!getWidth( ) } TO = java.awt.Graphics#drawRect( int int int int )
  10 receiver D = {  } U = {  }
  11 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getLeft( )
  12 actualOut D = { this.!getLeft( ) } U = { this.endX, this.startX }
  13 receiver D = {  } U = {  }
  14 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getTop( )
  15 actualOut D = { this.!getTop( ) } U = { this.endY, this.startY }
  16 receiver D = {  } U = {  }
  17 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getWidth( )
  18 actualOut D = { this.!getWidth( ) } U = { this.endX, this.startX }
  19 receiver D = {  } U = {  }
  20 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getHeight( )
  21 actualOut D = { this.!getHeight( ) } U = { this.endY, this.startY }
  22 actualOut D = { g2$1.!drawRect( int int int int ) } U = {  }
  24 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ jp.ac.ritsumei.cs.draw.Rect#Rect( java.awt.Color ) ]
   1 formalIn D = { c$0 } U = {  }
   2 assignment D = {  } U = { super.!Figure( java.awt.Color ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#Figure( java.awt.Color )
   5 actualIn D = {  } U = { c$0 }
   6 actualOut D = { super.!Figure( java.awt.Color ) } U = {  }
   8 formalOut D = {  } U = { $_ }
   4+ actualOutByFieldAccess D = { super.color } U = {  }
   4+ actualOutByFieldAccess D = { super.outlineWidth } U = {  }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.Rect#isInRect( int int int int int int ) ]
   1 formalIn D = { x$0 } U = {  }
   2 formalIn D = { y$1 } U = {  }
   3 formalIn D = { x1$2 } U = {  }
   4 formalIn D = { y1$3 } U = {  }
   5 formalIn D = { x2$4 } U = {  }
   6 formalIn D = { y2$5 } U = {  }
   7 returnSt D = { $_ } U = { x$0, x1$2, x2$4, y$1, y1$3, y2$5 }
   9 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.Rect#isGrabbed( int int ) ]
   1 formalIn D = { x$0 } U = {  }
   2 formalIn D = { y$1 } U = {  }
   3 localDeclaration D = { ox1$2 } U = { jp.ac.ritsumei.cs.draw.Figure.ALLOWABLE_GAP_WHEN_GRABBED, this.!getLeft( ) }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getLeft( )
   6 actualOut D = { this.!getLeft( ) } U = { this.endX, this.startX }
   7 localDeclaration D = { oy1$3 } U = { jp.ac.ritsumei.cs.draw.Figure.ALLOWABLE_GAP_WHEN_GRABBED, this.!getTop( ) }
   8 receiver D = {  } U = {  }
   9 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getTop( )
  10 actualOut D = { this.!getTop( ) } U = { this.endY, this.startY }
  11 localDeclaration D = { ox2$4 } U = { jp.ac.ritsumei.cs.draw.Figure.ALLOWABLE_GAP_WHEN_GRABBED, this.!getRight( ) }
  12 receiver D = {  } U = {  }
  13 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getRight( )
  14 actualOut D = { this.!getRight( ) } U = { this.endX, this.startX }
  15 localDeclaration D = { oy2$5 } U = { jp.ac.ritsumei.cs.draw.Figure.ALLOWABLE_GAP_WHEN_GRABBED, this.!getBottom( ) }
  16 receiver D = {  } U = {  }
  17 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getBottom( )
  18 actualOut D = { this.!getBottom( ) } U = { this.endY, this.startY }
  19 ifSt D = {  } U = { this.!isInRect( int int int int int int ) }
  20 receiver D = {  } U = {  }
  21 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Rect#isInRect( int int int int int int )
  22 actualIn D = {  } U = { x$0 }
  23 actualIn D = {  } U = { y$1 }
  24 actualIn D = {  } U = { ox1$2 }
  25 actualIn D = {  } U = { oy1$3 }
  26 actualIn D = {  } U = { ox2$4 }
  27 actualIn D = {  } U = { oy2$5 }
  28 actualOut D = { this.!isInRect( int int int int int int ) } U = {  }
  29 returnSt D = { $_ } U = {  }
  31 localDeclaration D = { ix1$6 } U = { jp.ac.ritsumei.cs.draw.Figure.ALLOWABLE_GAP_WHEN_GRABBED, this.!getLeft( ) }
  32 receiver D = {  } U = {  }
  33 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getLeft( )
  34 actualOut D = { this.!getLeft( ) } U = { this.endX, this.startX }
  35 localDeclaration D = { iy1$7 } U = { jp.ac.ritsumei.cs.draw.Figure.ALLOWABLE_GAP_WHEN_GRABBED, this.!getTop( ) }
  36 receiver D = {  } U = {  }
  37 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getTop( )
  38 actualOut D = { this.!getTop( ) } U = { this.endY, this.startY }
  39 localDeclaration D = { ix2$8 } U = { jp.ac.ritsumei.cs.draw.Figure.ALLOWABLE_GAP_WHEN_GRABBED, this.!getRight( ) }
  40 receiver D = {  } U = {  }
  41 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getRight( )
  42 actualOut D = { this.!getRight( ) } U = { this.endX, this.startX }
  43 localDeclaration D = { iy2$9 } U = { jp.ac.ritsumei.cs.draw.Figure.ALLOWABLE_GAP_WHEN_GRABBED, this.!getBottom( ) }
  44 receiver D = {  } U = {  }
  45 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getBottom( )
  46 actualOut D = { this.!getBottom( ) } U = { this.endY, this.startY }
  47 returnSt D = { $_ } U = { this.!isInRect( int int int int int int ) }
  48 receiver D = {  } U = {  }
  49 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Rect#isInRect( int int int int int int )
  50 actualIn D = {  } U = { x$0 }
  51 actualIn D = {  } U = { y$1 }
  52 actualIn D = {  } U = { ix1$6 }
  53 actualIn D = {  } U = { iy1$7 }
  54 actualIn D = {  } U = { ix2$8 }
  55 actualIn D = {  } U = { iy2$9 }
  56 actualOut D = { this.!isInRect( int int int int int int ) } U = {  }
  58 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.Rect#paintIcon( java.awt.Graphics int int int int ) ]
   1 formalIn D = { g$0 } U = {  }
   2 formalIn D = { x$1 } U = {  }
   3 formalIn D = { y$2 } U = {  }
   4 formalIn D = { w$3 } U = {  }
   5 formalIn D = { h$4 } U = {  }
   6 assignment D = {  } U = { g$0.!drawRect( int int int int ) }
   7 receiver D = {  } U = { g$0 }
   8 methodCall D = {  } U = { h$4, w$3, x$1, y$2 } TO = java.awt.Graphics#drawRect( int int int int )
   9 actualOut D = { g$0.!drawRect( int int int int ) } U = {  }
  11 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ jp.ac.ritsumei.cs.draw.Rect#Rect( java.awt.Color float ) ]
   1 formalIn D = { c$0 } U = {  }
   2 formalIn D = { w$1 } U = {  }
   3 assignment D = {  } U = { super.!Figure( java.awt.Color float ) }
   4 receiver D = {  } U = {  }
   5 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#Figure( java.awt.Color float )
   6 actualIn D = {  } U = { c$0 }
   7 actualIn D = {  } U = { w$1 }
   8 actualOut D = { super.!Figure( java.awt.Color float ) } U = {  }
  10 formalOut D = {  } U = { $_ }
   5+ actualOutByFieldAccess D = { super.color } U = {  }
   5+ actualOutByFieldAccess D = { super.outlineWidth } U = {  }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.Rect#getName( ) ]
   1 returnSt D = { $_ } U = { jp.ac.ritsumei.cs.draw.Rect.name }
   3 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ jp.ac.ritsumei.cs.draw.Rect#Rect( ) ]
   1 assignment D = {  } U = { super.!Figure( ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { Color.black } TO = jp.ac.ritsumei.cs.draw.Figure#Figure( )
   4 actualOut D = { super.!Figure( ) } U = { Color.black }
   6 formalOut D = {  } U = { $_ }
   3+ actualOutByFieldAccess D = { super.color } U = {  }
   3+ actualOutByFieldAccess D = { super.outlineWidth } U = {  }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.Rect#create( java.awt.Color float ) ]
   1 formalIn D = { c$0 } U = {  }
   2 formalIn D = { w$1 } U = {  }
   3 returnSt D = { $_ } U = { jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ), jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ).color, jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ).outlineWidth }
   4 receiver D = {  } U = {  }
   5 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Rect#Rect( java.awt.Color float )
   6 actualIn D = {  } U = { c$0 }
   7 actualIn D = {  } U = { w$1 }
   8 actualOut D = { jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ) } U = {  }
  10 formalOut D = {  } U = { $_ }
   5+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ).color } U = {  }
   5+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ).outlineWidth } U = {  }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.Rect#draw( java.awt.Graphics ) ]
   1 formalIn D = { g$0 } U = {  }
   2 localDeclaration D = { g2$1 } U = { g$0 }
   3 assignment D = {  } U = { g2$1.!setColor( java.awt.Color ) }
   4 receiver D = {  } U = { g2$1 }
   5 methodCall D = {  } U = { this.color } TO = java.awt.Graphics#setColor( java.awt.Color )
   6 actualOut D = { g2$1.!setColor( java.awt.Color ) } U = {  }
   7 assignment D = {  } U = { g2$1.!setStroke( java.awt.Stroke ) }
   8 receiver D = {  } U = { g2$1 }
   9 methodCall D = {  } U = { java.awt.BasicStroke.!BasicStroke( float ) } TO = java.awt.Graphics2D#setStroke( java.awt.Stroke )
  10 receiver D = {  } U = {  }
  11 constructorCall D = {  } U = { this.outlineWidth } TO = java.awt.BasicStroke#BasicStroke( float )
  12 actualOut D = { java.awt.BasicStroke.!BasicStroke( float ), java.awt.BasicStroke.!java.awt.BasicStroke.cap, java.awt.BasicStroke.!java.awt.BasicStroke.dash, java.awt.BasicStroke.!java.awt.BasicStroke.dash_phase, java.awt.BasicStroke.!java.awt.BasicStroke.join, java.awt.BasicStroke.!java.awt.BasicStroke.miterlimit, java.awt.BasicStroke.!java.awt.BasicStroke.width } U = {  }
  13 actualOut D = { g2$1.!setStroke( java.awt.Stroke ) } U = {  }
  14 assignment D = {  } U = { g$0.!drawRect( int int int int ) }
  15 receiver D = {  } U = { g$0 }
  16 methodCall D = {  } U = { this.!getHeight( ), this.!getLeft( ), this.!getTop( ), this.!getWidth( ) } TO = java.awt.Graphics#drawRect( int int int int )
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getLeft( )
  19 actualOut D = { this.!getLeft( ) } U = { this.endX, this.startX }
  20 receiver D = {  } U = {  }
  21 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getTop( )
  22 actualOut D = { this.!getTop( ) } U = { this.endY, this.startY }
  23 receiver D = {  } U = {  }
  24 methodCall D = {  } U = { this.endX, this.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getWidth( )
  25 actualOut D = { this.!getWidth( ) } U = { this.endX, this.startX }
  26 receiver D = {  } U = {  }
  27 methodCall D = {  } U = { this.endY, this.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getHeight( )
  28 actualOut D = { this.!getHeight( ) } U = { this.endY, this.startY }
  29 actualOut D = { g$0.!drawRect( int int int int ) } U = {  }
  31 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.Rect#name ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.Rect.name } U = { $java.lang.String, jp.ac.ritsumei.cs.draw.Rect.name }
--
   0: drawGrabbedFigure( java.awt.Graphics )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   17 trueControlDependence
  18:    0 ->   18 trueControlDependence
  19:    0 ->   19 trueControlDependence
  20:    0 ->   20 trueControlDependence
  21:    0 ->   21 trueControlDependence
  22:    0 ->   22 trueControlDependence
  23:    0 ->   23 trueControlDependence
  24:    0 ->   24 trueControlDependence
  25:    0 ->   25 trueControlDependence
  26:    0 ->   26 trueControlDependence
  27:    0 ->   27 trueControlDependence
  28:    0 ->   28 trueControlDependence
  29:    0 ->   29 trueControlDependence
  30:    0 ->   30 trueControlDependence
  31:    0 ->   31 trueControlDependence
  32:    0 ->   32 trueControlDependence
  33:    0 ->   33 trueControlDependence
  34:    0 ->   34 trueControlDependence
  35:    0 ->   35 trueControlDependence
  36:    0 ->   36 trueControlDependence
  37:    0 ->   37 trueControlDependence
  38:    0 ->   38 trueControlDependence
  39:    0 ->   39 trueControlDependence
  40:    0 ->   40 trueControlDependence
  41:    0 ->   41 trueControlDependence
  42:    0 ->   42 trueControlDependence
  43:    0 ->   43 trueControlDependence
  44:    0 ->   44 trueControlDependence
  45:    0 ->   45 trueControlDependence
  46:    0 ->   46 trueControlDependence
  47:    0 ->   47 trueControlDependence
  48:    0 ->   48 trueControlDependence
  49:    0 ->   49 trueControlDependence
  50:    0 ->   50 trueControlDependence
  51:    0 ->   51 trueControlDependence
  52:    0 ->   52 trueControlDependence
  53:    0 ->   53 trueControlDependence
  54:    0 ->   54 trueControlDependence
  55:    0 ->   55 trueControlDependence
  56:    0 ->   56 trueControlDependence
  57:    0 ->   57 trueControlDependence
  58:    0 ->   59 trueControlDependence
  59:    1 ->    3 loopIndependentDefUseDependence g$0
  60:    1 ->    9 loopIndependentDefUseDependence g$0
  61:    1 ->   22 loopIndependentDefUseDependence g$0
  62:    1 ->   35 loopIndependentDefUseDependence g$0
  63:    1 ->   48 loopIndependentDefUseDependence g$0
  64:    5 ->    2 loopIndependentDefUseDependence g$0.!setColor( java.awt.Color )
  65:   13 ->   10 loopIndependentDefUseDependence this.!getLeft( )
  66:   13 ->   26 outputDependence this.!getLeft( )
  67:   17 ->   14 loopIndependentDefUseDependence this.!getTop( )
  68:   17 ->   43 outputDependence this.!getTop( )
  69:   18 ->    6 loopIndependentDefUseDependence this.!drawGrabbedMark( java.awt.Graphics int int )
  70:   18 ->   31 outputDependence this.!drawGrabbedMark( java.awt.Graphics int int )
  71:   26 ->   23 loopIndependentDefUseDependence this.!getLeft( )
  72:   30 ->   27 loopIndependentDefUseDependence this.!getBottom( )
  73:   30 ->   56 outputDependence this.!getBottom( )
  74:   31 ->   19 loopIndependentDefUseDependence this.!drawGrabbedMark( java.awt.Graphics int int )
  75:   31 ->   44 outputDependence this.!drawGrabbedMark( java.awt.Graphics int int )
  76:   39 ->   36 loopIndependentDefUseDependence this.!getRight( )
  77:   39 ->   52 outputDependence this.!getRight( )
  78:   43 ->   40 loopIndependentDefUseDependence this.!getTop( )
  79:   44 ->   32 loopIndependentDefUseDependence this.!drawGrabbedMark( java.awt.Graphics int int )
  80:   44 ->   57 outputDependence this.!drawGrabbedMark( java.awt.Graphics int int )
  81:   52 ->   49 loopIndependentDefUseDependence this.!getRight( )
  82:   56 ->   53 loopIndependentDefUseDependence this.!getBottom( )
  83:   57 ->   45 loopIndependentDefUseDependence this.!drawGrabbedMark( java.awt.Graphics int int )
--
   0: Rect( int )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    4+ trueControlDependence
   6:    0 ->    4+ trueControlDependence
   7:    0 ->    5 trueControlDependence
   8:    0 ->    6 trueControlDependence
   9:    0 ->    8 trueControlDependence
  10:    1 ->    5 loopIndependentDefUseDependence w$0
  11:    6 ->    2 loopIndependentDefUseDependence super.!Figure( float )
--
   0: drawOutline( java.awt.Graphics )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   17 trueControlDependence
  18:    0 ->   18 trueControlDependence
  19:    0 ->   19 trueControlDependence
  20:    0 ->   20 trueControlDependence
  21:    0 ->   21 trueControlDependence
  22:    0 ->   22 trueControlDependence
  23:    0 ->   23 trueControlDependence
  24:    0 ->   24 trueControlDependence
  25:    0 ->   25 trueControlDependence
  26:    0 ->   26 trueControlDependence
  27:    0 ->   28 trueControlDependence
  28:    1 ->    2 loopIndependentDefUseDependence g$0
  29:    2 ->    4 declaration
  30:    2 ->    4 loopIndependentDefUseDependence g2$1
  31:    2 ->    8 declaration
  32:    2 ->    8 loopIndependentDefUseDependence g2$1
  33:    2 ->   12 declaration
  34:    2 ->   12 loopIndependentDefUseDependence g2$1
  35:    6 ->    3 loopIndependentDefUseDependence g2$1.!setColor( java.awt.Color )
  36:   10 ->    7 loopIndependentDefUseDependence g2$1.!setStroke( java.awt.Stroke )
  37:   16 ->   13 loopIndependentDefUseDependence this.!getLeft( )
  38:   19 ->   13 loopIndependentDefUseDependence this.!getTop( )
  39:   22 ->   13 loopIndependentDefUseDependence this.!getWidth( )
  40:   25 ->   13 loopIndependentDefUseDependence this.!getHeight( )
  41:   26 ->   11 loopIndependentDefUseDependence g2$1.!drawRect( int int int int )
--
   0: createClone( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    3+ trueControlDependence
   5:    0 ->    3+ trueControlDependence
   6:    0 ->    4 trueControlDependence
   7:    0 ->    5 trueControlDependence
   8:    0 ->    6 trueControlDependence
   9:    0 ->    7 trueControlDependence
  10:    0 ->    8 trueControlDependence
  11:    0 ->    9 trueControlDependence
  12:    0 ->    9+ trueControlDependence
  13:    0 ->    9+ trueControlDependence
  14:    0 ->   10 trueControlDependence
  15:    0 ->   11 trueControlDependence
  16:    0 ->   12 trueControlDependence
  17:    0 ->   13 trueControlDependence
  18:    0 ->   14 trueControlDependence
  19:    0 ->   15 trueControlDependence
  20:    0 ->   15+ trueControlDependence
  21:    0 ->   15+ trueControlDependence
  22:    0 ->   16 trueControlDependence
  23:    0 ->   17 trueControlDependence
  24:    0 ->   18 trueControlDependence
  25:    0 ->   19 trueControlDependence
  26:    0 ->   21 trueControlDependence
  27:    1 ->    8 declaration
  28:    1 ->    8 loopIndependentDefUseDependence figure$0
  29:    1 ->   14 declaration
  30:    1 ->   14 loopIndependentDefUseDependence figure$0
  31:    1 ->   19 declaration
  32:    1 ->   19 loopIndependentDefUseDependence figure$0
  33:    3+ ->   19 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ).color
  34:    3+ ->   19 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ).outlineWidth
  35:    6 ->    1 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float )
  36:    9+ ->   19 loopIndependentDefUseDependence figure$0.startX
  37:    9+ ->   19 loopIndependentDefUseDependence figure$0.startY
  38:   12 ->    7 loopIndependentDefUseDependence figure$0.!setStart( int int )
  39:   15+ ->   19 loopIndependentDefUseDependence figure$0.endX
  40:   15+ ->   19 loopIndependentDefUseDependence figure$0.endY
  41:   18 ->   13 loopIndependentDefUseDependence figure$0.!setEnd( int int )
  42:   19 ->   21 loopIndependentDefUseDependence $_
--
   0: drawRubber( java.awt.Graphics )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   17 trueControlDependence
  18:    0 ->   18 trueControlDependence
  19:    0 ->   19 trueControlDependence
  20:    0 ->   20 trueControlDependence
  21:    0 ->   21 trueControlDependence
  22:    0 ->   22 trueControlDependence
  23:    0 ->   24 trueControlDependence
  24:    1 ->    2 loopIndependentDefUseDependence g$0
  25:    2 ->    4 declaration
  26:    2 ->    4 loopIndependentDefUseDependence g2$1
  27:    2 ->    8 declaration
  28:    2 ->    8 loopIndependentDefUseDependence g2$1
  29:    6 ->    3 loopIndependentDefUseDependence g2$1.!setColor( java.awt.Color )
  30:   12 ->    9 loopIndependentDefUseDependence this.!getLeft( )
  31:   15 ->    9 loopIndependentDefUseDependence this.!getTop( )
  32:   18 ->    9 loopIndependentDefUseDependence this.!getWidth( )
  33:   21 ->    9 loopIndependentDefUseDependence this.!getHeight( )
  34:   22 ->    7 loopIndependentDefUseDependence g2$1.!drawRect( int int int int )
--
   0: Rect( java.awt.Color )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    4+ trueControlDependence
   6:    0 ->    4+ trueControlDependence
   7:    0 ->    5 trueControlDependence
   8:    0 ->    6 trueControlDependence
   9:    0 ->    8 trueControlDependence
  10:    1 ->    5 loopIndependentDefUseDependence c$0
  11:    6 ->    2 loopIndependentDefUseDependence super.!Figure( java.awt.Color )
--
   0: isInRect( int int int int int int )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    9 trueControlDependence
   9:    1 ->    7 loopIndependentDefUseDependence x$0
  10:    2 ->    7 loopIndependentDefUseDependence y$1
  11:    3 ->    7 loopIndependentDefUseDependence x1$2
  12:    4 ->    7 loopIndependentDefUseDependence y1$3
  13:    5 ->    7 loopIndependentDefUseDependence x2$4
  14:    6 ->    7 loopIndependentDefUseDependence y2$5
  15:    7 ->    9 loopIndependentDefUseDependence $_
--
   0: isGrabbed( int int )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   17 trueControlDependence
  18:    0 ->   18 trueControlDependence
  19:    0 ->   19 trueControlDependence
  20:    0 ->   20 trueControlDependence
  21:    0 ->   21 trueControlDependence
  22:    0 ->   22 trueControlDependence
  23:    0 ->   23 trueControlDependence
  24:    0 ->   24 trueControlDependence
  25:    0 ->   25 trueControlDependence
  26:    0 ->   26 trueControlDependence
  27:    0 ->   27 trueControlDependence
  28:    0 ->   28 trueControlDependence
  29:    0 ->   58 trueControlDependence
  30:    1 ->   22 loopIndependentDefUseDependence x$0
  31:    1 ->   50 loopIndependentDefUseDependence x$0
  32:    2 ->   23 loopIndependentDefUseDependence y$1
  33:    2 ->   51 loopIndependentDefUseDependence y$1
  34:    3 ->   24 declaration
  35:    3 ->   24 loopIndependentDefUseDependence ox1$2
  36:    6 ->    3 loopIndependentDefUseDependence this.!getLeft( )
  37:    6 ->   34 outputDependence this.!getLeft( )
  38:    7 ->   25 declaration
  39:    7 ->   25 loopIndependentDefUseDependence oy1$3
  40:   10 ->    7 loopIndependentDefUseDependence this.!getTop( )
  41:   10 ->   38 outputDependence this.!getTop( )
  42:   11 ->   26 declaration
  43:   11 ->   26 loopIndependentDefUseDependence ox2$4
  44:   14 ->   11 loopIndependentDefUseDependence this.!getRight( )
  45:   14 ->   42 outputDependence this.!getRight( )
  46:   15 ->   27 declaration
  47:   15 ->   27 loopIndependentDefUseDependence oy2$5
  48:   18 ->   15 loopIndependentDefUseDependence this.!getBottom( )
  49:   18 ->   46 outputDependence this.!getBottom( )
  50:   19 ->   29 trueControlDependence
  51:   19 ->   31 falseControlDependence
  52:   19 ->   32 falseControlDependence
  53:   19 ->   33 falseControlDependence
  54:   19 ->   34 falseControlDependence
  55:   19 ->   35 falseControlDependence
  56:   19 ->   36 falseControlDependence
  57:   19 ->   37 falseControlDependence
  58:   19 ->   38 falseControlDependence
  59:   19 ->   39 falseControlDependence
  60:   19 ->   40 falseControlDependence
  61:   19 ->   41 falseControlDependence
  62:   19 ->   42 falseControlDependence
  63:   19 ->   43 falseControlDependence
  64:   19 ->   44 falseControlDependence
  65:   19 ->   45 falseControlDependence
  66:   19 ->   46 falseControlDependence
  67:   19 ->   47 falseControlDependence
  68:   19 ->   48 falseControlDependence
  69:   19 ->   49 falseControlDependence
  70:   19 ->   50 falseControlDependence
  71:   19 ->   51 falseControlDependence
  72:   19 ->   52 falseControlDependence
  73:   19 ->   53 falseControlDependence
  74:   19 ->   54 falseControlDependence
  75:   19 ->   55 falseControlDependence
  76:   19 ->   56 falseControlDependence
  77:   28 ->   19 loopIndependentDefUseDependence this.!isInRect( int int int int int int )
  78:   28 ->   56 outputDependence this.!isInRect( int int int int int int )
  79:   29 ->   31 fallThroughControlDependence
  80:   29 ->   32 fallThroughControlDependence
  81:   29 ->   33 fallThroughControlDependence
  82:   29 ->   34 fallThroughControlDependence
  83:   29 ->   35 fallThroughControlDependence
  84:   29 ->   36 fallThroughControlDependence
  85:   29 ->   37 fallThroughControlDependence
  86:   29 ->   38 fallThroughControlDependence
  87:   29 ->   39 fallThroughControlDependence
  88:   29 ->   40 fallThroughControlDependence
  89:   29 ->   41 fallThroughControlDependence
  90:   29 ->   42 fallThroughControlDependence
  91:   29 ->   43 fallThroughControlDependence
  92:   29 ->   44 fallThroughControlDependence
  93:   29 ->   45 fallThroughControlDependence
  94:   29 ->   46 fallThroughControlDependence
  95:   29 ->   47 fallThroughControlDependence
  96:   29 ->   48 fallThroughControlDependence
  97:   29 ->   49 fallThroughControlDependence
  98:   29 ->   50 fallThroughControlDependence
  99:   29 ->   51 fallThroughControlDependence
 100:   29 ->   52 fallThroughControlDependence
 101:   29 ->   53 fallThroughControlDependence
 102:   29 ->   54 fallThroughControlDependence
 103:   29 ->   55 fallThroughControlDependence
 104:   29 ->   56 fallThroughControlDependence
 105:   29 ->   58 loopIndependentDefUseDependence $_
 106:   31 ->   52 declaration
 107:   31 ->   52 loopIndependentDefUseDependence ix1$6
 108:   34 ->   31 loopIndependentDefUseDependence this.!getLeft( )
 109:   35 ->   53 declaration
 110:   35 ->   53 loopIndependentDefUseDependence iy1$7
 111:   38 ->   35 loopIndependentDefUseDependence this.!getTop( )
 112:   39 ->   54 declaration
 113:   39 ->   54 loopIndependentDefUseDependence ix2$8
 114:   42 ->   39 loopIndependentDefUseDependence this.!getRight( )
 115:   43 ->   55 declaration
 116:   43 ->   55 loopIndependentDefUseDependence iy2$9
 117:   46 ->   43 loopIndependentDefUseDependence this.!getBottom( )
 118:   47 ->   58 loopIndependentDefUseDependence $_
 119:   56 ->   47 loopIndependentDefUseDependence this.!isInRect( int int int int int int )
--
   0: paintIcon( java.awt.Graphics int int int int )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   11 trueControlDependence
  11:    1 ->    7 loopIndependentDefUseDependence g$0
  12:    2 ->    8 loopIndependentDefUseDependence x$1
  13:    3 ->    8 loopIndependentDefUseDependence y$2
  14:    4 ->    8 loopIndependentDefUseDependence w$3
  15:    5 ->    8 loopIndependentDefUseDependence h$4
  16:    9 ->    6 loopIndependentDefUseDependence g$0.!drawRect( int int int int )
--
   0: Rect( java.awt.Color float )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    5+ trueControlDependence
   7:    0 ->    5+ trueControlDependence
   8:    0 ->    6 trueControlDependence
   9:    0 ->    7 trueControlDependence
  10:    0 ->    8 trueControlDependence
  11:    0 ->   10 trueControlDependence
  12:    1 ->    6 loopIndependentDefUseDependence c$0
  13:    2 ->    7 loopIndependentDefUseDependence w$1
  14:    8 ->    3 loopIndependentDefUseDependence super.!Figure( java.awt.Color float )
--
   0: getName( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    1 ->    3 loopIndependentDefUseDependence $_
--
   0: Rect( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    3+ trueControlDependence
   5:    0 ->    3+ trueControlDependence
   6:    0 ->    4 trueControlDependence
   7:    0 ->    6 trueControlDependence
   8:    4 ->    1 loopIndependentDefUseDependence super.!Figure( )
--
   0: create( java.awt.Color float )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    5+ trueControlDependence
   7:    0 ->    5+ trueControlDependence
   8:    0 ->    6 trueControlDependence
   9:    0 ->    7 trueControlDependence
  10:    0 ->    8 trueControlDependence
  11:    0 ->   10 trueControlDependence
  12:    1 ->    6 loopIndependentDefUseDependence c$0
  13:    2 ->    7 loopIndependentDefUseDependence w$1
  14:    3 ->   10 loopIndependentDefUseDependence $_
  15:    5+ ->    3 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ).color
  16:    5+ ->    3 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float ).outlineWidth
  17:    8 ->    3 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Rect.!Rect( java.awt.Color float )
--
   0: draw( java.awt.Graphics )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   17 trueControlDependence
  18:    0 ->   18 trueControlDependence
  19:    0 ->   19 trueControlDependence
  20:    0 ->   20 trueControlDependence
  21:    0 ->   21 trueControlDependence
  22:    0 ->   22 trueControlDependence
  23:    0 ->   23 trueControlDependence
  24:    0 ->   24 trueControlDependence
  25:    0 ->   25 trueControlDependence
  26:    0 ->   26 trueControlDependence
  27:    0 ->   27 trueControlDependence
  28:    0 ->   28 trueControlDependence
  29:    0 ->   29 trueControlDependence
  30:    0 ->   31 trueControlDependence
  31:    1 ->    2 loopIndependentDefUseDependence g$0
  32:    1 ->   15 loopIndependentDefUseDependence g$0
  33:    2 ->    4 declaration
  34:    2 ->    4 loopIndependentDefUseDependence g2$1
  35:    2 ->    8 declaration
  36:    2 ->    8 loopIndependentDefUseDependence g2$1
  37:    6 ->    3 loopIndependentDefUseDependence g2$1.!setColor( java.awt.Color )
  38:   12 ->    9 loopIndependentDefUseDependence java.awt.BasicStroke.!BasicStroke( float )
  39:   13 ->    7 loopIndependentDefUseDependence g2$1.!setStroke( java.awt.Stroke )
  40:   19 ->   16 loopIndependentDefUseDependence this.!getLeft( )
  41:   22 ->   16 loopIndependentDefUseDependence this.!getTop( )
  42:   25 ->   16 loopIndependentDefUseDependence this.!getWidth( )
  43:   28 ->   16 loopIndependentDefUseDependence this.!getHeight( )
  44:   29 ->   14 loopIndependentDefUseDependence g$0.!drawRect( int int int int )
--
   0: name
   1:    0 ->    1 trueControlDependence
--
----- ClDG (to here) -----

