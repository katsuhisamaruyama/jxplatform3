----- ClDG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.FigureManager
   0 methodEntry [ jp.ac.ritsumei.cs.draw.FigureManager#getTitle( ) ]
   1 returnSt D = { $_ } U = { this.filename.!substring( int ) }
   2 receiver D = {  } U = { this.filename }
   3 methodCall D = {  } U = { this.filename.!java.lang.String.COMPACT_STRINGS, this.filename.!java.lang.String.coder, this.filename.!java.lang.String.value, this.filename.!lastIndexOf( java.lang.String ) } TO = java.lang.String#substring( int )
   4 receiver D = {  } U = { this.filename }
   5 methodCall D = {  } U = { File.separator, this.filename.!java.lang.String.value } TO = java.lang.String#lastIndexOf( java.lang.String )
   6 actualOut D = { this.filename.!lastIndexOf( java.lang.String ) } U = { this.filename.!java.lang.String.value }
   7 actualOut D = { this.filename.!substring( int ) } U = { this.filename.!java.lang.String.COMPACT_STRINGS, this.filename.!java.lang.String.coder, this.filename.!java.lang.String.value }
   9 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.FigureManager#createFigure( java.lang.String int int int int java.awt.Color float ) ]
   1 formalIn D = { kind$0 } U = {  }
   2 formalIn D = { x1$1 } U = {  }
   3 formalIn D = { y1$2 } U = {  }
   4 formalIn D = { x2$3 } U = {  }
   5 formalIn D = { y2$4 } U = {  }
   6 formalIn D = { c$5 } U = {  }
   7 formalIn D = { w$6 } U = {  }
   8 localDeclaration D = { figure$7 } U = { this.!createFigure( java.lang.String ) }
   9 receiver D = {  } U = {  }
  10 methodCall D = {  } U = { Color.black, FilledOval.name, FilledRect.name, Line.name, Oval.name, Rect.name, this.kind$0.!java.lang.String.COMPACT_STRINGS, this.kind$0.!java.lang.String.coder, this.kind$0.!java.lang.String.value } TO = jp.ac.ritsumei.cs.draw.FigureManager#createFigure( java.lang.String )
  11 actualIn D = {  } U = { kind$0 }
  12 actualOut D = { this.!createFigure( java.lang.String ) } U = { Color.black, FilledOval.name, FilledRect.name, Line.name, Oval.name, Rect.name, this.kind$0.!java.lang.String.COMPACT_STRINGS, this.kind$0.!java.lang.String.coder, this.kind$0.!java.lang.String.value }
  13 ifSt D = {  } U = { figure$7, figure$7.color, figure$7.endX, figure$7.endY, figure$7.outlineWidth, figure$7.startX, figure$7.startY, this.!createFigure( java.lang.String ).color, this.!createFigure( java.lang.String ).endX, this.!createFigure( java.lang.String ).endY, this.!createFigure( java.lang.String ).outlineWidth, this.!createFigure( java.lang.String ).startX, this.!createFigure( java.lang.String ).startY }
  14 assignment D = {  } U = { figure$7.!setStart( int int ) }
  15 receiver D = {  } U = { figure$7 }
  16 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#setStart( int int )
  17 actualIn D = {  } U = { x1$1 }
  18 actualIn D = {  } U = { y1$2 }
  19 actualOut D = { figure$7.!setStart( int int ) } U = {  }
  20 assignment D = {  } U = { figure$7.!setEnd( int int ) }
  21 receiver D = {  } U = { figure$7 }
  22 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#setEnd( int int )
  23 actualIn D = {  } U = { x2$3 }
  24 actualIn D = {  } U = { y2$4 }
  25 actualOut D = { figure$7.!setEnd( int int ) } U = {  }
  27 returnSt D = { $_ } U = { figure$7, figure$7.color, figure$7.endX, figure$7.endY, figure$7.outlineWidth, figure$7.startX, figure$7.startY, this.!createFigure( java.lang.String ).color, this.!createFigure( java.lang.String ).endX, this.!createFigure( java.lang.String ).endY, this.!createFigure( java.lang.String ).outlineWidth, this.!createFigure( java.lang.String ).startX, this.!createFigure( java.lang.String ).startY }
  29 formalOut D = {  } U = { $_ }
  10+ actualOutByFieldAccess D = { this.color } U = {  }
  10+ actualOutByFieldAccess D = { this.outlineWidth } U = {  }
  16+ actualOutByFieldAccess D = { figure$7.startX } U = {  }
  16+ actualOutByFieldAccess D = { figure$7.startY } U = {  }
  22+ actualOutByFieldAccess D = { figure$7.endX } U = {  }
  22+ actualOutByFieldAccess D = { figure$7.endY } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.FigureManager#figures ]
   1 fieldDeclaration D = { this.figures } U = { this.figures }
--
   0 constructorEntry [ jp.ac.ritsumei.cs.draw.FigureManager#FigureManager( ) ]
   1 assignment D = { this.figures } U = { java.util.LinkedList.!LinkedList( ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = {  } TO = java.util.LinkedList#LinkedList( )
   4 actualOut D = { java.util.LinkedList.!LinkedList( ), java.util.LinkedList.!java.util.LinkedList.size } U = {  }
   5 assignment D = { this.filename } U = { jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED }
   7 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.FigureManager#setFilename( java.lang.String ) ]
   1 formalIn D = { filename$0 } U = {  }
   2 assignment D = { this.filename } U = { filename$0 }
   4 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.FigureManager#UNTITLED ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED } U = { $java.lang.String, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.FigureManager#filename ]
   1 fieldDeclaration D = { this.filename } U = { this.filename }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.FigureManager#createFigure( java.lang.String ) ]
   1 formalIn D = { kind$0 } U = {  }
   2 ifSt D = {  } U = { kind$0.!equals( java.lang.Object ) }
   3 receiver D = {  } U = { kind$0 }
   4 methodCall D = {  } U = { Line.name, kind$0.!java.lang.String.COMPACT_STRINGS, kind$0.!java.lang.String.coder, kind$0.!java.lang.String.value } TO = java.lang.String#equals( java.lang.Object )
   5 actualOut D = { kind$0.!equals( java.lang.Object ) } U = { kind$0.!java.lang.String.COMPACT_STRINGS, kind$0.!java.lang.String.coder, kind$0.!java.lang.String.value }
   6 returnSt D = { $_ } U = { jp.ac.ritsumei.cs.draw.Line.!Line( ) }
   7 receiver D = {  } U = {  }
   8 constructorCall D = {  } U = { Color.black } TO = jp.ac.ritsumei.cs.draw.Line#Line( )
   9 actualOut D = { jp.ac.ritsumei.cs.draw.Line.!Line( ) } U = { Color.black }
  10 ifSt D = {  } U = { kind$0.!equals( java.lang.Object ) }
  11 receiver D = {  } U = { kind$0 }
  12 methodCall D = {  } U = { Rect.name, kind$0.!java.lang.String.COMPACT_STRINGS, kind$0.!java.lang.String.coder, kind$0.!java.lang.String.value } TO = java.lang.String#equals( java.lang.Object )
  13 actualOut D = { kind$0.!equals( java.lang.Object ) } U = { kind$0.!java.lang.String.COMPACT_STRINGS, kind$0.!java.lang.String.coder, kind$0.!java.lang.String.value }
  14 returnSt D = { $_ } U = { jp.ac.ritsumei.cs.draw.Rect.!Rect( ) }
  15 receiver D = {  } U = {  }
  16 constructorCall D = {  } U = { Color.black } TO = jp.ac.ritsumei.cs.draw.Rect#Rect( )
  17 actualOut D = { jp.ac.ritsumei.cs.draw.Rect.!Rect( ) } U = { Color.black }
  18 ifSt D = {  } U = { kind$0.!equals( java.lang.Object ) }
  19 receiver D = {  } U = { kind$0 }
  20 methodCall D = {  } U = { Oval.name, kind$0.!java.lang.String.COMPACT_STRINGS, kind$0.!java.lang.String.coder, kind$0.!java.lang.String.value } TO = java.lang.String#equals( java.lang.Object )
  21 actualOut D = { kind$0.!equals( java.lang.Object ) } U = { kind$0.!java.lang.String.COMPACT_STRINGS, kind$0.!java.lang.String.coder, kind$0.!java.lang.String.value }
  22 returnSt D = { $_ } U = { jp.ac.ritsumei.cs.draw.Oval.!Oval( ) }
  23 receiver D = {  } U = {  }
  24 constructorCall D = {  } U = { Color.black } TO = jp.ac.ritsumei.cs.draw.Oval#Oval( )
  25 actualOut D = { jp.ac.ritsumei.cs.draw.Oval.!Oval( ) } U = { Color.black }
  26 ifSt D = {  } U = { kind$0.!equals( java.lang.Object ) }
  27 receiver D = {  } U = { kind$0 }
  28 methodCall D = {  } U = { FilledRect.name, kind$0.!java.lang.String.COMPACT_STRINGS, kind$0.!java.lang.String.coder, kind$0.!java.lang.String.value } TO = java.lang.String#equals( java.lang.Object )
  29 actualOut D = { kind$0.!equals( java.lang.Object ) } U = { kind$0.!java.lang.String.COMPACT_STRINGS, kind$0.!java.lang.String.coder, kind$0.!java.lang.String.value }
  30 returnSt D = { $_ } U = { jp.ac.ritsumei.cs.draw.FilledRect.!FilledRect( ) }
  31 receiver D = {  } U = {  }
  32 constructorCall D = {  } U = { Color.black } TO = jp.ac.ritsumei.cs.draw.FilledRect#FilledRect( )
  33 actualOut D = { jp.ac.ritsumei.cs.draw.FilledRect.!FilledRect( ) } U = { Color.black }
  34 ifSt D = {  } U = { kind$0.!equals( java.lang.Object ) }
  35 receiver D = {  } U = { kind$0 }
  36 methodCall D = {  } U = { FilledOval.name, kind$0.!java.lang.String.COMPACT_STRINGS, kind$0.!java.lang.String.coder, kind$0.!java.lang.String.value } TO = java.lang.String#equals( java.lang.Object )
  37 actualOut D = { kind$0.!equals( java.lang.Object ) } U = { kind$0.!java.lang.String.COMPACT_STRINGS, kind$0.!java.lang.String.coder, kind$0.!java.lang.String.value }
  38 returnSt D = { $_ } U = { jp.ac.ritsumei.cs.draw.FilledOval.!FilledOval( ) }
  39 receiver D = {  } U = {  }
  40 constructorCall D = {  } U = { Color.black } TO = jp.ac.ritsumei.cs.draw.FilledOval#FilledOval( )
  41 actualOut D = { jp.ac.ritsumei.cs.draw.FilledOval.!FilledOval( ) } U = { Color.black }
  47 returnSt D = { $_ } U = {  }
  49 formalOut D = {  } U = { $_ }
   8+ actualOutByFieldAccess D = { this.color } U = {  }
   8+ actualOutByFieldAccess D = { this.outlineWidth } U = {  }
  16+ actualOutByFieldAccess D = { this.color } U = {  }
  16+ actualOutByFieldAccess D = { this.outlineWidth } U = {  }
  24+ actualOutByFieldAccess D = { this.color } U = {  }
  24+ actualOutByFieldAccess D = { this.outlineWidth } U = {  }
  32+ actualOutByFieldAccess D = { this.color } U = {  }
  32+ actualOutByFieldAccess D = { this.outlineWidth } U = {  }
  40+ actualOutByFieldAccess D = { this.color } U = {  }
  40+ actualOutByFieldAccess D = { this.outlineWidth } U = {  }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.FigureManager#remove( jp.ac.ritsumei.cs.draw.Figure ) ]
   1 formalIn D = { figure$0 } U = {  }
   2 assignment D = {  } U = { this.figures.!remove( java.lang.Object ) }
   3 receiver D = {  } U = { this.figures }
   4 methodCall D = {  } U = { figure$0, figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY } TO = java.util.List#remove( java.lang.Object )
   5 actualOut D = { this.figures.!remove( java.lang.Object ) } U = {  }
   7 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.FigureManager#getFilename( ) ]
   1 returnSt D = { $_ } U = { this.filename }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.FigureManager#load( java.lang.String ) ]
   1 throwsClause D = {  } U = { $java.lang.NumberFormatException }
   2 formalIn D = { filename$0 } U = {  }
   3 assignment D = {  } U = { this.figures.!clear( ) }
   4 receiver D = {  } U = { this.figures }
   5 methodCall D = {  } U = {  } TO = java.util.List#clear( )
   6 actualOut D = { this.figures.!clear( ) } U = {  }
   7 localDeclaration D = { br$1 } U = {  }
   8 trySt D = {  } U = {  }
   9 assignment D = { br$1 } U = { java.io.BufferedReader.!BufferedReader( java.io.Reader ) }
  10 receiver D = {  } U = {  }
  11 constructorCall D = {  } U = { java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, java.io.FileReader.!FileReader( java.lang.String ) } TO = java.io.BufferedReader#BufferedReader( java.io.Reader )
  12 receiver D = {  } U = {  }
  13 constructorCall D = {  } U = { filename$0 } TO = java.io.FileReader#FileReader( java.lang.String )
  14 actualOut D = { java.io.FileReader.!FileReader( java.lang.String ), java.io.FileReader.!java.io.InputStreamReader.sd } U = {  }
  15 actualOut D = { java.io.BufferedReader.!BufferedReader( java.io.Reader ), java.io.BufferedReader.!java.io.BufferedReader.cb, java.io.BufferedReader.!java.io.BufferedReader.in, java.io.BufferedReader.!java.io.BufferedReader.markedChar, java.io.BufferedReader.!java.io.BufferedReader.markedSkipLF, java.io.BufferedReader.!java.io.BufferedReader.nChars, java.io.BufferedReader.!java.io.BufferedReader.nextChar, java.io.BufferedReader.!java.io.BufferedReader.readAheadLimit, java.io.BufferedReader.!java.io.BufferedReader.skipLF } U = { java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize }
  16 localDeclaration D = { line$5 } U = {  }
  17 whileSt D = { line$5 } U = { br$1.!readLine( ) }
  18 receiver D = {  } U = { br$1 }
  19 methodCall D = {  } U = { br$1.!java.io.BufferedReader.cb, br$1.!java.io.BufferedReader.defaultExpectedLineLength, br$1.!java.io.BufferedReader.lock, br$1.!java.io.BufferedReader.nChars, br$1.!java.io.BufferedReader.nextChar, br$1.!java.io.BufferedReader.skipLF, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.cb, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.defaultExpectedLineLength, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.lock, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.nChars, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.nextChar, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.skipLF } TO = java.io.BufferedReader#readLine( )
  20 actualOut D = { br$1.!java.io.BufferedReader.nextChar, br$1.!java.io.BufferedReader.skipLF, br$1.!readLine( ) } U = { br$1.!java.io.BufferedReader.cb, br$1.!java.io.BufferedReader.defaultExpectedLineLength, br$1.!java.io.BufferedReader.lock, br$1.!java.io.BufferedReader.nChars, br$1.!java.io.BufferedReader.nextChar, br$1.!java.io.BufferedReader.skipLF, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.cb, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.defaultExpectedLineLength, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.lock, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.nChars, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.nextChar, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.skipLF }
  21 localDeclaration D = { st$6 } U = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ) }
  22 receiver D = {  } U = {  }
  23 constructorCall D = {  } U = { line$5 } TO = java.util.StringTokenizer#StringTokenizer( java.lang.String )
  24 actualOut D = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ), java.util.StringTokenizer.!java.util.StringTokenizer.currentPosition, java.util.StringTokenizer.!java.util.StringTokenizer.delimiters, java.util.StringTokenizer.!java.util.StringTokenizer.delimsChanged, java.util.StringTokenizer.!java.util.StringTokenizer.hasSurrogates, java.util.StringTokenizer.!java.util.StringTokenizer.maxPosition, java.util.StringTokenizer.!java.util.StringTokenizer.newPosition, java.util.StringTokenizer.!java.util.StringTokenizer.retDelims, java.util.StringTokenizer.!java.util.StringTokenizer.str } U = {  }
  25 localDeclaration D = { name$7 } U = { st$6.!nextToken( ) }
  26 receiver D = {  } U = { st$6 }
  27 methodCall D = {  } U = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.lang.String.value, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.currentPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimiters, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimsChanged, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.hasSurrogates, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxDelimCodePoint, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.newPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.retDelims, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.str, st$6.!java.lang.String.value, st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimiters, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.hasSurrogates, st$6.!java.util.StringTokenizer.maxDelimCodePoint, st$6.!java.util.StringTokenizer.maxPosition, st$6.!java.util.StringTokenizer.newPosition, st$6.!java.util.StringTokenizer.retDelims, st$6.!java.util.StringTokenizer.str } TO = java.util.StringTokenizer#nextToken( )
  28 actualOut D = { st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.newPosition, st$6.!nextToken( ) } U = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.lang.String.value, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.currentPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimiters, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimsChanged, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.hasSurrogates, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxDelimCodePoint, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.newPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.retDelims, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.str, st$6.!java.lang.String.value, st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimiters, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.hasSurrogates, st$6.!java.util.StringTokenizer.maxDelimCodePoint, st$6.!java.util.StringTokenizer.maxPosition, st$6.!java.util.StringTokenizer.newPosition, st$6.!java.util.StringTokenizer.retDelims, st$6.!java.util.StringTokenizer.str }
  29 localDeclaration D = { x1$8 } U = { this.!parseInt( java.lang.String ) }
  30 receiver D = {  } U = {  }
  31 methodCall D = {  } U = { st$6.!nextToken( ) } TO = java.lang.Integer#parseInt( java.lang.String )
  32 receiver D = {  } U = { st$6 }
  33 methodCall D = {  } U = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.lang.String.value, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.currentPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimiters, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimsChanged, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.hasSurrogates, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxDelimCodePoint, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.newPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.retDelims, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.str, st$6.!java.lang.String.value, st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimiters, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.hasSurrogates, st$6.!java.util.StringTokenizer.maxDelimCodePoint, st$6.!java.util.StringTokenizer.maxPosition, st$6.!java.util.StringTokenizer.newPosition, st$6.!java.util.StringTokenizer.retDelims, st$6.!java.util.StringTokenizer.str } TO = java.util.StringTokenizer#nextToken( )
  34 actualOut D = { st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.newPosition, st$6.!nextToken( ) } U = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.lang.String.value, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.currentPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimiters, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimsChanged, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.hasSurrogates, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxDelimCodePoint, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.newPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.retDelims, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.str, st$6.!java.lang.String.value, st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimiters, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.hasSurrogates, st$6.!java.util.StringTokenizer.maxDelimCodePoint, st$6.!java.util.StringTokenizer.maxPosition, st$6.!java.util.StringTokenizer.newPosition, st$6.!java.util.StringTokenizer.retDelims, st$6.!java.util.StringTokenizer.str }
  35 actualOut D = { this.!parseInt( java.lang.String ) } U = {  }
  36 localDeclaration D = { y1$9 } U = { this.!parseInt( java.lang.String ) }
  37 receiver D = {  } U = {  }
  38 methodCall D = {  } U = { st$6.!nextToken( ) } TO = java.lang.Integer#parseInt( java.lang.String )
  39 receiver D = {  } U = { st$6 }
  40 methodCall D = {  } U = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.lang.String.value, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.currentPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimiters, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimsChanged, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.hasSurrogates, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxDelimCodePoint, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.newPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.retDelims, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.str, st$6.!java.lang.String.value, st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimiters, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.hasSurrogates, st$6.!java.util.StringTokenizer.maxDelimCodePoint, st$6.!java.util.StringTokenizer.maxPosition, st$6.!java.util.StringTokenizer.newPosition, st$6.!java.util.StringTokenizer.retDelims, st$6.!java.util.StringTokenizer.str } TO = java.util.StringTokenizer#nextToken( )
  41 actualOut D = { st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.newPosition, st$6.!nextToken( ) } U = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.lang.String.value, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.currentPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimiters, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimsChanged, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.hasSurrogates, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxDelimCodePoint, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.newPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.retDelims, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.str, st$6.!java.lang.String.value, st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimiters, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.hasSurrogates, st$6.!java.util.StringTokenizer.maxDelimCodePoint, st$6.!java.util.StringTokenizer.maxPosition, st$6.!java.util.StringTokenizer.newPosition, st$6.!java.util.StringTokenizer.retDelims, st$6.!java.util.StringTokenizer.str }
  42 actualOut D = { this.!parseInt( java.lang.String ) } U = {  }
  43 localDeclaration D = { x2$10 } U = { this.!parseInt( java.lang.String ) }
  44 receiver D = {  } U = {  }
  45 methodCall D = {  } U = { st$6.!nextToken( ) } TO = java.lang.Integer#parseInt( java.lang.String )
  46 receiver D = {  } U = { st$6 }
  47 methodCall D = {  } U = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.lang.String.value, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.currentPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimiters, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimsChanged, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.hasSurrogates, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxDelimCodePoint, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.newPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.retDelims, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.str, st$6.!java.lang.String.value, st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimiters, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.hasSurrogates, st$6.!java.util.StringTokenizer.maxDelimCodePoint, st$6.!java.util.StringTokenizer.maxPosition, st$6.!java.util.StringTokenizer.newPosition, st$6.!java.util.StringTokenizer.retDelims, st$6.!java.util.StringTokenizer.str } TO = java.util.StringTokenizer#nextToken( )
  48 actualOut D = { st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.newPosition, st$6.!nextToken( ) } U = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.lang.String.value, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.currentPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimiters, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimsChanged, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.hasSurrogates, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxDelimCodePoint, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.newPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.retDelims, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.str, st$6.!java.lang.String.value, st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimiters, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.hasSurrogates, st$6.!java.util.StringTokenizer.maxDelimCodePoint, st$6.!java.util.StringTokenizer.maxPosition, st$6.!java.util.StringTokenizer.newPosition, st$6.!java.util.StringTokenizer.retDelims, st$6.!java.util.StringTokenizer.str }
  49 actualOut D = { this.!parseInt( java.lang.String ) } U = {  }
  50 localDeclaration D = { y2$11 } U = { this.!parseInt( java.lang.String ) }
  51 receiver D = {  } U = {  }
  52 methodCall D = {  } U = { st$6.!nextToken( ) } TO = java.lang.Integer#parseInt( java.lang.String )
  53 receiver D = {  } U = { st$6 }
  54 methodCall D = {  } U = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.lang.String.value, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.currentPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimiters, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimsChanged, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.hasSurrogates, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxDelimCodePoint, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.newPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.retDelims, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.str, st$6.!java.lang.String.value, st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimiters, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.hasSurrogates, st$6.!java.util.StringTokenizer.maxDelimCodePoint, st$6.!java.util.StringTokenizer.maxPosition, st$6.!java.util.StringTokenizer.newPosition, st$6.!java.util.StringTokenizer.retDelims, st$6.!java.util.StringTokenizer.str } TO = java.util.StringTokenizer#nextToken( )
  55 actualOut D = { st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.newPosition, st$6.!nextToken( ) } U = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.lang.String.value, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.currentPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimiters, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimsChanged, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.hasSurrogates, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxDelimCodePoint, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.newPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.retDelims, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.str, st$6.!java.lang.String.value, st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimiters, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.hasSurrogates, st$6.!java.util.StringTokenizer.maxDelimCodePoint, st$6.!java.util.StringTokenizer.maxPosition, st$6.!java.util.StringTokenizer.newPosition, st$6.!java.util.StringTokenizer.retDelims, st$6.!java.util.StringTokenizer.str }
  56 actualOut D = { this.!parseInt( java.lang.String ) } U = {  }
  57 localDeclaration D = { r$12 } U = { this.!parseInt( java.lang.String ) }
  58 receiver D = {  } U = {  }
  59 methodCall D = {  } U = { st$6.!nextToken( ) } TO = java.lang.Integer#parseInt( java.lang.String )
  60 receiver D = {  } U = { st$6 }
  61 methodCall D = {  } U = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.lang.String.value, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.currentPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimiters, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimsChanged, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.hasSurrogates, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxDelimCodePoint, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.newPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.retDelims, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.str, st$6.!java.lang.String.value, st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimiters, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.hasSurrogates, st$6.!java.util.StringTokenizer.maxDelimCodePoint, st$6.!java.util.StringTokenizer.maxPosition, st$6.!java.util.StringTokenizer.newPosition, st$6.!java.util.StringTokenizer.retDelims, st$6.!java.util.StringTokenizer.str } TO = java.util.StringTokenizer#nextToken( )
  62 actualOut D = { st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.newPosition, st$6.!nextToken( ) } U = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.lang.String.value, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.currentPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimiters, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimsChanged, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.hasSurrogates, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxDelimCodePoint, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.newPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.retDelims, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.str, st$6.!java.lang.String.value, st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimiters, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.hasSurrogates, st$6.!java.util.StringTokenizer.maxDelimCodePoint, st$6.!java.util.StringTokenizer.maxPosition, st$6.!java.util.StringTokenizer.newPosition, st$6.!java.util.StringTokenizer.retDelims, st$6.!java.util.StringTokenizer.str }
  63 actualOut D = { this.!parseInt( java.lang.String ) } U = {  }
  64 localDeclaration D = { g$13 } U = { this.!parseInt( java.lang.String ) }
  65 receiver D = {  } U = {  }
  66 methodCall D = {  } U = { st$6.!nextToken( ) } TO = java.lang.Integer#parseInt( java.lang.String )
  67 receiver D = {  } U = { st$6 }
  68 methodCall D = {  } U = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.lang.String.value, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.currentPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimiters, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimsChanged, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.hasSurrogates, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxDelimCodePoint, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.newPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.retDelims, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.str, st$6.!java.lang.String.value, st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimiters, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.hasSurrogates, st$6.!java.util.StringTokenizer.maxDelimCodePoint, st$6.!java.util.StringTokenizer.maxPosition, st$6.!java.util.StringTokenizer.newPosition, st$6.!java.util.StringTokenizer.retDelims, st$6.!java.util.StringTokenizer.str } TO = java.util.StringTokenizer#nextToken( )
  69 actualOut D = { st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.newPosition, st$6.!nextToken( ) } U = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.lang.String.value, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.currentPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimiters, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimsChanged, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.hasSurrogates, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxDelimCodePoint, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.newPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.retDelims, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.str, st$6.!java.lang.String.value, st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimiters, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.hasSurrogates, st$6.!java.util.StringTokenizer.maxDelimCodePoint, st$6.!java.util.StringTokenizer.maxPosition, st$6.!java.util.StringTokenizer.newPosition, st$6.!java.util.StringTokenizer.retDelims, st$6.!java.util.StringTokenizer.str }
  70 actualOut D = { this.!parseInt( java.lang.String ) } U = {  }
  71 localDeclaration D = { b$14 } U = { this.!parseInt( java.lang.String ) }
  72 receiver D = {  } U = {  }
  73 methodCall D = {  } U = { st$6.!nextToken( ) } TO = java.lang.Integer#parseInt( java.lang.String )
  74 receiver D = {  } U = { st$6 }
  75 methodCall D = {  } U = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.lang.String.value, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.currentPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimiters, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimsChanged, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.hasSurrogates, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxDelimCodePoint, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.newPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.retDelims, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.str, st$6.!java.lang.String.value, st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimiters, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.hasSurrogates, st$6.!java.util.StringTokenizer.maxDelimCodePoint, st$6.!java.util.StringTokenizer.maxPosition, st$6.!java.util.StringTokenizer.newPosition, st$6.!java.util.StringTokenizer.retDelims, st$6.!java.util.StringTokenizer.str } TO = java.util.StringTokenizer#nextToken( )
  76 actualOut D = { st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.newPosition, st$6.!nextToken( ) } U = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.lang.String.value, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.currentPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimiters, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimsChanged, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.hasSurrogates, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxDelimCodePoint, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.newPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.retDelims, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.str, st$6.!java.lang.String.value, st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimiters, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.hasSurrogates, st$6.!java.util.StringTokenizer.maxDelimCodePoint, st$6.!java.util.StringTokenizer.maxPosition, st$6.!java.util.StringTokenizer.newPosition, st$6.!java.util.StringTokenizer.retDelims, st$6.!java.util.StringTokenizer.str }
  77 actualOut D = { this.!parseInt( java.lang.String ) } U = {  }
  78 localDeclaration D = { c$15 } U = { java.awt.Color.!Color( int int int ) }
  79 receiver D = {  } U = {  }
  80 constructorCall D = {  } U = { b$14, g$13, r$12 } TO = java.awt.Color#Color( int int int )
  81 actualOut D = { java.awt.Color.!Color( int int int ), java.awt.Color.!java.awt.Color.cs, java.awt.Color.!java.awt.Color.falpha, java.awt.Color.!java.awt.Color.frgbvalue, java.awt.Color.!java.awt.Color.fvalue, java.awt.Color.!java.awt.Color.value } U = {  }
  82 localDeclaration D = { w$16 } U = { this.!parseFloat( java.lang.String ) }
  83 receiver D = {  } U = {  }
  84 methodCall D = {  } U = { st$6.!nextToken( ) } TO = java.lang.Float#parseFloat( java.lang.String )
  85 receiver D = {  } U = { st$6 }
  86 methodCall D = {  } U = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.lang.String.value, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.currentPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimiters, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimsChanged, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.hasSurrogates, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxDelimCodePoint, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.newPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.retDelims, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.str, st$6.!java.lang.String.value, st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimiters, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.hasSurrogates, st$6.!java.util.StringTokenizer.maxDelimCodePoint, st$6.!java.util.StringTokenizer.maxPosition, st$6.!java.util.StringTokenizer.newPosition, st$6.!java.util.StringTokenizer.retDelims, st$6.!java.util.StringTokenizer.str } TO = java.util.StringTokenizer#nextToken( )
  87 actualOut D = { st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.newPosition, st$6.!nextToken( ) } U = { java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.lang.String.value, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.currentPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimiters, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.delimsChanged, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.hasSurrogates, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxDelimCodePoint, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.maxPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.newPosition, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.retDelims, java.util.StringTokenizer.!StringTokenizer( java.lang.String ).!java.util.StringTokenizer.str, st$6.!java.lang.String.value, st$6.!java.util.StringTokenizer.currentPosition, st$6.!java.util.StringTokenizer.delimiters, st$6.!java.util.StringTokenizer.delimsChanged, st$6.!java.util.StringTokenizer.hasSurrogates, st$6.!java.util.StringTokenizer.maxDelimCodePoint, st$6.!java.util.StringTokenizer.maxPosition, st$6.!java.util.StringTokenizer.newPosition, st$6.!java.util.StringTokenizer.retDelims, st$6.!java.util.StringTokenizer.str }
  88 actualOut D = { this.!parseFloat( java.lang.String ) } U = {  }
  89 localDeclaration D = { figure$17 } U = { this.!createFigure( java.lang.String int int int int java.awt.Color float ) }
  90 receiver D = {  } U = {  }
  91 methodCall D = {  } U = { Color.black, FilledOval.name, FilledRect.name, Line.name, Oval.name, Rect.name, figure$7.color, figure$7.endX, figure$7.endY, figure$7.outlineWidth, figure$7.startX, figure$7.startY, this.kind$0.!java.lang.String.COMPACT_STRINGS, this.kind$0.!java.lang.String.coder, this.kind$0.!java.lang.String.value } TO = jp.ac.ritsumei.cs.draw.FigureManager#createFigure( java.lang.String int int int int java.awt.Color float )
  92 actualIn D = {  } U = { name$7 }
  93 actualIn D = {  } U = { x1$8 }
  94 actualIn D = {  } U = { y1$9 }
  95 actualIn D = {  } U = { x2$10 }
  96 actualIn D = {  } U = { y2$11 }
  97 actualIn D = {  } U = { c$15 }
  98 actualIn D = {  } U = { w$16 }
  99 actualOut D = { this.!createFigure( java.lang.String int int int int java.awt.Color float ) } U = { Color.black, FilledOval.name, FilledRect.name, Line.name, Oval.name, Rect.name, figure$7.color, figure$7.endX, figure$7.endY, figure$7.outlineWidth, figure$7.startX, figure$7.startY, this.kind$0.!java.lang.String.COMPACT_STRINGS, this.kind$0.!java.lang.String.coder, this.kind$0.!java.lang.String.value }
 100 assignment D = {  } U = { this.!add( jp.ac.ritsumei.cs.draw.Figure ) }
 101 receiver D = {  } U = {  }
 102 methodCall D = {  } U = { figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY, this.figures } TO = jp.ac.ritsumei.cs.draw.FigureManager#add( jp.ac.ritsumei.cs.draw.Figure )
 103 actualIn D = {  } U = { figure$17, figure$17.color, figure$17.endX, figure$17.endY, figure$17.outlineWidth, figure$17.startX, figure$17.startY, this.!createFigure( java.lang.String int int int int java.awt.Color float ).color, this.!createFigure( java.lang.String int int int int java.awt.Color float ).endX, this.!createFigure( java.lang.String int int int int java.awt.Color float ).endY, this.!createFigure( java.lang.String int int int int java.awt.Color float ).outlineWidth, this.!createFigure( java.lang.String int int int int java.awt.Color float ).startX, this.!createFigure( java.lang.String int int int int java.awt.Color float ).startY }
 104 actualOut D = { this.!add( jp.ac.ritsumei.cs.draw.Figure ) } U = { figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY, this.figures }
 106 catchClause D = { e$18 } U = {  }
 107 assignment D = {  } U = { System.err.!println( java.lang.String ) }
 108 receiver D = {  } U = { System.err }
 109 methodCall D = {  } U = { $java.lang.String, System.err.!java.io.PrintStream.autoFlush, System.err.!java.io.PrintStream.charOut, System.err.!java.io.PrintStream.out, System.err.!java.io.PrintStream.textOut, filename$0 } TO = java.io.PrintStream#println( java.lang.String )
 110 actualOut D = { System.err.!java.io.PrintStream.trouble, System.err.!println( java.lang.String ) } U = { System.err.!java.io.PrintStream.autoFlush, System.err.!java.io.PrintStream.charOut, System.err.!java.io.PrintStream.out, System.err.!java.io.PrintStream.textOut }
 111 returnSt D = { $_ } U = {  }
 112 catchClause D = { e$19 } U = {  }
 113 assignment D = {  } U = { System.err.!println( java.lang.String ) }
 114 receiver D = {  } U = { System.err }
 115 methodCall D = {  } U = { $java.lang.String, System.err.!java.io.PrintStream.autoFlush, System.err.!java.io.PrintStream.charOut, System.err.!java.io.PrintStream.out, System.err.!java.io.PrintStream.textOut, filename$0 } TO = java.io.PrintStream#println( java.lang.String )
 116 actualOut D = { System.err.!java.io.PrintStream.trouble, System.err.!println( java.lang.String ) } U = { System.err.!java.io.PrintStream.autoFlush, System.err.!java.io.PrintStream.charOut, System.err.!java.io.PrintStream.out, System.err.!java.io.PrintStream.textOut }
 117 returnSt D = { $_ } U = {  }
 118 finallyClause D = {  } U = {  }
 119 trySt D = {  } U = {  }
 120 ifSt D = {  } U = { br$1 }
 121 assignment D = {  } U = { br$1.!close( ) }
 122 receiver D = {  } U = { br$1 }
 123 methodCall D = {  } U = { br$1.!java.io.BufferedReader.in, br$1.!java.io.BufferedReader.lock, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.in, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.lock } TO = java.io.BufferedReader#close( )
 124 actualOut D = { br$1.!close( ), br$1.!java.io.BufferedReader.cb, br$1.!java.io.BufferedReader.in } U = { br$1.!java.io.BufferedReader.in, br$1.!java.io.BufferedReader.lock, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.in, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.lock }
 125 returnSt D = { $_ } U = {  }
 128 catchClause D = { e$4 } U = {  }
 129 returnSt D = { $_ } U = {  }
 130 returnSt D = { $_ } U = {  }
 132 formalOut D = {  } U = { $_ }
  91+ actualOutByFieldAccess D = { this.color } U = {  }
  91+ actualOutByFieldAccess D = { this.figure$7.endX } U = {  }
  91+ actualOutByFieldAccess D = { this.figure$7.endY } U = {  }
  91+ actualOutByFieldAccess D = { this.outlineWidth } U = {  }
  91+ actualOutByFieldAccess D = { this.figure$7.startX } U = {  }
  91+ actualOutByFieldAccess D = { this.figure$7.startY } U = {  }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.FigureManager#add( jp.ac.ritsumei.cs.draw.Figure ) ]
   1 formalIn D = { figure$0 } U = {  }
   2 assignment D = {  } U = { this.figures.!add( java.lang.Object ) }
   3 receiver D = {  } U = { this.figures }
   4 methodCall D = {  } U = { figure$0, figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY } TO = java.util.List#add( java.lang.Object )
   5 actualOut D = { this.figures.!add( java.lang.Object ) } U = {  }
   7 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.FigureManager#clear( ) ]
   1 assignment D = {  } U = { this.figures.!clear( ) }
   2 receiver D = {  } U = { this.figures }
   3 methodCall D = {  } U = {  } TO = java.util.List#clear( )
   4 actualOut D = { this.figures.!clear( ) } U = {  }
   6 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.FigureManager#getFigures( ) ]
   1 returnSt D = { $_ } U = { this.figures }
   3 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ jp.ac.ritsumei.cs.draw.FigureManager#FigureManager( java.lang.String ) ]
   1 formalIn D = { filename$0 } U = {  }
   2 assignment D = { this.figures } U = { java.util.LinkedList.!LinkedList( ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = {  } TO = java.util.LinkedList#LinkedList( )
   5 actualOut D = { java.util.LinkedList.!LinkedList( ), java.util.LinkedList.!java.util.LinkedList.size } U = {  }
   6 assignment D = { this.filename } U = { filename$0 }
   8 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.FigureManager#store( java.lang.String ) ]
   1 formalIn D = { filename$0 } U = {  }
   2 localDeclaration D = { pw$1 } U = {  }
   3 trySt D = {  } U = {  }
   4 assignment D = { pw$1 } U = { java.io.PrintWriter.!PrintWriter( java.io.Writer ) }
   5 receiver D = {  } U = {  }
   6 constructorCall D = {  } U = { java.io.BufferedWriter.!BufferedWriter( java.io.Writer ) } TO = java.io.PrintWriter#PrintWriter( java.io.Writer )
   7 receiver D = {  } U = {  }
   8 constructorCall D = {  } U = { java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, java.io.FileWriter.!FileWriter( java.lang.String ) } TO = java.io.BufferedWriter#BufferedWriter( java.io.Writer )
   9 receiver D = {  } U = {  }
  10 constructorCall D = {  } U = { filename$0 } TO = java.io.FileWriter#FileWriter( java.lang.String )
  11 actualOut D = { java.io.FileWriter.!FileWriter( java.lang.String ), java.io.FileWriter.!java.io.OutputStreamWriter.se } U = {  }
  12 actualOut D = { java.io.BufferedWriter.!BufferedWriter( java.io.Writer ), java.io.BufferedWriter.!java.io.BufferedWriter.cb, java.io.BufferedWriter.!java.io.BufferedWriter.nChars, java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, java.io.BufferedWriter.!java.io.BufferedWriter.out } U = { java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize }
  13 actualOut D = { java.io.PrintWriter.!PrintWriter( java.io.Writer ), java.io.PrintWriter.!java.io.PrintWriter.autoFlush, java.io.PrintWriter.!java.io.PrintWriter.out, java.io.PrintWriter.!java.io.PrintWriter.psOut, java.io.PrintWriter.!java.io.PrintWriter.trouble } U = {  }
  14 enhancedForSt D = { figure$4 } U = { this.figures }
  15 localDeclaration D = { sb$6 } U = { java.lang.StringBuilder.!StringBuilder( ) }
  16 receiver D = {  } U = {  }
  17 constructorCall D = {  } U = { java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS } TO = java.lang.StringBuilder#StringBuilder( )
  18 actualOut D = { java.lang.StringBuilder.!StringBuilder( ), java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value } U = { java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS }
  19 assignment D = {  } U = { sb$6.!append( java.lang.String ) }
  20 receiver D = {  } U = { sb$6 }
  21 methodCall D = {  } U = { $java.lang.String, figure$4.!getName( ), java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.count, sb$6.!java.lang.AbstractStringBuilder.count } TO = java.lang.StringBuilder#append( java.lang.String )
  22 receiver D = {  } U = { figure$4 }
  23 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#getName( )
  24 actualOut D = { figure$4.!getName( ) } U = {  }
  25 actualOut D = { sb$6.!append( java.lang.String ), sb$6.!java.lang.AbstractStringBuilder.count } U = { java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.count, sb$6.!java.lang.AbstractStringBuilder.count }
  26 assignment D = {  } U = { sb$6.!append( java.lang.String ) }
  27 receiver D = {  } U = { sb$6 }
  28 methodCall D = {  } U = { $java.lang.String, java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.count, sb$6.!java.lang.AbstractStringBuilder.count, this.!valueOf( int ) } TO = java.lang.StringBuilder#append( java.lang.String )
  29 receiver D = {  } U = {  }
  30 methodCall D = {  } U = { figure$4, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.!java.lang.String.COMPACT_STRINGS } TO = java.lang.String#valueOf( int )
  31 actualOut D = { this.!valueOf( int ) } U = { this.!java.lang.String.COMPACT_STRINGS }
  32 actualOut D = { sb$6.!append( java.lang.String ), sb$6.!java.lang.AbstractStringBuilder.count } U = { java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.count, sb$6.!java.lang.AbstractStringBuilder.count }
  33 assignment D = {  } U = { sb$6.!append( java.lang.String ) }
  34 receiver D = {  } U = { sb$6 }
  35 methodCall D = {  } U = { $java.lang.String, java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.count, sb$6.!java.lang.AbstractStringBuilder.count, this.!valueOf( int ) } TO = java.lang.StringBuilder#append( java.lang.String )
  36 receiver D = {  } U = {  }
  37 methodCall D = {  } U = { figure$4, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.!java.lang.String.COMPACT_STRINGS } TO = java.lang.String#valueOf( int )
  38 actualOut D = { this.!valueOf( int ) } U = { this.!java.lang.String.COMPACT_STRINGS }
  39 actualOut D = { sb$6.!append( java.lang.String ), sb$6.!java.lang.AbstractStringBuilder.count } U = { java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.count, sb$6.!java.lang.AbstractStringBuilder.count }
  40 assignment D = {  } U = { sb$6.!append( java.lang.String ) }
  41 receiver D = {  } U = { sb$6 }
  42 methodCall D = {  } U = { $java.lang.String, java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.count, sb$6.!java.lang.AbstractStringBuilder.count, this.!valueOf( int ) } TO = java.lang.StringBuilder#append( java.lang.String )
  43 receiver D = {  } U = {  }
  44 methodCall D = {  } U = { figure$4, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.!java.lang.String.COMPACT_STRINGS } TO = java.lang.String#valueOf( int )
  45 actualOut D = { this.!valueOf( int ) } U = { this.!java.lang.String.COMPACT_STRINGS }
  46 actualOut D = { sb$6.!append( java.lang.String ), sb$6.!java.lang.AbstractStringBuilder.count } U = { java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.count, sb$6.!java.lang.AbstractStringBuilder.count }
  47 assignment D = {  } U = { sb$6.!append( java.lang.String ) }
  48 receiver D = {  } U = { sb$6 }
  49 methodCall D = {  } U = { java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.count, sb$6.!java.lang.AbstractStringBuilder.count, this.!valueOf( int ) } TO = java.lang.StringBuilder#append( java.lang.String )
  50 receiver D = {  } U = {  }
  51 methodCall D = {  } U = { figure$4, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.!java.lang.String.COMPACT_STRINGS } TO = java.lang.String#valueOf( int )
  52 actualOut D = { this.!valueOf( int ) } U = { this.!java.lang.String.COMPACT_STRINGS }
  53 actualOut D = { sb$6.!append( java.lang.String ), sb$6.!java.lang.AbstractStringBuilder.count } U = { java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.count, sb$6.!java.lang.AbstractStringBuilder.count }
  54 assignment D = {  } U = { sb$6.!append( java.lang.String ) }
  55 receiver D = {  } U = { sb$6 }
  56 methodCall D = {  } U = { $java.lang.String, java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.count, sb$6.!java.lang.AbstractStringBuilder.count, this.!valueOf( int ) } TO = java.lang.StringBuilder#append( java.lang.String )
  57 receiver D = {  } U = {  }
  58 methodCall D = {  } U = { figure$4.color.!getRed( ), this.!java.lang.String.COMPACT_STRINGS } TO = java.lang.String#valueOf( int )
  59 receiver D = {  } U = { figure$4, figure$4.color }
  60 methodCall D = {  } U = { figure$4.color.!java.awt.Color.value } TO = java.awt.Color#getRed( )
  61 actualOut D = { figure$4.color.!getRed( ) } U = { figure$4.color.!java.awt.Color.value }
  62 actualOut D = { this.!valueOf( int ) } U = { this.!java.lang.String.COMPACT_STRINGS }
  63 actualOut D = { sb$6.!append( java.lang.String ), sb$6.!java.lang.AbstractStringBuilder.count } U = { java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.count, sb$6.!java.lang.AbstractStringBuilder.count }
  64 assignment D = {  } U = { sb$6.!append( java.lang.String ) }
  65 receiver D = {  } U = { sb$6 }
  66 methodCall D = {  } U = { $java.lang.String, java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.count, sb$6.!java.lang.AbstractStringBuilder.count, this.!valueOf( int ) } TO = java.lang.StringBuilder#append( java.lang.String )
  67 receiver D = {  } U = {  }
  68 methodCall D = {  } U = { figure$4.color.!getGreen( ), this.!java.lang.String.COMPACT_STRINGS } TO = java.lang.String#valueOf( int )
  69 receiver D = {  } U = { figure$4, figure$4.color }
  70 methodCall D = {  } U = { figure$4.color.!java.awt.Color.value } TO = java.awt.Color#getGreen( )
  71 actualOut D = { figure$4.color.!getGreen( ) } U = { figure$4.color.!java.awt.Color.value }
  72 actualOut D = { this.!valueOf( int ) } U = { this.!java.lang.String.COMPACT_STRINGS }
  73 actualOut D = { sb$6.!append( java.lang.String ), sb$6.!java.lang.AbstractStringBuilder.count } U = { java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.count, sb$6.!java.lang.AbstractStringBuilder.count }
  74 assignment D = {  } U = { sb$6.!append( java.lang.String ) }
  75 receiver D = {  } U = { sb$6 }
  76 methodCall D = {  } U = { $java.lang.String, java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.count, sb$6.!java.lang.AbstractStringBuilder.count, this.!valueOf( int ) } TO = java.lang.StringBuilder#append( java.lang.String )
  77 receiver D = {  } U = {  }
  78 methodCall D = {  } U = { figure$4.color.!getBlue( ), this.!java.lang.String.COMPACT_STRINGS } TO = java.lang.String#valueOf( int )
  79 receiver D = {  } U = { figure$4, figure$4.color }
  80 methodCall D = {  } U = { figure$4.color.!java.awt.Color.value } TO = java.awt.Color#getBlue( )
  81 actualOut D = { figure$4.color.!getBlue( ) } U = { figure$4.color.!java.awt.Color.value }
  82 actualOut D = { this.!valueOf( int ) } U = { this.!java.lang.String.COMPACT_STRINGS }
  83 actualOut D = { sb$6.!append( java.lang.String ), sb$6.!java.lang.AbstractStringBuilder.count } U = { java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.count, sb$6.!java.lang.AbstractStringBuilder.count }
  84 assignment D = {  } U = { sb$6.!append( java.lang.String ) }
  85 receiver D = {  } U = { sb$6 }
  86 methodCall D = {  } U = { java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.count, sb$6.!java.lang.AbstractStringBuilder.count, this.!valueOf( float ) } TO = java.lang.StringBuilder#append( java.lang.String )
  87 receiver D = {  } U = {  }
  88 methodCall D = {  } U = { figure$4, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY } TO = java.lang.String#valueOf( float )
  89 actualOut D = { this.!valueOf( float ) } U = {  }
  90 actualOut D = { sb$6.!append( java.lang.String ), sb$6.!java.lang.AbstractStringBuilder.count } U = { java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.count, sb$6.!java.lang.AbstractStringBuilder.count }
  91 assignment D = {  } U = { pw$1.!println( java.lang.String ) }
  92 receiver D = {  } U = { pw$1 }
  93 methodCall D = {  } U = { java.io.PrintWriter.!PrintWriter( java.io.Writer ).!java.io.PrintWriter.lock, pw$1.!java.io.PrintWriter.lock, sb$6.!toString( ) } TO = java.io.PrintWriter#println( java.lang.String )
  94 receiver D = {  } U = { sb$6 }
  95 methodCall D = {  } U = { java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.coder, java.lang.StringBuilder.!StringBuilder( ).!java.lang.String.COMPACT_STRINGS, java.lang.StringBuilder.!StringBuilder( ).!java.lang.StringBuilder.count, java.lang.StringBuilder.!StringBuilder( ).!java.lang.StringBuilder.value, sb$6.!java.lang.AbstractStringBuilder.coder, sb$6.!java.lang.String.COMPACT_STRINGS, sb$6.!java.lang.StringBuilder.count, sb$6.!java.lang.StringBuilder.value } TO = java.lang.StringBuilder#toString( )
  96 actualOut D = { sb$6.!toString( ) } U = { java.lang.StringBuilder.!StringBuilder( ).!java.lang.AbstractStringBuilder.coder, java.lang.StringBuilder.!StringBuilder( ).!java.lang.String.COMPACT_STRINGS, java.lang.StringBuilder.!StringBuilder( ).!java.lang.StringBuilder.count, java.lang.StringBuilder.!StringBuilder( ).!java.lang.StringBuilder.value, sb$6.!java.lang.AbstractStringBuilder.coder, sb$6.!java.lang.String.COMPACT_STRINGS, sb$6.!java.lang.StringBuilder.count, sb$6.!java.lang.StringBuilder.value }
  97 actualOut D = { pw$1.!println( java.lang.String ) } U = { java.io.PrintWriter.!PrintWriter( java.io.Writer ).!java.io.PrintWriter.lock, pw$1.!java.io.PrintWriter.lock }
  99 catchClause D = { e$7 } U = {  }
 100 assignment D = {  } U = { System.err.!println( java.lang.String ) }
 101 receiver D = {  } U = { System.err }
 102 methodCall D = {  } U = { $java.lang.String, System.err.!java.io.PrintStream.autoFlush, System.err.!java.io.PrintStream.charOut, System.err.!java.io.PrintStream.out, System.err.!java.io.PrintStream.textOut, filename$0 } TO = java.io.PrintStream#println( java.lang.String )
 103 actualOut D = { System.err.!java.io.PrintStream.trouble, System.err.!println( java.lang.String ) } U = { System.err.!java.io.PrintStream.autoFlush, System.err.!java.io.PrintStream.charOut, System.err.!java.io.PrintStream.out, System.err.!java.io.PrintStream.textOut }
 104 finallyClause D = {  } U = {  }
 105 ifSt D = {  } U = { pw$1 }
 106 assignment D = {  } U = { pw$1.!close( ) }
 107 receiver D = {  } U = { pw$1 }
 108 methodCall D = {  } U = { java.io.PrintWriter.!PrintWriter( java.io.Writer ).!java.io.PrintWriter.lock, java.io.PrintWriter.!PrintWriter( java.io.Writer ).!java.io.PrintWriter.out, pw$1.!java.io.PrintWriter.lock, pw$1.!java.io.PrintWriter.out } TO = java.io.PrintWriter#close( )
 109 actualOut D = { pw$1.!close( ), pw$1.!java.io.PrintWriter.out, pw$1.!java.io.PrintWriter.trouble } U = { java.io.PrintWriter.!PrintWriter( java.io.Writer ).!java.io.PrintWriter.lock, java.io.PrintWriter.!PrintWriter( java.io.Writer ).!java.io.PrintWriter.out, pw$1.!java.io.PrintWriter.lock, pw$1.!java.io.PrintWriter.out }
 110 returnSt D = { $_ } U = {  }
 112 returnSt D = { $_ } U = {  }
 114 formalOut D = {  } U = { $_ }
--
   0: getTitle( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    9 trueControlDependence
   9:    1 ->    9 loopIndependentDefUseDependence $_
  10:    6 ->    3 loopIndependentDefUseDependence this.filename.!lastIndexOf( java.lang.String )
  11:    7 ->    1 loopIndependentDefUseDependence this.filename.!substring( int )
--
   0: createFigure( java.lang.String int int int int java.awt.Color float )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   10+ trueControlDependence
  12:    0 ->   10+ trueControlDependence
  13:    0 ->   11 trueControlDependence
  14:    0 ->   12 trueControlDependence
  15:    0 ->   13 trueControlDependence
  16:    0 ->   27 trueControlDependence
  17:    0 ->   29 trueControlDependence
  18:    1 ->   11 loopIndependentDefUseDependence kind$0
  19:    2 ->   17 loopIndependentDefUseDependence x1$1
  20:    3 ->   18 loopIndependentDefUseDependence y1$2
  21:    4 ->   23 loopIndependentDefUseDependence x2$3
  22:    5 ->   24 loopIndependentDefUseDependence y2$4
  23:    8 ->   13 declaration
  24:    8 ->   13 loopIndependentDefUseDependence figure$7
  25:    8 ->   15 declaration
  26:    8 ->   15 loopIndependentDefUseDependence figure$7
  27:    8 ->   21 declaration
  28:    8 ->   21 loopIndependentDefUseDependence figure$7
  29:    8 ->   27 declaration
  30:    8 ->   27 loopIndependentDefUseDependence figure$7
  31:   12 ->    8 loopIndependentDefUseDependence this.!createFigure( java.lang.String )
  32:   13 ->   14 trueControlDependence
  33:   13 ->   15 trueControlDependence
  34:   13 ->   16 trueControlDependence
  35:   13 ->   16+ trueControlDependence
  36:   13 ->   16+ trueControlDependence
  37:   13 ->   17 trueControlDependence
  38:   13 ->   18 trueControlDependence
  39:   13 ->   19 trueControlDependence
  40:   13 ->   20 trueControlDependence
  41:   13 ->   21 trueControlDependence
  42:   13 ->   22 trueControlDependence
  43:   13 ->   22+ trueControlDependence
  44:   13 ->   22+ trueControlDependence
  45:   13 ->   23 trueControlDependence
  46:   13 ->   24 trueControlDependence
  47:   13 ->   25 trueControlDependence
  48:   16+ ->   27 loopIndependentDefUseDependence figure$7.startX
  49:   16+ ->   27 loopIndependentDefUseDependence figure$7.startY
  50:   19 ->   14 loopIndependentDefUseDependence figure$7.!setStart( int int )
  51:   22+ ->   27 loopIndependentDefUseDependence figure$7.endX
  52:   22+ ->   27 loopIndependentDefUseDependence figure$7.endY
  53:   25 ->   20 loopIndependentDefUseDependence figure$7.!setEnd( int int )
  54:   27 ->   29 loopIndependentDefUseDependence $_
--
   0: figures
   1:    0 ->    1 trueControlDependence
--
   0: FigureManager( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    7 trueControlDependence
   7:    4 ->    1 loopIndependentDefUseDependence java.util.LinkedList.!LinkedList( )
--
   0: setFilename( java.lang.String )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    1 ->    2 loopIndependentDefUseDependence filename$0
--
   0: UNTITLED
   1:    0 ->    1 trueControlDependence
--
   0: filename
   1:    0 ->    1 trueControlDependence
--
   0: createFigure( java.lang.String )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->   49 trueControlDependence
   7:    1 ->    3 loopIndependentDefUseDependence kind$0
   8:    1 ->   11 loopIndependentDefUseDependence kind$0
   9:    1 ->   19 loopIndependentDefUseDependence kind$0
  10:    1 ->   27 loopIndependentDefUseDependence kind$0
  11:    1 ->   35 loopIndependentDefUseDependence kind$0
  12:    2 ->    6 trueControlDependence
  13:    2 ->    7 trueControlDependence
  14:    2 ->    8 trueControlDependence
  15:    2 ->    8+ trueControlDependence
  16:    2 ->    8+ trueControlDependence
  17:    2 ->    9 trueControlDependence
  18:    2 ->   10 falseControlDependence
  19:    2 ->   11 falseControlDependence
  20:    2 ->   12 falseControlDependence
  21:    2 ->   13 falseControlDependence
  22:    5 ->    2 loopIndependentDefUseDependence kind$0.!equals( java.lang.Object )
  23:    5 ->   13 outputDependence kind$0.!equals( java.lang.Object )
  24:    6 ->   10 fallThroughControlDependence
  25:    6 ->   11 fallThroughControlDependence
  26:    6 ->   12 fallThroughControlDependence
  27:    6 ->   13 fallThroughControlDependence
  28:    6 ->   47 outputDependence $_
  29:    6 ->   47 trueControlDependence
  30:    9 ->    6 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Line.!Line( )
  31:   10 ->   14 trueControlDependence
  32:   10 ->   15 trueControlDependence
  33:   10 ->   16 trueControlDependence
  34:   10 ->   16+ trueControlDependence
  35:   10 ->   16+ trueControlDependence
  36:   10 ->   17 trueControlDependence
  37:   10 ->   18 falseControlDependence
  38:   10 ->   19 falseControlDependence
  39:   10 ->   20 falseControlDependence
  40:   10 ->   21 falseControlDependence
  41:   13 ->   10 loopIndependentDefUseDependence kind$0.!equals( java.lang.Object )
  42:   13 ->   21 outputDependence kind$0.!equals( java.lang.Object )
  43:   14 ->   18 fallThroughControlDependence
  44:   14 ->   19 fallThroughControlDependence
  45:   14 ->   20 fallThroughControlDependence
  46:   14 ->   21 fallThroughControlDependence
  47:   14 ->   47 outputDependence $_
  48:   14 ->   47 trueControlDependence
  49:   17 ->   14 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Rect.!Rect( )
  50:   18 ->   22 trueControlDependence
  51:   18 ->   23 trueControlDependence
  52:   18 ->   24 trueControlDependence
  53:   18 ->   24+ trueControlDependence
  54:   18 ->   24+ trueControlDependence
  55:   18 ->   25 trueControlDependence
  56:   18 ->   26 falseControlDependence
  57:   18 ->   27 falseControlDependence
  58:   18 ->   28 falseControlDependence
  59:   18 ->   29 falseControlDependence
  60:   21 ->   18 loopIndependentDefUseDependence kind$0.!equals( java.lang.Object )
  61:   21 ->   29 outputDependence kind$0.!equals( java.lang.Object )
  62:   22 ->   26 fallThroughControlDependence
  63:   22 ->   27 fallThroughControlDependence
  64:   22 ->   28 fallThroughControlDependence
  65:   22 ->   29 fallThroughControlDependence
  66:   22 ->   47 outputDependence $_
  67:   22 ->   47 trueControlDependence
  68:   25 ->   22 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Oval.!Oval( )
  69:   26 ->   30 trueControlDependence
  70:   26 ->   31 trueControlDependence
  71:   26 ->   32 trueControlDependence
  72:   26 ->   32+ trueControlDependence
  73:   26 ->   32+ trueControlDependence
  74:   26 ->   33 trueControlDependence
  75:   26 ->   34 falseControlDependence
  76:   26 ->   35 falseControlDependence
  77:   26 ->   36 falseControlDependence
  78:   26 ->   37 falseControlDependence
  79:   29 ->   26 loopIndependentDefUseDependence kind$0.!equals( java.lang.Object )
  80:   29 ->   37 outputDependence kind$0.!equals( java.lang.Object )
  81:   30 ->   34 fallThroughControlDependence
  82:   30 ->   35 fallThroughControlDependence
  83:   30 ->   36 fallThroughControlDependence
  84:   30 ->   37 fallThroughControlDependence
  85:   30 ->   47 outputDependence $_
  86:   30 ->   47 trueControlDependence
  87:   33 ->   30 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.FilledRect.!FilledRect( )
  88:   34 ->   38 trueControlDependence
  89:   34 ->   39 trueControlDependence
  90:   34 ->   40 trueControlDependence
  91:   34 ->   40+ trueControlDependence
  92:   34 ->   40+ trueControlDependence
  93:   34 ->   41 trueControlDependence
  94:   34 ->   47 falseControlDependence
  95:   37 ->   34 loopIndependentDefUseDependence kind$0.!equals( java.lang.Object )
  96:   38 ->   47 fallThroughControlDependence
  97:   38 ->   49 loopIndependentDefUseDependence $_
  98:   41 ->   38 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.FilledOval.!FilledOval( )
  99:   47 ->   49 loopIndependentDefUseDependence $_
--
   0: remove( jp.ac.ritsumei.cs.draw.Figure )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    7 trueControlDependence
   7:    1 ->    4 loopIndependentDefUseDependence figure$0
   8:    5 ->    2 loopIndependentDefUseDependence this.figures.!remove( java.lang.Object )
--
   0: getFilename( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    1 ->    3 loopIndependentDefUseDependence $_
--
   0: load( java.lang.String )
   1:    0 ->    2 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    0 ->    5 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    0 ->    7 trueControlDependence
   7:    0 ->    8 trueControlDependence
   8:    0 ->   10 trueControlDependence
   9:    0 ->   12 trueControlDependence
  10:    0 ->   13 trueControlDependence
  11:    2 ->   13 loopIndependentDefUseDependence filename$0
  12:    2 ->  109 loopIndependentDefUseDependence filename$0
  13:    2 ->  115 loopIndependentDefUseDependence filename$0
  14:    6 ->    3 loopIndependentDefUseDependence this.figures.!clear( )
  15:    7 ->    9 declaration
  16:    7 ->    9 outputDependence br$1
  17:    7 ->   18 declaration
  18:    7 ->  120 declaration
  19:    7 ->  122 declaration
  20:    8 ->  106 trueControlDependence
  21:    8 ->  112 trueControlDependence
  22:    8 ->  118 trueControlDependence
  23:    9 ->   18 loopIndependentDefUseDependence br$1
  24:    9 ->  120 loopIndependentDefUseDependence br$1
  25:    9 ->  122 loopIndependentDefUseDependence br$1
  26:   13 ->    9 trueControlDependence
  27:   13 ->   11 trueControlDependence
  28:   13 ->   14 trueControlDependence
  29:   13 ->   15 trueControlDependence
  30:   13 ->   16 trueControlDependence
  31:   13 ->  106 exceptionCatch
  32:   13 ->  112 exceptionCatch
  33:   13 ->  132 exceptionCatch
  34:   13 ->  132 exceptionCatch
  35:   14 ->   11 loopIndependentDefUseDependence java.io.FileReader.!FileReader( java.lang.String )
  36:   15 ->    9 loopIndependentDefUseDependence java.io.BufferedReader.!BufferedReader( java.io.Reader )
  37:   16 ->   17 declaration
  38:   16 ->   17 outputDependence line$5
  39:   16 ->   23 declaration
  40:   17 ->   17 defOrderDependence line$5
  41:   17 ->   21 trueControlDependence
  42:   17 ->   22 trueControlDependence
  43:   17 ->   23 loopIndependentDefUseDependence line$5
  44:   17 ->   23 trueControlDependence
  45:   17 ->   24 trueControlDependence
  46:   17 ->   25 trueControlDependence
  47:   17 ->   26 trueControlDependence
  48:   17 ->   27 trueControlDependence
  49:   17 ->   28 trueControlDependence
  50:   17 ->   30 trueControlDependence
  51:   17 ->   31 trueControlDependence
  52:   17 ->   32 trueControlDependence
  53:   17 ->   33 trueControlDependence
  54:   17 ->   34 trueControlDependence
  55:   17 ->  118 falseControlDependence
  56:   17 ->  132 falseControlDependence
  57:   19 ->   17 trueControlDependence
  58:   19 ->   20 trueControlDependence
  59:   19 ->  112 exceptionCatch
  60:   19 ->  132 exceptionCatch
  61:   20 ->   17 loopCarriedDefUseDependence br$1.!readLine( ) (LC = 17)
  62:   20 ->   19 loopCarriedDefUseDependence br$1.!java.io.BufferedReader.nextChar (LC = 17)
  63:   20 ->   19 loopCarriedDefUseDependence br$1.!java.io.BufferedReader.skipLF (LC = 17)
  64:   20 ->   20 defOrderDependence br$1.!readLine( )
  65:   20 ->   20 loopCarriedDefUseDependence br$1.!java.io.BufferedReader.nextChar (LC = 17)
  66:   20 ->   20 loopCarriedDefUseDependence br$1.!java.io.BufferedReader.skipLF (LC = 17)
  67:   21 ->   21 defOrderDependence st$6
  68:   21 ->   26 declaration
  69:   21 ->   26 loopIndependentDefUseDependence st$6
  70:   21 ->   32 declaration
  71:   21 ->   32 loopIndependentDefUseDependence st$6
  72:   21 ->   39 declaration
  73:   21 ->   39 loopIndependentDefUseDependence st$6
  74:   21 ->   46 declaration
  75:   21 ->   46 loopIndependentDefUseDependence st$6
  76:   21 ->   53 declaration
  77:   21 ->   53 loopIndependentDefUseDependence st$6
  78:   21 ->   60 declaration
  79:   21 ->   60 loopIndependentDefUseDependence st$6
  80:   21 ->   67 declaration
  81:   21 ->   67 loopIndependentDefUseDependence st$6
  82:   21 ->   74 declaration
  83:   21 ->   74 loopIndependentDefUseDependence st$6
  84:   21 ->   85 declaration
  85:   21 ->   85 loopIndependentDefUseDependence st$6
  86:   24 ->   21 loopIndependentDefUseDependence java.util.StringTokenizer.!StringTokenizer( java.lang.String )
  87:   24 ->   24 defOrderDependence java.util.StringTokenizer.!StringTokenizer( java.lang.String )
  88:   24 ->   24 defOrderDependence java.util.StringTokenizer.!java.util.StringTokenizer.currentPosition
  89:   24 ->   24 defOrderDependence java.util.StringTokenizer.!java.util.StringTokenizer.delimiters
  90:   24 ->   24 defOrderDependence java.util.StringTokenizer.!java.util.StringTokenizer.delimsChanged
  91:   24 ->   24 defOrderDependence java.util.StringTokenizer.!java.util.StringTokenizer.hasSurrogates
  92:   24 ->   24 defOrderDependence java.util.StringTokenizer.!java.util.StringTokenizer.maxPosition
  93:   24 ->   24 defOrderDependence java.util.StringTokenizer.!java.util.StringTokenizer.newPosition
  94:   24 ->   24 defOrderDependence java.util.StringTokenizer.!java.util.StringTokenizer.retDelims
  95:   24 ->   24 defOrderDependence java.util.StringTokenizer.!java.util.StringTokenizer.str
  96:   25 ->   25 defOrderDependence name$7
  97:   25 ->   92 declaration
  98:   25 ->   92 loopIndependentDefUseDependence name$7
  99:   28 ->   25 loopIndependentDefUseDependence st$6.!nextToken( )
 100:   28 ->   33 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.currentPosition
 101:   28 ->   33 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.delimsChanged
 102:   28 ->   33 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.newPosition
 103:   28 ->   34 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.currentPosition
 104:   28 ->   34 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.delimsChanged
 105:   28 ->   34 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.newPosition
 106:   28 ->   34 outputDependence st$6.!nextToken( )
 107:   29 ->   29 defOrderDependence x1$8
 108:   29 ->   93 declaration
 109:   29 ->   93 loopIndependentDefUseDependence x1$8
 110:   31 ->    1 exceptionCatch
 111:   31 ->   29 trueControlDependence
 112:   31 ->   35 trueControlDependence
 113:   31 ->   37 trueControlDependence
 114:   31 ->   38 trueControlDependence
 115:   31 ->   39 trueControlDependence
 116:   31 ->   40 trueControlDependence
 117:   31 ->   41 trueControlDependence
 118:   34 ->   31 loopIndependentDefUseDependence st$6.!nextToken( )
 119:   34 ->   40 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.currentPosition
 120:   34 ->   40 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.delimsChanged
 121:   34 ->   40 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.newPosition
 122:   34 ->   41 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.currentPosition
 123:   34 ->   41 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.delimsChanged
 124:   34 ->   41 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.newPosition
 125:   34 ->   41 outputDependence st$6.!nextToken( )
 126:   35 ->   29 loopIndependentDefUseDependence this.!parseInt( java.lang.String )
 127:   35 ->   42 outputDependence this.!parseInt( java.lang.String )
 128:   36 ->   36 defOrderDependence y1$9
 129:   36 ->   94 declaration
 130:   36 ->   94 loopIndependentDefUseDependence y1$9
 131:   38 ->    1 exceptionCatch
 132:   38 ->   36 trueControlDependence
 133:   38 ->   42 trueControlDependence
 134:   38 ->   44 trueControlDependence
 135:   38 ->   45 trueControlDependence
 136:   38 ->   46 trueControlDependence
 137:   38 ->   47 trueControlDependence
 138:   38 ->   48 trueControlDependence
 139:   41 ->   38 loopIndependentDefUseDependence st$6.!nextToken( )
 140:   41 ->   47 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.currentPosition
 141:   41 ->   47 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.delimsChanged
 142:   41 ->   47 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.newPosition
 143:   41 ->   48 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.currentPosition
 144:   41 ->   48 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.delimsChanged
 145:   41 ->   48 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.newPosition
 146:   41 ->   48 outputDependence st$6.!nextToken( )
 147:   42 ->   36 loopIndependentDefUseDependence this.!parseInt( java.lang.String )
 148:   42 ->   49 outputDependence this.!parseInt( java.lang.String )
 149:   43 ->   43 defOrderDependence x2$10
 150:   43 ->   95 declaration
 151:   43 ->   95 loopIndependentDefUseDependence x2$10
 152:   45 ->    1 exceptionCatch
 153:   45 ->   43 trueControlDependence
 154:   45 ->   49 trueControlDependence
 155:   45 ->   51 trueControlDependence
 156:   45 ->   52 trueControlDependence
 157:   45 ->   53 trueControlDependence
 158:   45 ->   54 trueControlDependence
 159:   45 ->   55 trueControlDependence
 160:   48 ->   45 loopIndependentDefUseDependence st$6.!nextToken( )
 161:   48 ->   54 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.currentPosition
 162:   48 ->   54 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.delimsChanged
 163:   48 ->   54 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.newPosition
 164:   48 ->   55 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.currentPosition
 165:   48 ->   55 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.delimsChanged
 166:   48 ->   55 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.newPosition
 167:   48 ->   55 outputDependence st$6.!nextToken( )
 168:   49 ->   43 loopIndependentDefUseDependence this.!parseInt( java.lang.String )
 169:   49 ->   56 outputDependence this.!parseInt( java.lang.String )
 170:   50 ->   50 defOrderDependence y2$11
 171:   50 ->   96 declaration
 172:   50 ->   96 loopIndependentDefUseDependence y2$11
 173:   52 ->    1 exceptionCatch
 174:   52 ->   50 trueControlDependence
 175:   52 ->   56 trueControlDependence
 176:   52 ->   58 trueControlDependence
 177:   52 ->   59 trueControlDependence
 178:   52 ->   60 trueControlDependence
 179:   52 ->   61 trueControlDependence
 180:   52 ->   62 trueControlDependence
 181:   55 ->   52 loopIndependentDefUseDependence st$6.!nextToken( )
 182:   55 ->   61 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.currentPosition
 183:   55 ->   61 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.delimsChanged
 184:   55 ->   61 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.newPosition
 185:   55 ->   62 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.currentPosition
 186:   55 ->   62 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.delimsChanged
 187:   55 ->   62 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.newPosition
 188:   55 ->   62 outputDependence st$6.!nextToken( )
 189:   56 ->   50 loopIndependentDefUseDependence this.!parseInt( java.lang.String )
 190:   56 ->   63 outputDependence this.!parseInt( java.lang.String )
 191:   57 ->   57 defOrderDependence r$12
 192:   57 ->   80 declaration
 193:   57 ->   80 loopIndependentDefUseDependence r$12
 194:   59 ->    1 exceptionCatch
 195:   59 ->   57 trueControlDependence
 196:   59 ->   63 trueControlDependence
 197:   59 ->   65 trueControlDependence
 198:   59 ->   66 trueControlDependence
 199:   59 ->   67 trueControlDependence
 200:   59 ->   68 trueControlDependence
 201:   59 ->   69 trueControlDependence
 202:   62 ->   59 loopIndependentDefUseDependence st$6.!nextToken( )
 203:   62 ->   68 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.currentPosition
 204:   62 ->   68 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.delimsChanged
 205:   62 ->   68 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.newPosition
 206:   62 ->   69 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.currentPosition
 207:   62 ->   69 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.delimsChanged
 208:   62 ->   69 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.newPosition
 209:   62 ->   69 outputDependence st$6.!nextToken( )
 210:   63 ->   57 loopIndependentDefUseDependence this.!parseInt( java.lang.String )
 211:   63 ->   70 outputDependence this.!parseInt( java.lang.String )
 212:   64 ->   64 defOrderDependence g$13
 213:   64 ->   80 declaration
 214:   64 ->   80 loopIndependentDefUseDependence g$13
 215:   66 ->    1 exceptionCatch
 216:   66 ->   64 trueControlDependence
 217:   66 ->   70 trueControlDependence
 218:   66 ->   72 trueControlDependence
 219:   66 ->   73 trueControlDependence
 220:   66 ->   74 trueControlDependence
 221:   66 ->   75 trueControlDependence
 222:   66 ->   76 trueControlDependence
 223:   69 ->   66 loopIndependentDefUseDependence st$6.!nextToken( )
 224:   69 ->   75 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.currentPosition
 225:   69 ->   75 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.delimsChanged
 226:   69 ->   75 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.newPosition
 227:   69 ->   76 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.currentPosition
 228:   69 ->   76 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.delimsChanged
 229:   69 ->   76 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.newPosition
 230:   69 ->   76 outputDependence st$6.!nextToken( )
 231:   70 ->   64 loopIndependentDefUseDependence this.!parseInt( java.lang.String )
 232:   70 ->   77 outputDependence this.!parseInt( java.lang.String )
 233:   71 ->   71 defOrderDependence b$14
 234:   71 ->   80 declaration
 235:   71 ->   80 loopIndependentDefUseDependence b$14
 236:   73 ->    1 exceptionCatch
 237:   73 ->   71 trueControlDependence
 238:   73 ->   77 trueControlDependence
 239:   73 ->   78 trueControlDependence
 240:   73 ->   79 trueControlDependence
 241:   73 ->   80 trueControlDependence
 242:   73 ->   81 trueControlDependence
 243:   73 ->   83 trueControlDependence
 244:   73 ->   84 trueControlDependence
 245:   73 ->   85 trueControlDependence
 246:   73 ->   86 trueControlDependence
 247:   73 ->   87 trueControlDependence
 248:   76 ->   73 loopIndependentDefUseDependence st$6.!nextToken( )
 249:   76 ->   86 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.currentPosition
 250:   76 ->   86 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.delimsChanged
 251:   76 ->   86 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.newPosition
 252:   76 ->   87 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.currentPosition
 253:   76 ->   87 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.delimsChanged
 254:   76 ->   87 loopIndependentDefUseDependence st$6.!java.util.StringTokenizer.newPosition
 255:   76 ->   87 outputDependence st$6.!nextToken( )
 256:   77 ->   35 outputDependence this.!parseInt( java.lang.String )
 257:   77 ->   71 loopIndependentDefUseDependence this.!parseInt( java.lang.String )
 258:   78 ->   78 defOrderDependence c$15
 259:   78 ->   97 declaration
 260:   78 ->   97 loopIndependentDefUseDependence c$15
 261:   81 ->   78 loopIndependentDefUseDependence java.awt.Color.!Color( int int int )
 262:   81 ->   81 defOrderDependence java.awt.Color.!Color( int int int )
 263:   81 ->   81 defOrderDependence java.awt.Color.!java.awt.Color.cs
 264:   81 ->   81 defOrderDependence java.awt.Color.!java.awt.Color.falpha
 265:   81 ->   81 defOrderDependence java.awt.Color.!java.awt.Color.frgbvalue
 266:   81 ->   81 defOrderDependence java.awt.Color.!java.awt.Color.fvalue
 267:   81 ->   81 defOrderDependence java.awt.Color.!java.awt.Color.value
 268:   82 ->   82 defOrderDependence w$16
 269:   82 ->   98 declaration
 270:   82 ->   98 loopIndependentDefUseDependence w$16
 271:   84 ->    1 exceptionCatch
 272:   84 ->   18 trueControlDependence
 273:   84 ->   19 trueControlDependence
 274:   84 ->   82 trueControlDependence
 275:   84 ->   88 trueControlDependence
 276:   84 ->   89 trueControlDependence
 277:   84 ->   90 trueControlDependence
 278:   84 ->   91 trueControlDependence
 279:   84 ->   91+ trueControlDependence
 280:   84 ->   91+ trueControlDependence
 281:   84 ->   91+ trueControlDependence
 282:   84 ->   91+ trueControlDependence
 283:   84 ->   91+ trueControlDependence
 284:   84 ->   91+ trueControlDependence
 285:   84 ->   92 trueControlDependence
 286:   84 ->   93 trueControlDependence
 287:   84 ->   94 trueControlDependence
 288:   84 ->   95 trueControlDependence
 289:   84 ->   96 trueControlDependence
 290:   84 ->   97 trueControlDependence
 291:   84 ->   98 trueControlDependence
 292:   84 ->   99 trueControlDependence
 293:   84 ->  100 trueControlDependence
 294:   84 ->  101 trueControlDependence
 295:   84 ->  102 trueControlDependence
 296:   84 ->  103 trueControlDependence
 297:   84 ->  104 trueControlDependence
 298:   87 ->   27 loopCarriedDefUseDependence st$6.!java.util.StringTokenizer.currentPosition (LC = 17)
 299:   87 ->   27 loopCarriedDefUseDependence st$6.!java.util.StringTokenizer.delimsChanged (LC = 17)
 300:   87 ->   27 loopCarriedDefUseDependence st$6.!java.util.StringTokenizer.newPosition (LC = 17)
 301:   87 ->   28 loopCarriedDefUseDependence st$6.!java.util.StringTokenizer.currentPosition (LC = 17)
 302:   87 ->   28 loopCarriedDefUseDependence st$6.!java.util.StringTokenizer.delimsChanged (LC = 17)
 303:   87 ->   28 loopCarriedDefUseDependence st$6.!java.util.StringTokenizer.newPosition (LC = 17)
 304:   87 ->   28 outputDependence st$6.!nextToken( )
 305:   87 ->   84 loopIndependentDefUseDependence st$6.!nextToken( )
 306:   88 ->   82 loopIndependentDefUseDependence this.!parseFloat( java.lang.String )
 307:   88 ->   88 defOrderDependence this.!parseFloat( java.lang.String )
 308:   89 ->   89 defOrderDependence figure$17
 309:   89 ->  103 declaration
 310:   89 ->  103 loopIndependentDefUseDependence figure$17
 311:   91+ ->   91+ outputDependence this.color
 312:   91+ ->   91+ outputDependence this.figure$7.endX
 313:   91+ ->   91+ outputDependence this.figure$7.endY
 314:   91+ ->   91+ outputDependence this.figure$7.startX
 315:   91+ ->   91+ outputDependence this.figure$7.startY
 316:   91+ ->   91+ outputDependence this.outlineWidth
 317:   99 ->   89 loopIndependentDefUseDependence this.!createFigure( java.lang.String int int int int java.awt.Color float )
 318:   99 ->   99 defOrderDependence this.!createFigure( java.lang.String int int int int java.awt.Color float )
 319:  104 ->  100 loopIndependentDefUseDependence this.!add( jp.ac.ritsumei.cs.draw.Figure )
 320:  104 ->  104 defOrderDependence this.!add( jp.ac.ritsumei.cs.draw.Figure )
 321:  106 ->  107 trueControlDependence
 322:  106 ->  108 trueControlDependence
 323:  106 ->  109 trueControlDependence
 324:  106 ->  110 trueControlDependence
 325:  106 ->  111 trueControlDependence
 326:  106 ->  118 fallThroughControlDependence
 327:  110 ->  107 loopIndependentDefUseDependence System.err.!println( java.lang.String )
 328:  111 ->  118 fallThroughControlDependence
 329:  111 ->  132 loopIndependentDefUseDependence $_
 330:  112 ->  113 trueControlDependence
 331:  112 ->  114 trueControlDependence
 332:  112 ->  115 trueControlDependence
 333:  112 ->  116 trueControlDependence
 334:  112 ->  117 trueControlDependence
 335:  112 ->  118 fallThroughControlDependence
 336:  116 ->  113 loopIndependentDefUseDependence System.err.!println( java.lang.String )
 337:  117 ->  118 fallThroughControlDependence
 338:  117 ->  132 loopIndependentDefUseDependence $_
 339:  118 ->  119 trueControlDependence
 340:  118 ->  120 trueControlDependence
 341:  118 ->  130 fallThroughControlDependence
 342:  119 ->  128 trueControlDependence
 343:  120 ->  122 trueControlDependence
 344:  120 ->  123 trueControlDependence
 345:  120 ->  125 falseControlDependence
 346:  123 ->  121 trueControlDependence
 347:  123 ->  124 trueControlDependence
 348:  123 ->  128 exceptionCatch
 349:  123 ->  130 trueControlDependence
 350:  124 ->  121 loopIndependentDefUseDependence br$1.!close( )
 351:  125 ->  130 fallThroughControlDependence
 352:  125 ->  132 loopIndependentDefUseDependence $_
 353:  128 ->  129 trueControlDependence
 354:  128 ->  130 fallThroughControlDependence
 355:  129 ->  130 fallThroughControlDependence
 356:  129 ->  132 loopIndependentDefUseDependence $_
 357:  130 ->  132 loopIndependentDefUseDependence $_
--
   0: add( jp.ac.ritsumei.cs.draw.Figure )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    7 trueControlDependence
   7:    1 ->    4 loopIndependentDefUseDependence figure$0
   8:    5 ->    2 loopIndependentDefUseDependence this.figures.!add( java.lang.Object )
--
   0: clear( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    4 ->    1 loopIndependentDefUseDependence this.figures.!clear( )
--
   0: getFigures( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    1 ->    3 loopIndependentDefUseDependence $_
--
   0: FigureManager( java.lang.String )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    8 trueControlDependence
   8:    1 ->    6 loopIndependentDefUseDependence filename$0
   9:    5 ->    2 loopIndependentDefUseDependence java.util.LinkedList.!LinkedList( )
--
   0: store( java.lang.String )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    5 trueControlDependence
   5:    0 ->    7 trueControlDependence
   6:    0 ->    9 trueControlDependence
   7:    0 ->   10 trueControlDependence
   8:    0 ->  114 trueControlDependence
   9:    1 ->   10 loopIndependentDefUseDependence filename$0
  10:    1 ->  102 loopIndependentDefUseDependence filename$0
  11:    2 ->    4 declaration
  12:    2 ->    4 outputDependence pw$1
  13:    2 ->   92 declaration
  14:    2 ->  105 declaration
  15:    2 ->  105 loopIndependentDefUseDependence pw$1
  16:    2 ->  107 declaration
  17:    2 ->  107 loopIndependentDefUseDependence pw$1
  18:    3 ->   99 trueControlDependence
  19:    3 ->  104 trueControlDependence
  20:    4 ->   92 loopIndependentDefUseDependence pw$1
  21:    4 ->  105 loopIndependentDefUseDependence pw$1
  22:    4 ->  107 loopIndependentDefUseDependence pw$1
  23:   10 ->    4 trueControlDependence
  24:   10 ->    6 trueControlDependence
  25:   10 ->    8 trueControlDependence
  26:   10 ->   11 trueControlDependence
  27:   10 ->   12 trueControlDependence
  28:   10 ->   13 trueControlDependence
  29:   10 ->   14 trueControlDependence
  30:   10 ->   99 exceptionCatch
  31:   11 ->    8 loopIndependentDefUseDependence java.io.FileWriter.!FileWriter( java.lang.String )
  32:   12 ->    6 loopIndependentDefUseDependence java.io.BufferedWriter.!BufferedWriter( java.io.Writer )
  33:   13 ->    4 loopIndependentDefUseDependence java.io.PrintWriter.!PrintWriter( java.io.Writer )
  34:   14 ->   14 defOrderDependence figure$4
  35:   14 ->   15 trueControlDependence
  36:   14 ->   16 trueControlDependence
  37:   14 ->   17 trueControlDependence
  38:   14 ->   18 trueControlDependence
  39:   14 ->   19 trueControlDependence
  40:   14 ->   20 trueControlDependence
  41:   14 ->   21 trueControlDependence
  42:   14 ->   22 loopIndependentDefUseDependence figure$4
  43:   14 ->   22 trueControlDependence
  44:   14 ->   23 trueControlDependence
  45:   14 ->   24 trueControlDependence
  46:   14 ->   25 trueControlDependence
  47:   14 ->   26 trueControlDependence
  48:   14 ->   27 trueControlDependence
  49:   14 ->   28 trueControlDependence
  50:   14 ->   29 trueControlDependence
  51:   14 ->   30 loopIndependentDefUseDependence figure$4
  52:   14 ->   30 trueControlDependence
  53:   14 ->   31 trueControlDependence
  54:   14 ->   32 trueControlDependence
  55:   14 ->   33 trueControlDependence
  56:   14 ->   34 trueControlDependence
  57:   14 ->   35 trueControlDependence
  58:   14 ->   36 trueControlDependence
  59:   14 ->   37 loopIndependentDefUseDependence figure$4
  60:   14 ->   37 trueControlDependence
  61:   14 ->   38 trueControlDependence
  62:   14 ->   39 trueControlDependence
  63:   14 ->   40 trueControlDependence
  64:   14 ->   41 trueControlDependence
  65:   14 ->   42 trueControlDependence
  66:   14 ->   43 trueControlDependence
  67:   14 ->   44 loopIndependentDefUseDependence figure$4
  68:   14 ->   44 trueControlDependence
  69:   14 ->   45 trueControlDependence
  70:   14 ->   46 trueControlDependence
  71:   14 ->   47 trueControlDependence
  72:   14 ->   48 trueControlDependence
  73:   14 ->   49 trueControlDependence
  74:   14 ->   50 trueControlDependence
  75:   14 ->   51 loopIndependentDefUseDependence figure$4
  76:   14 ->   51 trueControlDependence
  77:   14 ->   52 trueControlDependence
  78:   14 ->   53 trueControlDependence
  79:   14 ->   54 trueControlDependence
  80:   14 ->   55 trueControlDependence
  81:   14 ->   56 trueControlDependence
  82:   14 ->   57 trueControlDependence
  83:   14 ->   58 trueControlDependence
  84:   14 ->   59 loopIndependentDefUseDependence figure$4
  85:   14 ->   59 trueControlDependence
  86:   14 ->   60 trueControlDependence
  87:   14 ->   61 trueControlDependence
  88:   14 ->   62 trueControlDependence
  89:   14 ->   63 trueControlDependence
  90:   14 ->   64 trueControlDependence
  91:   14 ->   65 trueControlDependence
  92:   14 ->   66 trueControlDependence
  93:   14 ->   67 trueControlDependence
  94:   14 ->   68 trueControlDependence
  95:   14 ->   69 loopIndependentDefUseDependence figure$4
  96:   14 ->   69 trueControlDependence
  97:   14 ->   70 trueControlDependence
  98:   14 ->   71 trueControlDependence
  99:   14 ->   72 trueControlDependence
 100:   14 ->   73 trueControlDependence
 101:   14 ->   74 trueControlDependence
 102:   14 ->   75 trueControlDependence
 103:   14 ->   76 trueControlDependence
 104:   14 ->   77 trueControlDependence
 105:   14 ->   78 trueControlDependence
 106:   14 ->   79 loopIndependentDefUseDependence figure$4
 107:   14 ->   79 trueControlDependence
 108:   14 ->   80 trueControlDependence
 109:   14 ->   81 trueControlDependence
 110:   14 ->   82 trueControlDependence
 111:   14 ->   83 trueControlDependence
 112:   14 ->   84 trueControlDependence
 113:   14 ->   85 trueControlDependence
 114:   14 ->   86 trueControlDependence
 115:   14 ->   87 trueControlDependence
 116:   14 ->   88 loopIndependentDefUseDependence figure$4
 117:   14 ->   88 trueControlDependence
 118:   14 ->   89 trueControlDependence
 119:   14 ->   90 trueControlDependence
 120:   14 ->   91 trueControlDependence
 121:   14 ->   92 trueControlDependence
 122:   14 ->   93 trueControlDependence
 123:   14 ->   94 trueControlDependence
 124:   14 ->   95 trueControlDependence
 125:   14 ->   96 trueControlDependence
 126:   14 ->   97 trueControlDependence
 127:   15 ->   15 defOrderDependence sb$6
 128:   15 ->   20 declaration
 129:   15 ->   20 loopIndependentDefUseDependence sb$6
 130:   15 ->   27 declaration
 131:   15 ->   27 loopIndependentDefUseDependence sb$6
 132:   15 ->   34 declaration
 133:   15 ->   34 loopIndependentDefUseDependence sb$6
 134:   15 ->   41 declaration
 135:   15 ->   41 loopIndependentDefUseDependence sb$6
 136:   15 ->   48 declaration
 137:   15 ->   48 loopIndependentDefUseDependence sb$6
 138:   15 ->   55 declaration
 139:   15 ->   55 loopIndependentDefUseDependence sb$6
 140:   15 ->   65 declaration
 141:   15 ->   65 loopIndependentDefUseDependence sb$6
 142:   15 ->   75 declaration
 143:   15 ->   75 loopIndependentDefUseDependence sb$6
 144:   15 ->   85 declaration
 145:   15 ->   85 loopIndependentDefUseDependence sb$6
 146:   15 ->   94 declaration
 147:   15 ->   94 loopIndependentDefUseDependence sb$6
 148:   18 ->   15 loopIndependentDefUseDependence java.lang.StringBuilder.!StringBuilder( )
 149:   18 ->   18 defOrderDependence java.lang.StringBuilder.!StringBuilder( )
 150:   18 ->   18 defOrderDependence java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder
 151:   18 ->   18 defOrderDependence java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value
 152:   24 ->   21 loopIndependentDefUseDependence figure$4.!getName( )
 153:   24 ->   24 defOrderDependence figure$4.!getName( )
 154:   25 ->   19 loopIndependentDefUseDependence sb$6.!append( java.lang.String )
 155:   25 ->   28 loopIndependentDefUseDependence sb$6.!java.lang.AbstractStringBuilder.count
 156:   25 ->   32 loopIndependentDefUseDependence sb$6.!java.lang.AbstractStringBuilder.count
 157:   25 ->   32 outputDependence sb$6.!append( java.lang.String )
 158:   31 ->   28 loopIndependentDefUseDependence this.!valueOf( int )
 159:   31 ->   38 outputDependence this.!valueOf( int )
 160:   32 ->   26 loopIndependentDefUseDependence sb$6.!append( java.lang.String )
 161:   32 ->   35 loopIndependentDefUseDependence sb$6.!java.lang.AbstractStringBuilder.count
 162:   32 ->   39 loopIndependentDefUseDependence sb$6.!java.lang.AbstractStringBuilder.count
 163:   32 ->   39 outputDependence sb$6.!append( java.lang.String )
 164:   38 ->   35 loopIndependentDefUseDependence this.!valueOf( int )
 165:   38 ->   45 outputDependence this.!valueOf( int )
 166:   39 ->   33 loopIndependentDefUseDependence sb$6.!append( java.lang.String )
 167:   39 ->   42 loopIndependentDefUseDependence sb$6.!java.lang.AbstractStringBuilder.count
 168:   39 ->   46 loopIndependentDefUseDependence sb$6.!java.lang.AbstractStringBuilder.count
 169:   39 ->   46 outputDependence sb$6.!append( java.lang.String )
 170:   45 ->   42 loopIndependentDefUseDependence this.!valueOf( int )
 171:   45 ->   52 outputDependence this.!valueOf( int )
 172:   46 ->   40 loopIndependentDefUseDependence sb$6.!append( java.lang.String )
 173:   46 ->   49 loopIndependentDefUseDependence sb$6.!java.lang.AbstractStringBuilder.count
 174:   46 ->   53 loopIndependentDefUseDependence sb$6.!java.lang.AbstractStringBuilder.count
 175:   46 ->   53 outputDependence sb$6.!append( java.lang.String )
 176:   52 ->   49 loopIndependentDefUseDependence this.!valueOf( int )
 177:   52 ->   62 outputDependence this.!valueOf( int )
 178:   53 ->   47 loopIndependentDefUseDependence sb$6.!append( java.lang.String )
 179:   53 ->   56 loopIndependentDefUseDependence sb$6.!java.lang.AbstractStringBuilder.count
 180:   53 ->   63 loopIndependentDefUseDependence sb$6.!java.lang.AbstractStringBuilder.count
 181:   53 ->   63 outputDependence sb$6.!append( java.lang.String )
 182:   61 ->   58 loopIndependentDefUseDependence figure$4.color.!getRed( )
 183:   61 ->   61 defOrderDependence figure$4.color.!getRed( )
 184:   62 ->   56 loopIndependentDefUseDependence this.!valueOf( int )
 185:   62 ->   72 outputDependence this.!valueOf( int )
 186:   63 ->   54 loopIndependentDefUseDependence sb$6.!append( java.lang.String )
 187:   63 ->   66 loopIndependentDefUseDependence sb$6.!java.lang.AbstractStringBuilder.count
 188:   63 ->   73 loopIndependentDefUseDependence sb$6.!java.lang.AbstractStringBuilder.count
 189:   63 ->   73 outputDependence sb$6.!append( java.lang.String )
 190:   71 ->   68 loopIndependentDefUseDependence figure$4.color.!getGreen( )
 191:   71 ->   71 defOrderDependence figure$4.color.!getGreen( )
 192:   72 ->   66 loopIndependentDefUseDependence this.!valueOf( int )
 193:   72 ->   82 outputDependence this.!valueOf( int )
 194:   73 ->   64 loopIndependentDefUseDependence sb$6.!append( java.lang.String )
 195:   73 ->   76 loopIndependentDefUseDependence sb$6.!java.lang.AbstractStringBuilder.count
 196:   73 ->   83 loopIndependentDefUseDependence sb$6.!java.lang.AbstractStringBuilder.count
 197:   73 ->   83 outputDependence sb$6.!append( java.lang.String )
 198:   81 ->   78 loopIndependentDefUseDependence figure$4.color.!getBlue( )
 199:   81 ->   81 defOrderDependence figure$4.color.!getBlue( )
 200:   82 ->   31 outputDependence this.!valueOf( int )
 201:   82 ->   76 loopIndependentDefUseDependence this.!valueOf( int )
 202:   83 ->   74 loopIndependentDefUseDependence sb$6.!append( java.lang.String )
 203:   83 ->   86 loopIndependentDefUseDependence sb$6.!java.lang.AbstractStringBuilder.count
 204:   83 ->   90 loopIndependentDefUseDependence sb$6.!java.lang.AbstractStringBuilder.count
 205:   83 ->   90 outputDependence sb$6.!append( java.lang.String )
 206:   89 ->   86 loopIndependentDefUseDependence this.!valueOf( float )
 207:   89 ->   89 defOrderDependence this.!valueOf( float )
 208:   90 ->   21 loopCarriedDefUseDependence sb$6.!java.lang.AbstractStringBuilder.count (LC = 14)
 209:   90 ->   25 loopCarriedDefUseDependence sb$6.!java.lang.AbstractStringBuilder.count (LC = 14)
 210:   90 ->   25 outputDependence sb$6.!append( java.lang.String )
 211:   90 ->   84 loopIndependentDefUseDependence sb$6.!append( java.lang.String )
 212:   96 ->   93 loopIndependentDefUseDependence sb$6.!toString( )
 213:   96 ->   96 defOrderDependence sb$6.!toString( )
 214:   97 ->   91 loopIndependentDefUseDependence pw$1.!println( java.lang.String )
 215:   97 ->   97 defOrderDependence pw$1.!println( java.lang.String )
 216:   99 ->  100 trueControlDependence
 217:   99 ->  101 trueControlDependence
 218:   99 ->  102 trueControlDependence
 219:   99 ->  103 trueControlDependence
 220:  103 ->  100 loopIndependentDefUseDependence System.err.!println( java.lang.String )
 221:  104 ->  105 trueControlDependence
 222:  104 ->  112 fallThroughControlDependence
 223:  105 ->  106 trueControlDependence
 224:  105 ->  107 trueControlDependence
 225:  105 ->  108 trueControlDependence
 226:  105 ->  109 trueControlDependence
 227:  105 ->  110 falseControlDependence
 228:  105 ->  112 trueControlDependence
 229:  109 ->  106 loopIndependentDefUseDependence pw$1.!close( )
 230:  110 ->  112 fallThroughControlDependence
 231:  110 ->  114 loopIndependentDefUseDependence $_
 232:  112 ->  114 loopIndependentDefUseDependence $_
--
----- ClDG (to here) -----

