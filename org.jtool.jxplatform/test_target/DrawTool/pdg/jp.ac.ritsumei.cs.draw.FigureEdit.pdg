----- ClDG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.FigureEdit
   0 fieldEntry [ canvas ]
   1 fieldDeclaration D = { this.canvas } U = { this.canvas }
--
   0 fieldEntry [ figure ]
   1 fieldDeclaration D = { this.figure } U = { this.figure }
--
   0 methodEntry [ undo( ) ]
   1 throwsClause D = {  } U = { $javax.swing.undo.CannotUndoException }
   2 assignment D = {  } U = { super.!undo( ) }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { super.!javax.swing.undo.AbstractUndoableEdit.alive, super.!javax.swing.undo.AbstractUndoableEdit.hasBeenDone } TO = javax.swing.undo.AbstractUndoableEdit#undo( )
* actualOut D = { super.!javax.swing.undo.AbstractUndoableEdit.hasBeenDone, super.!undo( ) } U = { super.!javax.swing.undo.AbstractUndoableEdit.alive, super.!javax.swing.undo.AbstractUndoableEdit.hasBeenDone }
   7 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ redo( ) ]
   1 throwsClause D = {  } U = { $javax.swing.undo.CannotUndoException }
   2 throwsClause D = {  } U = { $javax.swing.undo.CannotRedoException }
   3 assignment D = {  } U = { super.!redo( ) }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = { super.!javax.swing.undo.AbstractUndoableEdit.alive, super.!javax.swing.undo.AbstractUndoableEdit.hasBeenDone } TO = javax.swing.undo.AbstractUndoableEdit#redo( )
* actualOut D = { super.!javax.swing.undo.AbstractUndoableEdit.hasBeenDone, super.!redo( ) } U = { super.!javax.swing.undo.AbstractUndoableEdit.alive, super.!javax.swing.undo.AbstractUndoableEdit.hasBeenDone }
   8 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ FigureEdit( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ FigureEdit( jp.ac.ritsumei.cs.draw.DrawCanvas jp.ac.ritsumei.cs.draw.Figure ) ]
   1 formalIn D = { canvas$0 } U = {  }
   2 formalIn D = { figure$1 } U = {  }
   3 assignment D = { this.canvas } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
   4 assignment D = { this.figure } U = { figure$1, figure$1.color, figure$1.endX, figure$1.endY, figure$1.outlineWidth, figure$1.startX, figure$1.startY }
   6 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.FigureEdit.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.FigureEdit.serialVersionUID }
--
   0: canvas
   1:    0 ->    1 trueControlDependence
--
   0: figure
   1:    0 ->    1 trueControlDependence
--
   0: undo( )
   1:    0 ->    3 trueControlDependence
   2:    0 ->    4 trueControlDependence
   3:    4 ->    1 exceptionCatch
   4:    4 ->    2 trueControlDependence
   5:    4 ->    7 trueControlDependence
   6:    4 -> * trueControlDependence
   7: * ->    2 loopIndependentDefUseDependence super.!undo( )
--
   0: redo( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    4 trueControlDependence
   3:    0 ->    5 trueControlDependence
   4:    5 ->    2 exceptionCatch
   5:    5 ->    3 trueControlDependence
   6:    5 ->    8 trueControlDependence
   7:    5 -> * trueControlDependence
   8: * ->    3 loopIndependentDefUseDependence super.!redo( )
--
   0: FigureEdit( )
   1:    0 ->    2 trueControlDependence
--
   0: FigureEdit( jp.ac.ritsumei.cs.draw.DrawCanvas jp.ac.ritsumei.cs.draw.Figure )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    1 ->    3 loopIndependentDefUseDependence canvas$0
   7:    2 ->    4 loopIndependentDefUseDependence figure$1
--
   0: serialVersionUID
   1:    0 ->    1 trueControlDependence
--
----- ClDG (to here) -----

