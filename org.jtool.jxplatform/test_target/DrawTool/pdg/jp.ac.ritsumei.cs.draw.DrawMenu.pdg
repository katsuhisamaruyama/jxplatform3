----- ClDG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.DrawMenu
   0 fieldEntry [ serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.DrawMenu.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.DrawMenu.serialVersionUID }
--
   0 fieldEntry [ toolBar ]
   1 fieldDeclaration D = { this.toolBar } U = { this.toolBar }
--
   0 fieldEntry [ copyAction ]
   1 fieldDeclaration D = { this.copyAction } U = { this.copyAction }
--
   0 methodEntry [ initFileActions( ) ]
   1 assignment D = { this.newAction } U = { this.newAction.! }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { this.newAction.arrayTable, this.newAction.enabled } U = { this.newAction.arrayTable, this.newAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualIn D = {  } U = { this.newAction.!ImageIcon }
   6 receiver D = {  } U = {  }
   7 constructorCall D = { this.newAction.accessibleContext, this.newAction.description, this.newAction.height, this.newAction.image, this.newAction.loadStatus, this.newAction.location, this.newAction.width } U = { java.net.URL.handler, this.!getClass.!getResource, this.newAction.image } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
   8 receiver D = {  } U = { this.!getClass }
   9 receiver D = {  } U = {  }
  10 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  11 actualOut D = { this.!getClass } U = {  }
  12 methodCall D = {  } U = { $java.lang.String, java.lang.Module.name, this.!getClass, this.!getClass.classLoader, this.!getClass.module, this.!getClassLoader.parent } TO = java.lang.Class#getResource( java.lang.String )
  13 actualOut D = { this.!getClass.!getResource } U = { java.lang.Module.name, this.!getClass.classLoader, this.!getClass.module, this.!getClassLoader.parent }
  14 actualOut D = { this.newAction.!ImageIcon, this.newAction.accessibleContext, this.newAction.description, this.newAction.height, this.newAction.image, this.newAction.loadStatus, this.newAction.location, this.newAction.width } U = { java.net.URL.handler, this.newAction.image }
  15 actualOut D = { this.newAction.!, this.newAction.arrayTable, this.newAction.enabled } U = { this.newAction.arrayTable, this.newAction.enabled }
  16 assignment D = { this.openAction } U = { this.openAction.! }
  17 receiver D = {  } U = {  }
  18 constructorCall D = { this.openAction.arrayTable, this.openAction.enabled } U = { this.openAction.arrayTable, this.openAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  19 actualIn D = {  } U = { $java.lang.String }
  20 actualIn D = {  } U = { this.openAction.!ImageIcon }
  21 receiver D = {  } U = {  }
  22 constructorCall D = { this.openAction.accessibleContext, this.openAction.description, this.openAction.height, this.openAction.image, this.openAction.loadStatus, this.openAction.location, this.openAction.width } U = { java.net.URL.handler, this.!getClass.!getResource, this.openAction.image } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  23 receiver D = {  } U = { this.!getClass }
  24 receiver D = {  } U = {  }
  25 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  26 actualOut D = { this.!getClass } U = {  }
  27 methodCall D = {  } U = { $java.lang.String, java.lang.Module.name, this.!getClass, this.!getClass.classLoader, this.!getClass.module, this.!getClassLoader.parent } TO = java.lang.Class#getResource( java.lang.String )
  28 actualOut D = { this.!getClass.!getResource } U = { java.lang.Module.name, this.!getClass.classLoader, this.!getClass.module, this.!getClassLoader.parent }
  29 actualOut D = { this.openAction.!ImageIcon, this.openAction.accessibleContext, this.openAction.description, this.openAction.height, this.openAction.image, this.openAction.loadStatus, this.openAction.location, this.openAction.width } U = { java.net.URL.handler, this.openAction.image }
  30 actualOut D = { this.openAction.!, this.openAction.arrayTable, this.openAction.enabled } U = { this.openAction.arrayTable, this.openAction.enabled }
  31 assignment D = { this.saveAction } U = { this.saveAction.! }
  32 receiver D = {  } U = {  }
  33 constructorCall D = { this.saveAction.arrayTable, this.saveAction.enabled } U = { this.saveAction.arrayTable, this.saveAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  34 actualIn D = {  } U = { $java.lang.String }
  35 actualIn D = {  } U = { this.saveAction.!ImageIcon }
  36 receiver D = {  } U = {  }
  37 constructorCall D = { this.saveAction.accessibleContext, this.saveAction.description, this.saveAction.height, this.saveAction.image, this.saveAction.loadStatus, this.saveAction.location, this.saveAction.width } U = { java.net.URL.handler, this.!getClass.!getResource, this.saveAction.image } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  38 receiver D = {  } U = { this.!getClass }
  39 receiver D = {  } U = {  }
  40 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  41 actualOut D = { this.!getClass } U = {  }
  42 methodCall D = {  } U = { $java.lang.String, java.lang.Module.name, this.!getClass, this.!getClass.classLoader, this.!getClass.module, this.!getClassLoader.parent } TO = java.lang.Class#getResource( java.lang.String )
  43 actualOut D = { this.!getClass.!getResource } U = { java.lang.Module.name, this.!getClass.classLoader, this.!getClass.module, this.!getClassLoader.parent }
  44 actualOut D = { this.saveAction.!ImageIcon, this.saveAction.accessibleContext, this.saveAction.description, this.saveAction.height, this.saveAction.image, this.saveAction.loadStatus, this.saveAction.location, this.saveAction.width } U = { java.net.URL.handler, this.saveAction.image }
  45 actualOut D = { this.saveAction.!, this.saveAction.arrayTable, this.saveAction.enabled } U = { this.saveAction.arrayTable, this.saveAction.enabled }
  47 formalOut D = {  } U = { $_, this.newAction, this.newAction.accessibleContext, this.newAction.arrayTable, this.newAction.description, this.newAction.enabled, this.newAction.height, this.newAction.image, this.newAction.loadStatus, this.newAction.location, this.newAction.width, this.openAction, this.openAction.accessibleContext, this.openAction.arrayTable, this.openAction.description, this.openAction.enabled, this.openAction.height, this.openAction.image, this.openAction.loadStatus, this.openAction.location, this.openAction.width, this.saveAction, this.saveAction.accessibleContext, this.saveAction.arrayTable, this.saveAction.description, this.saveAction.enabled, this.saveAction.height, this.saveAction.image, this.saveAction.loadStatus, this.saveAction.location, this.saveAction.width }
--
   0 methodEntry [ createPopup( javax.swing.JPopupMenu ) ]
   1 formalIn D = { popup$0 } U = {  }
   2 localDeclaration D = { undoMenuItem$1 } U = { popup$0.!add }
   3 receiver D = {  } U = { popup$0 }
   4 methodCall D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, popup$0 } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, popup$0, this.undoAction } TO = javax.swing.JPopupMenu#add( javax.swing.Action )
   5 actualOut D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, popup$0, popup$0.!add } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, popup$0 }
   6 assignment D = {  } U = { undoMenuItem$1.!setIcon }
   7 receiver D = {  } U = { popup$0.!add, undoMenuItem$1 }
   8 methodCall D = { undoMenuItem$1, undoMenuItem$1.defaultIcon, undoMenuItem$1.disabledIcon } U = { java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, undoMenuItem$1, undoMenuItem$1.defaultIcon, undoMenuItem$1.disabledIcon } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
   9 actualOut D = { undoMenuItem$1, undoMenuItem$1.!setIcon, undoMenuItem$1.defaultIcon, undoMenuItem$1.disabledIcon } U = { java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, undoMenuItem$1, undoMenuItem$1.defaultIcon, undoMenuItem$1.disabledIcon }
  10 assignment D = {  } U = { popup$0.!add }
  11 receiver D = {  } U = { popup$0 }
  12 methodCall D = {  } U = { undoMenuItem$1 } TO = javax.swing.JPopupMenu#add( javax.swing.JMenuItem )
  13 actualOut D = { popup$0.!add } U = {  }
  14 localDeclaration D = { redoMenuItem$2 } U = { popup$0.!add }
  15 receiver D = {  } U = { popup$0 }
  16 methodCall D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, popup$0 } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, popup$0, this.redoAction } TO = javax.swing.JPopupMenu#add( javax.swing.Action )
  17 actualOut D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, popup$0, popup$0.!add } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, popup$0 }
  18 assignment D = {  } U = { redoMenuItem$2.!setIcon }
  19 receiver D = {  } U = { popup$0.!add, redoMenuItem$2 }
  20 methodCall D = { redoMenuItem$2, redoMenuItem$2.defaultIcon, redoMenuItem$2.disabledIcon } U = { java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, redoMenuItem$2, redoMenuItem$2.defaultIcon, redoMenuItem$2.disabledIcon } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  21 actualOut D = { redoMenuItem$2, redoMenuItem$2.!setIcon, redoMenuItem$2.defaultIcon, redoMenuItem$2.disabledIcon } U = { java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, redoMenuItem$2, redoMenuItem$2.defaultIcon, redoMenuItem$2.disabledIcon }
  22 assignment D = {  } U = { popup$0.!add }
  23 receiver D = {  } U = { popup$0 }
  24 methodCall D = {  } U = { redoMenuItem$2 } TO = javax.swing.JPopupMenu#add( javax.swing.JMenuItem )
  25 actualOut D = { popup$0.!add } U = {  }
  27 formalOut D = {  } U = { $_, javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, redoMenuItem$2.defaultIcon, redoMenuItem$2.disabledIcon, undoMenuItem$1.defaultIcon, undoMenuItem$1.disabledIcon }
--
   0 methodEntry [ getFileName( boolean ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { open$0 } U = {  }
   3 localDeclaration D = { chooser$1 } U = { chooser$1.!JFileChooser }
   4 receiver D = {  } U = {  }
   5 constructorCall D = { chooser$1.accessibleContext, chooser$1.accessory, chooser$1.approveButtonMnemonic, chooser$1.approveButtonText, chooser$1.approveButtonToolTipText, chooser$1.controlsShown, chooser$1.currentDirectory, chooser$1.dialog, chooser$1.dialogTitle, chooser$1.dialogType, chooser$1.dragEnabled, chooser$1.fileFilter, chooser$1.fileSelectionMode, chooser$1.fileSystemView, chooser$1.fileView, chooser$1.filters, chooser$1.multiSelectionEnabled, chooser$1.returnValue, chooser$1.selectedFile, chooser$1.showFilesListener, chooser$1.useAcceptAllFileFilter, chooser$1.useFileHiding } U = {  } TO = javax.swing.JFileChooser#JFileChooser( )
   6 actualOut D = { chooser$1.!JFileChooser, chooser$1.accessibleContext, chooser$1.accessory, chooser$1.approveButtonMnemonic, chooser$1.approveButtonText, chooser$1.approveButtonToolTipText, chooser$1.controlsShown, chooser$1.currentDirectory, chooser$1.dialog, chooser$1.dialogTitle, chooser$1.dialogType, chooser$1.dragEnabled, chooser$1.fileFilter, chooser$1.fileSelectionMode, chooser$1.fileSystemView, chooser$1.fileView, chooser$1.filters, chooser$1.multiSelectionEnabled, chooser$1.returnValue, chooser$1.selectedFile, chooser$1.showFilesListener, chooser$1.useAcceptAllFileFilter, chooser$1.useFileHiding } U = {  }
   7 assignment D = {  } U = { chooser$1.!setDialogTitle }
   8 receiver D = {  } U = { chooser$1 }
   9 methodCall D = { chooser$1, chooser$1.dialogTitle, java.awt.Dialog.title } U = { $java.lang.String, chooser$1, chooser$1.dialog, chooser$1.dialogTitle, java.awt.Component.changeSupport, java.awt.Component.peer, java.awt.Dialog.title } TO = javax.swing.JFileChooser#setDialogTitle( java.lang.String )
  10 actualOut D = { chooser$1, chooser$1.!setDialogTitle, chooser$1.dialogTitle, java.awt.Dialog.title } U = { chooser$1, chooser$1.dialog, chooser$1.dialogTitle, java.awt.Component.changeSupport, java.awt.Component.peer, java.awt.Dialog.title }
  11 assignment D = {  } U = { chooser$1.!setCurrentDirectory }
  12 receiver D = {  } U = { chooser$1 }
  13 methodCall D = { chooser$1, chooser$1.currentDirectory } U = { chooser$1, chooser$1.currentDirectory, chooser$1.fileSystemView, java.awt.Component.changeSupport, java.io.File.fs, java.io.File.path, this.directory } TO = javax.swing.JFileChooser#setCurrentDirectory( java.io.File )
  14 actualOut D = { chooser$1, chooser$1.!setCurrentDirectory, chooser$1.currentDirectory } U = { chooser$1, chooser$1.currentDirectory, chooser$1.fileSystemView, java.awt.Component.changeSupport, java.io.File.fs, java.io.File.path }
  15 localDeclaration D = { result$2 } U = {  }
  16 ifSt D = {  } U = { open$0 }
  17 assignment D = { result$2 } U = { chooser$1.!showOpenDialog }
  18 receiver D = {  } U = { chooser$1 }
  19 methodCall D = { chooser$1, chooser$1.dialog, chooser$1.dialogType, chooser$1.returnValue } U = { chooser$1, chooser$1.dialog, chooser$1.dialogType, chooser$1.returnValue, this.tool } TO = javax.swing.JFileChooser#showOpenDialog( java.awt.Component )
  20 actualOut D = { chooser$1, chooser$1.!showOpenDialog, chooser$1.dialog, chooser$1.dialogType, chooser$1.returnValue } U = { chooser$1, chooser$1.dialog, chooser$1.dialogType, chooser$1.returnValue }
  21 assignment D = { result$2 } U = { chooser$1.!showSaveDialog }
  22 receiver D = {  } U = { chooser$1 }
  23 methodCall D = { chooser$1, chooser$1.dialog, chooser$1.dialogType, chooser$1.returnValue } U = { chooser$1, chooser$1.dialog, chooser$1.dialogType, chooser$1.returnValue, this.tool } TO = javax.swing.JFileChooser#showSaveDialog( java.awt.Component )
  24 actualOut D = { chooser$1, chooser$1.!showSaveDialog, chooser$1.dialog, chooser$1.dialogType, chooser$1.returnValue } U = { chooser$1, chooser$1.dialog, chooser$1.dialogType, chooser$1.returnValue }
  26 localDeclaration D = { file$3 } U = { chooser$1.!getSelectedFile }
  27 receiver D = {  } U = { chooser$1 }
  28 methodCall D = {  } U = { chooser$1, chooser$1.selectedFile } TO = javax.swing.JFileChooser#getSelectedFile( )
  29 actualOut D = { chooser$1.!getSelectedFile } U = { chooser$1.selectedFile }
  30 ifSt D = {  } U = { chooser$1.!getSelectedFile, file$3, result$2, result$2.APPROVE_OPTION }
  31 assignment D = { this.directory } U = { chooser$1.!getCurrentDirectory }
  32 receiver D = {  } U = { chooser$1 }
  33 methodCall D = {  } U = { chooser$1, chooser$1.currentDirectory } TO = javax.swing.JFileChooser#getCurrentDirectory( )
  34 actualOut D = { chooser$1.!getCurrentDirectory } U = { chooser$1.currentDirectory }
  35 returnSt D = { $_ } U = { chooser$1.!getSelectedFile.!getPath, file$3.!getPath }
  36 receiver D = {  } U = { chooser$1.!getSelectedFile, file$3 }
  37 methodCall D = {  } U = { chooser$1.!getSelectedFile, chooser$1.!getSelectedFile.path, file$3, file$3.path } TO = java.io.File#getPath( )
  38 actualOut D = { file$3.!getPath } U = { chooser$1.!getSelectedFile.path, file$3.path }
  40 returnSt D = { $_ } U = {  }
  42 formalOut D = {  } U = { $_, chooser$1.accessibleContext, chooser$1.accessory, chooser$1.approveButtonMnemonic, chooser$1.approveButtonText, chooser$1.approveButtonToolTipText, chooser$1.controlsShown, chooser$1.currentDirectory, chooser$1.dialog, chooser$1.dialogTitle, chooser$1.dialogType, chooser$1.dragEnabled, chooser$1.fileFilter, chooser$1.fileSelectionMode, chooser$1.fileSystemView, chooser$1.fileView, chooser$1.filters, chooser$1.multiSelectionEnabled, chooser$1.returnValue, chooser$1.selectedFile, chooser$1.showFilesListener, chooser$1.useAcceptAllFileFilter, chooser$1.useFileHiding, java.awt.Dialog.title, this.directory }
--
   0 constructorEntry [ DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ) ]
   1 formalIn D = { tool$0 } U = {  }
   2 formalIn D = { tabbedCanvas$1 } U = {  }
   3 assignment D = { this.tool } U = { this, tool$0 }
   4 assignment D = { this.tabbedCanvas } U = { tabbedCanvas$1, this }
   5 assignment D = { this.menuBar } U = { this.menuBar.!JMenuBar }
   6 receiver D = {  } U = {  }
   7 constructorCall D = { java.awt.Component.focusTraversalKeysEnabled, javax.swing.DefaultSingleSelectionModel.changeEvent, javax.swing.DefaultSingleSelectionModel.index, javax.swing.DefaultSingleSelectionModel.listenerList, javax.swing.JComponent.inputVerifier, javax.swing.JComponent.listenerList, javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JComponent.verifyInputWhenFocusTarget, this.menuBar.margin, this.menuBar.paintBorder, this.menuBar.selectionModel } U = { java.awt.Component.focusTraversalKeysEnabled, this.menuBar.selectionModel } TO = javax.swing.JMenuBar#JMenuBar( )
   8 actualOut D = { java.awt.Component.focusTraversalKeysEnabled, javax.swing.DefaultSingleSelectionModel.changeEvent, javax.swing.DefaultSingleSelectionModel.index, javax.swing.DefaultSingleSelectionModel.listenerList, javax.swing.JComponent.inputVerifier, javax.swing.JComponent.listenerList, javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JComponent.verifyInputWhenFocusTarget, this.menuBar.!JMenuBar, this.menuBar.margin, this.menuBar.paintBorder, this.menuBar.selectionModel } U = { java.awt.Component.focusTraversalKeysEnabled, this.menuBar.selectionModel }
   9 assignment D = {  } U = { this.!initMenuBar }
  10 receiver D = {  } U = {  }
  11 methodCall D = { this.copyAction, this.cutAction, this.deleteAction, this.fileListMenu, this.fileListener, this.newAction, this.openAction, this.pasteAction, this.redoAction, this.saveAction, this.undoAction, this.windowListener } U = { this.copyAction, this.cutAction, this.deleteAction, this.fileListMenu, this.fileListener, this.newAction, this.openAction, this.pasteAction, this.redoAction, this.saveAction, this.undoAction, this.windowListener } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initMenuBar( javax.swing.JMenuBar )
  12 actualIn D = {  } U = { this.menuBar }
  13 actualOut D = { this.!initMenuBar, this.copyAction, this.cutAction, this.deleteAction, this.fileListMenu, this.fileListener, this.newAction, this.openAction, this.pasteAction, this.redoAction, this.saveAction, this.undoAction, this.windowListener } U = { this.copyAction, this.cutAction, this.deleteAction, this.fileListMenu, this.fileListener, this.newAction, this.openAction, this.pasteAction, this.redoAction, this.saveAction, this.undoAction, this.windowListener }
  14 assignment D = { this.toolBar } U = { this.toolBar.!JToolBar }
  15 receiver D = {  } U = {  }
  16 constructorCall D = {  } U = {  } TO = javax.swing.JToolBar#JToolBar( )
  17 actualOut D = { this.toolBar.!JToolBar } U = {  }
  18 assignment D = {  } U = { this.toolBar.!setFloatable }
  19 receiver D = {  } U = { this.toolBar }
  20 methodCall D = { this.toolBar, this.toolBar.floatable } U = { java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled, this.toolBar, this.toolBar.floatable } TO = javax.swing.JToolBar#setFloatable( boolean )
  21 actualOut D = { this.toolBar, this.toolBar.!setFloatable, this.toolBar.floatable } U = { java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled, this.toolBar, this.toolBar.floatable }
  22 assignment D = {  } U = { this.!initToolBar }
  23 receiver D = {  } U = {  }
  24 methodCall D = {  } U = { this.copyAction, this.cutAction, this.newAction, this.openAction, this.pasteAction, this.redoAction, this.saveAction, this.undoAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initToolBar( javax.swing.JToolBar )
  25 actualIn D = {  } U = { this.toolBar }
  26 actualOut D = { this.!initToolBar } U = { this.copyAction, this.cutAction, this.newAction, this.openAction, this.pasteAction, this.redoAction, this.saveAction, this.undoAction }
  27 assignment D = { this.directory } U = { this.directory.!File }
  28 receiver D = {  } U = {  }
  29 constructorCall D = { this.directory.path, this.directory.prefixLength, this.directory.status } U = { $java.lang.String, this.directory.fs, this.directory.path } TO = java.io.File#File( java.lang.String )
  30 actualOut D = { this.directory.!File, this.directory.path, this.directory.prefixLength, this.directory.status } U = { this.directory.fs, this.directory.path }
  31 assignment D = { this.recentFiles } U = { this.recentFiles.!ArrayList<String> }
  32 receiver D = {  } U = {  }
  33 constructorCall D = { java.util.AbstractList.modCount, this.recentFiles.elementData } U = { this.recentFiles.DEFAULTCAPACITY_EMPTY_ELEMENTDATA } TO = java.util.ArrayList#ArrayList( )
  34 actualOut D = { java.util.AbstractList.modCount, this.recentFiles.!ArrayList<String>, this.recentFiles.elementData } U = { this.recentFiles.DEFAULTCAPACITY_EMPTY_ELEMENTDATA }
  35 assignment D = { this.clipboard } U = {  }
  36 assignment D = { this.autoSave } U = { this.autoSave.!AutoSave }
  37 receiver D = {  } U = {  }
  38 constructorCall D = { this.autoSave.tabbedCanvas } U = { this.autoSave.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.AutoSave#AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas )
  39 actualIn D = {  } U = { tabbedCanvas$1, this.tabbedCanvas }
  40 actualOut D = { this.autoSave.!AutoSave, this.autoSave.tabbedCanvas } U = { this.autoSave.tabbedCanvas }
  41 assignment D = {  } U = { this.autoSave.!start }
  42 receiver D = {  } U = { this.autoSave }
  43 methodCall D = { this.autoSave, this.autoSaveGroup.nUnstartedThreads, this.autoSaveGroup.nthreads, this.autoSaveGroup.threads } U = { this.autoSave, this.autoSave.group, this.autoSave.threadStatus, this.autoSaveGroup.destroyed, this.autoSaveGroup.nUnstartedThreads, this.autoSaveGroup.nthreads, this.autoSaveGroup.threads } TO = java.lang.Thread#start( )
  44 actualOut D = { this.autoSave, this.autoSave.!start, this.autoSaveGroup.nUnstartedThreads, this.autoSaveGroup.nthreads, this.autoSaveGroup.threads } U = { this.autoSave, this.autoSave.group, this.autoSave.threadStatus, this.autoSaveGroup.destroyed, this.autoSaveGroup.nUnstartedThreads, this.autoSaveGroup.nthreads, this.autoSaveGroup.threads }
  46 formalOut D = {  } U = { $_, java.awt.Component.focusTraversalKeysEnabled, java.util.AbstractList.modCount, javax.swing.DefaultSingleSelectionModel.changeEvent, javax.swing.DefaultSingleSelectionModel.index, javax.swing.DefaultSingleSelectionModel.listenerList, javax.swing.JComponent.inputVerifier, javax.swing.JComponent.listenerList, javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JComponent.verifyInputWhenFocusTarget, this.autoSave, this.autoSave.tabbedCanvas, this.autoSaveGroup.nUnstartedThreads, this.autoSaveGroup.nthreads, this.autoSaveGroup.threads, this.clipboard, this.copyAction, this.cutAction, this.deleteAction, this.directory, this.directory.path, this.directory.prefixLength, this.directory.status, this.fileListMenu, this.fileListener, this.menuBar, this.menuBar.margin, this.menuBar.paintBorder, this.menuBar.selectionModel, this.newAction, this.openAction, this.pasteAction, this.recentFiles, this.recentFiles.elementData, this.redoAction, this.saveAction, this.tabbedCanvas, this.tool, this.toolBar, this.toolBar.floatable, this.undoAction, this.windowListener }
--
   0 fieldEntry [ tool ]
   1 fieldDeclaration D = { this.tool } U = { this.tool }
--
   0 methodEntry [ updateEditState( boolean ) ]
   1 formalIn D = { grabbed$0 } U = {  }
   2 assignment D = {  } U = { this.cutAction.!setEnabled }
   3 receiver D = {  } U = { this.cutAction }
   4 methodCall D = {  } U = { grabbed$0 } TO = javax.swing.Action#setEnabled( boolean )
   5 actualOut D = { this.cutAction.!setEnabled } U = {  }
   6 assignment D = {  } U = { this.copyAction.!setEnabled }
   7 receiver D = {  } U = { this.copyAction }
   8 methodCall D = {  } U = { grabbed$0 } TO = javax.swing.Action#setEnabled( boolean )
   9 actualOut D = { this.copyAction.!setEnabled } U = {  }
  10 ifSt D = {  } U = { this.clipboard }
  11 assignment D = {  } U = { this.pasteAction.!setEnabled }
  12 receiver D = {  } U = { this.pasteAction }
  13 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  14 actualOut D = { this.pasteAction.!setEnabled } U = {  }
  15 assignment D = {  } U = { this.pasteAction.!setEnabled }
  16 receiver D = {  } U = { this.pasteAction }
  17 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  18 actualOut D = { this.pasteAction.!setEnabled } U = {  }
  20 assignment D = {  } U = { this.deleteAction.!setEnabled }
  21 receiver D = {  } U = { this.deleteAction }
  22 methodCall D = {  } U = { grabbed$0 } TO = javax.swing.Action#setEnabled( boolean )
  23 actualOut D = { this.deleteAction.!setEnabled } U = {  }
  25 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ recentFiles ]
   1 fieldDeclaration D = { this.recentFiles } U = { this.recentFiles }
--
   0 fieldEntry [ cutAction ]
   1 fieldDeclaration D = { this.cutAction } U = { this.cutAction }
--
   0 fieldEntry [ undoAction ]
   1 fieldDeclaration D = { this.undoAction } U = { this.undoAction }
--
   0 methodEntry [ saveTempFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 formalIn D = { canvas$0 } U = {  }
   2 localDeclaration D = { tempName$1 } U = { $java.lang.String, canvas$0.!getFigureManager.!getFilename }
   3 receiver D = {  } U = { canvas$0.!getFigureManager }
   4 receiver D = {  } U = { canvas$0 }
   5 methodCall D = {  } U = { canvas$0.figureManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
   6 actualOut D = { canvas$0.!getFigureManager } U = { canvas$0.figureManager }
   7 methodCall D = {  } U = { canvas$0.!getFigureManager.filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
   8 actualOut D = { canvas$0.!getFigureManager.!getFilename } U = { canvas$0.!getFigureManager.filename }
   9 returnSt D = { $_ } U = { canvas$0.!getFigureManager.!store }
  10 receiver D = {  } U = { canvas$0.!getFigureManager }
  11 receiver D = {  } U = { canvas$0 }
  12 methodCall D = {  } U = { canvas$0.figureManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  13 actualOut D = { canvas$0.!getFigureManager } U = { canvas$0.figureManager }
  14 methodCall D = { canvas$0.!getFigureManager } U = { canvas$0.!getFigureManager, canvas$0.!getFigureManager.figures } TO = jp.ac.ritsumei.cs.draw.FigureManager#store( java.lang.String )
  15 actualIn D = {  } U = { tempName$1 }
  16 actualOut D = { canvas$0.!getFigureManager, canvas$0.!getFigureManager.!store } U = { canvas$0.!getFigureManager, canvas$0.!getFigureManager.figures }
  18 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ deleteAction ]
   1 fieldDeclaration D = { this.deleteAction } U = { this.deleteAction }
--
   0 methodEntry [ closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { canvas$0 } U = {  }
   3 ifSt D = {  } U = { canvas$0.!hasChanged }
   4 receiver D = {  } U = { canvas$0 }
   5 methodCall D = {  } U = { canvas$0.changed } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#hasChanged( )
   6 actualOut D = { canvas$0.!hasChanged } U = { canvas$0.changed }
   7 localDeclaration D = { result$1 } U = { this.!showConfirmDialog }
   8 receiver D = {  } U = {  }
   9 methodCall D = {  } U = { $java.lang.String, this.tool } TO = javax.swing.JOptionPane#showConfirmDialog( java.awt.Component java.lang.Object )
  10 actualOut D = { this.!showConfirmDialog } U = {  }
  11 ifSt D = {  } U = { result$1, result$1.CANCEL_OPTION }
  12 returnSt D = { $_ } U = {  }
  13 ifSt D = {  } U = { result$1, result$1.YES_OPTION }
  14 ifSt D = {  } U = { this.!saveFile }
  15 receiver D = {  } U = {  }
  16 methodCall D = {  } U = { this.tool } TO = jp.ac.ritsumei.cs.draw.DrawMenu#saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
  17 actualIn D = {  } U = { canvas$0 }
  18 actualOut D = { this.!saveFile } U = { this.tool }
  19 localDeclaration D = { result2$2 } U = { this.!showConfirmDialog }
  20 receiver D = {  } U = {  }
  21 methodCall D = {  } U = { $java.lang.String, this.tool } TO = javax.swing.JOptionPane#showConfirmDialog( java.awt.Component java.lang.Object )
  22 actualOut D = { this.!showConfirmDialog } U = {  }
  23 ifSt D = {  } U = { result2$2, result2$2.CANCEL_OPTION }
  24 returnSt D = { $_ } U = {  }
  30 assignment D = {  } U = { this.tabbedCanvas.!closeTab }
  31 receiver D = {  } U = { this.tabbedCanvas }
  32 methodCall D = { this.tabbedCanvas, this.tabbedCanvas.selectedTab } U = { this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
  33 actualIn D = {  } U = { canvas$0 }
  34 actualOut D = { this.tabbedCanvas, this.tabbedCanvas.!closeTab, this.tabbedCanvas.selectedTab } U = { this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
  35 ifSt D = {  } U = { this.tabbedCanvas.!getOpenFileNum }
  36 receiver D = {  } U = { this.tabbedCanvas }
  37 methodCall D = {  } U = { this.tabbedCanvas.canvases } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getOpenFileNum( )
  38 actualOut D = { this.tabbedCanvas.!getOpenFileNum } U = { this.tabbedCanvas.canvases }
  39 assignment D = {  } U = { this.tool.!terminate }
  40 receiver D = {  } U = { this.tool }
  41 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawTool#terminate( )
  42 actualOut D = { this.tool.!terminate } U = {  }
  44 returnSt D = { $_ } U = {  }
  46 formalOut D = {  } U = { $_, this.tabbedCanvas, this.tabbedCanvas.selectedTab }
--
   0 fieldEntry [ newAction ]
   1 fieldDeclaration D = { this.newAction } U = { this.newAction }
--
   0 methodEntry [ newFile( ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 localDeclaration D = { filename$0 } U = { this.!getFileName }
   3 receiver D = {  } U = {  }
   4 methodCall D = { this.directory } U = { this.directory, this.tool } TO = jp.ac.ritsumei.cs.draw.DrawMenu#getFileName( boolean )
   5 actualIn D = {  } U = {  }
   6 actualOut D = { this.!getFileName, this.directory } U = { this.directory, this.tool }
   7 ifSt D = {  } U = { filename$0, this.!getFileName }
   8 returnSt D = { $_ } U = {  }
  10 ifSt D = {  } U = { this.!fileExists }
  11 receiver D = {  } U = {  }
  12 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawMenu#fileExists( java.lang.String )
  13 actualIn D = {  } U = { filename$0, this.!getFileName }
  14 actualOut D = { this.!fileExists } U = {  }
  15 assignment D = {  } U = { this.!showMessageDialog }
  16 receiver D = {  } U = {  }
  17 methodCall D = {  } U = { $java.lang.String, filename$0, this.!getFileName, this.tool } TO = javax.swing.JOptionPane#showMessageDialog( java.awt.Component java.lang.Object )
  18 actualOut D = { this.!showMessageDialog } U = {  }
  19 returnSt D = { $_ } U = {  }
  21 localDeclaration D = { canvas$1 } U = { this.tabbedCanvas.!openTab }
  22 receiver D = {  } U = { this.tabbedCanvas }
  23 methodCall D = { this.tabbedCanvas.selectedTab } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.menu, this.tabbedCanvas.selectedTab, this.tabbedCanvas.selector } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#openTab( java.lang.String )
  24 actualIn D = {  } U = { filename$0, this.!getFileName }
  25 actualOut D = { this.tabbedCanvas.!openTab, this.tabbedCanvas.selectedTab } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.menu, this.tabbedCanvas.selectedTab, this.tabbedCanvas.selector }
  26 assignment D = {  } U = { this.!addRecentFile }
  27 receiver D = {  } U = {  }
  28 methodCall D = {  } U = { this.recentFiles } TO = jp.ac.ritsumei.cs.draw.DrawMenu#addRecentFile( java.lang.String )
  29 actualIn D = {  } U = { filename$0, this.!getFileName }
  30 actualOut D = { this.!addRecentFile } U = { this.recentFiles }
  31 assignment D = {  } U = { this.tool.!setTitle }
  32 receiver D = {  } U = { this.tool }
  33 methodCall D = { this.tool, this.tool.title } U = { filename$0, java.awt.Component.changeSupport, java.awt.Component.peer, this.!getFileName, this.tool, this.tool.title } TO = java.awt.Frame#setTitle( java.lang.String )
  34 actualOut D = { this.tool, this.tool.!setTitle, this.tool.title } U = { java.awt.Component.changeSupport, java.awt.Component.peer, this.tool, this.tool.title }
  35 assignment D = {  } U = { canvas$1.!repaint, this.tabbedCanvas.!openTab.!repaint }
  36 receiver D = {  } U = { canvas$1, this.tabbedCanvas.!openTab }
  37 methodCall D = {  } U = { canvas$1, canvas$1.height, canvas$1.parent, canvas$1.peer, canvas$1.width, canvas$1.x, canvas$1.y, this.tabbedCanvas.!openTab, this.tabbedCanvas.!openTab.height, this.tabbedCanvas.!openTab.parent, this.tabbedCanvas.!openTab.peer, this.tabbedCanvas.!openTab.width, this.tabbedCanvas.!openTab.x, this.tabbedCanvas.!openTab.y } TO = java.awt.Component#repaint( )
  38 actualOut D = { canvas$1.!repaint } U = { canvas$1.height, canvas$1.parent, canvas$1.peer, canvas$1.width, canvas$1.x, canvas$1.y, this.tabbedCanvas.!openTab.height, this.tabbedCanvas.!openTab.parent, this.tabbedCanvas.!openTab.peer, this.tabbedCanvas.!openTab.width, this.tabbedCanvas.!openTab.x, this.tabbedCanvas.!openTab.y }
  39 returnSt D = { $_ } U = {  }
  41 formalOut D = {  } U = { $_, this.directory, this.tabbedCanvas.selectedTab, this.tool, this.tool.title }
--
   0 fieldEntry [ windowListener ]
   1 fieldDeclaration D = { this.windowListener } U = { this.windowListener }
--
   0 methodEntry [ saveAsFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { canvas$0 } U = {  }
   3 localDeclaration D = { filename$1 } U = { this.!getFileName }
   4 receiver D = {  } U = {  }
   5 methodCall D = { this.directory } U = { this.directory, this.tool } TO = jp.ac.ritsumei.cs.draw.DrawMenu#getFileName( boolean )
   6 actualIn D = {  } U = {  }
   7 actualOut D = { this.!getFileName, this.directory } U = { this.directory, this.tool }
   8 ifSt D = {  } U = { filename$1, this.!getFileName }
   9 returnSt D = { $_ } U = {  }
  11 ifSt D = {  } U = { this.!saveFile }
  12 receiver D = {  } U = {  }
  13 methodCall D = {  } U = { this.tool } TO = jp.ac.ritsumei.cs.draw.DrawMenu#saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String )
  14 actualIn D = {  } U = { canvas$0 }
  15 actualIn D = {  } U = { filename$1, this.!getFileName }
  16 actualOut D = { this.!saveFile } U = { this.tool }
  17 assignment D = {  } U = { this.tabbedCanvas.!updateTab }
  18 receiver D = {  } U = { this.tabbedCanvas }
  19 methodCall D = { this.tabbedCanvas } U = { this.tabbedCanvas, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
  20 actualIn D = {  } U = { canvas$0 }
  21 actualOut D = { this.tabbedCanvas, this.tabbedCanvas.!updateTab } U = { this.tabbedCanvas, this.tabbedCanvas.selectedTab }
  22 assignment D = {  } U = { this.!addRecentFile }
  23 receiver D = {  } U = {  }
  24 methodCall D = {  } U = { this.recentFiles } TO = jp.ac.ritsumei.cs.draw.DrawMenu#addRecentFile( java.lang.String )
  25 actualIn D = {  } U = { filename$1, this.!getFileName }
  26 actualOut D = { this.!addRecentFile } U = { this.recentFiles }
  27 assignment D = {  } U = { this.tool.!setTitle }
  28 receiver D = {  } U = { this.tool }
  29 methodCall D = { this.tool, this.tool.title } U = { filename$1, java.awt.Component.changeSupport, java.awt.Component.peer, this.!getFileName, this.tool, this.tool.title } TO = java.awt.Frame#setTitle( java.lang.String )
  30 actualOut D = { this.tool, this.tool.!setTitle, this.tool.title } U = { java.awt.Component.changeSupport, java.awt.Component.peer, this.tool, this.tool.title }
  31 returnSt D = { $_ } U = {  }
  33 returnSt D = { $_ } U = {  }
  35 formalOut D = {  } U = { $_, this.directory, this.tabbedCanvas, this.tool, this.tool.title }
--
   0 fieldEntry [ menuBar ]
   1 fieldDeclaration D = { this.menuBar } U = { this.menuBar }
--
   0 methodEntry [ getToolBar( ) ]
   1 returnSt D = { $_ } U = { this.toolBar }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ closeAllFiles( ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 forSt D = {  } U = { canvas$0, this.tabbedCanvas.!getAllCanvases }
   3 receiver D = {  } U = { this.tabbedCanvas }
   4 methodCall D = {  } U = { this.tabbedCanvas.canvases } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getAllCanvases( )
   5 actualOut D = { this.tabbedCanvas.!getAllCanvases } U = { this.tabbedCanvas.canvases }
   6 ifSt D = {  } U = { this.!closeFile }
   7 receiver D = {  } U = {  }
   8 methodCall D = { this.tabbedCanvas, this.tabbedCanvas.selectedTab } U = { this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.tool } TO = jp.ac.ritsumei.cs.draw.DrawMenu#closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   9 actualIn D = {  } U = { canvas$0 }
  10 actualOut D = { this.!closeFile, this.tabbedCanvas, this.tabbedCanvas.selectedTab } U = { this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.tool }
  11 returnSt D = {  } U = {  }
  14 formalOut D = {  } U = { $_, this.tabbedCanvas, this.tabbedCanvas.selectedTab }
--
   0 fieldEntry [ redoAction ]
   1 fieldDeclaration D = { this.redoAction } U = { this.redoAction }
--
   0 methodEntry [ getMenuBar( ) ]
   1 returnSt D = { $_ } U = { this.menuBar }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ openFile( ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 throwsClause D = {  } U = { $java.lang.NumberFormatException }
   3 localDeclaration D = { filename$0 } U = { this.!getFileName }
   4 receiver D = {  } U = {  }
   5 methodCall D = { this.directory } U = { this.directory, this.tool } TO = jp.ac.ritsumei.cs.draw.DrawMenu#getFileName( boolean )
   6 actualIn D = {  } U = {  }
   7 actualOut D = { this.!getFileName, this.directory } U = { this.directory, this.tool }
   8 ifSt D = {  } U = { filename$0, this.!getFileName }
   9 returnSt D = { $_ } U = {  }
  11 returnSt D = { $_ } U = { this.!openFile }
  12 receiver D = {  } U = {  }
  13 methodCall D = { this.tabbedCanvas.selectedTab, this.tool } U = { this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.menu, this.tabbedCanvas.selectedTab, this.tabbedCanvas.selector, this.tool } TO = jp.ac.ritsumei.cs.draw.DrawMenu#openFile( java.lang.String )
  14 actualIn D = {  } U = { filename$0, this.!getFileName }
  15 actualOut D = { this.!openFile, this.tabbedCanvas.selectedTab, this.tool } U = { this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.menu, this.tabbedCanvas.selectedTab, this.tabbedCanvas.selector, this.tool }
  17 formalOut D = {  } U = { $_, this.directory, this.tabbedCanvas.selectedTab, this.tool }
--
   0 methodEntry [ fileExists( java.lang.String ) ]
   1 formalIn D = { name$0 } U = {  }
   2 localDeclaration D = { file$1 } U = { file$1.!File }
   3 receiver D = {  } U = {  }
   4 constructorCall D = { file$1.path, file$1.prefixLength, file$1.status } U = { file$1.fs, file$1.path, name$0 } TO = java.io.File#File( java.lang.String )
   5 actualOut D = { file$1.!File, file$1.path, file$1.prefixLength, file$1.status } U = { file$1.fs, file$1.path }
   6 returnSt D = { $_ } U = { file$1.!exists }
   7 receiver D = {  } U = { file$1 }
   8 methodCall D = { file$1, file$1.status } U = { file$1, file$1$PathStatus.CHECKED, file$1$PathStatus.INVALID, file$1.fs, file$1.path, file$1.status, java.lang.System.security } TO = java.io.File#exists( )
   9 actualOut D = { file$1, file$1.!exists, file$1.status } U = { file$1, file$1$PathStatus.CHECKED, file$1$PathStatus.INVALID, file$1.fs, file$1.path, file$1.status, java.lang.System.security }
  11 formalOut D = {  } U = { $_, file$1.path, file$1.prefixLength, file$1.status }
--
   0 methodEntry [ initToolBar( javax.swing.JToolBar ) ]
   1 formalIn D = { toolBar$0 } U = {  }
   2 localDeclaration D = { newButton$1 } U = { toolBar$0.!add }
   3 receiver D = {  } U = { toolBar$0 }
   4 methodCall D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0 } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, this.newAction, toolBar$0 } TO = javax.swing.JToolBar#add( javax.swing.Action )
   5 actualOut D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0, toolBar$0.!add } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0 }
   6 assignment D = {  } U = { newButton$1.!setToolTipText }
   7 receiver D = {  } U = { newButton$1, toolBar$0.!add }
   8 methodCall D = { newButton$1, newButton$1.aaHint, newButton$1.lcdRenderingHint } U = { $java.lang.String, java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener, newButton$1, newButton$1.clientProperties } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
   9 actualOut D = { newButton$1, newButton$1.!setToolTipText, newButton$1.aaHint, newButton$1.lcdRenderingHint } U = { java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener, newButton$1, newButton$1.clientProperties }
  10 localDeclaration D = { openButton$2 } U = { toolBar$0.!add }
  11 receiver D = {  } U = { toolBar$0 }
  12 methodCall D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0 } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, this.openAction, toolBar$0 } TO = javax.swing.JToolBar#add( javax.swing.Action )
  13 actualOut D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0, toolBar$0.!add } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0 }
  14 assignment D = {  } U = { openButton$2.!setToolTipText }
  15 receiver D = {  } U = { openButton$2, toolBar$0.!add }
  16 methodCall D = { openButton$2, openButton$2.aaHint, openButton$2.lcdRenderingHint } U = { $java.lang.String, java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener, openButton$2, openButton$2.clientProperties } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  17 actualOut D = { openButton$2, openButton$2.!setToolTipText, openButton$2.aaHint, openButton$2.lcdRenderingHint } U = { java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener, openButton$2, openButton$2.clientProperties }
  18 localDeclaration D = { saveButton$3 } U = { toolBar$0.!add }
  19 receiver D = {  } U = { toolBar$0 }
  20 methodCall D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0 } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, this.saveAction, toolBar$0 } TO = javax.swing.JToolBar#add( javax.swing.Action )
  21 actualOut D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0, toolBar$0.!add } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0 }
  22 assignment D = {  } U = { saveButton$3.!setToolTipText }
  23 receiver D = {  } U = { saveButton$3, toolBar$0.!add }
  24 methodCall D = { saveButton$3, saveButton$3.aaHint, saveButton$3.lcdRenderingHint } U = { $java.lang.String, java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener, saveButton$3, saveButton$3.clientProperties } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  25 actualOut D = { saveButton$3, saveButton$3.!setToolTipText, saveButton$3.aaHint, saveButton$3.lcdRenderingHint } U = { java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener, saveButton$3, saveButton$3.clientProperties }
  26 assignment D = {  } U = { toolBar$0.!addSeparator }
  27 receiver D = {  } U = { toolBar$0 }
  28 methodCall D = {  } U = {  } TO = javax.swing.JToolBar#addSeparator( )
  29 actualOut D = { toolBar$0.!addSeparator } U = {  }
  30 localDeclaration D = { cutButton$4 } U = { toolBar$0.!add }
  31 receiver D = {  } U = { toolBar$0 }
  32 methodCall D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0 } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, this.cutAction, toolBar$0 } TO = javax.swing.JToolBar#add( javax.swing.Action )
  33 actualOut D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0, toolBar$0.!add } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0 }
  34 assignment D = {  } U = { cutButton$4.!setToolTipText }
  35 receiver D = {  } U = { cutButton$4, toolBar$0.!add }
  36 methodCall D = { cutButton$4, cutButton$4.aaHint, cutButton$4.lcdRenderingHint } U = { $java.lang.String, cutButton$4, cutButton$4.clientProperties, java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  37 actualOut D = { cutButton$4, cutButton$4.!setToolTipText, cutButton$4.aaHint, cutButton$4.lcdRenderingHint } U = { cutButton$4, cutButton$4.clientProperties, java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener }
  38 localDeclaration D = { copyButton$5 } U = { toolBar$0.!add }
  39 receiver D = {  } U = { toolBar$0 }
  40 methodCall D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0 } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, this.copyAction, toolBar$0 } TO = javax.swing.JToolBar#add( javax.swing.Action )
  41 actualOut D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0, toolBar$0.!add } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0 }
  42 assignment D = {  } U = { copyButton$5.!setToolTipText }
  43 receiver D = {  } U = { copyButton$5, toolBar$0.!add }
  44 methodCall D = { copyButton$5, copyButton$5.aaHint, copyButton$5.lcdRenderingHint } U = { $java.lang.String, copyButton$5, copyButton$5.clientProperties, java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  45 actualOut D = { copyButton$5, copyButton$5.!setToolTipText, copyButton$5.aaHint, copyButton$5.lcdRenderingHint } U = { copyButton$5, copyButton$5.clientProperties, java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener }
  46 localDeclaration D = { pasteButton$6 } U = { toolBar$0.!add }
  47 receiver D = {  } U = { toolBar$0 }
  48 methodCall D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0 } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, this.pasteAction, toolBar$0 } TO = javax.swing.JToolBar#add( javax.swing.Action )
  49 actualOut D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0, toolBar$0.!add } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0 }
  50 assignment D = {  } U = { pasteButton$6.!setToolTipText }
  51 receiver D = {  } U = { pasteButton$6, toolBar$0.!add }
  52 methodCall D = { pasteButton$6, pasteButton$6.aaHint, pasteButton$6.lcdRenderingHint } U = { $java.lang.String, java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener, pasteButton$6, pasteButton$6.clientProperties } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  53 actualOut D = { pasteButton$6, pasteButton$6.!setToolTipText, pasteButton$6.aaHint, pasteButton$6.lcdRenderingHint } U = { java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener, pasteButton$6, pasteButton$6.clientProperties }
  54 assignment D = {  } U = { toolBar$0.!addSeparator }
  55 receiver D = {  } U = { toolBar$0 }
  56 methodCall D = {  } U = {  } TO = javax.swing.JToolBar#addSeparator( )
  57 actualOut D = { toolBar$0.!addSeparator } U = {  }
  58 localDeclaration D = { undoButton$7 } U = { toolBar$0.!add }
  59 receiver D = {  } U = { toolBar$0 }
  60 methodCall D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0 } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, this.undoAction, toolBar$0 } TO = javax.swing.JToolBar#add( javax.swing.Action )
  61 actualOut D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0, toolBar$0.!add } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0 }
  62 assignment D = {  } U = { undoButton$7.!setToolTipText }
  63 receiver D = {  } U = { toolBar$0.!add, undoButton$7 }
  64 methodCall D = { undoButton$7, undoButton$7.aaHint, undoButton$7.lcdRenderingHint } U = { $java.lang.String, java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener, undoButton$7, undoButton$7.clientProperties } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  65 actualOut D = { undoButton$7, undoButton$7.!setToolTipText, undoButton$7.aaHint, undoButton$7.lcdRenderingHint } U = { java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener, undoButton$7, undoButton$7.clientProperties }
  66 assignment D = {  } U = { this.undoAction.!setEnabled }
  67 receiver D = {  } U = { this.undoAction }
  68 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  69 actualOut D = { this.undoAction.!setEnabled } U = {  }
  70 localDeclaration D = { redoButton$8 } U = { toolBar$0.!add }
  71 receiver D = {  } U = { toolBar$0 }
  72 methodCall D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0 } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, this.redoAction, toolBar$0 } TO = javax.swing.JToolBar#add( javax.swing.Action )
  73 actualOut D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0, toolBar$0.!add } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, toolBar$0 }
  74 assignment D = {  } U = { redoButton$8.!setToolTipText }
  75 receiver D = {  } U = { redoButton$8, toolBar$0.!add }
  76 methodCall D = { redoButton$8, redoButton$8.aaHint, redoButton$8.lcdRenderingHint } U = { $java.lang.String, java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener, redoButton$8, redoButton$8.clientProperties } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  77 actualOut D = { redoButton$8, redoButton$8.!setToolTipText, redoButton$8.aaHint, redoButton$8.lcdRenderingHint } U = { java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener, redoButton$8, redoButton$8.clientProperties }
  78 assignment D = {  } U = { redoButton$8.!setEnabled }
  79 receiver D = {  } U = { redoButton$8 }
  80 methodCall D = {  } U = { redoButton$8, redoButton$8.model } TO = javax.swing.AbstractButton#setEnabled( boolean )
  81 actualOut D = { redoButton$8.!setEnabled } U = { redoButton$8.model }
  83 formalOut D = {  } U = { $_, copyButton$5.aaHint, copyButton$5.lcdRenderingHint, cutButton$4.aaHint, cutButton$4.lcdRenderingHint, javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, newButton$1.aaHint, newButton$1.lcdRenderingHint, openButton$2.aaHint, openButton$2.lcdRenderingHint, pasteButton$6.aaHint, pasteButton$6.lcdRenderingHint, redoButton$8.aaHint, redoButton$8.lcdRenderingHint, saveButton$3.aaHint, saveButton$3.lcdRenderingHint, undoButton$7.aaHint, undoButton$7.lcdRenderingHint }
--
   0 fieldEntry [ RECENT_FILES ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES }
--
   0 methodEntry [ addRecentFile( java.lang.String ) ]
   1 formalIn D = { filename$0 } U = {  }
   2 localDeclaration D = { offset$1 } U = { this.recentFiles.!indexOf }
   3 receiver D = {  } U = { this.recentFiles }
   4 methodCall D = {  } U = { filename$0 } TO = java.util.List#indexOf( java.lang.Object )
   5 actualOut D = { this.recentFiles.!indexOf } U = {  }
   6 ifSt D = {  } U = { offset$1 }
   7 assignment D = {  } U = { this.recentFiles.!add }
   8 receiver D = {  } U = { this.recentFiles }
   9 methodCall D = {  } U = { filename$0 } TO = java.util.List#add( int java.lang.Object )
  10 actualOut D = { this.recentFiles.!add } U = {  }
  11 ifSt D = {  } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES, this.recentFiles.!size }
  12 receiver D = {  } U = { this.recentFiles }
  13 methodCall D = {  } U = {  } TO = java.util.List#size( )
  14 actualOut D = { this.recentFiles.!size } U = {  }
  15 assignment D = {  } U = { this.recentFiles.!remove }
  16 receiver D = {  } U = { this.recentFiles }
  17 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES } TO = java.util.List#remove( int )
  18 actualOut D = { this.recentFiles.!remove } U = {  }
  20 assignment D = {  } U = { this.recentFiles.!remove }
  21 receiver D = {  } U = { this.recentFiles }
  22 methodCall D = {  } U = { offset$1 } TO = java.util.List#remove( int )
  23 actualOut D = { this.recentFiles.!remove } U = {  }
  24 assignment D = {  } U = { this.recentFiles.!add }
  25 receiver D = {  } U = { this.recentFiles }
  26 methodCall D = {  } U = { filename$0 } TO = java.util.List#add( int java.lang.Object )
  27 actualOut D = { this.recentFiles.!add } U = {  }
  30 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ fileListMenu ]
   1 fieldDeclaration D = { this.fileListMenu } U = { this.fileListMenu }
--
   0 methodEntry [ saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { canvas$0 } U = {  }
   3 formalIn D = { filename$1 } U = {  }
   4 localDeclaration D = { result$2 } U = { canvas$0.!getFigureManager.!store }
   5 receiver D = {  } U = { canvas$0.!getFigureManager }
   6 receiver D = {  } U = { canvas$0 }
   7 methodCall D = {  } U = { canvas$0.figureManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
   8 actualOut D = { canvas$0.!getFigureManager } U = { canvas$0.figureManager }
   9 methodCall D = { canvas$0.!getFigureManager } U = { canvas$0.!getFigureManager, canvas$0.!getFigureManager.figures } TO = jp.ac.ritsumei.cs.draw.FigureManager#store( java.lang.String )
  10 actualIn D = {  } U = { filename$1 }
  11 actualOut D = { canvas$0.!getFigureManager, canvas$0.!getFigureManager.!store } U = { canvas$0.!getFigureManager, canvas$0.!getFigureManager.figures }
  12 ifSt D = {  } U = { result$2 }
  13 assignment D = {  } U = { this.!showMessageDialog }
  14 receiver D = {  } U = {  }
  15 methodCall D = {  } U = { $java.lang.String, filename$1, this.tool } TO = javax.swing.JOptionPane#showMessageDialog( java.awt.Component java.lang.Object )
  16 actualOut D = { this.!showMessageDialog } U = {  }
  17 returnSt D = { $_ } U = {  }
  19 assignment D = {  } U = { canvas$0.!setChanged }
  20 receiver D = {  } U = { canvas$0 }
  21 methodCall D = { canvas$0.changed } U = { canvas$0.changed } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setChanged( boolean )
  22 actualIn D = {  } U = {  }
  23 actualOut D = { canvas$0.!setChanged, canvas$0.changed } U = { canvas$0.changed }
  24 returnSt D = { $_ } U = {  }
  26 formalOut D = {  } U = { $_, canvas$0.changed }
--
   0 fieldEntry [ clipboard ]
   1 fieldDeclaration D = { this.clipboard } U = { this.clipboard }
--
   0 methodEntry [ initEditActions( ) ]
   1 assignment D = { this.undoAction } U = { this.undoAction.! }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { this.undoAction.arrayTable, this.undoAction.enabled } U = { this.undoAction.arrayTable, this.undoAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualIn D = {  } U = { this.undoAction.!ImageIcon }
   6 receiver D = {  } U = {  }
   7 constructorCall D = { this.undoAction.accessibleContext, this.undoAction.description, this.undoAction.height, this.undoAction.image, this.undoAction.loadStatus, this.undoAction.location, this.undoAction.width } U = { java.net.URL.handler, this.!getClass.!getResource, this.undoAction.image } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
   8 receiver D = {  } U = { this.!getClass }
   9 receiver D = {  } U = {  }
  10 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  11 actualOut D = { this.!getClass } U = {  }
  12 methodCall D = {  } U = { $java.lang.String, java.lang.Module.name, this.!getClass, this.!getClass.classLoader, this.!getClass.module, this.!getClassLoader.parent } TO = java.lang.Class#getResource( java.lang.String )
  13 actualOut D = { this.!getClass.!getResource } U = { java.lang.Module.name, this.!getClass.classLoader, this.!getClass.module, this.!getClassLoader.parent }
  14 actualOut D = { this.undoAction.!ImageIcon, this.undoAction.accessibleContext, this.undoAction.description, this.undoAction.height, this.undoAction.image, this.undoAction.loadStatus, this.undoAction.location, this.undoAction.width } U = { java.net.URL.handler, this.undoAction.image }
  15 actualOut D = { this.undoAction.!, this.undoAction.arrayTable, this.undoAction.enabled } U = { this.undoAction.arrayTable, this.undoAction.enabled }
  16 assignment D = { this.redoAction } U = { this.redoAction.! }
  17 receiver D = {  } U = {  }
  18 constructorCall D = { this.redoAction.arrayTable, this.redoAction.enabled } U = { this.redoAction.arrayTable, this.redoAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  19 actualIn D = {  } U = { $java.lang.String }
  20 actualIn D = {  } U = { this.redoAction.!ImageIcon }
  21 receiver D = {  } U = {  }
  22 constructorCall D = { this.redoAction.accessibleContext, this.redoAction.description, this.redoAction.height, this.redoAction.image, this.redoAction.loadStatus, this.redoAction.location, this.redoAction.width } U = { java.net.URL.handler, this.!getClass.!getResource, this.redoAction.image } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  23 receiver D = {  } U = { this.!getClass }
  24 receiver D = {  } U = {  }
  25 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  26 actualOut D = { this.!getClass } U = {  }
  27 methodCall D = {  } U = { $java.lang.String, java.lang.Module.name, this.!getClass, this.!getClass.classLoader, this.!getClass.module, this.!getClassLoader.parent } TO = java.lang.Class#getResource( java.lang.String )
  28 actualOut D = { this.!getClass.!getResource } U = { java.lang.Module.name, this.!getClass.classLoader, this.!getClass.module, this.!getClassLoader.parent }
  29 actualOut D = { this.redoAction.!ImageIcon, this.redoAction.accessibleContext, this.redoAction.description, this.redoAction.height, this.redoAction.image, this.redoAction.loadStatus, this.redoAction.location, this.redoAction.width } U = { java.net.URL.handler, this.redoAction.image }
  30 actualOut D = { this.redoAction.!, this.redoAction.arrayTable, this.redoAction.enabled } U = { this.redoAction.arrayTable, this.redoAction.enabled }
  31 assignment D = { this.cutAction } U = { this.cutAction.! }
  32 receiver D = {  } U = {  }
  33 constructorCall D = { this.cutAction.arrayTable, this.cutAction.enabled } U = { this.cutAction.arrayTable, this.cutAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  34 actualIn D = {  } U = { $java.lang.String }
  35 actualIn D = {  } U = { this.cutAction.!ImageIcon }
  36 receiver D = {  } U = {  }
  37 constructorCall D = { this.cutAction.accessibleContext, this.cutAction.description, this.cutAction.height, this.cutAction.image, this.cutAction.loadStatus, this.cutAction.location, this.cutAction.width } U = { java.net.URL.handler, this.!getClass.!getResource, this.cutAction.image } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  38 receiver D = {  } U = { this.!getClass }
  39 receiver D = {  } U = {  }
  40 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  41 actualOut D = { this.!getClass } U = {  }
  42 methodCall D = {  } U = { $java.lang.String, java.lang.Module.name, this.!getClass, this.!getClass.classLoader, this.!getClass.module, this.!getClassLoader.parent } TO = java.lang.Class#getResource( java.lang.String )
  43 actualOut D = { this.!getClass.!getResource } U = { java.lang.Module.name, this.!getClass.classLoader, this.!getClass.module, this.!getClassLoader.parent }
  44 actualOut D = { this.cutAction.!ImageIcon, this.cutAction.accessibleContext, this.cutAction.description, this.cutAction.height, this.cutAction.image, this.cutAction.loadStatus, this.cutAction.location, this.cutAction.width } U = { java.net.URL.handler, this.cutAction.image }
  45 actualOut D = { this.cutAction.!, this.cutAction.arrayTable, this.cutAction.enabled } U = { this.cutAction.arrayTable, this.cutAction.enabled }
  46 assignment D = { this.copyAction } U = { this.copyAction.! }
  47 receiver D = {  } U = {  }
  48 constructorCall D = { this.copyAction.arrayTable, this.copyAction.enabled } U = { this.copyAction.arrayTable, this.copyAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  49 actualIn D = {  } U = { $java.lang.String }
  50 actualIn D = {  } U = { this.copyAction.!ImageIcon }
  51 receiver D = {  } U = {  }
  52 constructorCall D = { this.copyAction.accessibleContext, this.copyAction.description, this.copyAction.height, this.copyAction.image, this.copyAction.loadStatus, this.copyAction.location, this.copyAction.width } U = { java.net.URL.handler, this.!getClass.!getResource, this.copyAction.image } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  53 receiver D = {  } U = { this.!getClass }
  54 receiver D = {  } U = {  }
  55 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  56 actualOut D = { this.!getClass } U = {  }
  57 methodCall D = {  } U = { $java.lang.String, java.lang.Module.name, this.!getClass, this.!getClass.classLoader, this.!getClass.module, this.!getClassLoader.parent } TO = java.lang.Class#getResource( java.lang.String )
  58 actualOut D = { this.!getClass.!getResource } U = { java.lang.Module.name, this.!getClass.classLoader, this.!getClass.module, this.!getClassLoader.parent }
  59 actualOut D = { this.copyAction.!ImageIcon, this.copyAction.accessibleContext, this.copyAction.description, this.copyAction.height, this.copyAction.image, this.copyAction.loadStatus, this.copyAction.location, this.copyAction.width } U = { java.net.URL.handler, this.copyAction.image }
  60 actualOut D = { this.copyAction.!, this.copyAction.arrayTable, this.copyAction.enabled } U = { this.copyAction.arrayTable, this.copyAction.enabled }
  61 assignment D = { this.pasteAction } U = { this.pasteAction.! }
  62 receiver D = {  } U = {  }
  63 constructorCall D = { this.pasteAction.arrayTable, this.pasteAction.enabled } U = { this.pasteAction.arrayTable, this.pasteAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  64 actualIn D = {  } U = { $java.lang.String }
  65 actualIn D = {  } U = { this.pasteAction.!ImageIcon }
  66 receiver D = {  } U = {  }
  67 constructorCall D = { this.pasteAction.accessibleContext, this.pasteAction.description, this.pasteAction.height, this.pasteAction.image, this.pasteAction.loadStatus, this.pasteAction.location, this.pasteAction.width } U = { java.net.URL.handler, this.!getClass.!getResource, this.pasteAction.image } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  68 receiver D = {  } U = { this.!getClass }
  69 receiver D = {  } U = {  }
  70 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  71 actualOut D = { this.!getClass } U = {  }
  72 methodCall D = {  } U = { $java.lang.String, java.lang.Module.name, this.!getClass, this.!getClass.classLoader, this.!getClass.module, this.!getClassLoader.parent } TO = java.lang.Class#getResource( java.lang.String )
  73 actualOut D = { this.!getClass.!getResource } U = { java.lang.Module.name, this.!getClass.classLoader, this.!getClass.module, this.!getClassLoader.parent }
  74 actualOut D = { this.pasteAction.!ImageIcon, this.pasteAction.accessibleContext, this.pasteAction.description, this.pasteAction.height, this.pasteAction.image, this.pasteAction.loadStatus, this.pasteAction.location, this.pasteAction.width } U = { java.net.URL.handler, this.pasteAction.image }
  75 actualOut D = { this.pasteAction.!, this.pasteAction.arrayTable, this.pasteAction.enabled } U = { this.pasteAction.arrayTable, this.pasteAction.enabled }
  76 assignment D = { this.deleteAction } U = { this.deleteAction.! }
  77 receiver D = {  } U = {  }
  78 constructorCall D = { this.deleteAction.arrayTable, this.deleteAction.enabled } U = { this.deleteAction.arrayTable, this.deleteAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String )
  79 actualIn D = {  } U = { $java.lang.String }
  80 actualOut D = { this.deleteAction.!, this.deleteAction.arrayTable, this.deleteAction.enabled } U = { this.deleteAction.arrayTable, this.deleteAction.enabled }
  82 formalOut D = {  } U = { $_, this.copyAction, this.copyAction.accessibleContext, this.copyAction.arrayTable, this.copyAction.description, this.copyAction.enabled, this.copyAction.height, this.copyAction.image, this.copyAction.loadStatus, this.copyAction.location, this.copyAction.width, this.cutAction, this.cutAction.accessibleContext, this.cutAction.arrayTable, this.cutAction.description, this.cutAction.enabled, this.cutAction.height, this.cutAction.image, this.cutAction.loadStatus, this.cutAction.location, this.cutAction.width, this.deleteAction, this.deleteAction.arrayTable, this.deleteAction.enabled, this.pasteAction, this.pasteAction.accessibleContext, this.pasteAction.arrayTable, this.pasteAction.description, this.pasteAction.enabled, this.pasteAction.height, this.pasteAction.image, this.pasteAction.loadStatus, this.pasteAction.location, this.pasteAction.width, this.redoAction, this.redoAction.accessibleContext, this.redoAction.arrayTable, this.redoAction.description, this.redoAction.enabled, this.redoAction.height, this.redoAction.image, this.redoAction.loadStatus, this.redoAction.location, this.redoAction.width, this.undoAction, this.undoAction.accessibleContext, this.undoAction.arrayTable, this.undoAction.description, this.undoAction.enabled, this.undoAction.height, this.undoAction.image, this.undoAction.loadStatus, this.undoAction.location, this.undoAction.width }
--
   0 methodEntry [ updateRedoState( ) ]
   1 localDeclaration D = { canvas$0 } U = { this.tabbedCanvas.!getCurrentCanvas }
   2 receiver D = {  } U = { this.tabbedCanvas }
   3 methodCall D = {  } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCurrentCanvas( )
   4 actualOut D = { this.tabbedCanvas.!getCurrentCanvas } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
   5 ifSt D = {  } U = { canvas$0, this.tabbedCanvas.!getCurrentCanvas }
   6 returnSt D = {  } U = {  }
   8 localDeclaration D = { undoManager$1 } U = { canvas$0.!getUndoManager, this.tabbedCanvas.!getCurrentCanvas.!getUndoManager }
   9 receiver D = {  } U = { canvas$0, this.tabbedCanvas.!getCurrentCanvas }
  10 methodCall D = {  } U = { canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas.undoManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getUndoManager( )
  11 actualOut D = { canvas$0.!getUndoManager } U = { canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas.undoManager }
  12 ifSt D = {  } U = { canvas$0.!getUndoManager, canvas$0.!getUndoManager.!canRedo, undoManager$1, undoManager$1.!canRedo }
  13 receiver D = {  } U = { canvas$0.!getUndoManager, undoManager$1 }
  14 methodCall D = {  } U = { canvas$0.!getUndoManager, canvas$0.!getUndoManager.indexOfNextAdd, javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, undoManager$1, undoManager$1.indexOfNextAdd } TO = javax.swing.undo.UndoManager#canRedo( )
  15 actualOut D = { undoManager$1.!canRedo } U = { canvas$0.!getUndoManager.indexOfNextAdd, javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, undoManager$1.indexOfNextAdd }
  16 assignment D = {  } U = { this.redoAction.!setEnabled }
  17 receiver D = {  } U = { this.redoAction }
  18 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  19 actualOut D = { this.redoAction.!setEnabled } U = {  }
  20 assignment D = {  } U = { this.redoAction.!setEnabled }
  21 receiver D = {  } U = { this.redoAction }
  22 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  23 actualOut D = { this.redoAction.!setEnabled } U = {  }
  26 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ directory ]
   1 fieldDeclaration D = { this.directory } U = { this.directory }
--
   0 fieldEntry [ tabbedCanvas ]
   1 fieldDeclaration D = { this.tabbedCanvas } U = { this.tabbedCanvas }
--
   0 fieldEntry [ fileListener ]
   1 fieldDeclaration D = { this.fileListener } U = { this.fileListener }
--
   0 fieldEntry [ autoSave ]
   1 fieldDeclaration D = { this.autoSave } U = { this.autoSave }
--
   0 fieldEntry [ saveAction ]
   1 fieldDeclaration D = { this.saveAction } U = { this.saveAction }
--
   0 methodEntry [ initMenuBar( javax.swing.JMenuBar ) ]
   1 formalIn D = { menuBar$0 } U = {  }
   2 localDeclaration D = { fileMenu$1 } U = { fileMenu$1.!JMenu }
   3 receiver D = {  } U = {  }
   4 constructorCall D = { fileMenu$1.customMenuLocation, fileMenu$1.menuChangeListener, fileMenu$1.menuEvent } U = { $java.lang.String } TO = javax.swing.JMenu#JMenu( java.lang.String )
   5 actualOut D = { fileMenu$1.!JMenu, fileMenu$1.customMenuLocation, fileMenu$1.menuChangeListener, fileMenu$1.menuEvent } U = {  }
   6 assignment D = {  } U = { fileMenu$1.!setMnemonic }
   7 receiver D = {  } U = { fileMenu$1 }
   8 methodCall D = {  } U = { fileMenu$1, fileMenu$1.model } TO = javax.swing.AbstractButton#setMnemonic( char )
   9 actualOut D = { fileMenu$1.!setMnemonic } U = { fileMenu$1.model }
  10 assignment D = {  } U = { menuBar$0.!add }
  11 receiver D = {  } U = { menuBar$0 }
  12 methodCall D = {  } U = { fileMenu$1 } TO = javax.swing.JMenuBar#add( javax.swing.JMenu )
  13 actualOut D = { menuBar$0.!add } U = {  }
  14 assignment D = {  } U = { this.!initFileActions }
  15 receiver D = {  } U = {  }
  16 methodCall D = { this.newAction, this.openAction, this.saveAction } U = { this.newAction, this.openAction, this.saveAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initFileActions( )
  17 actualOut D = { this.!initFileActions, this.newAction, this.openAction, this.saveAction } U = { this.newAction, this.openAction, this.saveAction }
  18 assignment D = {  } U = { this.!initFileMenu }
  19 receiver D = {  } U = {  }
  20 methodCall D = { this.fileListMenu, this.fileListener } U = { this.fileListMenu, this.fileListener, this.newAction, this.openAction, this.saveAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initFileMenu( javax.swing.JMenu )
  21 actualIn D = {  } U = { fileMenu$1 }
  22 actualOut D = { this.!initFileMenu, this.fileListMenu, this.fileListener } U = { this.fileListMenu, this.fileListener, this.newAction, this.openAction, this.saveAction }
  23 localDeclaration D = { editMenu$2 } U = { editMenu$2.!JMenu }
  24 receiver D = {  } U = {  }
  25 constructorCall D = { editMenu$2.customMenuLocation, editMenu$2.menuChangeListener, editMenu$2.menuEvent } U = { $java.lang.String } TO = javax.swing.JMenu#JMenu( java.lang.String )
  26 actualOut D = { editMenu$2.!JMenu, editMenu$2.customMenuLocation, editMenu$2.menuChangeListener, editMenu$2.menuEvent } U = {  }
  27 assignment D = {  } U = { editMenu$2.!setMnemonic }
  28 receiver D = {  } U = { editMenu$2 }
  29 methodCall D = {  } U = { editMenu$2, editMenu$2.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  30 actualOut D = { editMenu$2.!setMnemonic } U = { editMenu$2.model }
  31 assignment D = {  } U = { menuBar$0.!add }
  32 receiver D = {  } U = { menuBar$0 }
  33 methodCall D = {  } U = { editMenu$2 } TO = javax.swing.JMenuBar#add( javax.swing.JMenu )
  34 actualOut D = { menuBar$0.!add } U = {  }
  35 assignment D = {  } U = { this.!initEditActions }
  36 receiver D = {  } U = {  }
  37 methodCall D = { this.copyAction, this.cutAction, this.deleteAction, this.pasteAction, this.redoAction, this.undoAction } U = { this.copyAction, this.cutAction, this.deleteAction, this.pasteAction, this.redoAction, this.undoAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initEditActions( )
  38 actualOut D = { this.!initEditActions, this.copyAction, this.cutAction, this.deleteAction, this.pasteAction, this.redoAction, this.undoAction } U = { this.copyAction, this.cutAction, this.deleteAction, this.pasteAction, this.redoAction, this.undoAction }
  39 assignment D = {  } U = { this.!initEditMenu }
  40 receiver D = {  } U = {  }
  41 methodCall D = {  } U = { this.copyAction, this.cutAction, this.deleteAction, this.pasteAction, this.redoAction, this.undoAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initEditMenu( javax.swing.JMenu )
  42 actualIn D = {  } U = { editMenu$2 }
  43 actualOut D = { this.!initEditMenu } U = { this.copyAction, this.cutAction, this.deleteAction, this.pasteAction, this.redoAction, this.undoAction }
  44 localDeclaration D = { windowMenu$3 } U = { windowMenu$3.!JMenu }
  45 receiver D = {  } U = {  }
  46 constructorCall D = { windowMenu$3.customMenuLocation, windowMenu$3.menuChangeListener, windowMenu$3.menuEvent } U = { $java.lang.String } TO = javax.swing.JMenu#JMenu( java.lang.String )
  47 actualOut D = { windowMenu$3.!JMenu, windowMenu$3.customMenuLocation, windowMenu$3.menuChangeListener, windowMenu$3.menuEvent } U = {  }
  48 assignment D = {  } U = { windowMenu$3.!setMnemonic }
  49 receiver D = {  } U = { windowMenu$3 }
  50 methodCall D = {  } U = { windowMenu$3, windowMenu$3.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  51 actualOut D = { windowMenu$3.!setMnemonic } U = { windowMenu$3.model }
  52 assignment D = {  } U = { menuBar$0.!add }
  53 receiver D = {  } U = { menuBar$0 }
  54 methodCall D = {  } U = { windowMenu$3 } TO = javax.swing.JMenuBar#add( javax.swing.JMenu )
  55 actualOut D = { menuBar$0.!add } U = {  }
  56 assignment D = { this.windowListener } U = { this.windowListener.! }
  57 receiver D = {  } U = {  }
  58 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
  59 actualOut D = { this.windowListener.! } U = {  }
  60 assignment D = {  } U = { windowMenu$3.!addMenuListener }
  61 receiver D = {  } U = { windowMenu$3 }
  62 methodCall D = { javax.swing.event.EventListenerList.listenerList, windowMenu$3 } U = { .!, javax.swing.JComponent.listenerList, javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.event.EventListenerList.listenerList, windowMenu$3 } TO = javax.swing.JMenu#addMenuListener( javax.swing.event.MenuListener )
  63 receiver D = {  } U = {  }
  64 constructorCall D = {  } U = {  } TO = javax.swing.event.MenuListener#MenuListener( )
  65 actualOut D = { .! } U = {  }
  66 actualOut D = { javax.swing.event.EventListenerList.listenerList, windowMenu$3, windowMenu$3.!addMenuListener } U = { javax.swing.JComponent.listenerList, javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.event.EventListenerList.listenerList, windowMenu$3 }
  68 formalOut D = {  } U = { $_, editMenu$2.customMenuLocation, editMenu$2.menuChangeListener, editMenu$2.menuEvent, fileMenu$1.customMenuLocation, fileMenu$1.menuChangeListener, fileMenu$1.menuEvent, javax.swing.event.EventListenerList.listenerList, this.copyAction, this.cutAction, this.deleteAction, this.fileListMenu, this.fileListener, this.newAction, this.openAction, this.pasteAction, this.redoAction, this.saveAction, this.undoAction, this.windowListener, windowMenu$3.customMenuLocation, windowMenu$3.menuChangeListener, windowMenu$3.menuEvent }
--
   0 fieldEntry [ pasteAction ]
   1 fieldDeclaration D = { this.pasteAction } U = { this.pasteAction }
--
   0 methodEntry [ initFileMenu( javax.swing.JMenu ) ]
   1 formalIn D = { menu$0 } U = {  }
   2 localDeclaration D = { newItem$1 } U = { menu$0.!add }
   3 receiver D = {  } U = { menu$0 }
   4 methodCall D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0 } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.popupMenu, this.newAction } TO = javax.swing.JMenu#add( javax.swing.Action )
   5 actualOut D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.!add } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.popupMenu }
   6 assignment D = {  } U = { menu$0.!add.!setMnemonic, newItem$1.!setMnemonic }
   7 receiver D = {  } U = { menu$0.!add, newItem$1 }
   8 methodCall D = {  } U = { menu$0.!add, menu$0.!add.model, newItem$1, newItem$1.model } TO = javax.swing.AbstractButton#setMnemonic( char )
   9 actualOut D = { newItem$1.!setMnemonic } U = { menu$0.!add.model, newItem$1.model }
  10 assignment D = {  } U = { newItem$1.!setIcon }
  11 receiver D = {  } U = { menu$0.!add, newItem$1 }
  12 methodCall D = { newItem$1, newItem$1.defaultIcon, newItem$1.disabledIcon } U = { java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, newItem$1, newItem$1.defaultIcon, newItem$1.disabledIcon } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  13 actualOut D = { newItem$1, newItem$1.!setIcon, newItem$1.defaultIcon, newItem$1.disabledIcon } U = { java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, newItem$1, newItem$1.defaultIcon, newItem$1.disabledIcon }
  14 assignment D = {  } U = { newItem$1.!setAccelerator }
  15 receiver D = {  } U = { newItem$1 }
  16 methodCall D = { newItem$1, newItem$1.accelerator } U = { java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled, newItem$1, newItem$1.accelerator, this.!getKeyStroke } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  19 actualOut D = { this.!getKeyStroke } U = {  }
  20 actualOut D = { newItem$1, newItem$1.!setAccelerator, newItem$1.accelerator } U = { java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled, newItem$1, newItem$1.accelerator }
  21 localDeclaration D = { openItem$2 } U = { menu$0.!add }
  22 receiver D = {  } U = { menu$0 }
  23 methodCall D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0 } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.popupMenu, this.openAction } TO = javax.swing.JMenu#add( javax.swing.Action )
  24 actualOut D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.!add } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.popupMenu }
  25 assignment D = {  } U = { menu$0.!add.!setMnemonic, openItem$2.!setMnemonic }
  26 receiver D = {  } U = { menu$0.!add, openItem$2 }
  27 methodCall D = {  } U = { menu$0.!add, menu$0.!add.model, openItem$2, openItem$2.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  28 actualOut D = { openItem$2.!setMnemonic } U = { menu$0.!add.model, openItem$2.model }
  29 assignment D = {  } U = { openItem$2.!setIcon }
  30 receiver D = {  } U = { menu$0.!add, openItem$2 }
  31 methodCall D = { openItem$2, openItem$2.defaultIcon, openItem$2.disabledIcon } U = { java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, openItem$2, openItem$2.defaultIcon, openItem$2.disabledIcon } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  32 actualOut D = { openItem$2, openItem$2.!setIcon, openItem$2.defaultIcon, openItem$2.disabledIcon } U = { java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, openItem$2, openItem$2.defaultIcon, openItem$2.disabledIcon }
  33 assignment D = {  } U = { openItem$2.!setAccelerator }
  34 receiver D = {  } U = { openItem$2 }
  35 methodCall D = { openItem$2, openItem$2.accelerator } U = { java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled, openItem$2, openItem$2.accelerator, this.!getKeyStroke } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  36 receiver D = {  } U = {  }
  37 methodCall D = {  } U = { KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  38 actualOut D = { this.!getKeyStroke } U = {  }
  39 actualOut D = { openItem$2, openItem$2.!setAccelerator, openItem$2.accelerator } U = { java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled, openItem$2, openItem$2.accelerator }
  40 localDeclaration D = { closeItem$3 } U = { closeItem$3.!JMenuItem }
  41 receiver D = {  } U = {  }
  42 constructorCall D = { closeItem$3.isMouseDragged } U = { $java.lang.String } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
  43 actualOut D = { closeItem$3.!JMenuItem, closeItem$3.isMouseDragged } U = {  }
  44 assignment D = {  } U = { closeItem$3.!setMnemonic }
  45 receiver D = {  } U = { closeItem$3 }
  46 methodCall D = {  } U = { closeItem$3, closeItem$3.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  47 actualOut D = { closeItem$3.!setMnemonic } U = { closeItem$3.model }
  48 assignment D = {  } U = { menu$0.!add }
  49 receiver D = {  } U = { menu$0 }
  50 methodCall D = { menu$0, menu$0.popupListener, menu$0.popupMenu } U = { closeItem$3, menu$0, menu$0.popupMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
  51 actualOut D = { menu$0, menu$0.!add, menu$0.popupListener, menu$0.popupMenu } U = { menu$0, menu$0.popupMenu }
  52 assignment D = {  } U = { closeItem$3.!addActionListener }
  53 receiver D = {  } U = { closeItem$3 }
  54 methodCall D = { closeItem$3, javax.swing.event.EventListenerList.listenerList } U = { .!, closeItem$3, javax.swing.JComponent.listenerList, javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.event.EventListenerList.listenerList } TO = javax.swing.AbstractButton#addActionListener( java.awt.event.ActionListener )
  55 receiver D = {  } U = {  }
  56 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
  57 actualOut D = { .! } U = {  }
  58 actualOut D = { closeItem$3, closeItem$3.!addActionListener, javax.swing.event.EventListenerList.listenerList } U = { closeItem$3, javax.swing.JComponent.listenerList, javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.event.EventListenerList.listenerList }
  59 assignment D = {  } U = { menu$0.!addSeparator }
  60 receiver D = {  } U = { menu$0 }
  61 methodCall D = { menu$0, menu$0.popupListener, menu$0.popupMenu } U = { menu$0, menu$0.popupMenu } TO = javax.swing.JMenu#addSeparator( )
  62 actualOut D = { menu$0, menu$0.!addSeparator, menu$0.popupListener, menu$0.popupMenu } U = { menu$0, menu$0.popupMenu }
  63 localDeclaration D = { saveItem$5 } U = { menu$0.!add }
  64 receiver D = {  } U = { menu$0 }
  65 methodCall D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0 } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.popupMenu, this.saveAction } TO = javax.swing.JMenu#add( javax.swing.Action )
  66 actualOut D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.!add } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.popupMenu }
  67 assignment D = {  } U = { menu$0.!add.!setMnemonic, saveItem$5.!setMnemonic }
  68 receiver D = {  } U = { menu$0.!add, saveItem$5 }
  69 methodCall D = {  } U = { menu$0.!add, menu$0.!add.model, saveItem$5, saveItem$5.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  70 actualOut D = { saveItem$5.!setMnemonic } U = { menu$0.!add.model, saveItem$5.model }
  71 assignment D = {  } U = { saveItem$5.!setIcon }
  72 receiver D = {  } U = { menu$0.!add, saveItem$5 }
  73 methodCall D = { saveItem$5, saveItem$5.defaultIcon, saveItem$5.disabledIcon } U = { java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, saveItem$5, saveItem$5.defaultIcon, saveItem$5.disabledIcon } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  74 actualOut D = { saveItem$5, saveItem$5.!setIcon, saveItem$5.defaultIcon, saveItem$5.disabledIcon } U = { java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, saveItem$5, saveItem$5.defaultIcon, saveItem$5.disabledIcon }
  75 assignment D = {  } U = { saveItem$5.!setAccelerator }
  76 receiver D = {  } U = { saveItem$5 }
  77 methodCall D = { saveItem$5, saveItem$5.accelerator } U = { java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled, saveItem$5, saveItem$5.accelerator, this.!getKeyStroke } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  78 receiver D = {  } U = {  }
  79 methodCall D = {  } U = { KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  80 actualOut D = { this.!getKeyStroke } U = {  }
  81 actualOut D = { saveItem$5, saveItem$5.!setAccelerator, saveItem$5.accelerator } U = { java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled, saveItem$5, saveItem$5.accelerator }
  82 localDeclaration D = { saveAsItem$6 } U = { saveAsItem$6.!JMenuItem }
  83 receiver D = {  } U = {  }
  84 constructorCall D = { saveAsItem$6.isMouseDragged } U = { $java.lang.String } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
  85 actualOut D = { saveAsItem$6.!JMenuItem, saveAsItem$6.isMouseDragged } U = {  }
  86 assignment D = {  } U = { saveAsItem$6.!setMnemonic }
  87 receiver D = {  } U = { saveAsItem$6 }
  88 methodCall D = {  } U = { saveAsItem$6, saveAsItem$6.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  89 actualOut D = { saveAsItem$6.!setMnemonic } U = { saveAsItem$6.model }
  90 assignment D = {  } U = { menu$0.!add }
  91 receiver D = {  } U = { menu$0 }
  92 methodCall D = { menu$0, menu$0.popupListener, menu$0.popupMenu } U = { menu$0, menu$0.popupMenu, saveAsItem$6 } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
  93 actualOut D = { menu$0, menu$0.!add, menu$0.popupListener, menu$0.popupMenu } U = { menu$0, menu$0.popupMenu }
  94 assignment D = {  } U = { saveAsItem$6.!addActionListener }
  95 receiver D = {  } U = { saveAsItem$6 }
  96 methodCall D = { javax.swing.event.EventListenerList.listenerList, saveAsItem$6 } U = { .!, javax.swing.JComponent.listenerList, javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.event.EventListenerList.listenerList, saveAsItem$6 } TO = javax.swing.AbstractButton#addActionListener( java.awt.event.ActionListener )
  97 receiver D = {  } U = {  }
  98 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
  99 actualOut D = { .! } U = {  }
 100 actualOut D = { javax.swing.event.EventListenerList.listenerList, saveAsItem$6, saveAsItem$6.!addActionListener } U = { javax.swing.JComponent.listenerList, javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.event.EventListenerList.listenerList, saveAsItem$6 }
 101 assignment D = {  } U = { menu$0.!addSeparator }
 102 receiver D = {  } U = { menu$0 }
 103 methodCall D = { menu$0, menu$0.popupListener, menu$0.popupMenu } U = { menu$0, menu$0.popupMenu } TO = javax.swing.JMenu#addSeparator( )
 104 actualOut D = { menu$0, menu$0.!addSeparator, menu$0.popupListener, menu$0.popupMenu } U = { menu$0, menu$0.popupMenu }
 105 assignment D = { this.fileListMenu } U = { this.fileListMenu.!JMenu }
 106 receiver D = {  } U = {  }
 107 constructorCall D = { this.fileListMenu.customMenuLocation, this.fileListMenu.menuChangeListener, this.fileListMenu.menuEvent } U = { $java.lang.String } TO = javax.swing.JMenu#JMenu( java.lang.String )
 108 actualOut D = { this.fileListMenu.!JMenu, this.fileListMenu.customMenuLocation, this.fileListMenu.menuChangeListener, this.fileListMenu.menuEvent } U = {  }
 109 assignment D = {  } U = { this.fileListMenu.!setMnemonic }
 110 receiver D = {  } U = { this.fileListMenu }
 111 methodCall D = {  } U = { this.fileListMenu, this.fileListMenu.model } TO = javax.swing.AbstractButton#setMnemonic( char )
 112 actualOut D = { this.fileListMenu.!setMnemonic } U = { this.fileListMenu.model }
 113 assignment D = {  } U = { menu$0.!add }
 114 receiver D = {  } U = { menu$0 }
 115 methodCall D = { menu$0, menu$0.popupListener, menu$0.popupMenu } U = { menu$0, menu$0.popupMenu, this.fileListMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
 116 actualOut D = { menu$0, menu$0.!add, menu$0.popupListener, menu$0.popupMenu } U = { menu$0, menu$0.popupMenu }
 117 localDeclaration D = { emptyListItem$9 } U = { emptyListItem$9.!JMenuItem }
 118 receiver D = {  } U = {  }
 119 constructorCall D = { emptyListItem$9.isMouseDragged } U = { $java.lang.String } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
 120 actualOut D = { emptyListItem$9.!JMenuItem, emptyListItem$9.isMouseDragged } U = {  }
 121 assignment D = {  } U = { emptyListItem$9.!setEnabled }
 122 receiver D = {  } U = { emptyListItem$9 }
 123 methodCall D = {  } U = { emptyListItem$9, javax.swing.AbstractButton.model } TO = javax.swing.JMenuItem#setEnabled( boolean )
 124 actualOut D = { emptyListItem$9.!setEnabled } U = { javax.swing.AbstractButton.model }
 125 assignment D = {  } U = { this.fileListMenu.!add }
 126 receiver D = {  } U = { this.fileListMenu }
 127 methodCall D = { this.fileListMenu, this.fileListMenu.popupListener, this.fileListMenu.popupMenu } U = { emptyListItem$9, this.fileListMenu, this.fileListMenu.popupMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
 128 actualOut D = { this.fileListMenu, this.fileListMenu.!add, this.fileListMenu.popupListener, this.fileListMenu.popupMenu } U = { this.fileListMenu, this.fileListMenu.popupMenu }
 129 assignment D = { this.fileListener } U = { this.fileListener.! }
 130 receiver D = {  } U = {  }
 131 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
 132 actualOut D = { this.fileListener.! } U = {  }
 133 assignment D = {  } U = { menu$0.!addSeparator }
 134 receiver D = {  } U = { menu$0 }
 135 methodCall D = { menu$0, menu$0.popupListener, menu$0.popupMenu } U = { menu$0, menu$0.popupMenu } TO = javax.swing.JMenu#addSeparator( )
 136 actualOut D = { menu$0, menu$0.!addSeparator, menu$0.popupListener, menu$0.popupMenu } U = { menu$0, menu$0.popupMenu }
 137 localDeclaration D = { exitItem$13 } U = { exitItem$13.!JMenuItem }
 138 receiver D = {  } U = {  }
 139 constructorCall D = { exitItem$13.isMouseDragged } U = { $java.lang.String } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
 140 actualOut D = { exitItem$13.!JMenuItem, exitItem$13.isMouseDragged } U = {  }
 141 assignment D = {  } U = { exitItem$13.!setMnemonic }
 142 receiver D = {  } U = { exitItem$13 }
 143 methodCall D = {  } U = { exitItem$13, exitItem$13.model } TO = javax.swing.AbstractButton#setMnemonic( char )
 144 actualOut D = { exitItem$13.!setMnemonic } U = { exitItem$13.model }
 145 assignment D = {  } U = { menu$0.!add }
 146 receiver D = {  } U = { menu$0 }
 147 methodCall D = { menu$0, menu$0.popupListener, menu$0.popupMenu } U = { exitItem$13, menu$0, menu$0.popupMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
 148 actualOut D = { menu$0, menu$0.!add, menu$0.popupListener, menu$0.popupMenu } U = { menu$0, menu$0.popupMenu }
 149 assignment D = {  } U = { exitItem$13.!addActionListener }
 150 receiver D = {  } U = { exitItem$13 }
 151 methodCall D = { exitItem$13, javax.swing.event.EventListenerList.listenerList } U = { .!, exitItem$13, javax.swing.JComponent.listenerList, javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.event.EventListenerList.listenerList } TO = javax.swing.AbstractButton#addActionListener( java.awt.event.ActionListener )
 152 receiver D = {  } U = {  }
 153 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
 154 actualOut D = { .! } U = {  }
 155 actualOut D = { exitItem$13, exitItem$13.!addActionListener, javax.swing.event.EventListenerList.listenerList } U = { exitItem$13, javax.swing.JComponent.listenerList, javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.event.EventListenerList.listenerList }
 157 formalOut D = {  } U = { $_, closeItem$3.isMouseDragged, emptyListItem$9.isMouseDragged, exitItem$13.isMouseDragged, javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, javax.swing.event.EventListenerList.listenerList, menu$0.popupListener, menu$0.popupMenu, newItem$1.accelerator, newItem$1.defaultIcon, newItem$1.disabledIcon, openItem$2.accelerator, openItem$2.defaultIcon, openItem$2.disabledIcon, saveAsItem$6.isMouseDragged, saveItem$5.accelerator, saveItem$5.defaultIcon, saveItem$5.disabledIcon, this.fileListMenu, this.fileListMenu.customMenuLocation, this.fileListMenu.menuChangeListener, this.fileListMenu.menuEvent, this.fileListMenu.popupListener, this.fileListMenu.popupMenu, this.fileListener }
--
   0 methodEntry [ updateUndoState( ) ]
   1 localDeclaration D = { canvas$0 } U = { this.tabbedCanvas.!getCurrentCanvas }
   2 receiver D = {  } U = { this.tabbedCanvas }
   3 methodCall D = {  } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCurrentCanvas( )
   4 actualOut D = { this.tabbedCanvas.!getCurrentCanvas } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
   5 ifSt D = {  } U = { canvas$0, this.tabbedCanvas.!getCurrentCanvas }
   6 returnSt D = {  } U = {  }
   8 localDeclaration D = { undoManager$1 } U = { canvas$0.!getUndoManager, this.tabbedCanvas.!getCurrentCanvas.!getUndoManager }
   9 receiver D = {  } U = { canvas$0, this.tabbedCanvas.!getCurrentCanvas }
  10 methodCall D = {  } U = { canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas.undoManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getUndoManager( )
  11 actualOut D = { canvas$0.!getUndoManager } U = { canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas.undoManager }
  12 ifSt D = {  } U = { canvas$0.!getUndoManager, canvas$0.!getUndoManager.!canUndo, undoManager$1, undoManager$1.!canUndo }
  13 receiver D = {  } U = { canvas$0.!getUndoManager, undoManager$1 }
  14 methodCall D = {  } U = { canvas$0.!getUndoManager, canvas$0.!getUndoManager.indexOfNextAdd, javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, undoManager$1, undoManager$1.indexOfNextAdd } TO = javax.swing.undo.UndoManager#canUndo( )
  15 actualOut D = { undoManager$1.!canUndo } U = { canvas$0.!getUndoManager.indexOfNextAdd, javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, undoManager$1.indexOfNextAdd }
  16 assignment D = {  } U = { this.undoAction.!setEnabled }
  17 receiver D = {  } U = { this.undoAction }
  18 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  19 actualOut D = { this.undoAction.!setEnabled } U = {  }
  20 assignment D = {  } U = { this.undoAction.!setEnabled }
  21 receiver D = {  } U = { this.undoAction }
  22 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  23 actualOut D = { this.undoAction.!setEnabled } U = {  }
  26 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { canvas$0 } U = {  }
   3 returnSt D = { $_ } U = { this.!saveFile }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = { this.tool } TO = jp.ac.ritsumei.cs.draw.DrawMenu#saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String )
   6 actualIn D = {  } U = { canvas$0 }
   7 actualIn D = {  } U = { canvas$0.!getFigureManager.!getFilename }
   8 receiver D = {  } U = { canvas$0.!getFigureManager }
   9 receiver D = {  } U = { canvas$0 }
  10 methodCall D = {  } U = { canvas$0.figureManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  11 actualOut D = { canvas$0.!getFigureManager } U = { canvas$0.figureManager }
  12 methodCall D = {  } U = { canvas$0.!getFigureManager.filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
  13 actualOut D = { canvas$0.!getFigureManager.!getFilename } U = { canvas$0.!getFigureManager.filename }
  14 actualOut D = { this.!saveFile } U = { this.tool }
  16 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ buildRecentFileMenu( ) ]
   1 assignment D = {  } U = { this.fileListMenu.!removeAll }
   2 receiver D = {  } U = { this.fileListMenu }
   3 methodCall D = { java.awt.Component.parent, this.fileListMenu } U = { java.awt.Component.eventMask, java.awt.Component.peer, java.awt.Container.component, java.awt.Container.containerListener, java.awt.Container.descendantsCount, java.awt.Container.layoutMgr, java.awt.Container.listeningBoundsChildren, java.awt.Container.listeningChildren, this.fileListMenu, this.fileListMenu.popupMenu } TO = javax.swing.JMenu#removeAll( )
   4 actualOut D = { java.awt.Component.parent, this.fileListMenu, this.fileListMenu.!removeAll } U = { java.awt.Component.eventMask, java.awt.Component.peer, java.awt.Container.component, java.awt.Container.containerListener, java.awt.Container.descendantsCount, java.awt.Container.layoutMgr, java.awt.Container.listeningBoundsChildren, java.awt.Container.listeningChildren, this.fileListMenu, this.fileListMenu.popupMenu }
   5 forSt D = {  } U = { filename$0, this.recentFiles }
   6 localDeclaration D = { fileItem$2 } U = { fileItem$2.!JMenuItem }
   7 receiver D = {  } U = {  }
   8 constructorCall D = { fileItem$2.isMouseDragged } U = { filename$0 } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
   9 actualOut D = { fileItem$2.!JMenuItem, fileItem$2.isMouseDragged } U = {  }
  10 assignment D = {  } U = { this.fileListMenu.!add }
  11 receiver D = {  } U = { this.fileListMenu }
  12 methodCall D = { this.fileListMenu, this.fileListMenu.popupListener, this.fileListMenu.popupMenu } U = { fileItem$2, this.fileListMenu, this.fileListMenu.popupMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
  13 actualOut D = { this.fileListMenu, this.fileListMenu.!add, this.fileListMenu.popupListener, this.fileListMenu.popupMenu } U = { this.fileListMenu, this.fileListMenu.popupMenu }
  14 assignment D = {  } U = { fileItem$2.!addActionListener }
  15 receiver D = {  } U = { fileItem$2 }
  16 methodCall D = { fileItem$2, javax.swing.event.EventListenerList.listenerList } U = { fileItem$2, javax.swing.JComponent.listenerList, javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.event.EventListenerList.listenerList, this.fileListener } TO = javax.swing.AbstractButton#addActionListener( java.awt.event.ActionListener )
  17 actualOut D = { fileItem$2, fileItem$2.!addActionListener, javax.swing.event.EventListenerList.listenerList } U = { fileItem$2, javax.swing.JComponent.listenerList, javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.event.EventListenerList.listenerList }
  19 formalOut D = {  } U = { $_, fileItem$2.isMouseDragged, java.awt.Component.parent, javax.swing.event.EventListenerList.listenerList, this.fileListMenu, this.fileListMenu.popupListener, this.fileListMenu.popupMenu }
--
   0 methodEntry [ openFile( java.lang.String ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 throwsClause D = {  } U = { $java.lang.NumberFormatException }
   3 formalIn D = { filename$0 } U = {  }
   4 localDeclaration D = { canvas$1 } U = { this.tabbedCanvas.!getCanvas }
   5 receiver D = {  } U = { this.tabbedCanvas }
   6 methodCall D = {  } U = { this.tabbedCanvas, this.tabbedCanvas.canvases } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCanvas( java.lang.String )
   7 actualIn D = {  } U = { filename$0 }
   8 actualOut D = { this.tabbedCanvas.!getCanvas } U = { this.tabbedCanvas.canvases }
   9 ifSt D = {  } U = { canvas$1, this.tabbedCanvas.!getCanvas }
  10 receiver D = {  } U = { this.tabbedCanvas }
  11 methodCall D = {  } U = { this.tabbedCanvas, this.tabbedCanvas.canvases } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCanvas( java.lang.String )
  12 actualIn D = {  } U = { filename$0 }
  13 actualOut D = { this.tabbedCanvas.!getCanvas } U = { this.tabbedCanvas.canvases }
  14 ifSt D = {  } U = { canvas$1.!hasChanged, this.tabbedCanvas.!getCanvas.!hasChanged }
  15 receiver D = {  } U = { canvas$1, this.tabbedCanvas.!getCanvas }
  16 methodCall D = {  } U = { canvas$1.changed, this.tabbedCanvas.!getCanvas.changed } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#hasChanged( )
  17 actualOut D = { canvas$1.!hasChanged } U = { canvas$1.changed, this.tabbedCanvas.!getCanvas.changed }
  18 assignment D = {  } U = { this.!showMessageDialog }
  19 receiver D = {  } U = {  }
  20 methodCall D = {  } U = { $java.lang.String, filename$0, this.tool } TO = javax.swing.JOptionPane#showMessageDialog( java.awt.Component java.lang.Object )
  21 actualOut D = { this.!showMessageDialog } U = {  }
  22 returnSt D = { $_ } U = {  }
  23 localDeclaration D = { confirm$2 } U = { this.!showConfirmDialog }
  24 receiver D = {  } U = {  }
  25 methodCall D = {  } U = { $java.lang.String, $java.lang.String.YES_NO_OPTION, this.tool } TO = javax.swing.JOptionPane#showConfirmDialog( java.awt.Component java.lang.Object java.lang.String int )
  26 actualOut D = { this.!showConfirmDialog } U = {  }
  27 ifSt D = {  } U = { confirm$2, confirm$2.NO_OPTION }
  28 returnSt D = { $_ } U = {  }
  31 assignment D = { canvas$1 } U = { this.tabbedCanvas.!openTab }
  32 receiver D = {  } U = { this.tabbedCanvas }
  33 methodCall D = { this.tabbedCanvas.selectedTab } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.menu, this.tabbedCanvas.selectedTab, this.tabbedCanvas.selector } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#openTab( java.lang.String )
  34 actualIn D = {  } U = { filename$0 }
  35 actualOut D = { this.tabbedCanvas.!openTab, this.tabbedCanvas.selectedTab } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.menu, this.tabbedCanvas.selectedTab, this.tabbedCanvas.selector }
  37 localDeclaration D = { result$3 } U = { canvas$1.!getFigureManager.!load, this.tabbedCanvas.!getCanvas.!getFigureManager.!load, this.tabbedCanvas.!openTab.!getFigureManager.!load }
  38 receiver D = {  } U = { canvas$1.!getFigureManager, this.tabbedCanvas.!getCanvas.!getFigureManager, this.tabbedCanvas.!openTab.!getFigureManager }
  39 receiver D = {  } U = { canvas$1, this.tabbedCanvas.!getCanvas, this.tabbedCanvas.!openTab }
  40 methodCall D = {  } U = { canvas$1.figureManager, this.tabbedCanvas.!getCanvas.figureManager, this.tabbedCanvas.!openTab.figureManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  41 actualOut D = { canvas$1.!getFigureManager } U = { canvas$1.figureManager, this.tabbedCanvas.!getCanvas.figureManager, this.tabbedCanvas.!openTab.figureManager }
  42 methodCall D = { canvas$1.!getFigureManager } U = { canvas$1.!getFigureManager, canvas$1.!getFigureManager.figures, this.tabbedCanvas.!getCanvas.!getFigureManager, this.tabbedCanvas.!getCanvas.!getFigureManager.figures, this.tabbedCanvas.!openTab.!getFigureManager, this.tabbedCanvas.!openTab.!getFigureManager.figures } TO = jp.ac.ritsumei.cs.draw.FigureManager#load( java.lang.String )
  43 actualIn D = {  } U = { filename$0 }
  44 actualOut D = { canvas$1.!getFigureManager, canvas$1.!getFigureManager.!load } U = { canvas$1.!getFigureManager, canvas$1.!getFigureManager.figures, this.tabbedCanvas.!getCanvas.!getFigureManager, this.tabbedCanvas.!getCanvas.!getFigureManager.figures, this.tabbedCanvas.!openTab.!getFigureManager, this.tabbedCanvas.!openTab.!getFigureManager.figures }
  45 ifSt D = {  } U = { result$3 }
  46 assignment D = {  } U = { this.!showMessageDialog }
  47 receiver D = {  } U = {  }
  48 methodCall D = {  } U = { $java.lang.String, filename$0, this.tool } TO = javax.swing.JOptionPane#showMessageDialog( java.awt.Component java.lang.Object )
  49 actualOut D = { this.!showMessageDialog } U = {  }
  50 returnSt D = { $_ } U = {  }
  52 assignment D = {  } U = { canvas$1.!setChanged, this.tabbedCanvas.!getCanvas.!setChanged, this.tabbedCanvas.!openTab.!setChanged }
  53 receiver D = {  } U = { canvas$1, this.tabbedCanvas.!getCanvas, this.tabbedCanvas.!openTab }
  54 methodCall D = { canvas$1.changed } U = { canvas$1.changed, this.tabbedCanvas.!getCanvas.changed, this.tabbedCanvas.!openTab.changed } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setChanged( boolean )
  55 actualIn D = {  } U = {  }
  56 actualOut D = { canvas$1.!setChanged, canvas$1.changed } U = { canvas$1.changed, this.tabbedCanvas.!getCanvas.changed, this.tabbedCanvas.!openTab.changed }
  57 assignment D = {  } U = { this.tool.!setTitle }
  58 receiver D = {  } U = { this.tool }
  59 methodCall D = { this.tool, this.tool.title } U = { filename$0, java.awt.Component.changeSupport, java.awt.Component.peer, this.tool, this.tool.title } TO = java.awt.Frame#setTitle( java.lang.String )
  60 actualOut D = { this.tool, this.tool.!setTitle, this.tool.title } U = { java.awt.Component.changeSupport, java.awt.Component.peer, this.tool, this.tool.title }
  61 assignment D = {  } U = { canvas$1.!repaint, this.tabbedCanvas.!getCanvas.!repaint, this.tabbedCanvas.!openTab.!repaint }
  62 receiver D = {  } U = { canvas$1, this.tabbedCanvas.!getCanvas, this.tabbedCanvas.!openTab }
  63 methodCall D = {  } U = { canvas$1, canvas$1.height, canvas$1.parent, canvas$1.peer, canvas$1.width, canvas$1.x, canvas$1.y, this.tabbedCanvas.!getCanvas, this.tabbedCanvas.!getCanvas.height, this.tabbedCanvas.!getCanvas.parent, this.tabbedCanvas.!getCanvas.peer, this.tabbedCanvas.!getCanvas.width, this.tabbedCanvas.!getCanvas.x, this.tabbedCanvas.!getCanvas.y, this.tabbedCanvas.!openTab, this.tabbedCanvas.!openTab.height, this.tabbedCanvas.!openTab.parent, this.tabbedCanvas.!openTab.peer, this.tabbedCanvas.!openTab.width, this.tabbedCanvas.!openTab.x, this.tabbedCanvas.!openTab.y } TO = java.awt.Component#repaint( )
  64 actualOut D = { canvas$1.!repaint } U = { canvas$1.height, canvas$1.parent, canvas$1.peer, canvas$1.width, canvas$1.x, canvas$1.y, this.tabbedCanvas.!getCanvas.height, this.tabbedCanvas.!getCanvas.parent, this.tabbedCanvas.!getCanvas.peer, this.tabbedCanvas.!getCanvas.width, this.tabbedCanvas.!getCanvas.x, this.tabbedCanvas.!getCanvas.y, this.tabbedCanvas.!openTab.height, this.tabbedCanvas.!openTab.parent, this.tabbedCanvas.!openTab.peer, this.tabbedCanvas.!openTab.width, this.tabbedCanvas.!openTab.x, this.tabbedCanvas.!openTab.y }
  65 returnSt D = { $_ } U = {  }
  67 formalOut D = {  } U = { $_, canvas$1.changed, this.tabbedCanvas.selectedTab, this.tool, this.tool.title }
--
   0 fieldEntry [ openAction ]
   1 fieldDeclaration D = { this.openAction } U = { this.openAction }
--
   0 methodEntry [ closeFile( ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 localDeclaration D = { canvas$0 } U = { this.tabbedCanvas.!getCurrentCanvas }
   3 receiver D = {  } U = { this.tabbedCanvas }
   4 methodCall D = {  } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCurrentCanvas( )
   5 actualOut D = { this.tabbedCanvas.!getCurrentCanvas } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
   6 assignment D = {  } U = { this.!closeFile }
   7 receiver D = {  } U = {  }
   8 methodCall D = { this.tabbedCanvas, this.tabbedCanvas.selectedTab } U = { this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.tool } TO = jp.ac.ritsumei.cs.draw.DrawMenu#closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   9 actualIn D = {  } U = { canvas$0, this.tabbedCanvas.!getCurrentCanvas }
  10 actualOut D = { this.!closeFile, this.tabbedCanvas, this.tabbedCanvas.selectedTab } U = { this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.tool }
  12 formalOut D = {  } U = { $_, this.tabbedCanvas, this.tabbedCanvas.selectedTab }
--
   0 methodEntry [ initEditMenu( javax.swing.JMenu ) ]
   1 formalIn D = { menu$0 } U = {  }
   2 localDeclaration D = { undoItem$1 } U = { menu$0.!add }
   3 receiver D = {  } U = { menu$0 }
   4 methodCall D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0 } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.popupMenu, this.undoAction } TO = javax.swing.JMenu#add( javax.swing.Action )
   5 actualOut D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.!add } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.popupMenu }
   6 assignment D = {  } U = { menu$0.!add.!setMnemonic, undoItem$1.!setMnemonic }
   7 receiver D = {  } U = { menu$0.!add, undoItem$1 }
   8 methodCall D = {  } U = { menu$0.!add, menu$0.!add.model, undoItem$1, undoItem$1.model } TO = javax.swing.AbstractButton#setMnemonic( char )
   9 actualOut D = { undoItem$1.!setMnemonic } U = { menu$0.!add.model, undoItem$1.model }
  10 assignment D = {  } U = { undoItem$1.!setIcon }
  11 receiver D = {  } U = { menu$0.!add, undoItem$1 }
  12 methodCall D = { undoItem$1, undoItem$1.defaultIcon, undoItem$1.disabledIcon } U = { java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, undoItem$1, undoItem$1.defaultIcon, undoItem$1.disabledIcon } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  13 actualOut D = { undoItem$1, undoItem$1.!setIcon, undoItem$1.defaultIcon, undoItem$1.disabledIcon } U = { java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, undoItem$1, undoItem$1.defaultIcon, undoItem$1.disabledIcon }
  14 assignment D = {  } U = { undoItem$1.!setAccelerator }
  15 receiver D = {  } U = { undoItem$1 }
  16 methodCall D = { undoItem$1, undoItem$1.accelerator } U = { java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled, this.!getKeyStroke, undoItem$1, undoItem$1.accelerator } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  19 actualOut D = { this.!getKeyStroke } U = {  }
  20 actualOut D = { undoItem$1, undoItem$1.!setAccelerator, undoItem$1.accelerator } U = { java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled, undoItem$1, undoItem$1.accelerator }
  21 assignment D = {  } U = { this.undoAction.!setEnabled }
  22 receiver D = {  } U = { this.undoAction }
  23 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  24 actualOut D = { this.undoAction.!setEnabled } U = {  }
  25 localDeclaration D = { redoItem$2 } U = { menu$0.!add }
  26 receiver D = {  } U = { menu$0 }
  27 methodCall D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0 } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.popupMenu, this.redoAction } TO = javax.swing.JMenu#add( javax.swing.Action )
  28 actualOut D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.!add } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.popupMenu }
  29 assignment D = {  } U = { menu$0.!add.!setMnemonic, redoItem$2.!setMnemonic }
  30 receiver D = {  } U = { menu$0.!add, redoItem$2 }
  31 methodCall D = {  } U = { menu$0.!add, menu$0.!add.model, redoItem$2, redoItem$2.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  32 actualOut D = { redoItem$2.!setMnemonic } U = { menu$0.!add.model, redoItem$2.model }
  33 assignment D = {  } U = { redoItem$2.!setIcon }
  34 receiver D = {  } U = { menu$0.!add, redoItem$2 }
  35 methodCall D = { redoItem$2, redoItem$2.defaultIcon, redoItem$2.disabledIcon } U = { java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, redoItem$2, redoItem$2.defaultIcon, redoItem$2.disabledIcon } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  36 actualOut D = { redoItem$2, redoItem$2.!setIcon, redoItem$2.defaultIcon, redoItem$2.disabledIcon } U = { java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, redoItem$2, redoItem$2.defaultIcon, redoItem$2.disabledIcon }
  37 assignment D = {  } U = { redoItem$2.!setAccelerator }
  38 receiver D = {  } U = { redoItem$2 }
  39 methodCall D = { redoItem$2, redoItem$2.accelerator } U = { java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled, redoItem$2, redoItem$2.accelerator, this.!getKeyStroke } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  40 receiver D = {  } U = {  }
  41 methodCall D = {  } U = { KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  42 actualOut D = { this.!getKeyStroke } U = {  }
  43 actualOut D = { redoItem$2, redoItem$2.!setAccelerator, redoItem$2.accelerator } U = { java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled, redoItem$2, redoItem$2.accelerator }
  44 assignment D = {  } U = { this.redoAction.!setEnabled }
  45 receiver D = {  } U = { this.redoAction }
  46 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  47 actualOut D = { this.redoAction.!setEnabled } U = {  }
  48 assignment D = {  } U = { menu$0.!addSeparator }
  49 receiver D = {  } U = { menu$0 }
  50 methodCall D = { menu$0, menu$0.popupListener, menu$0.popupMenu } U = { menu$0, menu$0.popupMenu } TO = javax.swing.JMenu#addSeparator( )
  51 actualOut D = { menu$0, menu$0.!addSeparator, menu$0.popupListener, menu$0.popupMenu } U = { menu$0, menu$0.popupMenu }
  52 localDeclaration D = { cutItem$3 } U = { menu$0.!add }
  53 receiver D = {  } U = { menu$0 }
  54 methodCall D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0 } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.popupMenu, this.cutAction } TO = javax.swing.JMenu#add( javax.swing.Action )
  55 actualOut D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.!add } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.popupMenu }
  56 assignment D = {  } U = { cutItem$3.!setMnemonic, menu$0.!add.!setMnemonic }
  57 receiver D = {  } U = { cutItem$3, menu$0.!add }
  58 methodCall D = {  } U = { cutItem$3, cutItem$3.model, menu$0.!add, menu$0.!add.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  59 actualOut D = { cutItem$3.!setMnemonic } U = { cutItem$3.model, menu$0.!add.model }
  60 assignment D = {  } U = { cutItem$3.!setIcon }
  61 receiver D = {  } U = { cutItem$3, menu$0.!add }
  62 methodCall D = { cutItem$3, cutItem$3.defaultIcon, cutItem$3.disabledIcon } U = { cutItem$3, cutItem$3.defaultIcon, cutItem$3.disabledIcon, java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  63 actualOut D = { cutItem$3, cutItem$3.!setIcon, cutItem$3.defaultIcon, cutItem$3.disabledIcon } U = { cutItem$3, cutItem$3.defaultIcon, cutItem$3.disabledIcon, java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled }
  64 assignment D = {  } U = { cutItem$3.!setAccelerator }
  65 receiver D = {  } U = { cutItem$3 }
  66 methodCall D = { cutItem$3, cutItem$3.accelerator } U = { cutItem$3, cutItem$3.accelerator, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled, this.!getKeyStroke } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  67 receiver D = {  } U = {  }
  68 methodCall D = {  } U = { KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  69 actualOut D = { this.!getKeyStroke } U = {  }
  70 actualOut D = { cutItem$3, cutItem$3.!setAccelerator, cutItem$3.accelerator } U = { cutItem$3, cutItem$3.accelerator, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled }
  71 assignment D = {  } U = { cutItem$3.!setEnabled }
  72 receiver D = {  } U = { cutItem$3 }
  73 methodCall D = {  } U = { cutItem$3, javax.swing.AbstractButton.model } TO = javax.swing.JMenuItem#setEnabled( boolean )
  74 actualOut D = { cutItem$3.!setEnabled } U = { javax.swing.AbstractButton.model }
  75 localDeclaration D = { copyItem$4 } U = { menu$0.!add }
  76 receiver D = {  } U = { menu$0 }
  77 methodCall D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0 } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.popupMenu, this.copyAction } TO = javax.swing.JMenu#add( javax.swing.Action )
  78 actualOut D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.!add } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.popupMenu }
  79 assignment D = {  } U = { copyItem$4.!setMnemonic, menu$0.!add.!setMnemonic }
  80 receiver D = {  } U = { copyItem$4, menu$0.!add }
  81 methodCall D = {  } U = { copyItem$4, copyItem$4.model, menu$0.!add, menu$0.!add.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  82 actualOut D = { copyItem$4.!setMnemonic } U = { copyItem$4.model, menu$0.!add.model }
  83 assignment D = {  } U = { copyItem$4.!setIcon }
  84 receiver D = {  } U = { copyItem$4, menu$0.!add }
  85 methodCall D = { copyItem$4, copyItem$4.defaultIcon, copyItem$4.disabledIcon } U = { copyItem$4, copyItem$4.defaultIcon, copyItem$4.disabledIcon, java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  86 actualOut D = { copyItem$4, copyItem$4.!setIcon, copyItem$4.defaultIcon, copyItem$4.disabledIcon } U = { copyItem$4, copyItem$4.defaultIcon, copyItem$4.disabledIcon, java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled }
  87 assignment D = {  } U = { copyItem$4.!setAccelerator }
  88 receiver D = {  } U = { copyItem$4 }
  89 methodCall D = { copyItem$4, copyItem$4.accelerator } U = { copyItem$4, copyItem$4.accelerator, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled, this.!getKeyStroke } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  90 receiver D = {  } U = {  }
  91 methodCall D = {  } U = { KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  92 actualOut D = { this.!getKeyStroke } U = {  }
  93 actualOut D = { copyItem$4, copyItem$4.!setAccelerator, copyItem$4.accelerator } U = { copyItem$4, copyItem$4.accelerator, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled }
  94 assignment D = {  } U = { copyItem$4.!setEnabled }
  95 receiver D = {  } U = { copyItem$4 }
  96 methodCall D = {  } U = { copyItem$4, javax.swing.AbstractButton.model } TO = javax.swing.JMenuItem#setEnabled( boolean )
  97 actualOut D = { copyItem$4.!setEnabled } U = { javax.swing.AbstractButton.model }
  98 localDeclaration D = { pasteItem$5 } U = { menu$0.!add }
  99 receiver D = {  } U = { menu$0 }
 100 methodCall D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0 } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.popupMenu, this.pasteAction } TO = javax.swing.JMenu#add( javax.swing.Action )
 101 actualOut D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.!add } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.popupMenu }
 102 assignment D = {  } U = { menu$0.!add.!setMnemonic, pasteItem$5.!setMnemonic }
 103 receiver D = {  } U = { menu$0.!add, pasteItem$5 }
 104 methodCall D = {  } U = { menu$0.!add, menu$0.!add.model, pasteItem$5, pasteItem$5.model } TO = javax.swing.AbstractButton#setMnemonic( char )
 105 actualOut D = { pasteItem$5.!setMnemonic } U = { menu$0.!add.model, pasteItem$5.model }
 106 assignment D = {  } U = { pasteItem$5.!setIcon }
 107 receiver D = {  } U = { menu$0.!add, pasteItem$5 }
 108 methodCall D = { pasteItem$5, pasteItem$5.defaultIcon, pasteItem$5.disabledIcon } U = { java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, pasteItem$5, pasteItem$5.defaultIcon, pasteItem$5.disabledIcon } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
 109 actualOut D = { pasteItem$5, pasteItem$5.!setIcon, pasteItem$5.defaultIcon, pasteItem$5.disabledIcon } U = { java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, pasteItem$5, pasteItem$5.defaultIcon, pasteItem$5.disabledIcon }
 110 assignment D = {  } U = { pasteItem$5.!setAccelerator }
 111 receiver D = {  } U = { pasteItem$5 }
 112 methodCall D = { pasteItem$5, pasteItem$5.accelerator } U = { java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled, pasteItem$5, pasteItem$5.accelerator, this.!getKeyStroke } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
 113 receiver D = {  } U = {  }
 114 methodCall D = {  } U = { KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
 115 actualOut D = { this.!getKeyStroke } U = {  }
 116 actualOut D = { pasteItem$5, pasteItem$5.!setAccelerator, pasteItem$5.accelerator } U = { java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled, pasteItem$5, pasteItem$5.accelerator }
 117 assignment D = {  } U = { pasteItem$5.!setEnabled }
 118 receiver D = {  } U = { pasteItem$5 }
 119 methodCall D = {  } U = { javax.swing.AbstractButton.model, pasteItem$5 } TO = javax.swing.JMenuItem#setEnabled( boolean )
 120 actualOut D = { pasteItem$5.!setEnabled } U = { javax.swing.AbstractButton.model }
 121 assignment D = {  } U = { menu$0.!addSeparator }
 122 receiver D = {  } U = { menu$0 }
 123 methodCall D = { menu$0, menu$0.popupListener, menu$0.popupMenu } U = { menu$0, menu$0.popupMenu } TO = javax.swing.JMenu#addSeparator( )
 124 actualOut D = { menu$0, menu$0.!addSeparator, menu$0.popupListener, menu$0.popupMenu } U = { menu$0, menu$0.popupMenu }
 125 localDeclaration D = { deleteItem$6 } U = { menu$0.!add }
 126 receiver D = {  } U = { menu$0 }
 127 methodCall D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0 } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.popupMenu, this.deleteAction } TO = javax.swing.JMenu#add( javax.swing.Action )
 128 actualOut D = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.!add } U = { javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0, menu$0.popupMenu }
 129 assignment D = {  } U = { deleteItem$6.!setMnemonic, menu$0.!add.!setMnemonic }
 130 receiver D = {  } U = { deleteItem$6, menu$0.!add }
 131 methodCall D = {  } U = { deleteItem$6, deleteItem$6.model, menu$0.!add, menu$0.!add.model } TO = javax.swing.AbstractButton#setMnemonic( char )
 132 actualOut D = { deleteItem$6.!setMnemonic } U = { deleteItem$6.model, menu$0.!add.model }
 133 assignment D = {  } U = { deleteItem$6.!setIcon }
 134 receiver D = {  } U = { deleteItem$6, menu$0.!add }
 135 methodCall D = { deleteItem$6, deleteItem$6.defaultIcon, deleteItem$6.disabledIcon } U = { deleteItem$6, deleteItem$6.defaultIcon, deleteItem$6.disabledIcon, java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
 136 actualOut D = { deleteItem$6, deleteItem$6.!setIcon, deleteItem$6.defaultIcon, deleteItem$6.disabledIcon } U = { deleteItem$6, deleteItem$6.defaultIcon, deleteItem$6.disabledIcon, java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled }
 137 assignment D = {  } U = { deleteItem$6.!setAccelerator }
 138 receiver D = {  } U = { deleteItem$6 }
 139 methodCall D = { deleteItem$6, deleteItem$6.accelerator } U = { deleteItem$6, deleteItem$6.accelerator, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled, this.!getKeyStroke } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
 140 receiver D = {  } U = {  }
 141 methodCall D = {  } U = { KeyEvent.VK_DELETE } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
 142 actualOut D = { this.!getKeyStroke } U = {  }
 143 actualOut D = { deleteItem$6, deleteItem$6.!setAccelerator, deleteItem$6.accelerator } U = { deleteItem$6, deleteItem$6.accelerator, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, javax.swing.JComponent.revalidateRunnableScheduled }
 144 assignment D = {  } U = { deleteItem$6.!setEnabled }
 145 receiver D = {  } U = { deleteItem$6 }
 146 methodCall D = {  } U = { deleteItem$6, javax.swing.AbstractButton.model } TO = javax.swing.JMenuItem#setEnabled( boolean )
 147 actualOut D = { deleteItem$6.!setEnabled } U = { javax.swing.AbstractButton.model }
 149 formalOut D = {  } U = { $_, copyItem$4.accelerator, copyItem$4.defaultIcon, copyItem$4.disabledIcon, cutItem$3.accelerator, cutItem$3.defaultIcon, cutItem$3.disabledIcon, deleteItem$6.accelerator, deleteItem$6.defaultIcon, deleteItem$6.disabledIcon, javax.swing.AbstractButton.action, javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.popupListener, menu$0.popupMenu, pasteItem$5.accelerator, pasteItem$5.defaultIcon, pasteItem$5.disabledIcon, redoItem$2.accelerator, redoItem$2.defaultIcon, redoItem$2.disabledIcon, undoItem$1.accelerator, undoItem$1.defaultIcon, undoItem$1.disabledIcon }
--
   0: serialVersionUID
   1: 0 -> 1 trueControlDependence
--
   0: toolBar
   1: 0 -> 1 trueControlDependence
--
   0: copyAction
   1: 0 -> 1 trueControlDependence
--
   0: initFileActions( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 23 trueControlDependence
  17: 0 -> 24 trueControlDependence
  18: 0 -> 25 trueControlDependence
  19: 0 -> 26 trueControlDependence
  20: 0 -> 27 trueControlDependence
  21: 0 -> 28 trueControlDependence
  22: 0 -> 29 trueControlDependence
  23: 0 -> 3 trueControlDependence
  24: 0 -> 30 trueControlDependence
  25: 0 -> 31 trueControlDependence
  26: 0 -> 32 trueControlDependence
  27: 0 -> 33 trueControlDependence
  28: 0 -> 34 trueControlDependence
  29: 0 -> 35 trueControlDependence
  30: 0 -> 36 trueControlDependence
  31: 0 -> 37 trueControlDependence
  32: 0 -> 38 trueControlDependence
  33: 0 -> 39 trueControlDependence
  34: 0 -> 4 trueControlDependence
  35: 0 -> 40 trueControlDependence
  36: 0 -> 41 trueControlDependence
  37: 0 -> 42 trueControlDependence
  38: 0 -> 43 trueControlDependence
  39: 0 -> 44 trueControlDependence
  40: 0 -> 45 trueControlDependence
  41: 0 -> 47 trueControlDependence
  42: 0 -> 5 trueControlDependence
  43: 0 -> 6 trueControlDependence
  44: 0 -> 7 trueControlDependence
  45: 0 -> 8 trueControlDependence
  46: 0 -> 9 trueControlDependence
  47: 1 -> 47 loopIndependentDefUseDependence this.newAction
  48: 11 -> 12 loopIndependentDefUseDependence this.!getClass
  49: 11 -> 26 outputDependence this.!getClass
  50: 11 -> 8 loopIndependentDefUseDependence this.!getClass
  51: 13 -> 28 outputDependence this.!getClass.!getResource
  52: 13 -> 7 loopIndependentDefUseDependence this.!getClass.!getResource
  53: 14 -> 47 loopIndependentDefUseDependence this.newAction.accessibleContext
  54: 14 -> 47 loopIndependentDefUseDependence this.newAction.description
  55: 14 -> 47 loopIndependentDefUseDependence this.newAction.height
  56: 14 -> 47 loopIndependentDefUseDependence this.newAction.image
  57: 14 -> 47 loopIndependentDefUseDependence this.newAction.loadStatus
  58: 14 -> 47 loopIndependentDefUseDependence this.newAction.location
  59: 14 -> 47 loopIndependentDefUseDependence this.newAction.width
  60: 14 -> 5 loopIndependentDefUseDependence this.newAction.!ImageIcon
  61: 15 -> 1 loopIndependentDefUseDependence this.newAction.!
  62: 15 -> 47 loopIndependentDefUseDependence this.newAction.arrayTable
  63: 15 -> 47 loopIndependentDefUseDependence this.newAction.enabled
  64: 16 -> 47 loopIndependentDefUseDependence this.openAction
  65: 18 -> 30 loopIndependentDefUseDependence this.openAction.arrayTable
  66: 18 -> 30 loopIndependentDefUseDependence this.openAction.enabled
  67: 19 -> 30 summary
  68: 20 -> 30 summary
  69: 22 -> 29 loopIndependentDefUseDependence this.openAction.image
  70: 22 -> 29 outputDependence this.openAction.accessibleContext
  71: 22 -> 29 outputDependence this.openAction.description
  72: 22 -> 29 outputDependence this.openAction.height
  73: 22 -> 29 outputDependence this.openAction.loadStatus
  74: 22 -> 29 outputDependence this.openAction.location
  75: 22 -> 29 outputDependence this.openAction.width
  76: 26 -> 23 loopIndependentDefUseDependence this.!getClass
  77: 26 -> 27 loopIndependentDefUseDependence this.!getClass
  78: 26 -> 41 outputDependence this.!getClass
  79: 28 -> 22 loopIndependentDefUseDependence this.!getClass.!getResource
  80: 28 -> 43 outputDependence this.!getClass.!getResource
  81: 29 -> 20 loopIndependentDefUseDependence this.openAction.!ImageIcon
  82: 29 -> 47 loopIndependentDefUseDependence this.openAction.accessibleContext
  83: 29 -> 47 loopIndependentDefUseDependence this.openAction.description
  84: 29 -> 47 loopIndependentDefUseDependence this.openAction.height
  85: 29 -> 47 loopIndependentDefUseDependence this.openAction.image
  86: 29 -> 47 loopIndependentDefUseDependence this.openAction.loadStatus
  87: 29 -> 47 loopIndependentDefUseDependence this.openAction.location
  88: 29 -> 47 loopIndependentDefUseDependence this.openAction.width
  89: 3 -> 15 loopIndependentDefUseDependence this.newAction.arrayTable
  90: 3 -> 15 loopIndependentDefUseDependence this.newAction.enabled
  91: 30 -> 16 loopIndependentDefUseDependence this.openAction.!
  92: 30 -> 47 loopIndependentDefUseDependence this.openAction.arrayTable
  93: 30 -> 47 loopIndependentDefUseDependence this.openAction.enabled
  94: 31 -> 47 loopIndependentDefUseDependence this.saveAction
  95: 33 -> 45 loopIndependentDefUseDependence this.saveAction.arrayTable
  96: 33 -> 45 loopIndependentDefUseDependence this.saveAction.enabled
  97: 34 -> 45 summary
  98: 35 -> 45 summary
  99: 37 -> 44 loopIndependentDefUseDependence this.saveAction.image
 100: 37 -> 44 outputDependence this.saveAction.accessibleContext
 101: 37 -> 44 outputDependence this.saveAction.description
 102: 37 -> 44 outputDependence this.saveAction.height
 103: 37 -> 44 outputDependence this.saveAction.loadStatus
 104: 37 -> 44 outputDependence this.saveAction.location
 105: 37 -> 44 outputDependence this.saveAction.width
 106: 4 -> 15 summary
 107: 41 -> 38 loopIndependentDefUseDependence this.!getClass
 108: 41 -> 42 loopIndependentDefUseDependence this.!getClass
 109: 43 -> 37 loopIndependentDefUseDependence this.!getClass.!getResource
 110: 44 -> 35 loopIndependentDefUseDependence this.saveAction.!ImageIcon
 111: 44 -> 47 loopIndependentDefUseDependence this.saveAction.accessibleContext
 112: 44 -> 47 loopIndependentDefUseDependence this.saveAction.description
 113: 44 -> 47 loopIndependentDefUseDependence this.saveAction.height
 114: 44 -> 47 loopIndependentDefUseDependence this.saveAction.image
 115: 44 -> 47 loopIndependentDefUseDependence this.saveAction.loadStatus
 116: 44 -> 47 loopIndependentDefUseDependence this.saveAction.location
 117: 44 -> 47 loopIndependentDefUseDependence this.saveAction.width
 118: 45 -> 31 loopIndependentDefUseDependence this.saveAction.!
 119: 45 -> 47 loopIndependentDefUseDependence this.saveAction.arrayTable
 120: 45 -> 47 loopIndependentDefUseDependence this.saveAction.enabled
 121: 5 -> 15 summary
 122: 7 -> 14 loopIndependentDefUseDependence this.newAction.image
 123: 7 -> 14 outputDependence this.newAction.accessibleContext
 124: 7 -> 14 outputDependence this.newAction.description
 125: 7 -> 14 outputDependence this.newAction.height
 126: 7 -> 14 outputDependence this.newAction.loadStatus
 127: 7 -> 14 outputDependence this.newAction.location
 128: 7 -> 14 outputDependence this.newAction.width
--
   0: createPopup( javax.swing.JPopupMenu )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 23 trueControlDependence
  17: 0 -> 24 trueControlDependence
  18: 0 -> 25 trueControlDependence
  19: 0 -> 27 trueControlDependence
  20: 0 -> 3 trueControlDependence
  21: 0 -> 4 trueControlDependence
  22: 0 -> 5 trueControlDependence
  23: 0 -> 6 trueControlDependence
  24: 0 -> 7 trueControlDependence
  25: 0 -> 8 trueControlDependence
  26: 0 -> 9 trueControlDependence
  27: 1 -> 3 loopIndependentDefUseDependence popup$0
  28: 1 -> 4 loopIndependentDefUseDependence popup$0
  29: 13 -> 10 loopIndependentDefUseDependence popup$0.!add
  30: 13 -> 17 outputDependence popup$0.!add
  31: 14 -> 19 declaration
  32: 14 -> 19 loopIndependentDefUseDependence redoMenuItem$2
  33: 14 -> 20 declaration
  34: 14 -> 20 loopIndependentDefUseDependence redoMenuItem$2
  35: 14 -> 21 declaration
  36: 14 -> 24 declaration
  37: 16 -> 17 loopIndependentDefUseDependence javax.swing.AbstractButton.action
  38: 16 -> 17 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
  39: 16 -> 17 loopIndependentDefUseDependence popup$0
  40: 17 -> 14 loopIndependentDefUseDependence popup$0.!add
  41: 17 -> 19 loopIndependentDefUseDependence popup$0.!add
  42: 17 -> 23 loopIndependentDefUseDependence popup$0
  43: 17 -> 25 outputDependence popup$0.!add
  44: 17 -> 27 loopIndependentDefUseDependence javax.swing.AbstractButton.action
  45: 17 -> 27 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
  46: 2 -> 12 declaration
  47: 2 -> 7 declaration
  48: 2 -> 7 loopIndependentDefUseDependence undoMenuItem$1
  49: 2 -> 8 declaration
  50: 2 -> 8 loopIndependentDefUseDependence undoMenuItem$1
  51: 2 -> 9 declaration
  52: 20 -> 21 loopIndependentDefUseDependence redoMenuItem$2
  53: 20 -> 21 loopIndependentDefUseDependence redoMenuItem$2.defaultIcon
  54: 20 -> 21 loopIndependentDefUseDependence redoMenuItem$2.disabledIcon
  55: 21 -> 18 loopIndependentDefUseDependence redoMenuItem$2.!setIcon
  56: 21 -> 24 loopIndependentDefUseDependence redoMenuItem$2
  57: 21 -> 27 loopIndependentDefUseDependence redoMenuItem$2.defaultIcon
  58: 21 -> 27 loopIndependentDefUseDependence redoMenuItem$2.disabledIcon
  59: 25 -> 22 loopIndependentDefUseDependence popup$0.!add
  60: 4 -> 5 loopIndependentDefUseDependence javax.swing.AbstractButton.action
  61: 4 -> 5 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
  62: 4 -> 5 loopIndependentDefUseDependence popup$0
  63: 5 -> 11 loopIndependentDefUseDependence popup$0
  64: 5 -> 13 outputDependence popup$0.!add
  65: 5 -> 15 loopIndependentDefUseDependence popup$0
  66: 5 -> 16 loopIndependentDefUseDependence javax.swing.AbstractButton.action
  67: 5 -> 16 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
  68: 5 -> 16 loopIndependentDefUseDependence popup$0
  69: 5 -> 2 loopIndependentDefUseDependence popup$0.!add
  70: 5 -> 7 loopIndependentDefUseDependence popup$0.!add
  71: 8 -> 9 loopIndependentDefUseDependence undoMenuItem$1
  72: 8 -> 9 loopIndependentDefUseDependence undoMenuItem$1.defaultIcon
  73: 8 -> 9 loopIndependentDefUseDependence undoMenuItem$1.disabledIcon
  74: 9 -> 12 loopIndependentDefUseDependence undoMenuItem$1
  75: 9 -> 27 loopIndependentDefUseDependence undoMenuItem$1.defaultIcon
  76: 9 -> 27 loopIndependentDefUseDependence undoMenuItem$1.disabledIcon
  77: 9 -> 6 loopIndependentDefUseDependence undoMenuItem$1.!setIcon
--
   0: getFileName( boolean )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 2 trueControlDependence
  10: 0 -> 3 trueControlDependence
  11: 0 -> 4 trueControlDependence
  12: 0 -> 42 trueControlDependence
  13: 0 -> 5 trueControlDependence
  14: 0 -> 6 trueControlDependence
  15: 0 -> 7 trueControlDependence
  16: 0 -> 8 trueControlDependence
  17: 0 -> 9 trueControlDependence
  18: 10 -> 12 loopIndependentDefUseDependence chooser$1
  19: 10 -> 13 loopIndependentDefUseDependence chooser$1
  20: 10 -> 42 loopIndependentDefUseDependence chooser$1.dialogTitle
  21: 10 -> 42 loopIndependentDefUseDependence java.awt.Dialog.title
  22: 10 -> 7 loopIndependentDefUseDependence chooser$1.!setDialogTitle
  23: 13 -> 14 loopIndependentDefUseDependence chooser$1
  24: 13 -> 14 loopIndependentDefUseDependence chooser$1.currentDirectory
  25: 14 -> 11 loopIndependentDefUseDependence chooser$1.!setCurrentDirectory
  26: 14 -> 18 loopIndependentDefUseDependence chooser$1
  27: 14 -> 19 loopIndependentDefUseDependence chooser$1
  28: 14 -> 22 loopIndependentDefUseDependence chooser$1
  29: 14 -> 23 loopIndependentDefUseDependence chooser$1
  30: 14 -> 33 loopIndependentDefUseDependence chooser$1.currentDirectory
  31: 14 -> 34 loopIndependentDefUseDependence chooser$1.currentDirectory
  32: 14 -> 42 loopIndependentDefUseDependence chooser$1.currentDirectory
  33: 15 -> 17 declaration
  34: 15 -> 17 outputDependence result$2
  35: 15 -> 21 declaration
  36: 15 -> 21 outputDependence result$2
  37: 15 -> 30 declaration
  38: 16 -> 18 trueControlDependence
  39: 16 -> 19 trueControlDependence
  40: 16 -> 20 trueControlDependence
  41: 16 -> 22 trueControlDependence
  42: 16 -> 23 falseControlDependence
  43: 16 -> 24 trueControlDependence
  44: 17 -> 30 loopIndependentDefUseDependence result$2
  45: 19 -> 1 exceptionCatch
  46: 19 -> 17 trueControlDependence
  47: 19 -> 20 loopIndependentDefUseDependence chooser$1
  48: 19 -> 20 loopIndependentDefUseDependence chooser$1.dialog
  49: 19 -> 20 loopIndependentDefUseDependence chooser$1.dialogType
  50: 19 -> 20 loopIndependentDefUseDependence chooser$1.returnValue
  51: 19 -> 26 trueControlDependence
  52: 19 -> 27 trueControlDependence
  53: 19 -> 28 trueControlDependence
  54: 19 -> 29 trueControlDependence
  55: 19 -> 30 trueControlDependence
  56: 2 -> 16 loopIndependentDefUseDependence open$0
  57: 20 -> 17 loopIndependentDefUseDependence chooser$1.!showOpenDialog
  58: 20 -> 27 loopIndependentDefUseDependence chooser$1
  59: 20 -> 28 loopIndependentDefUseDependence chooser$1
  60: 20 -> 32 loopIndependentDefUseDependence chooser$1
  61: 20 -> 33 loopIndependentDefUseDependence chooser$1
  62: 20 -> 42 loopIndependentDefUseDependence chooser$1.dialog
  63: 20 -> 42 loopIndependentDefUseDependence chooser$1.dialogType
  64: 20 -> 42 loopIndependentDefUseDependence chooser$1.returnValue
  65: 21 -> 30 loopIndependentDefUseDependence result$2
  66: 23 -> 1 exceptionCatch
  67: 23 -> 21 trueControlDependence
  68: 23 -> 24 loopIndependentDefUseDependence chooser$1
  69: 23 -> 24 loopIndependentDefUseDependence chooser$1.dialog
  70: 23 -> 24 loopIndependentDefUseDependence chooser$1.dialogType
  71: 23 -> 24 loopIndependentDefUseDependence chooser$1.returnValue
  72: 23 -> 26 trueControlDependence
  73: 23 -> 27 trueControlDependence
  74: 23 -> 28 trueControlDependence
  75: 23 -> 29 trueControlDependence
  76: 23 -> 30 trueControlDependence
  77: 24 -> 21 loopIndependentDefUseDependence chooser$1.!showSaveDialog
  78: 24 -> 27 loopIndependentDefUseDependence chooser$1
  79: 24 -> 28 loopIndependentDefUseDependence chooser$1
  80: 24 -> 32 loopIndependentDefUseDependence chooser$1
  81: 24 -> 33 loopIndependentDefUseDependence chooser$1
  82: 24 -> 42 loopIndependentDefUseDependence chooser$1.dialog
  83: 24 -> 42 loopIndependentDefUseDependence chooser$1.dialogType
  84: 24 -> 42 loopIndependentDefUseDependence chooser$1.returnValue
  85: 26 -> 30 declaration
  86: 26 -> 30 loopIndependentDefUseDependence file$3
  87: 26 -> 36 declaration
  88: 26 -> 36 loopIndependentDefUseDependence file$3
  89: 26 -> 37 declaration
  90: 26 -> 37 loopIndependentDefUseDependence file$3
  91: 29 -> 26 loopIndependentDefUseDependence chooser$1.!getSelectedFile
  92: 29 -> 30 loopIndependentDefUseDependence chooser$1.!getSelectedFile
  93: 29 -> 36 loopIndependentDefUseDependence chooser$1.!getSelectedFile
  94: 29 -> 37 loopIndependentDefUseDependence chooser$1.!getSelectedFile
  95: 3 -> 10 declaration
  96: 3 -> 12 declaration
  97: 3 -> 13 declaration
  98: 3 -> 14 declaration
  99: 3 -> 18 declaration
 100: 3 -> 19 declaration
 101: 3 -> 20 declaration
 102: 3 -> 22 declaration
 103: 3 -> 23 declaration
 104: 3 -> 24 declaration
 105: 3 -> 27 declaration
 106: 3 -> 28 declaration
 107: 3 -> 32 declaration
 108: 3 -> 33 declaration
 109: 3 -> 8 declaration
 110: 3 -> 8 loopIndependentDefUseDependence chooser$1
 111: 3 -> 9 declaration
 112: 3 -> 9 loopIndependentDefUseDependence chooser$1
 113: 30 -> 31 trueControlDependence
 114: 30 -> 32 trueControlDependence
 115: 30 -> 33 trueControlDependence
 116: 30 -> 34 trueControlDependence
 117: 30 -> 35 trueControlDependence
 118: 30 -> 36 trueControlDependence
 119: 30 -> 37 trueControlDependence
 120: 30 -> 38 trueControlDependence
 121: 30 -> 40 falseControlDependence
 122: 31 -> 42 loopIndependentDefUseDependence this.directory
 123: 34 -> 31 loopIndependentDefUseDependence chooser$1.!getCurrentDirectory
 124: 35 -> 40 fallThroughControlDependence
 125: 35 -> 42 loopIndependentDefUseDependence $_
 126: 38 -> 35 loopIndependentDefUseDependence file$3.!getPath
 127: 40 -> 42 loopIndependentDefUseDependence $_
 128: 5 -> 6 outputDependence chooser$1.accessibleContext
 129: 5 -> 6 outputDependence chooser$1.accessory
 130: 5 -> 6 outputDependence chooser$1.approveButtonMnemonic
 131: 5 -> 6 outputDependence chooser$1.approveButtonText
 132: 5 -> 6 outputDependence chooser$1.approveButtonToolTipText
 133: 5 -> 6 outputDependence chooser$1.controlsShown
 134: 5 -> 6 outputDependence chooser$1.currentDirectory
 135: 5 -> 6 outputDependence chooser$1.dialog
 136: 5 -> 6 outputDependence chooser$1.dialogTitle
 137: 5 -> 6 outputDependence chooser$1.dialogType
 138: 5 -> 6 outputDependence chooser$1.dragEnabled
 139: 5 -> 6 outputDependence chooser$1.fileFilter
 140: 5 -> 6 outputDependence chooser$1.fileSelectionMode
 141: 5 -> 6 outputDependence chooser$1.fileSystemView
 142: 5 -> 6 outputDependence chooser$1.fileView
 143: 5 -> 6 outputDependence chooser$1.filters
 144: 5 -> 6 outputDependence chooser$1.multiSelectionEnabled
 145: 5 -> 6 outputDependence chooser$1.returnValue
 146: 5 -> 6 outputDependence chooser$1.selectedFile
 147: 5 -> 6 outputDependence chooser$1.showFilesListener
 148: 5 -> 6 outputDependence chooser$1.useAcceptAllFileFilter
 149: 5 -> 6 outputDependence chooser$1.useFileHiding
 150: 6 -> 10 loopIndependentDefUseDependence chooser$1.dialog
 151: 6 -> 13 loopIndependentDefUseDependence chooser$1.currentDirectory
 152: 6 -> 13 loopIndependentDefUseDependence chooser$1.fileSystemView
 153: 6 -> 14 loopIndependentDefUseDependence chooser$1.fileSystemView
 154: 6 -> 19 loopIndependentDefUseDependence chooser$1.dialog
 155: 6 -> 19 loopIndependentDefUseDependence chooser$1.dialogType
 156: 6 -> 19 loopIndependentDefUseDependence chooser$1.returnValue
 157: 6 -> 23 loopIndependentDefUseDependence chooser$1.dialog
 158: 6 -> 23 loopIndependentDefUseDependence chooser$1.dialogType
 159: 6 -> 23 loopIndependentDefUseDependence chooser$1.returnValue
 160: 6 -> 28 loopIndependentDefUseDependence chooser$1.selectedFile
 161: 6 -> 29 loopIndependentDefUseDependence chooser$1.selectedFile
 162: 6 -> 3 loopIndependentDefUseDependence chooser$1.!JFileChooser
 163: 6 -> 42 loopIndependentDefUseDependence chooser$1.accessibleContext
 164: 6 -> 42 loopIndependentDefUseDependence chooser$1.accessory
 165: 6 -> 42 loopIndependentDefUseDependence chooser$1.approveButtonMnemonic
 166: 6 -> 42 loopIndependentDefUseDependence chooser$1.approveButtonText
 167: 6 -> 42 loopIndependentDefUseDependence chooser$1.approveButtonToolTipText
 168: 6 -> 42 loopIndependentDefUseDependence chooser$1.controlsShown
 169: 6 -> 42 loopIndependentDefUseDependence chooser$1.dragEnabled
 170: 6 -> 42 loopIndependentDefUseDependence chooser$1.fileFilter
 171: 6 -> 42 loopIndependentDefUseDependence chooser$1.fileSelectionMode
 172: 6 -> 42 loopIndependentDefUseDependence chooser$1.fileSystemView
 173: 6 -> 42 loopIndependentDefUseDependence chooser$1.fileView
 174: 6 -> 42 loopIndependentDefUseDependence chooser$1.filters
 175: 6 -> 42 loopIndependentDefUseDependence chooser$1.multiSelectionEnabled
 176: 6 -> 42 loopIndependentDefUseDependence chooser$1.selectedFile
 177: 6 -> 42 loopIndependentDefUseDependence chooser$1.showFilesListener
 178: 6 -> 42 loopIndependentDefUseDependence chooser$1.useAcceptAllFileFilter
 179: 6 -> 42 loopIndependentDefUseDependence chooser$1.useFileHiding
 180: 6 -> 9 loopIndependentDefUseDependence chooser$1.dialog
 181: 6 -> 9 loopIndependentDefUseDependence chooser$1.dialogTitle
 182: 9 -> 10 loopIndependentDefUseDependence chooser$1
 183: 9 -> 10 loopIndependentDefUseDependence chooser$1.dialogTitle
 184: 9 -> 10 loopIndependentDefUseDependence java.awt.Dialog.title
--
   0: DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 23 trueControlDependence
  17: 0 -> 24 trueControlDependence
  18: 0 -> 25 trueControlDependence
  19: 0 -> 26 trueControlDependence
  20: 0 -> 27 trueControlDependence
  21: 0 -> 28 trueControlDependence
  22: 0 -> 29 trueControlDependence
  23: 0 -> 3 trueControlDependence
  24: 0 -> 30 trueControlDependence
  25: 0 -> 31 trueControlDependence
  26: 0 -> 32 trueControlDependence
  27: 0 -> 33 trueControlDependence
  28: 0 -> 34 trueControlDependence
  29: 0 -> 35 trueControlDependence
  30: 0 -> 36 trueControlDependence
  31: 0 -> 37 trueControlDependence
  32: 0 -> 38 trueControlDependence
  33: 0 -> 39 trueControlDependence
  34: 0 -> 4 trueControlDependence
  35: 0 -> 40 trueControlDependence
  36: 0 -> 41 trueControlDependence
  37: 0 -> 42 trueControlDependence
  38: 0 -> 43 trueControlDependence
  39: 0 -> 44 trueControlDependence
  40: 0 -> 46 trueControlDependence
  41: 0 -> 5 trueControlDependence
  42: 0 -> 6 trueControlDependence
  43: 0 -> 7 trueControlDependence
  44: 0 -> 8 trueControlDependence
  45: 0 -> 9 trueControlDependence
  46: 1 -> 3 loopIndependentDefUseDependence tool$0
  47: 11 -> 13 loopIndependentDefUseDependence this.copyAction
  48: 11 -> 13 loopIndependentDefUseDependence this.cutAction
  49: 11 -> 13 loopIndependentDefUseDependence this.deleteAction
  50: 11 -> 13 loopIndependentDefUseDependence this.fileListMenu
  51: 11 -> 13 loopIndependentDefUseDependence this.fileListener
  52: 11 -> 13 loopIndependentDefUseDependence this.newAction
  53: 11 -> 13 loopIndependentDefUseDependence this.openAction
  54: 11 -> 13 loopIndependentDefUseDependence this.pasteAction
  55: 11 -> 13 loopIndependentDefUseDependence this.redoAction
  56: 11 -> 13 loopIndependentDefUseDependence this.saveAction
  57: 11 -> 13 loopIndependentDefUseDependence this.undoAction
  58: 11 -> 13 loopIndependentDefUseDependence this.windowListener
  59: 13 -> 24 loopIndependentDefUseDependence this.copyAction
  60: 13 -> 24 loopIndependentDefUseDependence this.cutAction
  61: 13 -> 24 loopIndependentDefUseDependence this.newAction
  62: 13 -> 24 loopIndependentDefUseDependence this.openAction
  63: 13 -> 24 loopIndependentDefUseDependence this.pasteAction
  64: 13 -> 24 loopIndependentDefUseDependence this.redoAction
  65: 13 -> 24 loopIndependentDefUseDependence this.saveAction
  66: 13 -> 24 loopIndependentDefUseDependence this.undoAction
  67: 13 -> 26 loopIndependentDefUseDependence this.copyAction
  68: 13 -> 26 loopIndependentDefUseDependence this.cutAction
  69: 13 -> 26 loopIndependentDefUseDependence this.newAction
  70: 13 -> 26 loopIndependentDefUseDependence this.openAction
  71: 13 -> 26 loopIndependentDefUseDependence this.pasteAction
  72: 13 -> 26 loopIndependentDefUseDependence this.redoAction
  73: 13 -> 26 loopIndependentDefUseDependence this.saveAction
  74: 13 -> 26 loopIndependentDefUseDependence this.undoAction
  75: 13 -> 46 loopIndependentDefUseDependence this.copyAction
  76: 13 -> 46 loopIndependentDefUseDependence this.cutAction
  77: 13 -> 46 loopIndependentDefUseDependence this.deleteAction
  78: 13 -> 46 loopIndependentDefUseDependence this.fileListMenu
  79: 13 -> 46 loopIndependentDefUseDependence this.fileListener
  80: 13 -> 46 loopIndependentDefUseDependence this.newAction
  81: 13 -> 46 loopIndependentDefUseDependence this.openAction
  82: 13 -> 46 loopIndependentDefUseDependence this.pasteAction
  83: 13 -> 46 loopIndependentDefUseDependence this.redoAction
  84: 13 -> 46 loopIndependentDefUseDependence this.saveAction
  85: 13 -> 46 loopIndependentDefUseDependence this.undoAction
  86: 13 -> 46 loopIndependentDefUseDependence this.windowListener
  87: 13 -> 9 loopIndependentDefUseDependence this.!initMenuBar
  88: 14 -> 19 loopIndependentDefUseDependence this.toolBar
  89: 14 -> 20 loopIndependentDefUseDependence this.toolBar
  90: 17 -> 14 loopIndependentDefUseDependence this.toolBar.!JToolBar
  91: 2 -> 39 loopIndependentDefUseDependence tabbedCanvas$1
  92: 2 -> 4 loopIndependentDefUseDependence tabbedCanvas$1
  93: 20 -> 21 loopIndependentDefUseDependence this.toolBar
  94: 20 -> 21 loopIndependentDefUseDependence this.toolBar.floatable
  95: 21 -> 18 loopIndependentDefUseDependence this.toolBar.!setFloatable
  96: 21 -> 25 loopIndependentDefUseDependence this.toolBar
  97: 21 -> 46 loopIndependentDefUseDependence this.toolBar
  98: 21 -> 46 loopIndependentDefUseDependence this.toolBar.floatable
  99: 25 -> 26 summary
 100: 26 -> 22 loopIndependentDefUseDependence this.!initToolBar
 101: 27 -> 46 loopIndependentDefUseDependence this.directory
 102: 29 -> 30 loopIndependentDefUseDependence this.directory.path
 103: 29 -> 30 outputDependence this.directory.prefixLength
 104: 29 -> 30 outputDependence this.directory.status
 105: 3 -> 46 loopIndependentDefUseDependence this.tool
 106: 30 -> 27 loopIndependentDefUseDependence this.directory.!File
 107: 30 -> 46 loopIndependentDefUseDependence this.directory.path
 108: 30 -> 46 loopIndependentDefUseDependence this.directory.prefixLength
 109: 30 -> 46 loopIndependentDefUseDependence this.directory.status
 110: 31 -> 46 loopIndependentDefUseDependence this.recentFiles
 111: 33 -> 34 outputDependence java.util.AbstractList.modCount
 112: 33 -> 34 outputDependence this.recentFiles.elementData
 113: 34 -> 31 loopIndependentDefUseDependence this.recentFiles.!ArrayList<String>
 114: 34 -> 46 loopIndependentDefUseDependence java.util.AbstractList.modCount
 115: 34 -> 46 loopIndependentDefUseDependence this.recentFiles.elementData
 116: 35 -> 46 loopIndependentDefUseDependence this.clipboard
 117: 36 -> 42 loopIndependentDefUseDependence this.autoSave
 118: 36 -> 43 loopIndependentDefUseDependence this.autoSave
 119: 38 -> 40 loopIndependentDefUseDependence this.autoSave.tabbedCanvas
 120: 39 -> 40 summary
 121: 4 -> 39 loopIndependentDefUseDependence this.tabbedCanvas
 122: 4 -> 46 loopIndependentDefUseDependence this.tabbedCanvas
 123: 40 -> 36 loopIndependentDefUseDependence this.autoSave.!AutoSave
 124: 40 -> 46 loopIndependentDefUseDependence this.autoSave.tabbedCanvas
 125: 43 -> 44 loopIndependentDefUseDependence this.autoSave
 126: 43 -> 44 loopIndependentDefUseDependence this.autoSaveGroup.nUnstartedThreads
 127: 43 -> 44 loopIndependentDefUseDependence this.autoSaveGroup.nthreads
 128: 43 -> 44 loopIndependentDefUseDependence this.autoSaveGroup.threads
 129: 44 -> 41 loopIndependentDefUseDependence this.autoSave.!start
 130: 44 -> 46 loopIndependentDefUseDependence this.autoSave
 131: 44 -> 46 loopIndependentDefUseDependence this.autoSaveGroup.nUnstartedThreads
 132: 44 -> 46 loopIndependentDefUseDependence this.autoSaveGroup.nthreads
 133: 44 -> 46 loopIndependentDefUseDependence this.autoSaveGroup.threads
 134: 5 -> 12 loopIndependentDefUseDependence this.menuBar
 135: 5 -> 46 loopIndependentDefUseDependence this.menuBar
 136: 7 -> 8 loopIndependentDefUseDependence java.awt.Component.focusTraversalKeysEnabled
 137: 7 -> 8 loopIndependentDefUseDependence this.menuBar.selectionModel
 138: 7 -> 8 outputDependence javax.swing.DefaultSingleSelectionModel.changeEvent
 139: 7 -> 8 outputDependence javax.swing.DefaultSingleSelectionModel.index
 140: 7 -> 8 outputDependence javax.swing.DefaultSingleSelectionModel.listenerList
 141: 7 -> 8 outputDependence javax.swing.JComponent.inputVerifier
 142: 7 -> 8 outputDependence javax.swing.JComponent.listenerList
 143: 7 -> 8 outputDependence javax.swing.JComponent.revalidateRunnableScheduled
 144: 7 -> 8 outputDependence javax.swing.JComponent.verifyInputWhenFocusTarget
 145: 7 -> 8 outputDependence this.menuBar.margin
 146: 7 -> 8 outputDependence this.menuBar.paintBorder
 147: 8 -> 20 loopIndependentDefUseDependence javax.swing.JComponent.revalidateRunnableScheduled
 148: 8 -> 21 loopIndependentDefUseDependence javax.swing.JComponent.revalidateRunnableScheduled
 149: 8 -> 46 loopIndependentDefUseDependence java.awt.Component.focusTraversalKeysEnabled
 150: 8 -> 46 loopIndependentDefUseDependence javax.swing.DefaultSingleSelectionModel.changeEvent
 151: 8 -> 46 loopIndependentDefUseDependence javax.swing.DefaultSingleSelectionModel.index
 152: 8 -> 46 loopIndependentDefUseDependence javax.swing.DefaultSingleSelectionModel.listenerList
 153: 8 -> 46 loopIndependentDefUseDependence javax.swing.JComponent.inputVerifier
 154: 8 -> 46 loopIndependentDefUseDependence javax.swing.JComponent.listenerList
 155: 8 -> 46 loopIndependentDefUseDependence javax.swing.JComponent.revalidateRunnableScheduled
 156: 8 -> 46 loopIndependentDefUseDependence javax.swing.JComponent.verifyInputWhenFocusTarget
 157: 8 -> 46 loopIndependentDefUseDependence this.menuBar.margin
 158: 8 -> 46 loopIndependentDefUseDependence this.menuBar.paintBorder
 159: 8 -> 46 loopIndependentDefUseDependence this.menuBar.selectionModel
 160: 8 -> 5 loopIndependentDefUseDependence this.menuBar.!JMenuBar
--
   0: tool
   1: 0 -> 1 trueControlDependence
--
   0: updateEditState( boolean )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 2 trueControlDependence
   4: 0 -> 20 trueControlDependence
   5: 0 -> 21 trueControlDependence
   6: 0 -> 22 trueControlDependence
   7: 0 -> 23 trueControlDependence
   8: 0 -> 25 trueControlDependence
   9: 0 -> 3 trueControlDependence
  10: 0 -> 4 trueControlDependence
  11: 0 -> 5 trueControlDependence
  12: 0 -> 6 trueControlDependence
  13: 0 -> 7 trueControlDependence
  14: 0 -> 8 trueControlDependence
  15: 0 -> 9 trueControlDependence
  16: 1 -> 22 loopIndependentDefUseDependence grabbed$0
  17: 1 -> 4 loopIndependentDefUseDependence grabbed$0
  18: 1 -> 8 loopIndependentDefUseDependence grabbed$0
  19: 10 -> 11 trueControlDependence
  20: 10 -> 12 trueControlDependence
  21: 10 -> 13 trueControlDependence
  22: 10 -> 14 trueControlDependence
  23: 10 -> 15 falseControlDependence
  24: 10 -> 16 trueControlDependence
  25: 10 -> 17 falseControlDependence
  26: 10 -> 18 trueControlDependence
  27: 14 -> 11 loopIndependentDefUseDependence this.pasteAction.!setEnabled
  28: 18 -> 15 loopIndependentDefUseDependence this.pasteAction.!setEnabled
  29: 23 -> 20 loopIndependentDefUseDependence this.deleteAction.!setEnabled
  30: 5 -> 2 loopIndependentDefUseDependence this.cutAction.!setEnabled
  31: 9 -> 6 loopIndependentDefUseDependence this.copyAction.!setEnabled
--
   0: recentFiles
   1: 0 -> 1 trueControlDependence
--
   0: cutAction
   1: 0 -> 1 trueControlDependence
--
   0: undoAction
   1: 0 -> 1 trueControlDependence
--
   0: saveTempFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 18 trueControlDependence
  10: 0 -> 2 trueControlDependence
  11: 0 -> 3 trueControlDependence
  12: 0 -> 4 trueControlDependence
  13: 0 -> 5 trueControlDependence
  14: 0 -> 6 trueControlDependence
  15: 0 -> 7 trueControlDependence
  16: 0 -> 8 trueControlDependence
  17: 0 -> 9 trueControlDependence
  18: 1 -> 11 loopIndependentDefUseDependence canvas$0
  19: 1 -> 4 loopIndependentDefUseDependence canvas$0
  20: 13 -> 10 loopIndependentDefUseDependence canvas$0.!getFigureManager
  21: 13 -> 14 loopIndependentDefUseDependence canvas$0.!getFigureManager
  22: 14 -> 16 loopIndependentDefUseDependence canvas$0.!getFigureManager
  23: 15 -> 16 summary
  24: 16 -> 9 loopIndependentDefUseDependence canvas$0.!getFigureManager.!store
  25: 2 -> 15 declaration
  26: 2 -> 15 loopIndependentDefUseDependence tempName$1
  27: 6 -> 13 outputDependence canvas$0.!getFigureManager
  28: 6 -> 3 loopIndependentDefUseDependence canvas$0.!getFigureManager
  29: 8 -> 2 loopIndependentDefUseDependence canvas$0.!getFigureManager.!getFilename
  30: 9 -> 18 loopIndependentDefUseDependence $_
--
   0: deleteAction
   1: 0 -> 1 trueControlDependence
--
   0: closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 0 -> 4 trueControlDependence
   5: 0 -> 46 trueControlDependence
   6: 0 -> 5 trueControlDependence
   7: 0 -> 6 trueControlDependence
   8: 10 -> 22 outputDependence this.!showConfirmDialog
   9: 10 -> 7 loopIndependentDefUseDependence this.!showConfirmDialog
  10: 11 -> 12 trueControlDependence
  11: 11 -> 13 falseControlDependence
  12: 12 -> 13 fallThroughControlDependence
  13: 12 -> 30 trueControlDependence
  14: 12 -> 31 trueControlDependence
  15: 12 -> 32 trueControlDependence
  16: 12 -> 33 trueControlDependence
  17: 12 -> 34 trueControlDependence
  18: 12 -> 35 trueControlDependence
  19: 12 -> 36 trueControlDependence
  20: 12 -> 37 trueControlDependence
  21: 12 -> 38 trueControlDependence
  22: 12 -> 44 outputDependence $_
  23: 12 -> 44 trueControlDependence
  24: 13 -> 15 trueControlDependence
  25: 13 -> 16 trueControlDependence
  26: 13 -> 17 trueControlDependence
  27: 13 -> 18 trueControlDependence
  28: 13 -> 30 falseControlDependence
  29: 13 -> 31 trueControlDependence
  30: 13 -> 32 falseControlDependence
  31: 13 -> 33 trueControlDependence
  32: 13 -> 34 trueControlDependence
  33: 13 -> 35 falseControlDependence
  34: 13 -> 36 trueControlDependence
  35: 13 -> 37 falseControlDependence
  36: 13 -> 38 trueControlDependence
  37: 13 -> 44 falseControlDependence
  38: 14 -> 20 trueControlDependence
  39: 14 -> 21 trueControlDependence
  40: 14 -> 22 trueControlDependence
  41: 14 -> 30 falseControlDependence
  42: 14 -> 31 trueControlDependence
  43: 14 -> 32 falseControlDependence
  44: 14 -> 33 trueControlDependence
  45: 14 -> 34 trueControlDependence
  46: 14 -> 35 falseControlDependence
  47: 14 -> 36 trueControlDependence
  48: 14 -> 37 falseControlDependence
  49: 14 -> 38 trueControlDependence
  50: 14 -> 44 falseControlDependence
  51: 16 -> 1 exceptionCatch
  52: 16 -> 14 trueControlDependence
  53: 18 -> 14 loopIndependentDefUseDependence this.!saveFile
  54: 19 -> 23 declaration
  55: 19 -> 23 loopIndependentDefUseDependence result2$2
  56: 2 -> 17 loopIndependentDefUseDependence canvas$0
  57: 2 -> 33 loopIndependentDefUseDependence canvas$0
  58: 2 -> 4 loopIndependentDefUseDependence canvas$0
  59: 21 -> 1 exceptionCatch
  60: 21 -> 19 trueControlDependence
  61: 21 -> 23 trueControlDependence
  62: 22 -> 19 loopIndependentDefUseDependence this.!showConfirmDialog
  63: 23 -> 24 trueControlDependence
  64: 23 -> 30 falseControlDependence
  65: 23 -> 31 trueControlDependence
  66: 23 -> 32 falseControlDependence
  67: 23 -> 33 trueControlDependence
  68: 23 -> 34 trueControlDependence
  69: 23 -> 35 falseControlDependence
  70: 23 -> 36 trueControlDependence
  71: 23 -> 37 falseControlDependence
  72: 23 -> 38 trueControlDependence
  73: 23 -> 44 falseControlDependence
  74: 24 -> 30 fallThroughControlDependence
  75: 24 -> 31 trueControlDependence
  76: 24 -> 32 fallThroughControlDependence
  77: 24 -> 33 trueControlDependence
  78: 24 -> 34 trueControlDependence
  79: 24 -> 35 fallThroughControlDependence
  80: 24 -> 36 trueControlDependence
  81: 24 -> 37 fallThroughControlDependence
  82: 24 -> 38 trueControlDependence
  83: 24 -> 44 fallThroughControlDependence
  84: 24 -> 46 loopIndependentDefUseDependence $_
  85: 3 -> 10 trueControlDependence
  86: 3 -> 30 falseControlDependence
  87: 3 -> 31 trueControlDependence
  88: 3 -> 32 falseControlDependence
  89: 3 -> 33 trueControlDependence
  90: 3 -> 34 trueControlDependence
  91: 3 -> 35 falseControlDependence
  92: 3 -> 36 trueControlDependence
  93: 3 -> 37 falseControlDependence
  94: 3 -> 38 trueControlDependence
  95: 3 -> 44 falseControlDependence
  96: 3 -> 8 trueControlDependence
  97: 3 -> 9 trueControlDependence
  98: 32 -> 34 loopIndependentDefUseDependence this.tabbedCanvas
  99: 32 -> 34 loopIndependentDefUseDependence this.tabbedCanvas.selectedTab
 100: 34 -> 30 loopIndependentDefUseDependence this.tabbedCanvas.!closeTab
 101: 34 -> 36 loopIndependentDefUseDependence this.tabbedCanvas
 102: 34 -> 46 loopIndependentDefUseDependence this.tabbedCanvas
 103: 34 -> 46 loopIndependentDefUseDependence this.tabbedCanvas.selectedTab
 104: 35 -> 39 trueControlDependence
 105: 35 -> 40 trueControlDependence
 106: 35 -> 41 trueControlDependence
 107: 35 -> 42 trueControlDependence
 108: 38 -> 35 loopIndependentDefUseDependence this.tabbedCanvas.!getOpenFileNum
 109: 42 -> 39 loopIndependentDefUseDependence this.tool.!terminate
 110: 44 -> 46 loopIndependentDefUseDependence $_
 111: 6 -> 3 loopIndependentDefUseDependence canvas$0.!hasChanged
 112: 7 -> 11 declaration
 113: 7 -> 11 loopIndependentDefUseDependence result$1
 114: 7 -> 13 declaration
 115: 7 -> 13 loopIndependentDefUseDependence result$1
 116: 9 -> 1 exceptionCatch
 117: 9 -> 11 trueControlDependence
 118: 9 -> 7 trueControlDependence
--
   0: newAction
   1: 0 -> 1 trueControlDependence
--
   0: newFile( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 3 trueControlDependence
   3: 0 -> 4 trueControlDependence
   4: 0 -> 41 trueControlDependence
   5: 0 -> 5 trueControlDependence
   6: 0 -> 6 trueControlDependence
   7: 10 -> 16 trueControlDependence
   8: 10 -> 17 trueControlDependence
   9: 10 -> 18 trueControlDependence
  10: 10 -> 21 falseControlDependence
  11: 10 -> 22 trueControlDependence
  12: 10 -> 23 falseControlDependence
  13: 10 -> 24 trueControlDependence
  14: 10 -> 25 trueControlDependence
  15: 10 -> 26 falseControlDependence
  16: 10 -> 27 trueControlDependence
  17: 10 -> 28 falseControlDependence
  18: 10 -> 29 trueControlDependence
  19: 10 -> 30 trueControlDependence
  20: 10 -> 31 falseControlDependence
  21: 10 -> 32 trueControlDependence
  22: 10 -> 33 falseControlDependence
  23: 10 -> 34 trueControlDependence
  24: 10 -> 35 falseControlDependence
  25: 10 -> 36 trueControlDependence
  26: 10 -> 37 falseControlDependence
  27: 10 -> 38 trueControlDependence
  28: 10 -> 39 falseControlDependence
  29: 13 -> 14 summary
  30: 14 -> 10 loopIndependentDefUseDependence this.!fileExists
  31: 17 -> 1 exceptionCatch
  32: 17 -> 15 trueControlDependence
  33: 17 -> 19 trueControlDependence
  34: 18 -> 15 loopIndependentDefUseDependence this.!showMessageDialog
  35: 19 -> 21 fallThroughControlDependence
  36: 19 -> 22 trueControlDependence
  37: 19 -> 23 fallThroughControlDependence
  38: 19 -> 24 trueControlDependence
  39: 19 -> 25 trueControlDependence
  40: 19 -> 26 fallThroughControlDependence
  41: 19 -> 27 trueControlDependence
  42: 19 -> 28 fallThroughControlDependence
  43: 19 -> 29 trueControlDependence
  44: 19 -> 30 trueControlDependence
  45: 19 -> 31 fallThroughControlDependence
  46: 19 -> 32 trueControlDependence
  47: 19 -> 33 fallThroughControlDependence
  48: 19 -> 34 trueControlDependence
  49: 19 -> 35 fallThroughControlDependence
  50: 19 -> 36 trueControlDependence
  51: 19 -> 37 fallThroughControlDependence
  52: 19 -> 38 trueControlDependence
  53: 19 -> 39 fallThroughControlDependence
  54: 19 -> 41 loopIndependentDefUseDependence $_
  55: 2 -> 13 declaration
  56: 2 -> 13 loopIndependentDefUseDependence filename$0
  57: 2 -> 17 declaration
  58: 2 -> 17 loopIndependentDefUseDependence filename$0
  59: 2 -> 24 declaration
  60: 2 -> 24 loopIndependentDefUseDependence filename$0
  61: 2 -> 29 declaration
  62: 2 -> 29 loopIndependentDefUseDependence filename$0
  63: 2 -> 33 declaration
  64: 2 -> 33 loopIndependentDefUseDependence filename$0
  65: 2 -> 7 declaration
  66: 2 -> 7 loopIndependentDefUseDependence filename$0
  67: 21 -> 36 declaration
  68: 21 -> 36 loopIndependentDefUseDependence canvas$1
  69: 21 -> 37 declaration
  70: 21 -> 37 loopIndependentDefUseDependence canvas$1
  71: 23 -> 25 loopIndependentDefUseDependence this.tabbedCanvas.selectedTab
  72: 24 -> 25 summary
  73: 25 -> 21 loopIndependentDefUseDependence this.tabbedCanvas.!openTab
  74: 25 -> 36 loopIndependentDefUseDependence this.tabbedCanvas.!openTab
  75: 25 -> 37 loopIndependentDefUseDependence this.tabbedCanvas.!openTab
  76: 25 -> 41 loopIndependentDefUseDependence this.tabbedCanvas.selectedTab
  77: 30 -> 26 loopIndependentDefUseDependence this.!addRecentFile
  78: 33 -> 34 loopIndependentDefUseDependence this.tool
  79: 33 -> 34 loopIndependentDefUseDependence this.tool.title
  80: 34 -> 31 loopIndependentDefUseDependence this.tool.!setTitle
  81: 34 -> 41 loopIndependentDefUseDependence this.tool
  82: 34 -> 41 loopIndependentDefUseDependence this.tool.title
  83: 38 -> 35 loopIndependentDefUseDependence canvas$1.!repaint
  84: 39 -> 41 loopIndependentDefUseDependence $_
  85: 4 -> 1 exceptionCatch
  86: 4 -> 2 trueControlDependence
  87: 4 -> 6 loopIndependentDefUseDependence this.directory
  88: 4 -> 7 trueControlDependence
  89: 6 -> 13 loopIndependentDefUseDependence this.!getFileName
  90: 6 -> 17 loopIndependentDefUseDependence this.!getFileName
  91: 6 -> 2 loopIndependentDefUseDependence this.!getFileName
  92: 6 -> 24 loopIndependentDefUseDependence this.!getFileName
  93: 6 -> 29 loopIndependentDefUseDependence this.!getFileName
  94: 6 -> 33 loopIndependentDefUseDependence this.!getFileName
  95: 6 -> 41 loopIndependentDefUseDependence this.directory
  96: 6 -> 7 loopIndependentDefUseDependence this.!getFileName
  97: 7 -> 10 falseControlDependence
  98: 7 -> 11 trueControlDependence
  99: 7 -> 12 falseControlDependence
 100: 7 -> 13 trueControlDependence
 101: 7 -> 14 trueControlDependence
 102: 7 -> 8 trueControlDependence
 103: 8 -> 10 fallThroughControlDependence
 104: 8 -> 11 trueControlDependence
 105: 8 -> 12 fallThroughControlDependence
 106: 8 -> 13 trueControlDependence
 107: 8 -> 14 trueControlDependence
 108: 8 -> 41 loopIndependentDefUseDependence $_
--
   0: windowListener
   1: 0 -> 1 trueControlDependence
--
   0: saveAsFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 35 trueControlDependence
   4: 0 -> 4 trueControlDependence
   5: 0 -> 5 trueControlDependence
   6: 0 -> 6 trueControlDependence
   7: 0 -> 7 trueControlDependence
   8: 11 -> 17 trueControlDependence
   9: 11 -> 18 trueControlDependence
  10: 11 -> 19 trueControlDependence
  11: 11 -> 20 trueControlDependence
  12: 11 -> 21 trueControlDependence
  13: 11 -> 22 trueControlDependence
  14: 11 -> 23 trueControlDependence
  15: 11 -> 24 trueControlDependence
  16: 11 -> 25 trueControlDependence
  17: 11 -> 26 trueControlDependence
  18: 11 -> 27 trueControlDependence
  19: 11 -> 28 trueControlDependence
  20: 11 -> 29 trueControlDependence
  21: 11 -> 30 trueControlDependence
  22: 11 -> 31 trueControlDependence
  23: 11 -> 33 falseControlDependence
  24: 13 -> 1 exceptionCatch
  25: 13 -> 11 trueControlDependence
  26: 16 -> 11 loopIndependentDefUseDependence this.!saveFile
  27: 19 -> 21 loopIndependentDefUseDependence this.tabbedCanvas
  28: 2 -> 14 loopIndependentDefUseDependence canvas$0
  29: 2 -> 20 loopIndependentDefUseDependence canvas$0
  30: 21 -> 17 loopIndependentDefUseDependence this.tabbedCanvas.!updateTab
  31: 21 -> 35 loopIndependentDefUseDependence this.tabbedCanvas
  32: 26 -> 22 loopIndependentDefUseDependence this.!addRecentFile
  33: 29 -> 30 loopIndependentDefUseDependence this.tool
  34: 29 -> 30 loopIndependentDefUseDependence this.tool.title
  35: 3 -> 15 declaration
  36: 3 -> 15 loopIndependentDefUseDependence filename$1
  37: 3 -> 25 declaration
  38: 3 -> 25 loopIndependentDefUseDependence filename$1
  39: 3 -> 29 declaration
  40: 3 -> 29 loopIndependentDefUseDependence filename$1
  41: 3 -> 8 declaration
  42: 3 -> 8 loopIndependentDefUseDependence filename$1
  43: 30 -> 27 loopIndependentDefUseDependence this.tool.!setTitle
  44: 30 -> 35 loopIndependentDefUseDependence this.tool
  45: 30 -> 35 loopIndependentDefUseDependence this.tool.title
  46: 31 -> 33 fallThroughControlDependence
  47: 31 -> 35 loopIndependentDefUseDependence $_
  48: 33 -> 35 loopIndependentDefUseDependence $_
  49: 5 -> 1 exceptionCatch
  50: 5 -> 3 trueControlDependence
  51: 5 -> 7 loopIndependentDefUseDependence this.directory
  52: 5 -> 8 trueControlDependence
  53: 7 -> 15 loopIndependentDefUseDependence this.!getFileName
  54: 7 -> 25 loopIndependentDefUseDependence this.!getFileName
  55: 7 -> 29 loopIndependentDefUseDependence this.!getFileName
  56: 7 -> 3 loopIndependentDefUseDependence this.!getFileName
  57: 7 -> 35 loopIndependentDefUseDependence this.directory
  58: 7 -> 8 loopIndependentDefUseDependence this.!getFileName
  59: 8 -> 12 trueControlDependence
  60: 8 -> 13 falseControlDependence
  61: 8 -> 14 trueControlDependence
  62: 8 -> 15 trueControlDependence
  63: 8 -> 16 trueControlDependence
  64: 8 -> 9 trueControlDependence
  65: 9 -> 12 trueControlDependence
  66: 9 -> 13 fallThroughControlDependence
  67: 9 -> 14 trueControlDependence
  68: 9 -> 15 trueControlDependence
  69: 9 -> 16 trueControlDependence
  70: 9 -> 35 loopIndependentDefUseDependence $_
--
   0: menuBar
   1: 0 -> 1 trueControlDependence
--
   0: getToolBar( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 3 trueControlDependence
   3: 1 -> 3 loopIndependentDefUseDependence $_
--
   0: closeAllFiles( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 14 trueControlDependence
   3: 0 -> 2 trueControlDependence
   4: 0 -> 3 trueControlDependence
   5: 0 -> 4 trueControlDependence
   6: 0 -> 5 trueControlDependence
   7: 10 -> 10 defOrderDependence this.!closeFile
   8: 10 -> 14 loopIndependentDefUseDependence this.tabbedCanvas
   9: 10 -> 14 loopIndependentDefUseDependence this.tabbedCanvas.selectedTab
  10: 10 -> 6 loopIndependentDefUseDependence this.!closeFile
  11: 10 -> 8 loopCarriedDefUseDependence this.tabbedCanvas 2
  12: 10 -> 8 loopCarriedDefUseDependence this.tabbedCanvas.selectedTab 2
  13: 11 -> 2 fallThroughControlDependence
  14: 2 -> 10 trueControlDependence
  15: 2 -> 7 trueControlDependence
  16: 2 -> 8 trueControlDependence
  17: 2 -> 9 trueControlDependence
  18: 5 -> 2 loopIndependentDefUseDependence this.tabbedCanvas.!getAllCanvases
  19: 6 -> 11 trueControlDependence
  20: 6 -> 2 falseControlDependence
  21: 8 -> 1 exceptionCatch
  22: 8 -> 10 loopIndependentDefUseDependence this.tabbedCanvas
  23: 8 -> 10 loopIndependentDefUseDependence this.tabbedCanvas.selectedTab
  24: 8 -> 6 trueControlDependence
--
   0: redoAction
   1: 0 -> 1 trueControlDependence
--
   0: getMenuBar( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 3 trueControlDependence
   3: 1 -> 3 loopIndependentDefUseDependence $_
--
   0: openFile( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 17 trueControlDependence
   3: 0 -> 2 trueControlDependence
   4: 0 -> 4 trueControlDependence
   5: 0 -> 5 trueControlDependence
   6: 0 -> 6 trueControlDependence
   7: 0 -> 7 trueControlDependence
   8: 11 -> 17 loopIndependentDefUseDependence $_
   9: 13 -> 1 exceptionCatch
  10: 13 -> 11 trueControlDependence
  11: 13 -> 15 loopIndependentDefUseDependence this.tabbedCanvas.selectedTab
  12: 13 -> 15 loopIndependentDefUseDependence this.tool
  13: 13 -> 2 exceptionCatch
  14: 14 -> 15 summary
  15: 15 -> 11 loopIndependentDefUseDependence this.!openFile
  16: 15 -> 17 loopIndependentDefUseDependence this.tabbedCanvas.selectedTab
  17: 15 -> 17 loopIndependentDefUseDependence this.tool
  18: 3 -> 14 declaration
  19: 3 -> 14 loopIndependentDefUseDependence filename$0
  20: 3 -> 8 declaration
  21: 3 -> 8 loopIndependentDefUseDependence filename$0
  22: 5 -> 1 exceptionCatch
  23: 5 -> 3 trueControlDependence
  24: 5 -> 7 loopIndependentDefUseDependence this.directory
  25: 5 -> 8 trueControlDependence
  26: 7 -> 14 loopIndependentDefUseDependence this.!getFileName
  27: 7 -> 17 loopIndependentDefUseDependence this.directory
  28: 7 -> 3 loopIndependentDefUseDependence this.!getFileName
  29: 7 -> 8 loopIndependentDefUseDependence this.!getFileName
  30: 8 -> 12 trueControlDependence
  31: 8 -> 13 falseControlDependence
  32: 8 -> 14 trueControlDependence
  33: 8 -> 15 trueControlDependence
  34: 8 -> 9 trueControlDependence
  35: 9 -> 12 trueControlDependence
  36: 9 -> 13 fallThroughControlDependence
  37: 9 -> 14 trueControlDependence
  38: 9 -> 15 trueControlDependence
  39: 9 -> 17 loopIndependentDefUseDependence $_
--
   0: fileExists( java.lang.String )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 11 trueControlDependence
   3: 0 -> 2 trueControlDependence
   4: 0 -> 3 trueControlDependence
   5: 0 -> 4 trueControlDependence
   6: 0 -> 5 trueControlDependence
   7: 0 -> 6 trueControlDependence
   8: 0 -> 7 trueControlDependence
   9: 0 -> 8 trueControlDependence
  10: 0 -> 9 trueControlDependence
  11: 1 -> 4 loopIndependentDefUseDependence name$0
  12: 2 -> 7 declaration
  13: 2 -> 7 loopIndependentDefUseDependence file$1
  14: 2 -> 8 declaration
  15: 2 -> 8 loopIndependentDefUseDependence file$1
  16: 2 -> 9 declaration
  17: 4 -> 5 loopIndependentDefUseDependence file$1.path
  18: 4 -> 5 outputDependence file$1.prefixLength
  19: 4 -> 5 outputDependence file$1.status
  20: 5 -> 11 loopIndependentDefUseDependence file$1.path
  21: 5 -> 11 loopIndependentDefUseDependence file$1.prefixLength
  22: 5 -> 2 loopIndependentDefUseDependence file$1.!File
  23: 5 -> 8 loopIndependentDefUseDependence file$1.path
  24: 5 -> 8 loopIndependentDefUseDependence file$1.status
  25: 5 -> 9 loopIndependentDefUseDependence file$1.path
  26: 6 -> 11 loopIndependentDefUseDependence $_
  27: 8 -> 9 loopIndependentDefUseDependence file$1
  28: 8 -> 9 loopIndependentDefUseDependence file$1.status
  29: 9 -> 11 loopIndependentDefUseDependence file$1.status
  30: 9 -> 6 loopIndependentDefUseDependence file$1.!exists
--
   0: initToolBar( javax.swing.JToolBar )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 23 trueControlDependence
  17: 0 -> 24 trueControlDependence
  18: 0 -> 25 trueControlDependence
  19: 0 -> 26 trueControlDependence
  20: 0 -> 27 trueControlDependence
  21: 0 -> 28 trueControlDependence
  22: 0 -> 29 trueControlDependence
  23: 0 -> 3 trueControlDependence
  24: 0 -> 30 trueControlDependence
  25: 0 -> 31 trueControlDependence
  26: 0 -> 32 trueControlDependence
  27: 0 -> 33 trueControlDependence
  28: 0 -> 34 trueControlDependence
  29: 0 -> 35 trueControlDependence
  30: 0 -> 36 trueControlDependence
  31: 0 -> 37 trueControlDependence
  32: 0 -> 38 trueControlDependence
  33: 0 -> 39 trueControlDependence
  34: 0 -> 4 trueControlDependence
  35: 0 -> 40 trueControlDependence
  36: 0 -> 41 trueControlDependence
  37: 0 -> 42 trueControlDependence
  38: 0 -> 43 trueControlDependence
  39: 0 -> 44 trueControlDependence
  40: 0 -> 45 trueControlDependence
  41: 0 -> 46 trueControlDependence
  42: 0 -> 47 trueControlDependence
  43: 0 -> 48 trueControlDependence
  44: 0 -> 49 trueControlDependence
  45: 0 -> 5 trueControlDependence
  46: 0 -> 50 trueControlDependence
  47: 0 -> 51 trueControlDependence
  48: 0 -> 52 trueControlDependence
  49: 0 -> 53 trueControlDependence
  50: 0 -> 54 trueControlDependence
  51: 0 -> 55 trueControlDependence
  52: 0 -> 56 trueControlDependence
  53: 0 -> 57 trueControlDependence
  54: 0 -> 58 trueControlDependence
  55: 0 -> 59 trueControlDependence
  56: 0 -> 6 trueControlDependence
  57: 0 -> 60 trueControlDependence
  58: 0 -> 61 trueControlDependence
  59: 0 -> 62 trueControlDependence
  60: 0 -> 63 trueControlDependence
  61: 0 -> 64 trueControlDependence
  62: 0 -> 65 trueControlDependence
  63: 0 -> 66 trueControlDependence
  64: 0 -> 67 trueControlDependence
  65: 0 -> 68 trueControlDependence
  66: 0 -> 69 trueControlDependence
  67: 0 -> 7 trueControlDependence
  68: 0 -> 70 trueControlDependence
  69: 0 -> 71 trueControlDependence
  70: 0 -> 72 trueControlDependence
  71: 0 -> 73 trueControlDependence
  72: 0 -> 74 trueControlDependence
  73: 0 -> 75 trueControlDependence
  74: 0 -> 76 trueControlDependence
  75: 0 -> 77 trueControlDependence
  76: 0 -> 78 trueControlDependence
  77: 0 -> 79 trueControlDependence
  78: 0 -> 8 trueControlDependence
  79: 0 -> 80 trueControlDependence
  80: 0 -> 81 trueControlDependence
  81: 0 -> 83 trueControlDependence
  82: 0 -> 9 trueControlDependence
  83: 1 -> 3 loopIndependentDefUseDependence toolBar$0
  84: 1 -> 4 loopIndependentDefUseDependence toolBar$0
  85: 10 -> 15 declaration
  86: 10 -> 15 loopIndependentDefUseDependence openButton$2
  87: 10 -> 16 declaration
  88: 10 -> 16 loopIndependentDefUseDependence openButton$2
  89: 10 -> 17 declaration
  90: 12 -> 13 loopIndependentDefUseDependence javax.swing.AbstractButton.action
  91: 12 -> 13 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
  92: 12 -> 13 loopIndependentDefUseDependence toolBar$0
  93: 13 -> 10 loopIndependentDefUseDependence toolBar$0.!add
  94: 13 -> 15 loopIndependentDefUseDependence toolBar$0.!add
  95: 13 -> 19 loopIndependentDefUseDependence toolBar$0
  96: 13 -> 20 loopIndependentDefUseDependence javax.swing.AbstractButton.action
  97: 13 -> 20 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
  98: 13 -> 20 loopIndependentDefUseDependence toolBar$0
  99: 13 -> 21 outputDependence toolBar$0.!add
 100: 16 -> 17 loopIndependentDefUseDependence openButton$2
 101: 16 -> 17 outputDependence openButton$2.aaHint
 102: 16 -> 17 outputDependence openButton$2.lcdRenderingHint
 103: 17 -> 14 loopIndependentDefUseDependence openButton$2.!setToolTipText
 104: 17 -> 83 loopIndependentDefUseDependence openButton$2.aaHint
 105: 17 -> 83 loopIndependentDefUseDependence openButton$2.lcdRenderingHint
 106: 18 -> 23 declaration
 107: 18 -> 23 loopIndependentDefUseDependence saveButton$3
 108: 18 -> 24 declaration
 109: 18 -> 24 loopIndependentDefUseDependence saveButton$3
 110: 18 -> 25 declaration
 111: 2 -> 7 declaration
 112: 2 -> 7 loopIndependentDefUseDependence newButton$1
 113: 2 -> 8 declaration
 114: 2 -> 8 loopIndependentDefUseDependence newButton$1
 115: 2 -> 9 declaration
 116: 20 -> 21 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 117: 20 -> 21 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 118: 20 -> 21 loopIndependentDefUseDependence toolBar$0
 119: 21 -> 18 loopIndependentDefUseDependence toolBar$0.!add
 120: 21 -> 23 loopIndependentDefUseDependence toolBar$0.!add
 121: 21 -> 27 loopIndependentDefUseDependence toolBar$0
 122: 21 -> 31 loopIndependentDefUseDependence toolBar$0
 123: 21 -> 32 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 124: 21 -> 32 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 125: 21 -> 32 loopIndependentDefUseDependence toolBar$0
 126: 21 -> 33 outputDependence toolBar$0.!add
 127: 24 -> 25 loopIndependentDefUseDependence saveButton$3
 128: 24 -> 25 outputDependence saveButton$3.aaHint
 129: 24 -> 25 outputDependence saveButton$3.lcdRenderingHint
 130: 25 -> 22 loopIndependentDefUseDependence saveButton$3.!setToolTipText
 131: 25 -> 83 loopIndependentDefUseDependence saveButton$3.aaHint
 132: 25 -> 83 loopIndependentDefUseDependence saveButton$3.lcdRenderingHint
 133: 29 -> 26 loopIndependentDefUseDependence toolBar$0.!addSeparator
 134: 29 -> 57 outputDependence toolBar$0.!addSeparator
 135: 30 -> 35 declaration
 136: 30 -> 35 loopIndependentDefUseDependence cutButton$4
 137: 30 -> 36 declaration
 138: 30 -> 36 loopIndependentDefUseDependence cutButton$4
 139: 30 -> 37 declaration
 140: 32 -> 33 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 141: 32 -> 33 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 142: 32 -> 33 loopIndependentDefUseDependence toolBar$0
 143: 33 -> 30 loopIndependentDefUseDependence toolBar$0.!add
 144: 33 -> 35 loopIndependentDefUseDependence toolBar$0.!add
 145: 33 -> 39 loopIndependentDefUseDependence toolBar$0
 146: 33 -> 40 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 147: 33 -> 40 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 148: 33 -> 40 loopIndependentDefUseDependence toolBar$0
 149: 33 -> 41 outputDependence toolBar$0.!add
 150: 36 -> 37 loopIndependentDefUseDependence cutButton$4
 151: 36 -> 37 outputDependence cutButton$4.aaHint
 152: 36 -> 37 outputDependence cutButton$4.lcdRenderingHint
 153: 37 -> 34 loopIndependentDefUseDependence cutButton$4.!setToolTipText
 154: 37 -> 83 loopIndependentDefUseDependence cutButton$4.aaHint
 155: 37 -> 83 loopIndependentDefUseDependence cutButton$4.lcdRenderingHint
 156: 38 -> 43 declaration
 157: 38 -> 43 loopIndependentDefUseDependence copyButton$5
 158: 38 -> 44 declaration
 159: 38 -> 44 loopIndependentDefUseDependence copyButton$5
 160: 38 -> 45 declaration
 161: 4 -> 5 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 162: 4 -> 5 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 163: 4 -> 5 loopIndependentDefUseDependence toolBar$0
 164: 40 -> 41 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 165: 40 -> 41 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 166: 40 -> 41 loopIndependentDefUseDependence toolBar$0
 167: 41 -> 38 loopIndependentDefUseDependence toolBar$0.!add
 168: 41 -> 43 loopIndependentDefUseDependence toolBar$0.!add
 169: 41 -> 47 loopIndependentDefUseDependence toolBar$0
 170: 41 -> 48 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 171: 41 -> 48 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 172: 41 -> 48 loopIndependentDefUseDependence toolBar$0
 173: 41 -> 49 outputDependence toolBar$0.!add
 174: 44 -> 45 loopIndependentDefUseDependence copyButton$5
 175: 44 -> 45 outputDependence copyButton$5.aaHint
 176: 44 -> 45 outputDependence copyButton$5.lcdRenderingHint
 177: 45 -> 42 loopIndependentDefUseDependence copyButton$5.!setToolTipText
 178: 45 -> 83 loopIndependentDefUseDependence copyButton$5.aaHint
 179: 45 -> 83 loopIndependentDefUseDependence copyButton$5.lcdRenderingHint
 180: 46 -> 51 declaration
 181: 46 -> 51 loopIndependentDefUseDependence pasteButton$6
 182: 46 -> 52 declaration
 183: 46 -> 52 loopIndependentDefUseDependence pasteButton$6
 184: 46 -> 53 declaration
 185: 48 -> 49 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 186: 48 -> 49 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 187: 48 -> 49 loopIndependentDefUseDependence toolBar$0
 188: 49 -> 46 loopIndependentDefUseDependence toolBar$0.!add
 189: 49 -> 51 loopIndependentDefUseDependence toolBar$0.!add
 190: 49 -> 55 loopIndependentDefUseDependence toolBar$0
 191: 49 -> 59 loopIndependentDefUseDependence toolBar$0
 192: 49 -> 60 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 193: 49 -> 60 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 194: 49 -> 60 loopIndependentDefUseDependence toolBar$0
 195: 49 -> 61 outputDependence toolBar$0.!add
 196: 5 -> 11 loopIndependentDefUseDependence toolBar$0
 197: 5 -> 12 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 198: 5 -> 12 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 199: 5 -> 12 loopIndependentDefUseDependence toolBar$0
 200: 5 -> 13 outputDependence toolBar$0.!add
 201: 5 -> 2 loopIndependentDefUseDependence toolBar$0.!add
 202: 5 -> 7 loopIndependentDefUseDependence toolBar$0.!add
 203: 52 -> 53 loopIndependentDefUseDependence pasteButton$6
 204: 52 -> 53 outputDependence pasteButton$6.aaHint
 205: 52 -> 53 outputDependence pasteButton$6.lcdRenderingHint
 206: 53 -> 50 loopIndependentDefUseDependence pasteButton$6.!setToolTipText
 207: 53 -> 83 loopIndependentDefUseDependence pasteButton$6.aaHint
 208: 53 -> 83 loopIndependentDefUseDependence pasteButton$6.lcdRenderingHint
 209: 57 -> 54 loopIndependentDefUseDependence toolBar$0.!addSeparator
 210: 58 -> 63 declaration
 211: 58 -> 63 loopIndependentDefUseDependence undoButton$7
 212: 58 -> 64 declaration
 213: 58 -> 64 loopIndependentDefUseDependence undoButton$7
 214: 58 -> 65 declaration
 215: 60 -> 61 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 216: 60 -> 61 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 217: 60 -> 61 loopIndependentDefUseDependence toolBar$0
 218: 61 -> 58 loopIndependentDefUseDependence toolBar$0.!add
 219: 61 -> 63 loopIndependentDefUseDependence toolBar$0.!add
 220: 61 -> 71 loopIndependentDefUseDependence toolBar$0
 221: 61 -> 72 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 222: 61 -> 72 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 223: 61 -> 72 loopIndependentDefUseDependence toolBar$0
 224: 61 -> 73 outputDependence toolBar$0.!add
 225: 64 -> 65 loopIndependentDefUseDependence undoButton$7
 226: 64 -> 65 outputDependence undoButton$7.aaHint
 227: 64 -> 65 outputDependence undoButton$7.lcdRenderingHint
 228: 65 -> 62 loopIndependentDefUseDependence undoButton$7.!setToolTipText
 229: 65 -> 83 loopIndependentDefUseDependence undoButton$7.aaHint
 230: 65 -> 83 loopIndependentDefUseDependence undoButton$7.lcdRenderingHint
 231: 69 -> 66 loopIndependentDefUseDependence this.undoAction.!setEnabled
 232: 70 -> 75 declaration
 233: 70 -> 75 loopIndependentDefUseDependence redoButton$8
 234: 70 -> 76 declaration
 235: 70 -> 76 loopIndependentDefUseDependence redoButton$8
 236: 70 -> 77 declaration
 237: 70 -> 79 declaration
 238: 70 -> 80 declaration
 239: 72 -> 73 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 240: 72 -> 73 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 241: 72 -> 73 loopIndependentDefUseDependence toolBar$0
 242: 73 -> 70 loopIndependentDefUseDependence toolBar$0.!add
 243: 73 -> 75 loopIndependentDefUseDependence toolBar$0.!add
 244: 73 -> 83 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 245: 73 -> 83 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 246: 76 -> 77 loopIndependentDefUseDependence redoButton$8
 247: 76 -> 77 outputDependence redoButton$8.aaHint
 248: 76 -> 77 outputDependence redoButton$8.lcdRenderingHint
 249: 77 -> 74 loopIndependentDefUseDependence redoButton$8.!setToolTipText
 250: 77 -> 79 loopIndependentDefUseDependence redoButton$8
 251: 77 -> 80 loopIndependentDefUseDependence redoButton$8
 252: 77 -> 83 loopIndependentDefUseDependence redoButton$8.aaHint
 253: 77 -> 83 loopIndependentDefUseDependence redoButton$8.lcdRenderingHint
 254: 8 -> 9 loopIndependentDefUseDependence newButton$1
 255: 8 -> 9 outputDependence newButton$1.aaHint
 256: 8 -> 9 outputDependence newButton$1.lcdRenderingHint
 257: 81 -> 78 loopIndependentDefUseDependence redoButton$8.!setEnabled
 258: 9 -> 6 loopIndependentDefUseDependence newButton$1.!setToolTipText
 259: 9 -> 83 loopIndependentDefUseDependence newButton$1.aaHint
 260: 9 -> 83 loopIndependentDefUseDependence newButton$1.lcdRenderingHint
--
   0: RECENT_FILES
   1: 0 -> 1 trueControlDependence
--
   0: addRecentFile( java.lang.String )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 0 -> 30 trueControlDependence
   5: 0 -> 4 trueControlDependence
   6: 0 -> 5 trueControlDependence
   7: 0 -> 6 trueControlDependence
   8: 1 -> 26 loopIndependentDefUseDependence filename$0
   9: 1 -> 4 loopIndependentDefUseDependence filename$0
  10: 1 -> 9 loopIndependentDefUseDependence filename$0
  11: 10 -> 7 loopIndependentDefUseDependence this.recentFiles.!add
  12: 11 -> 15 trueControlDependence
  13: 11 -> 16 trueControlDependence
  14: 11 -> 17 trueControlDependence
  15: 11 -> 18 trueControlDependence
  16: 14 -> 11 loopIndependentDefUseDependence this.recentFiles.!size
  17: 18 -> 15 loopIndependentDefUseDependence this.recentFiles.!remove
  18: 2 -> 22 declaration
  19: 2 -> 22 loopIndependentDefUseDependence offset$1
  20: 2 -> 6 declaration
  21: 2 -> 6 loopIndependentDefUseDependence offset$1
  22: 23 -> 20 loopIndependentDefUseDependence this.recentFiles.!remove
  23: 27 -> 24 loopIndependentDefUseDependence this.recentFiles.!add
  24: 5 -> 2 loopIndependentDefUseDependence this.recentFiles.!indexOf
  25: 6 -> 10 trueControlDependence
  26: 6 -> 11 trueControlDependence
  27: 6 -> 12 trueControlDependence
  28: 6 -> 13 trueControlDependence
  29: 6 -> 14 trueControlDependence
  30: 6 -> 20 falseControlDependence
  31: 6 -> 21 trueControlDependence
  32: 6 -> 22 falseControlDependence
  33: 6 -> 23 trueControlDependence
  34: 6 -> 24 falseControlDependence
  35: 6 -> 25 trueControlDependence
  36: 6 -> 26 falseControlDependence
  37: 6 -> 27 trueControlDependence
  38: 6 -> 7 trueControlDependence
  39: 6 -> 8 trueControlDependence
  40: 6 -> 9 trueControlDependence
--
   0: fileListMenu
   1: 0 -> 1 trueControlDependence
--
   0: saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 2 trueControlDependence
   6: 0 -> 26 trueControlDependence
   7: 0 -> 3 trueControlDependence
   8: 0 -> 4 trueControlDependence
   9: 0 -> 5 trueControlDependence
  10: 0 -> 6 trueControlDependence
  11: 0 -> 7 trueControlDependence
  12: 0 -> 8 trueControlDependence
  13: 0 -> 9 trueControlDependence
  14: 10 -> 11 summary
  15: 11 -> 4 loopIndependentDefUseDependence canvas$0.!getFigureManager.!store
  16: 12 -> 14 trueControlDependence
  17: 12 -> 15 trueControlDependence
  18: 12 -> 16 trueControlDependence
  19: 12 -> 19 falseControlDependence
  20: 12 -> 20 trueControlDependence
  21: 12 -> 21 falseControlDependence
  22: 12 -> 22 trueControlDependence
  23: 12 -> 23 trueControlDependence
  24: 12 -> 24 falseControlDependence
  25: 15 -> 1 exceptionCatch
  26: 15 -> 13 trueControlDependence
  27: 15 -> 17 trueControlDependence
  28: 16 -> 13 loopIndependentDefUseDependence this.!showMessageDialog
  29: 17 -> 19 fallThroughControlDependence
  30: 17 -> 20 trueControlDependence
  31: 17 -> 21 fallThroughControlDependence
  32: 17 -> 22 trueControlDependence
  33: 17 -> 23 trueControlDependence
  34: 17 -> 24 fallThroughControlDependence
  35: 17 -> 26 loopIndependentDefUseDependence $_
  36: 2 -> 20 loopIndependentDefUseDependence canvas$0
  37: 2 -> 6 loopIndependentDefUseDependence canvas$0
  38: 21 -> 23 loopIndependentDefUseDependence canvas$0.changed
  39: 22 -> 23 summary
  40: 23 -> 19 loopIndependentDefUseDependence canvas$0.!setChanged
  41: 23 -> 26 loopIndependentDefUseDependence canvas$0.changed
  42: 24 -> 26 loopIndependentDefUseDependence $_
  43: 3 -> 10 loopIndependentDefUseDependence filename$1
  44: 3 -> 15 loopIndependentDefUseDependence filename$1
  45: 4 -> 12 declaration
  46: 4 -> 12 loopIndependentDefUseDependence result$2
  47: 8 -> 5 loopIndependentDefUseDependence canvas$0.!getFigureManager
  48: 8 -> 9 loopIndependentDefUseDependence canvas$0.!getFigureManager
  49: 9 -> 11 loopIndependentDefUseDependence canvas$0.!getFigureManager
--
   0: clipboard
   1: 0 -> 1 trueControlDependence
--
   0: initEditActions( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 23 trueControlDependence
  17: 0 -> 24 trueControlDependence
  18: 0 -> 25 trueControlDependence
  19: 0 -> 26 trueControlDependence
  20: 0 -> 27 trueControlDependence
  21: 0 -> 28 trueControlDependence
  22: 0 -> 29 trueControlDependence
  23: 0 -> 3 trueControlDependence
  24: 0 -> 30 trueControlDependence
  25: 0 -> 31 trueControlDependence
  26: 0 -> 32 trueControlDependence
  27: 0 -> 33 trueControlDependence
  28: 0 -> 34 trueControlDependence
  29: 0 -> 35 trueControlDependence
  30: 0 -> 36 trueControlDependence
  31: 0 -> 37 trueControlDependence
  32: 0 -> 38 trueControlDependence
  33: 0 -> 39 trueControlDependence
  34: 0 -> 4 trueControlDependence
  35: 0 -> 40 trueControlDependence
  36: 0 -> 41 trueControlDependence
  37: 0 -> 42 trueControlDependence
  38: 0 -> 43 trueControlDependence
  39: 0 -> 44 trueControlDependence
  40: 0 -> 45 trueControlDependence
  41: 0 -> 46 trueControlDependence
  42: 0 -> 47 trueControlDependence
  43: 0 -> 48 trueControlDependence
  44: 0 -> 49 trueControlDependence
  45: 0 -> 5 trueControlDependence
  46: 0 -> 50 trueControlDependence
  47: 0 -> 51 trueControlDependence
  48: 0 -> 52 trueControlDependence
  49: 0 -> 53 trueControlDependence
  50: 0 -> 54 trueControlDependence
  51: 0 -> 55 trueControlDependence
  52: 0 -> 56 trueControlDependence
  53: 0 -> 57 trueControlDependence
  54: 0 -> 58 trueControlDependence
  55: 0 -> 59 trueControlDependence
  56: 0 -> 6 trueControlDependence
  57: 0 -> 60 trueControlDependence
  58: 0 -> 61 trueControlDependence
  59: 0 -> 62 trueControlDependence
  60: 0 -> 63 trueControlDependence
  61: 0 -> 64 trueControlDependence
  62: 0 -> 65 trueControlDependence
  63: 0 -> 66 trueControlDependence
  64: 0 -> 67 trueControlDependence
  65: 0 -> 68 trueControlDependence
  66: 0 -> 69 trueControlDependence
  67: 0 -> 7 trueControlDependence
  68: 0 -> 70 trueControlDependence
  69: 0 -> 71 trueControlDependence
  70: 0 -> 72 trueControlDependence
  71: 0 -> 73 trueControlDependence
  72: 0 -> 74 trueControlDependence
  73: 0 -> 75 trueControlDependence
  74: 0 -> 76 trueControlDependence
  75: 0 -> 77 trueControlDependence
  76: 0 -> 78 trueControlDependence
  77: 0 -> 79 trueControlDependence
  78: 0 -> 8 trueControlDependence
  79: 0 -> 80 trueControlDependence
  80: 0 -> 82 trueControlDependence
  81: 0 -> 9 trueControlDependence
  82: 1 -> 82 loopIndependentDefUseDependence this.undoAction
  83: 11 -> 12 loopIndependentDefUseDependence this.!getClass
  84: 11 -> 26 outputDependence this.!getClass
  85: 11 -> 8 loopIndependentDefUseDependence this.!getClass
  86: 13 -> 28 outputDependence this.!getClass.!getResource
  87: 13 -> 7 loopIndependentDefUseDependence this.!getClass.!getResource
  88: 14 -> 5 loopIndependentDefUseDependence this.undoAction.!ImageIcon
  89: 14 -> 82 loopIndependentDefUseDependence this.undoAction.accessibleContext
  90: 14 -> 82 loopIndependentDefUseDependence this.undoAction.description
  91: 14 -> 82 loopIndependentDefUseDependence this.undoAction.height
  92: 14 -> 82 loopIndependentDefUseDependence this.undoAction.image
  93: 14 -> 82 loopIndependentDefUseDependence this.undoAction.loadStatus
  94: 14 -> 82 loopIndependentDefUseDependence this.undoAction.location
  95: 14 -> 82 loopIndependentDefUseDependence this.undoAction.width
  96: 15 -> 1 loopIndependentDefUseDependence this.undoAction.!
  97: 15 -> 82 loopIndependentDefUseDependence this.undoAction.arrayTable
  98: 15 -> 82 loopIndependentDefUseDependence this.undoAction.enabled
  99: 16 -> 82 loopIndependentDefUseDependence this.redoAction
 100: 18 -> 30 loopIndependentDefUseDependence this.redoAction.arrayTable
 101: 18 -> 30 loopIndependentDefUseDependence this.redoAction.enabled
 102: 19 -> 30 summary
 103: 20 -> 30 summary
 104: 22 -> 29 loopIndependentDefUseDependence this.redoAction.image
 105: 22 -> 29 outputDependence this.redoAction.accessibleContext
 106: 22 -> 29 outputDependence this.redoAction.description
 107: 22 -> 29 outputDependence this.redoAction.height
 108: 22 -> 29 outputDependence this.redoAction.loadStatus
 109: 22 -> 29 outputDependence this.redoAction.location
 110: 22 -> 29 outputDependence this.redoAction.width
 111: 26 -> 23 loopIndependentDefUseDependence this.!getClass
 112: 26 -> 27 loopIndependentDefUseDependence this.!getClass
 113: 26 -> 41 outputDependence this.!getClass
 114: 28 -> 22 loopIndependentDefUseDependence this.!getClass.!getResource
 115: 28 -> 43 outputDependence this.!getClass.!getResource
 116: 29 -> 20 loopIndependentDefUseDependence this.redoAction.!ImageIcon
 117: 29 -> 82 loopIndependentDefUseDependence this.redoAction.accessibleContext
 118: 29 -> 82 loopIndependentDefUseDependence this.redoAction.description
 119: 29 -> 82 loopIndependentDefUseDependence this.redoAction.height
 120: 29 -> 82 loopIndependentDefUseDependence this.redoAction.image
 121: 29 -> 82 loopIndependentDefUseDependence this.redoAction.loadStatus
 122: 29 -> 82 loopIndependentDefUseDependence this.redoAction.location
 123: 29 -> 82 loopIndependentDefUseDependence this.redoAction.width
 124: 3 -> 15 loopIndependentDefUseDependence this.undoAction.arrayTable
 125: 3 -> 15 loopIndependentDefUseDependence this.undoAction.enabled
 126: 30 -> 16 loopIndependentDefUseDependence this.redoAction.!
 127: 30 -> 82 loopIndependentDefUseDependence this.redoAction.arrayTable
 128: 30 -> 82 loopIndependentDefUseDependence this.redoAction.enabled
 129: 31 -> 82 loopIndependentDefUseDependence this.cutAction
 130: 33 -> 45 loopIndependentDefUseDependence this.cutAction.arrayTable
 131: 33 -> 45 loopIndependentDefUseDependence this.cutAction.enabled
 132: 34 -> 45 summary
 133: 35 -> 45 summary
 134: 37 -> 44 loopIndependentDefUseDependence this.cutAction.image
 135: 37 -> 44 outputDependence this.cutAction.accessibleContext
 136: 37 -> 44 outputDependence this.cutAction.description
 137: 37 -> 44 outputDependence this.cutAction.height
 138: 37 -> 44 outputDependence this.cutAction.loadStatus
 139: 37 -> 44 outputDependence this.cutAction.location
 140: 37 -> 44 outputDependence this.cutAction.width
 141: 4 -> 15 summary
 142: 41 -> 38 loopIndependentDefUseDependence this.!getClass
 143: 41 -> 42 loopIndependentDefUseDependence this.!getClass
 144: 41 -> 56 outputDependence this.!getClass
 145: 43 -> 37 loopIndependentDefUseDependence this.!getClass.!getResource
 146: 43 -> 58 outputDependence this.!getClass.!getResource
 147: 44 -> 35 loopIndependentDefUseDependence this.cutAction.!ImageIcon
 148: 44 -> 82 loopIndependentDefUseDependence this.cutAction.accessibleContext
 149: 44 -> 82 loopIndependentDefUseDependence this.cutAction.description
 150: 44 -> 82 loopIndependentDefUseDependence this.cutAction.height
 151: 44 -> 82 loopIndependentDefUseDependence this.cutAction.image
 152: 44 -> 82 loopIndependentDefUseDependence this.cutAction.loadStatus
 153: 44 -> 82 loopIndependentDefUseDependence this.cutAction.location
 154: 44 -> 82 loopIndependentDefUseDependence this.cutAction.width
 155: 45 -> 31 loopIndependentDefUseDependence this.cutAction.!
 156: 45 -> 82 loopIndependentDefUseDependence this.cutAction.arrayTable
 157: 45 -> 82 loopIndependentDefUseDependence this.cutAction.enabled
 158: 46 -> 82 loopIndependentDefUseDependence this.copyAction
 159: 48 -> 60 loopIndependentDefUseDependence this.copyAction.arrayTable
 160: 48 -> 60 loopIndependentDefUseDependence this.copyAction.enabled
 161: 49 -> 60 summary
 162: 5 -> 15 summary
 163: 50 -> 60 summary
 164: 52 -> 59 loopIndependentDefUseDependence this.copyAction.image
 165: 52 -> 59 outputDependence this.copyAction.accessibleContext
 166: 52 -> 59 outputDependence this.copyAction.description
 167: 52 -> 59 outputDependence this.copyAction.height
 168: 52 -> 59 outputDependence this.copyAction.loadStatus
 169: 52 -> 59 outputDependence this.copyAction.location
 170: 52 -> 59 outputDependence this.copyAction.width
 171: 56 -> 53 loopIndependentDefUseDependence this.!getClass
 172: 56 -> 57 loopIndependentDefUseDependence this.!getClass
 173: 56 -> 71 outputDependence this.!getClass
 174: 58 -> 52 loopIndependentDefUseDependence this.!getClass.!getResource
 175: 58 -> 73 outputDependence this.!getClass.!getResource
 176: 59 -> 50 loopIndependentDefUseDependence this.copyAction.!ImageIcon
 177: 59 -> 82 loopIndependentDefUseDependence this.copyAction.accessibleContext
 178: 59 -> 82 loopIndependentDefUseDependence this.copyAction.description
 179: 59 -> 82 loopIndependentDefUseDependence this.copyAction.height
 180: 59 -> 82 loopIndependentDefUseDependence this.copyAction.image
 181: 59 -> 82 loopIndependentDefUseDependence this.copyAction.loadStatus
 182: 59 -> 82 loopIndependentDefUseDependence this.copyAction.location
 183: 59 -> 82 loopIndependentDefUseDependence this.copyAction.width
 184: 60 -> 46 loopIndependentDefUseDependence this.copyAction.!
 185: 60 -> 82 loopIndependentDefUseDependence this.copyAction.arrayTable
 186: 60 -> 82 loopIndependentDefUseDependence this.copyAction.enabled
 187: 61 -> 82 loopIndependentDefUseDependence this.pasteAction
 188: 63 -> 75 loopIndependentDefUseDependence this.pasteAction.arrayTable
 189: 63 -> 75 loopIndependentDefUseDependence this.pasteAction.enabled
 190: 64 -> 75 summary
 191: 65 -> 75 summary
 192: 67 -> 74 loopIndependentDefUseDependence this.pasteAction.image
 193: 67 -> 74 outputDependence this.pasteAction.accessibleContext
 194: 67 -> 74 outputDependence this.pasteAction.description
 195: 67 -> 74 outputDependence this.pasteAction.height
 196: 67 -> 74 outputDependence this.pasteAction.loadStatus
 197: 67 -> 74 outputDependence this.pasteAction.location
 198: 67 -> 74 outputDependence this.pasteAction.width
 199: 7 -> 14 loopIndependentDefUseDependence this.undoAction.image
 200: 7 -> 14 outputDependence this.undoAction.accessibleContext
 201: 7 -> 14 outputDependence this.undoAction.description
 202: 7 -> 14 outputDependence this.undoAction.height
 203: 7 -> 14 outputDependence this.undoAction.loadStatus
 204: 7 -> 14 outputDependence this.undoAction.location
 205: 7 -> 14 outputDependence this.undoAction.width
 206: 71 -> 68 loopIndependentDefUseDependence this.!getClass
 207: 71 -> 72 loopIndependentDefUseDependence this.!getClass
 208: 73 -> 67 loopIndependentDefUseDependence this.!getClass.!getResource
 209: 74 -> 65 loopIndependentDefUseDependence this.pasteAction.!ImageIcon
 210: 74 -> 82 loopIndependentDefUseDependence this.pasteAction.accessibleContext
 211: 74 -> 82 loopIndependentDefUseDependence this.pasteAction.description
 212: 74 -> 82 loopIndependentDefUseDependence this.pasteAction.height
 213: 74 -> 82 loopIndependentDefUseDependence this.pasteAction.image
 214: 74 -> 82 loopIndependentDefUseDependence this.pasteAction.loadStatus
 215: 74 -> 82 loopIndependentDefUseDependence this.pasteAction.location
 216: 74 -> 82 loopIndependentDefUseDependence this.pasteAction.width
 217: 75 -> 61 loopIndependentDefUseDependence this.pasteAction.!
 218: 75 -> 82 loopIndependentDefUseDependence this.pasteAction.arrayTable
 219: 75 -> 82 loopIndependentDefUseDependence this.pasteAction.enabled
 220: 76 -> 82 loopIndependentDefUseDependence this.deleteAction
 221: 78 -> 80 loopIndependentDefUseDependence this.deleteAction.arrayTable
 222: 78 -> 80 loopIndependentDefUseDependence this.deleteAction.enabled
 223: 79 -> 80 summary
 224: 80 -> 76 loopIndependentDefUseDependence this.deleteAction.!
 225: 80 -> 82 loopIndependentDefUseDependence this.deleteAction.arrayTable
 226: 80 -> 82 loopIndependentDefUseDependence this.deleteAction.enabled
--
   0: updateRedoState( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 26 trueControlDependence
   4: 0 -> 3 trueControlDependence
   5: 0 -> 4 trueControlDependence
   6: 0 -> 5 trueControlDependence
   7: 1 -> 5 declaration
   8: 1 -> 5 loopIndependentDefUseDependence canvas$0
   9: 1 -> 9 declaration
  10: 1 -> 9 loopIndependentDefUseDependence canvas$0
  11: 11 -> 12 loopIndependentDefUseDependence canvas$0.!getUndoManager
  12: 11 -> 13 loopIndependentDefUseDependence canvas$0.!getUndoManager
  13: 11 -> 14 loopIndependentDefUseDependence canvas$0.!getUndoManager
  14: 11 -> 8 loopIndependentDefUseDependence canvas$0.!getUndoManager
  15: 12 -> 16 trueControlDependence
  16: 12 -> 17 trueControlDependence
  17: 12 -> 18 trueControlDependence
  18: 12 -> 19 trueControlDependence
  19: 12 -> 20 falseControlDependence
  20: 12 -> 21 trueControlDependence
  21: 12 -> 22 falseControlDependence
  22: 12 -> 23 trueControlDependence
  23: 15 -> 12 loopIndependentDefUseDependence undoManager$1.!canRedo
  24: 19 -> 16 loopIndependentDefUseDependence this.redoAction.!setEnabled
  25: 23 -> 20 loopIndependentDefUseDependence this.redoAction.!setEnabled
  26: 4 -> 1 loopIndependentDefUseDependence this.tabbedCanvas.!getCurrentCanvas
  27: 4 -> 5 loopIndependentDefUseDependence this.tabbedCanvas.!getCurrentCanvas
  28: 4 -> 9 loopIndependentDefUseDependence this.tabbedCanvas.!getCurrentCanvas
  29: 5 -> 10 falseControlDependence
  30: 5 -> 11 trueControlDependence
  31: 5 -> 12 falseControlDependence
  32: 5 -> 13 trueControlDependence
  33: 5 -> 14 falseControlDependence
  34: 5 -> 15 trueControlDependence
  35: 5 -> 6 trueControlDependence
  36: 5 -> 8 falseControlDependence
  37: 5 -> 9 trueControlDependence
  38: 6 -> 10 fallThroughControlDependence
  39: 6 -> 11 trueControlDependence
  40: 6 -> 12 fallThroughControlDependence
  41: 6 -> 13 trueControlDependence
  42: 6 -> 14 fallThroughControlDependence
  43: 6 -> 15 trueControlDependence
  44: 6 -> 8 fallThroughControlDependence
  45: 6 -> 9 trueControlDependence
  46: 8 -> 12 declaration
  47: 8 -> 12 loopIndependentDefUseDependence undoManager$1
  48: 8 -> 13 declaration
  49: 8 -> 13 loopIndependentDefUseDependence undoManager$1
  50: 8 -> 14 declaration
  51: 8 -> 14 loopIndependentDefUseDependence undoManager$1
--
   0: directory
   1: 0 -> 1 trueControlDependence
--
   0: tabbedCanvas
   1: 0 -> 1 trueControlDependence
--
   0: fileListener
   1: 0 -> 1 trueControlDependence
--
   0: autoSave
   1: 0 -> 1 trueControlDependence
--
   0: saveAction
   1: 0 -> 1 trueControlDependence
--
   0: initMenuBar( javax.swing.JMenuBar )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 23 trueControlDependence
  17: 0 -> 24 trueControlDependence
  18: 0 -> 25 trueControlDependence
  19: 0 -> 26 trueControlDependence
  20: 0 -> 27 trueControlDependence
  21: 0 -> 28 trueControlDependence
  22: 0 -> 29 trueControlDependence
  23: 0 -> 3 trueControlDependence
  24: 0 -> 30 trueControlDependence
  25: 0 -> 31 trueControlDependence
  26: 0 -> 32 trueControlDependence
  27: 0 -> 33 trueControlDependence
  28: 0 -> 34 trueControlDependence
  29: 0 -> 35 trueControlDependence
  30: 0 -> 36 trueControlDependence
  31: 0 -> 37 trueControlDependence
  32: 0 -> 38 trueControlDependence
  33: 0 -> 39 trueControlDependence
  34: 0 -> 4 trueControlDependence
  35: 0 -> 40 trueControlDependence
  36: 0 -> 41 trueControlDependence
  37: 0 -> 42 trueControlDependence
  38: 0 -> 43 trueControlDependence
  39: 0 -> 44 trueControlDependence
  40: 0 -> 45 trueControlDependence
  41: 0 -> 46 trueControlDependence
  42: 0 -> 47 trueControlDependence
  43: 0 -> 48 trueControlDependence
  44: 0 -> 49 trueControlDependence
  45: 0 -> 5 trueControlDependence
  46: 0 -> 50 trueControlDependence
  47: 0 -> 51 trueControlDependence
  48: 0 -> 52 trueControlDependence
  49: 0 -> 53 trueControlDependence
  50: 0 -> 54 trueControlDependence
  51: 0 -> 55 trueControlDependence
  52: 0 -> 56 trueControlDependence
  53: 0 -> 57 trueControlDependence
  54: 0 -> 58 trueControlDependence
  55: 0 -> 59 trueControlDependence
  56: 0 -> 6 trueControlDependence
  57: 0 -> 60 trueControlDependence
  58: 0 -> 61 trueControlDependence
  59: 0 -> 62 trueControlDependence
  60: 0 -> 63 trueControlDependence
  61: 0 -> 64 trueControlDependence
  62: 0 -> 65 trueControlDependence
  63: 0 -> 66 trueControlDependence
  64: 0 -> 68 trueControlDependence
  65: 0 -> 7 trueControlDependence
  66: 0 -> 8 trueControlDependence
  67: 0 -> 9 trueControlDependence
  68: 1 -> 11 loopIndependentDefUseDependence menuBar$0
  69: 1 -> 32 loopIndependentDefUseDependence menuBar$0
  70: 1 -> 53 loopIndependentDefUseDependence menuBar$0
  71: 13 -> 10 loopIndependentDefUseDependence menuBar$0.!add
  72: 13 -> 34 outputDependence menuBar$0.!add
  73: 16 -> 17 loopIndependentDefUseDependence this.newAction
  74: 16 -> 17 loopIndependentDefUseDependence this.openAction
  75: 16 -> 17 loopIndependentDefUseDependence this.saveAction
  76: 17 -> 14 loopIndependentDefUseDependence this.!initFileActions
  77: 17 -> 20 loopIndependentDefUseDependence this.newAction
  78: 17 -> 20 loopIndependentDefUseDependence this.openAction
  79: 17 -> 20 loopIndependentDefUseDependence this.saveAction
  80: 17 -> 22 loopIndependentDefUseDependence this.newAction
  81: 17 -> 22 loopIndependentDefUseDependence this.openAction
  82: 17 -> 22 loopIndependentDefUseDependence this.saveAction
  83: 17 -> 68 loopIndependentDefUseDependence this.newAction
  84: 17 -> 68 loopIndependentDefUseDependence this.openAction
  85: 17 -> 68 loopIndependentDefUseDependence this.saveAction
  86: 2 -> 12 declaration
  87: 2 -> 12 loopIndependentDefUseDependence fileMenu$1
  88: 2 -> 21 declaration
  89: 2 -> 21 loopIndependentDefUseDependence fileMenu$1
  90: 2 -> 7 declaration
  91: 2 -> 7 loopIndependentDefUseDependence fileMenu$1
  92: 2 -> 8 declaration
  93: 2 -> 8 loopIndependentDefUseDependence fileMenu$1
  94: 20 -> 22 loopIndependentDefUseDependence this.fileListMenu
  95: 20 -> 22 loopIndependentDefUseDependence this.fileListener
  96: 21 -> 22 summary
  97: 22 -> 18 loopIndependentDefUseDependence this.!initFileMenu
  98: 22 -> 68 loopIndependentDefUseDependence this.fileListMenu
  99: 22 -> 68 loopIndependentDefUseDependence this.fileListener
 100: 23 -> 28 declaration
 101: 23 -> 28 loopIndependentDefUseDependence editMenu$2
 102: 23 -> 29 declaration
 103: 23 -> 29 loopIndependentDefUseDependence editMenu$2
 104: 23 -> 33 declaration
 105: 23 -> 33 loopIndependentDefUseDependence editMenu$2
 106: 23 -> 42 declaration
 107: 23 -> 42 loopIndependentDefUseDependence editMenu$2
 108: 25 -> 26 outputDependence editMenu$2.customMenuLocation
 109: 25 -> 26 outputDependence editMenu$2.menuChangeListener
 110: 25 -> 26 outputDependence editMenu$2.menuEvent
 111: 26 -> 23 loopIndependentDefUseDependence editMenu$2.!JMenu
 112: 26 -> 68 loopIndependentDefUseDependence editMenu$2.customMenuLocation
 113: 26 -> 68 loopIndependentDefUseDependence editMenu$2.menuChangeListener
 114: 26 -> 68 loopIndependentDefUseDependence editMenu$2.menuEvent
 115: 30 -> 27 loopIndependentDefUseDependence editMenu$2.!setMnemonic
 116: 34 -> 31 loopIndependentDefUseDependence menuBar$0.!add
 117: 34 -> 55 outputDependence menuBar$0.!add
 118: 37 -> 38 loopIndependentDefUseDependence this.copyAction
 119: 37 -> 38 loopIndependentDefUseDependence this.cutAction
 120: 37 -> 38 loopIndependentDefUseDependence this.deleteAction
 121: 37 -> 38 loopIndependentDefUseDependence this.pasteAction
 122: 37 -> 38 loopIndependentDefUseDependence this.redoAction
 123: 37 -> 38 loopIndependentDefUseDependence this.undoAction
 124: 38 -> 35 loopIndependentDefUseDependence this.!initEditActions
 125: 38 -> 41 loopIndependentDefUseDependence this.copyAction
 126: 38 -> 41 loopIndependentDefUseDependence this.cutAction
 127: 38 -> 41 loopIndependentDefUseDependence this.deleteAction
 128: 38 -> 41 loopIndependentDefUseDependence this.pasteAction
 129: 38 -> 41 loopIndependentDefUseDependence this.redoAction
 130: 38 -> 41 loopIndependentDefUseDependence this.undoAction
 131: 38 -> 43 loopIndependentDefUseDependence this.copyAction
 132: 38 -> 43 loopIndependentDefUseDependence this.cutAction
 133: 38 -> 43 loopIndependentDefUseDependence this.deleteAction
 134: 38 -> 43 loopIndependentDefUseDependence this.pasteAction
 135: 38 -> 43 loopIndependentDefUseDependence this.redoAction
 136: 38 -> 43 loopIndependentDefUseDependence this.undoAction
 137: 38 -> 68 loopIndependentDefUseDependence this.copyAction
 138: 38 -> 68 loopIndependentDefUseDependence this.cutAction
 139: 38 -> 68 loopIndependentDefUseDependence this.deleteAction
 140: 38 -> 68 loopIndependentDefUseDependence this.pasteAction
 141: 38 -> 68 loopIndependentDefUseDependence this.redoAction
 142: 38 -> 68 loopIndependentDefUseDependence this.undoAction
 143: 4 -> 5 outputDependence fileMenu$1.customMenuLocation
 144: 4 -> 5 outputDependence fileMenu$1.menuChangeListener
 145: 4 -> 5 outputDependence fileMenu$1.menuEvent
 146: 42 -> 43 summary
 147: 43 -> 39 loopIndependentDefUseDependence this.!initEditMenu
 148: 44 -> 49 declaration
 149: 44 -> 49 loopIndependentDefUseDependence windowMenu$3
 150: 44 -> 50 declaration
 151: 44 -> 50 loopIndependentDefUseDependence windowMenu$3
 152: 44 -> 54 declaration
 153: 44 -> 54 loopIndependentDefUseDependence windowMenu$3
 154: 44 -> 61 declaration
 155: 44 -> 61 loopIndependentDefUseDependence windowMenu$3
 156: 44 -> 62 declaration
 157: 44 -> 62 loopIndependentDefUseDependence windowMenu$3
 158: 44 -> 66 declaration
 159: 46 -> 47 outputDependence windowMenu$3.customMenuLocation
 160: 46 -> 47 outputDependence windowMenu$3.menuChangeListener
 161: 46 -> 47 outputDependence windowMenu$3.menuEvent
 162: 47 -> 44 loopIndependentDefUseDependence windowMenu$3.!JMenu
 163: 47 -> 68 loopIndependentDefUseDependence windowMenu$3.customMenuLocation
 164: 47 -> 68 loopIndependentDefUseDependence windowMenu$3.menuChangeListener
 165: 47 -> 68 loopIndependentDefUseDependence windowMenu$3.menuEvent
 166: 5 -> 2 loopIndependentDefUseDependence fileMenu$1.!JMenu
 167: 5 -> 68 loopIndependentDefUseDependence fileMenu$1.customMenuLocation
 168: 5 -> 68 loopIndependentDefUseDependence fileMenu$1.menuChangeListener
 169: 5 -> 68 loopIndependentDefUseDependence fileMenu$1.menuEvent
 170: 51 -> 48 loopIndependentDefUseDependence windowMenu$3.!setMnemonic
 171: 55 -> 52 loopIndependentDefUseDependence menuBar$0.!add
 172: 56 -> 68 loopIndependentDefUseDependence this.windowListener
 173: 59 -> 56 loopIndependentDefUseDependence this.windowListener.!
 174: 62 -> 66 loopIndependentDefUseDependence javax.swing.event.EventListenerList.listenerList
 175: 62 -> 66 loopIndependentDefUseDependence windowMenu$3
 176: 65 -> 62 loopIndependentDefUseDependence .!
 177: 66 -> 60 loopIndependentDefUseDependence windowMenu$3.!addMenuListener
 178: 66 -> 68 loopIndependentDefUseDependence javax.swing.event.EventListenerList.listenerList
 179: 9 -> 6 loopIndependentDefUseDependence fileMenu$1.!setMnemonic
--
   0: pasteAction
   1: 0 -> 1 trueControlDependence
--
   0: initFileMenu( javax.swing.JMenu )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 100 trueControlDependence
   4: 0 -> 101 trueControlDependence
   5: 0 -> 102 trueControlDependence
   6: 0 -> 103 trueControlDependence
   7: 0 -> 104 trueControlDependence
   8: 0 -> 105 trueControlDependence
   9: 0 -> 106 trueControlDependence
  10: 0 -> 107 trueControlDependence
  11: 0 -> 108 trueControlDependence
  12: 0 -> 109 trueControlDependence
  13: 0 -> 11 trueControlDependence
  14: 0 -> 110 trueControlDependence
  15: 0 -> 111 trueControlDependence
  16: 0 -> 112 trueControlDependence
  17: 0 -> 113 trueControlDependence
  18: 0 -> 114 trueControlDependence
  19: 0 -> 115 trueControlDependence
  20: 0 -> 116 trueControlDependence
  21: 0 -> 117 trueControlDependence
  22: 0 -> 118 trueControlDependence
  23: 0 -> 119 trueControlDependence
  24: 0 -> 12 trueControlDependence
  25: 0 -> 120 trueControlDependence
  26: 0 -> 121 trueControlDependence
  27: 0 -> 122 trueControlDependence
  28: 0 -> 123 trueControlDependence
  29: 0 -> 124 trueControlDependence
  30: 0 -> 125 trueControlDependence
  31: 0 -> 126 trueControlDependence
  32: 0 -> 127 trueControlDependence
  33: 0 -> 128 trueControlDependence
  34: 0 -> 129 trueControlDependence
  35: 0 -> 13 trueControlDependence
  36: 0 -> 130 trueControlDependence
  37: 0 -> 131 trueControlDependence
  38: 0 -> 132 trueControlDependence
  39: 0 -> 133 trueControlDependence
  40: 0 -> 134 trueControlDependence
  41: 0 -> 135 trueControlDependence
  42: 0 -> 136 trueControlDependence
  43: 0 -> 137 trueControlDependence
  44: 0 -> 138 trueControlDependence
  45: 0 -> 139 trueControlDependence
  46: 0 -> 14 trueControlDependence
  47: 0 -> 140 trueControlDependence
  48: 0 -> 141 trueControlDependence
  49: 0 -> 142 trueControlDependence
  50: 0 -> 143 trueControlDependence
  51: 0 -> 144 trueControlDependence
  52: 0 -> 145 trueControlDependence
  53: 0 -> 146 trueControlDependence
  54: 0 -> 147 trueControlDependence
  55: 0 -> 148 trueControlDependence
  56: 0 -> 149 trueControlDependence
  57: 0 -> 15 trueControlDependence
  58: 0 -> 150 trueControlDependence
  59: 0 -> 151 trueControlDependence
  60: 0 -> 152 trueControlDependence
  61: 0 -> 153 trueControlDependence
  62: 0 -> 154 trueControlDependence
  63: 0 -> 155 trueControlDependence
  64: 0 -> 157 trueControlDependence
  65: 0 -> 16 trueControlDependence
  66: 0 -> 17 trueControlDependence
  67: 0 -> 18 trueControlDependence
  68: 0 -> 19 trueControlDependence
  69: 0 -> 2 trueControlDependence
  70: 0 -> 20 trueControlDependence
  71: 0 -> 21 trueControlDependence
  72: 0 -> 22 trueControlDependence
  73: 0 -> 23 trueControlDependence
  74: 0 -> 24 trueControlDependence
  75: 0 -> 25 trueControlDependence
  76: 0 -> 26 trueControlDependence
  77: 0 -> 27 trueControlDependence
  78: 0 -> 28 trueControlDependence
  79: 0 -> 29 trueControlDependence
  80: 0 -> 3 trueControlDependence
  81: 0 -> 30 trueControlDependence
  82: 0 -> 31 trueControlDependence
  83: 0 -> 32 trueControlDependence
  84: 0 -> 33 trueControlDependence
  85: 0 -> 34 trueControlDependence
  86: 0 -> 35 trueControlDependence
  87: 0 -> 36 trueControlDependence
  88: 0 -> 37 trueControlDependence
  89: 0 -> 38 trueControlDependence
  90: 0 -> 39 trueControlDependence
  91: 0 -> 4 trueControlDependence
  92: 0 -> 40 trueControlDependence
  93: 0 -> 41 trueControlDependence
  94: 0 -> 42 trueControlDependence
  95: 0 -> 43 trueControlDependence
  96: 0 -> 44 trueControlDependence
  97: 0 -> 45 trueControlDependence
  98: 0 -> 46 trueControlDependence
  99: 0 -> 47 trueControlDependence
 100: 0 -> 48 trueControlDependence
 101: 0 -> 49 trueControlDependence
 102: 0 -> 5 trueControlDependence
 103: 0 -> 50 trueControlDependence
 104: 0 -> 51 trueControlDependence
 105: 0 -> 52 trueControlDependence
 106: 0 -> 53 trueControlDependence
 107: 0 -> 54 trueControlDependence
 108: 0 -> 55 trueControlDependence
 109: 0 -> 56 trueControlDependence
 110: 0 -> 57 trueControlDependence
 111: 0 -> 58 trueControlDependence
 112: 0 -> 59 trueControlDependence
 113: 0 -> 6 trueControlDependence
 114: 0 -> 60 trueControlDependence
 115: 0 -> 61 trueControlDependence
 116: 0 -> 62 trueControlDependence
 117: 0 -> 63 trueControlDependence
 118: 0 -> 64 trueControlDependence
 119: 0 -> 65 trueControlDependence
 120: 0 -> 66 trueControlDependence
 121: 0 -> 67 trueControlDependence
 122: 0 -> 68 trueControlDependence
 123: 0 -> 69 trueControlDependence
 124: 0 -> 7 trueControlDependence
 125: 0 -> 70 trueControlDependence
 126: 0 -> 71 trueControlDependence
 127: 0 -> 72 trueControlDependence
 128: 0 -> 73 trueControlDependence
 129: 0 -> 74 trueControlDependence
 130: 0 -> 75 trueControlDependence
 131: 0 -> 76 trueControlDependence
 132: 0 -> 77 trueControlDependence
 133: 0 -> 78 trueControlDependence
 134: 0 -> 79 trueControlDependence
 135: 0 -> 8 trueControlDependence
 136: 0 -> 80 trueControlDependence
 137: 0 -> 81 trueControlDependence
 138: 0 -> 82 trueControlDependence
 139: 0 -> 83 trueControlDependence
 140: 0 -> 84 trueControlDependence
 141: 0 -> 85 trueControlDependence
 142: 0 -> 86 trueControlDependence
 143: 0 -> 87 trueControlDependence
 144: 0 -> 88 trueControlDependence
 145: 0 -> 89 trueControlDependence
 146: 0 -> 9 trueControlDependence
 147: 0 -> 90 trueControlDependence
 148: 0 -> 91 trueControlDependence
 149: 0 -> 92 trueControlDependence
 150: 0 -> 93 trueControlDependence
 151: 0 -> 94 trueControlDependence
 152: 0 -> 95 trueControlDependence
 153: 0 -> 96 trueControlDependence
 154: 0 -> 97 trueControlDependence
 155: 0 -> 98 trueControlDependence
 156: 0 -> 99 trueControlDependence
 157: 1 -> 3 loopIndependentDefUseDependence menu$0
 158: 1 -> 4 loopIndependentDefUseDependence menu$0
 159: 100 -> 151 loopIndependentDefUseDependence javax.swing.event.EventListenerList.listenerList
 160: 100 -> 94 loopIndependentDefUseDependence saveAsItem$6.!addActionListener
 161: 103 -> 104 loopIndependentDefUseDependence menu$0
 162: 103 -> 104 loopIndependentDefUseDependence menu$0.popupMenu
 163: 103 -> 104 outputDependence menu$0.popupListener
 164: 104 -> 101 loopIndependentDefUseDependence menu$0.!addSeparator
 165: 104 -> 114 loopIndependentDefUseDependence menu$0
 166: 104 -> 115 loopIndependentDefUseDependence menu$0
 167: 104 -> 115 loopIndependentDefUseDependence menu$0.popupMenu
 168: 104 -> 115 outputDependence menu$0.popupListener
 169: 104 -> 136 outputDependence menu$0.!addSeparator
 170: 105 -> 110 loopIndependentDefUseDependence this.fileListMenu
 171: 105 -> 111 loopIndependentDefUseDependence this.fileListMenu
 172: 105 -> 115 loopIndependentDefUseDependence this.fileListMenu
 173: 105 -> 126 loopIndependentDefUseDependence this.fileListMenu
 174: 105 -> 127 loopIndependentDefUseDependence this.fileListMenu
 175: 107 -> 108 outputDependence this.fileListMenu.customMenuLocation
 176: 107 -> 108 outputDependence this.fileListMenu.menuChangeListener
 177: 107 -> 108 outputDependence this.fileListMenu.menuEvent
 178: 108 -> 105 loopIndependentDefUseDependence this.fileListMenu.!JMenu
 179: 108 -> 157 loopIndependentDefUseDependence this.fileListMenu.customMenuLocation
 180: 108 -> 157 loopIndependentDefUseDependence this.fileListMenu.menuChangeListener
 181: 108 -> 157 loopIndependentDefUseDependence this.fileListMenu.menuEvent
 182: 112 -> 109 loopIndependentDefUseDependence this.fileListMenu.!setMnemonic
 183: 115 -> 116 loopIndependentDefUseDependence menu$0
 184: 115 -> 116 loopIndependentDefUseDependence menu$0.popupMenu
 185: 115 -> 116 outputDependence menu$0.popupListener
 186: 116 -> 113 loopIndependentDefUseDependence menu$0.!add
 187: 116 -> 134 loopIndependentDefUseDependence menu$0
 188: 116 -> 135 loopIndependentDefUseDependence menu$0
 189: 116 -> 135 loopIndependentDefUseDependence menu$0.popupMenu
 190: 116 -> 135 outputDependence menu$0.popupListener
 191: 116 -> 148 outputDependence menu$0.!add
 192: 117 -> 122 declaration
 193: 117 -> 122 loopIndependentDefUseDependence emptyListItem$9
 194: 117 -> 123 declaration
 195: 117 -> 123 loopIndependentDefUseDependence emptyListItem$9
 196: 117 -> 127 declaration
 197: 117 -> 127 loopIndependentDefUseDependence emptyListItem$9
 198: 119 -> 120 outputDependence emptyListItem$9.isMouseDragged
 199: 12 -> 13 loopIndependentDefUseDependence newItem$1
 200: 12 -> 13 loopIndependentDefUseDependence newItem$1.defaultIcon
 201: 12 -> 13 loopIndependentDefUseDependence newItem$1.disabledIcon
 202: 120 -> 117 loopIndependentDefUseDependence emptyListItem$9.!JMenuItem
 203: 120 -> 157 loopIndependentDefUseDependence emptyListItem$9.isMouseDragged
 204: 124 -> 121 loopIndependentDefUseDependence emptyListItem$9.!setEnabled
 205: 127 -> 128 loopIndependentDefUseDependence this.fileListMenu
 206: 127 -> 128 loopIndependentDefUseDependence this.fileListMenu.popupMenu
 207: 127 -> 128 outputDependence this.fileListMenu.popupListener
 208: 128 -> 125 loopIndependentDefUseDependence this.fileListMenu.!add
 209: 128 -> 157 loopIndependentDefUseDependence this.fileListMenu
 210: 128 -> 157 loopIndependentDefUseDependence this.fileListMenu.popupListener
 211: 128 -> 157 loopIndependentDefUseDependence this.fileListMenu.popupMenu
 212: 129 -> 157 loopIndependentDefUseDependence this.fileListener
 213: 13 -> 10 loopIndependentDefUseDependence newItem$1.!setIcon
 214: 13 -> 15 loopIndependentDefUseDependence newItem$1
 215: 13 -> 157 loopIndependentDefUseDependence newItem$1.defaultIcon
 216: 13 -> 157 loopIndependentDefUseDependence newItem$1.disabledIcon
 217: 13 -> 16 loopIndependentDefUseDependence newItem$1
 218: 132 -> 129 loopIndependentDefUseDependence this.fileListener.!
 219: 135 -> 136 loopIndependentDefUseDependence menu$0
 220: 135 -> 136 loopIndependentDefUseDependence menu$0.popupMenu
 221: 135 -> 136 outputDependence menu$0.popupListener
 222: 136 -> 133 loopIndependentDefUseDependence menu$0.!addSeparator
 223: 136 -> 146 loopIndependentDefUseDependence menu$0
 224: 136 -> 147 loopIndependentDefUseDependence menu$0
 225: 136 -> 147 loopIndependentDefUseDependence menu$0.popupMenu
 226: 136 -> 147 outputDependence menu$0.popupListener
 227: 137 -> 142 declaration
 228: 137 -> 142 loopIndependentDefUseDependence exitItem$13
 229: 137 -> 143 declaration
 230: 137 -> 143 loopIndependentDefUseDependence exitItem$13
 231: 137 -> 147 declaration
 232: 137 -> 147 loopIndependentDefUseDependence exitItem$13
 233: 137 -> 150 declaration
 234: 137 -> 150 loopIndependentDefUseDependence exitItem$13
 235: 137 -> 151 declaration
 236: 137 -> 151 loopIndependentDefUseDependence exitItem$13
 237: 137 -> 155 declaration
 238: 139 -> 140 outputDependence exitItem$13.isMouseDragged
 239: 140 -> 137 loopIndependentDefUseDependence exitItem$13.!JMenuItem
 240: 140 -> 157 loopIndependentDefUseDependence exitItem$13.isMouseDragged
 241: 144 -> 141 loopIndependentDefUseDependence exitItem$13.!setMnemonic
 242: 147 -> 148 loopIndependentDefUseDependence menu$0
 243: 147 -> 148 loopIndependentDefUseDependence menu$0.popupMenu
 244: 147 -> 148 outputDependence menu$0.popupListener
 245: 148 -> 145 loopIndependentDefUseDependence menu$0.!add
 246: 148 -> 157 loopIndependentDefUseDependence menu$0.popupListener
 247: 148 -> 157 loopIndependentDefUseDependence menu$0.popupMenu
 248: 151 -> 155 loopIndependentDefUseDependence exitItem$13
 249: 151 -> 155 loopIndependentDefUseDependence javax.swing.event.EventListenerList.listenerList
 250: 154 -> 151 loopIndependentDefUseDependence .!
 251: 155 -> 149 loopIndependentDefUseDependence exitItem$13.!addActionListener
 252: 155 -> 157 loopIndependentDefUseDependence javax.swing.event.EventListenerList.listenerList
 253: 16 -> 20 loopIndependentDefUseDependence newItem$1
 254: 16 -> 20 loopIndependentDefUseDependence newItem$1.accelerator
 255: 19 -> 16 loopIndependentDefUseDependence this.!getKeyStroke
 256: 19 -> 38 outputDependence this.!getKeyStroke
 257: 2 -> 11 declaration
 258: 2 -> 11 loopIndependentDefUseDependence newItem$1
 259: 2 -> 12 declaration
 260: 2 -> 12 loopIndependentDefUseDependence newItem$1
 261: 2 -> 13 declaration
 262: 2 -> 15 declaration
 263: 2 -> 16 declaration
 264: 2 -> 20 declaration
 265: 2 -> 7 declaration
 266: 2 -> 7 loopIndependentDefUseDependence newItem$1
 267: 2 -> 8 declaration
 268: 2 -> 8 loopIndependentDefUseDependence newItem$1
 269: 20 -> 14 loopIndependentDefUseDependence newItem$1.!setAccelerator
 270: 20 -> 157 loopIndependentDefUseDependence newItem$1.accelerator
 271: 21 -> 26 declaration
 272: 21 -> 26 loopIndependentDefUseDependence openItem$2
 273: 21 -> 27 declaration
 274: 21 -> 27 loopIndependentDefUseDependence openItem$2
 275: 21 -> 30 declaration
 276: 21 -> 30 loopIndependentDefUseDependence openItem$2
 277: 21 -> 31 declaration
 278: 21 -> 31 loopIndependentDefUseDependence openItem$2
 279: 21 -> 32 declaration
 280: 21 -> 34 declaration
 281: 21 -> 35 declaration
 282: 21 -> 39 declaration
 283: 23 -> 24 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 284: 23 -> 24 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 285: 23 -> 24 loopIndependentDefUseDependence menu$0
 286: 24 -> 21 loopIndependentDefUseDependence menu$0.!add
 287: 24 -> 26 loopIndependentDefUseDependence menu$0.!add
 288: 24 -> 27 loopIndependentDefUseDependence menu$0.!add
 289: 24 -> 30 loopIndependentDefUseDependence menu$0.!add
 290: 24 -> 49 loopIndependentDefUseDependence menu$0
 291: 24 -> 50 loopIndependentDefUseDependence menu$0
 292: 24 -> 51 outputDependence menu$0.!add
 293: 24 -> 65 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 294: 24 -> 65 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 295: 28 -> 25 loopIndependentDefUseDependence openItem$2.!setMnemonic
 296: 31 -> 32 loopIndependentDefUseDependence openItem$2
 297: 31 -> 32 loopIndependentDefUseDependence openItem$2.defaultIcon
 298: 31 -> 32 loopIndependentDefUseDependence openItem$2.disabledIcon
 299: 32 -> 157 loopIndependentDefUseDependence openItem$2.defaultIcon
 300: 32 -> 157 loopIndependentDefUseDependence openItem$2.disabledIcon
 301: 32 -> 29 loopIndependentDefUseDependence openItem$2.!setIcon
 302: 32 -> 34 loopIndependentDefUseDependence openItem$2
 303: 32 -> 35 loopIndependentDefUseDependence openItem$2
 304: 35 -> 39 loopIndependentDefUseDependence openItem$2
 305: 35 -> 39 loopIndependentDefUseDependence openItem$2.accelerator
 306: 38 -> 35 loopIndependentDefUseDependence this.!getKeyStroke
 307: 38 -> 80 outputDependence this.!getKeyStroke
 308: 39 -> 157 loopIndependentDefUseDependence openItem$2.accelerator
 309: 39 -> 33 loopIndependentDefUseDependence openItem$2.!setAccelerator
 310: 4 -> 5 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 311: 4 -> 5 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 312: 4 -> 5 loopIndependentDefUseDependence menu$0
 313: 40 -> 45 declaration
 314: 40 -> 45 loopIndependentDefUseDependence closeItem$3
 315: 40 -> 46 declaration
 316: 40 -> 46 loopIndependentDefUseDependence closeItem$3
 317: 40 -> 50 declaration
 318: 40 -> 50 loopIndependentDefUseDependence closeItem$3
 319: 40 -> 53 declaration
 320: 40 -> 53 loopIndependentDefUseDependence closeItem$3
 321: 40 -> 54 declaration
 322: 40 -> 54 loopIndependentDefUseDependence closeItem$3
 323: 40 -> 58 declaration
 324: 42 -> 43 outputDependence closeItem$3.isMouseDragged
 325: 43 -> 157 loopIndependentDefUseDependence closeItem$3.isMouseDragged
 326: 43 -> 40 loopIndependentDefUseDependence closeItem$3.!JMenuItem
 327: 47 -> 44 loopIndependentDefUseDependence closeItem$3.!setMnemonic
 328: 5 -> 11 loopIndependentDefUseDependence menu$0.!add
 329: 5 -> 2 loopIndependentDefUseDependence menu$0.!add
 330: 5 -> 22 loopIndependentDefUseDependence menu$0
 331: 5 -> 23 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 332: 5 -> 23 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 333: 5 -> 23 loopIndependentDefUseDependence menu$0
 334: 5 -> 24 outputDependence menu$0.!add
 335: 5 -> 7 loopIndependentDefUseDependence menu$0.!add
 336: 5 -> 8 loopIndependentDefUseDependence menu$0.!add
 337: 50 -> 51 loopIndependentDefUseDependence menu$0
 338: 50 -> 51 loopIndependentDefUseDependence menu$0.popupMenu
 339: 50 -> 51 outputDependence menu$0.popupListener
 340: 51 -> 48 loopIndependentDefUseDependence menu$0.!add
 341: 51 -> 60 loopIndependentDefUseDependence menu$0
 342: 51 -> 61 loopIndependentDefUseDependence menu$0
 343: 51 -> 61 loopIndependentDefUseDependence menu$0.popupMenu
 344: 51 -> 61 outputDependence menu$0.popupListener
 345: 51 -> 66 outputDependence menu$0.!add
 346: 54 -> 58 loopIndependentDefUseDependence closeItem$3
 347: 54 -> 58 loopIndependentDefUseDependence javax.swing.event.EventListenerList.listenerList
 348: 57 -> 54 loopIndependentDefUseDependence .!
 349: 57 -> 99 outputDependence .!
 350: 58 -> 52 loopIndependentDefUseDependence closeItem$3.!addActionListener
 351: 58 -> 96 loopIndependentDefUseDependence javax.swing.event.EventListenerList.listenerList
 352: 61 -> 62 loopIndependentDefUseDependence menu$0
 353: 61 -> 62 loopIndependentDefUseDependence menu$0.popupMenu
 354: 61 -> 62 outputDependence menu$0.popupListener
 355: 62 -> 104 outputDependence menu$0.!addSeparator
 356: 62 -> 59 loopIndependentDefUseDependence menu$0.!addSeparator
 357: 62 -> 64 loopIndependentDefUseDependence menu$0
 358: 62 -> 65 loopIndependentDefUseDependence menu$0
 359: 62 -> 65 loopIndependentDefUseDependence menu$0.popupMenu
 360: 62 -> 66 loopIndependentDefUseDependence menu$0.popupMenu
 361: 62 -> 92 loopIndependentDefUseDependence menu$0.popupMenu
 362: 62 -> 92 outputDependence menu$0.popupListener
 363: 63 -> 68 declaration
 364: 63 -> 68 loopIndependentDefUseDependence saveItem$5
 365: 63 -> 69 declaration
 366: 63 -> 69 loopIndependentDefUseDependence saveItem$5
 367: 63 -> 72 declaration
 368: 63 -> 72 loopIndependentDefUseDependence saveItem$5
 369: 63 -> 73 declaration
 370: 63 -> 73 loopIndependentDefUseDependence saveItem$5
 371: 63 -> 74 declaration
 372: 63 -> 76 declaration
 373: 63 -> 77 declaration
 374: 63 -> 81 declaration
 375: 65 -> 66 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 376: 65 -> 66 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 377: 65 -> 66 loopIndependentDefUseDependence menu$0
 378: 66 -> 157 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 379: 66 -> 157 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 380: 66 -> 63 loopIndependentDefUseDependence menu$0.!add
 381: 66 -> 68 loopIndependentDefUseDependence menu$0.!add
 382: 66 -> 69 loopIndependentDefUseDependence menu$0.!add
 383: 66 -> 72 loopIndependentDefUseDependence menu$0.!add
 384: 66 -> 91 loopIndependentDefUseDependence menu$0
 385: 66 -> 92 loopIndependentDefUseDependence menu$0
 386: 66 -> 93 outputDependence menu$0.!add
 387: 70 -> 67 loopIndependentDefUseDependence saveItem$5.!setMnemonic
 388: 73 -> 74 loopIndependentDefUseDependence saveItem$5
 389: 73 -> 74 loopIndependentDefUseDependence saveItem$5.defaultIcon
 390: 73 -> 74 loopIndependentDefUseDependence saveItem$5.disabledIcon
 391: 74 -> 157 loopIndependentDefUseDependence saveItem$5.defaultIcon
 392: 74 -> 157 loopIndependentDefUseDependence saveItem$5.disabledIcon
 393: 74 -> 71 loopIndependentDefUseDependence saveItem$5.!setIcon
 394: 74 -> 76 loopIndependentDefUseDependence saveItem$5
 395: 74 -> 77 loopIndependentDefUseDependence saveItem$5
 396: 77 -> 81 loopIndependentDefUseDependence saveItem$5
 397: 77 -> 81 loopIndependentDefUseDependence saveItem$5.accelerator
 398: 80 -> 77 loopIndependentDefUseDependence this.!getKeyStroke
 399: 81 -> 157 loopIndependentDefUseDependence saveItem$5.accelerator
 400: 81 -> 75 loopIndependentDefUseDependence saveItem$5.!setAccelerator
 401: 82 -> 100 declaration
 402: 82 -> 87 declaration
 403: 82 -> 87 loopIndependentDefUseDependence saveAsItem$6
 404: 82 -> 88 declaration
 405: 82 -> 88 loopIndependentDefUseDependence saveAsItem$6
 406: 82 -> 92 declaration
 407: 82 -> 92 loopIndependentDefUseDependence saveAsItem$6
 408: 82 -> 95 declaration
 409: 82 -> 95 loopIndependentDefUseDependence saveAsItem$6
 410: 82 -> 96 declaration
 411: 82 -> 96 loopIndependentDefUseDependence saveAsItem$6
 412: 84 -> 85 outputDependence saveAsItem$6.isMouseDragged
 413: 85 -> 157 loopIndependentDefUseDependence saveAsItem$6.isMouseDragged
 414: 85 -> 82 loopIndependentDefUseDependence saveAsItem$6.!JMenuItem
 415: 89 -> 86 loopIndependentDefUseDependence saveAsItem$6.!setMnemonic
 416: 9 -> 6 loopIndependentDefUseDependence newItem$1.!setMnemonic
 417: 92 -> 93 loopIndependentDefUseDependence menu$0
 418: 92 -> 93 loopIndependentDefUseDependence menu$0.popupMenu
 419: 92 -> 93 outputDependence menu$0.popupListener
 420: 93 -> 102 loopIndependentDefUseDependence menu$0
 421: 93 -> 103 loopIndependentDefUseDependence menu$0
 422: 93 -> 103 loopIndependentDefUseDependence menu$0.popupMenu
 423: 93 -> 103 outputDependence menu$0.popupListener
 424: 93 -> 116 outputDependence menu$0.!add
 425: 93 -> 90 loopIndependentDefUseDependence menu$0.!add
 426: 96 -> 100 loopIndependentDefUseDependence javax.swing.event.EventListenerList.listenerList
 427: 96 -> 100 loopIndependentDefUseDependence saveAsItem$6
 428: 99 -> 154 outputDependence .!
 429: 99 -> 96 loopIndependentDefUseDependence .!
--
   0: updateUndoState( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 26 trueControlDependence
   4: 0 -> 3 trueControlDependence
   5: 0 -> 4 trueControlDependence
   6: 0 -> 5 trueControlDependence
   7: 1 -> 5 declaration
   8: 1 -> 5 loopIndependentDefUseDependence canvas$0
   9: 1 -> 9 declaration
  10: 1 -> 9 loopIndependentDefUseDependence canvas$0
  11: 11 -> 12 loopIndependentDefUseDependence canvas$0.!getUndoManager
  12: 11 -> 13 loopIndependentDefUseDependence canvas$0.!getUndoManager
  13: 11 -> 14 loopIndependentDefUseDependence canvas$0.!getUndoManager
  14: 11 -> 8 loopIndependentDefUseDependence canvas$0.!getUndoManager
  15: 12 -> 16 trueControlDependence
  16: 12 -> 17 trueControlDependence
  17: 12 -> 18 trueControlDependence
  18: 12 -> 19 trueControlDependence
  19: 12 -> 20 falseControlDependence
  20: 12 -> 21 trueControlDependence
  21: 12 -> 22 falseControlDependence
  22: 12 -> 23 trueControlDependence
  23: 15 -> 12 loopIndependentDefUseDependence undoManager$1.!canUndo
  24: 19 -> 16 loopIndependentDefUseDependence this.undoAction.!setEnabled
  25: 23 -> 20 loopIndependentDefUseDependence this.undoAction.!setEnabled
  26: 4 -> 1 loopIndependentDefUseDependence this.tabbedCanvas.!getCurrentCanvas
  27: 4 -> 5 loopIndependentDefUseDependence this.tabbedCanvas.!getCurrentCanvas
  28: 4 -> 9 loopIndependentDefUseDependence this.tabbedCanvas.!getCurrentCanvas
  29: 5 -> 10 falseControlDependence
  30: 5 -> 11 trueControlDependence
  31: 5 -> 12 falseControlDependence
  32: 5 -> 13 trueControlDependence
  33: 5 -> 14 falseControlDependence
  34: 5 -> 15 trueControlDependence
  35: 5 -> 6 trueControlDependence
  36: 5 -> 8 falseControlDependence
  37: 5 -> 9 trueControlDependence
  38: 6 -> 10 fallThroughControlDependence
  39: 6 -> 11 trueControlDependence
  40: 6 -> 12 fallThroughControlDependence
  41: 6 -> 13 trueControlDependence
  42: 6 -> 14 fallThroughControlDependence
  43: 6 -> 15 trueControlDependence
  44: 6 -> 8 fallThroughControlDependence
  45: 6 -> 9 trueControlDependence
  46: 8 -> 12 declaration
  47: 8 -> 12 loopIndependentDefUseDependence undoManager$1
  48: 8 -> 13 declaration
  49: 8 -> 13 loopIndependentDefUseDependence undoManager$1
  50: 8 -> 14 declaration
  51: 8 -> 14 loopIndependentDefUseDependence undoManager$1
--
   0: saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 16 trueControlDependence
   8: 0 -> 2 trueControlDependence
   9: 0 -> 4 trueControlDependence
  10: 0 -> 5 trueControlDependence
  11: 0 -> 6 trueControlDependence
  12: 0 -> 7 trueControlDependence
  13: 0 -> 8 trueControlDependence
  14: 0 -> 9 trueControlDependence
  15: 11 -> 8 loopIndependentDefUseDependence canvas$0.!getFigureManager
  16: 13 -> 7 loopIndependentDefUseDependence canvas$0.!getFigureManager.!getFilename
  17: 14 -> 3 loopIndependentDefUseDependence this.!saveFile
  18: 2 -> 6 loopIndependentDefUseDependence canvas$0
  19: 2 -> 9 loopIndependentDefUseDependence canvas$0
  20: 3 -> 16 loopIndependentDefUseDependence $_
  21: 5 -> 1 exceptionCatch
  22: 5 -> 3 trueControlDependence
--
   0: buildRecentFileMenu( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 19 trueControlDependence
   3: 0 -> 2 trueControlDependence
   4: 0 -> 3 trueControlDependence
   5: 0 -> 4 trueControlDependence
   6: 0 -> 5 trueControlDependence
   7: 12 -> 13 loopIndependentDefUseDependence this.fileListMenu
   8: 12 -> 13 loopIndependentDefUseDependence this.fileListMenu.popupMenu
   9: 12 -> 13 outputDependence this.fileListMenu.popupListener
  10: 13 -> 10 loopIndependentDefUseDependence this.fileListMenu.!add
  11: 13 -> 11 loopCarriedDefUseDependence this.fileListMenu 5
  12: 13 -> 12 loopCarriedDefUseDependence this.fileListMenu 5
  13: 13 -> 12 loopCarriedDefUseDependence this.fileListMenu.popupMenu 5
  14: 13 -> 12 outputDependence this.fileListMenu.popupListener
  15: 13 -> 13 defOrderDependence this.fileListMenu.!add
  16: 13 -> 19 loopIndependentDefUseDependence this.fileListMenu
  17: 13 -> 19 loopIndependentDefUseDependence this.fileListMenu.popupListener
  18: 13 -> 19 loopIndependentDefUseDependence this.fileListMenu.popupMenu
  19: 16 -> 17 loopIndependentDefUseDependence fileItem$2
  20: 16 -> 17 loopIndependentDefUseDependence javax.swing.event.EventListenerList.listenerList
  21: 17 -> 14 loopIndependentDefUseDependence fileItem$2.!addActionListener
  22: 17 -> 16 loopCarriedDefUseDependence javax.swing.event.EventListenerList.listenerList 5
  23: 17 -> 17 defOrderDependence fileItem$2.!addActionListener
  24: 17 -> 19 loopIndependentDefUseDependence javax.swing.event.EventListenerList.listenerList
  25: 17 -> 6 defOrderDependence fileItem$2
  26: 3 -> 4 loopIndependentDefUseDependence this.fileListMenu
  27: 3 -> 4 outputDependence java.awt.Component.parent
  28: 4 -> 1 loopIndependentDefUseDependence this.fileListMenu.!removeAll
  29: 4 -> 11 loopIndependentDefUseDependence this.fileListMenu
  30: 4 -> 12 loopIndependentDefUseDependence this.fileListMenu
  31: 4 -> 19 loopIndependentDefUseDependence java.awt.Component.parent
  32: 4 -> 19 loopIndependentDefUseDependence this.fileListMenu
  33: 5 -> 10 trueControlDependence
  34: 5 -> 11 trueControlDependence
  35: 5 -> 12 trueControlDependence
  36: 5 -> 13 trueControlDependence
  37: 5 -> 14 trueControlDependence
  38: 5 -> 15 trueControlDependence
  39: 5 -> 16 trueControlDependence
  40: 5 -> 17 trueControlDependence
  41: 5 -> 6 trueControlDependence
  42: 5 -> 7 trueControlDependence
  43: 5 -> 8 trueControlDependence
  44: 5 -> 9 trueControlDependence
  45: 6 -> 12 declaration
  46: 6 -> 12 loopIndependentDefUseDependence fileItem$2
  47: 6 -> 15 declaration
  48: 6 -> 15 loopIndependentDefUseDependence fileItem$2
  49: 6 -> 16 declaration
  50: 6 -> 16 loopIndependentDefUseDependence fileItem$2
  51: 6 -> 17 declaration
  52: 8 -> 9 outputDependence fileItem$2.isMouseDragged
  53: 9 -> 19 loopIndependentDefUseDependence fileItem$2.isMouseDragged
  54: 9 -> 6 loopIndependentDefUseDependence fileItem$2.!JMenuItem
  55: 9 -> 8 outputDependence fileItem$2.isMouseDragged
  56: 9 -> 9 defOrderDependence fileItem$2.!JMenuItem
--
   0: openFile( java.lang.String )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 2 trueControlDependence
   7: 0 -> 3 trueControlDependence
   8: 0 -> 4 trueControlDependence
   9: 0 -> 5 trueControlDependence
  10: 0 -> 6 trueControlDependence
  11: 0 -> 67 trueControlDependence
  12: 0 -> 7 trueControlDependence
  13: 0 -> 8 trueControlDependence
  14: 0 -> 9 trueControlDependence
  15: 13 -> 15 loopIndependentDefUseDependence this.tabbedCanvas.!getCanvas
  16: 13 -> 39 loopIndependentDefUseDependence this.tabbedCanvas.!getCanvas
  17: 13 -> 53 loopIndependentDefUseDependence this.tabbedCanvas.!getCanvas
  18: 13 -> 62 loopIndependentDefUseDependence this.tabbedCanvas.!getCanvas
  19: 13 -> 63 loopIndependentDefUseDependence this.tabbedCanvas.!getCanvas
  20: 13 -> 9 loopIndependentDefUseDependence this.tabbedCanvas.!getCanvas
  21: 14 -> 19 trueControlDependence
  22: 14 -> 20 trueControlDependence
  23: 14 -> 21 trueControlDependence
  24: 14 -> 24 trueControlDependence
  25: 14 -> 25 falseControlDependence
  26: 14 -> 26 trueControlDependence
  27: 17 -> 14 loopIndependentDefUseDependence canvas$1.!hasChanged
  28: 20 -> 1 exceptionCatch
  29: 20 -> 18 trueControlDependence
  30: 20 -> 22 trueControlDependence
  31: 21 -> 18 loopIndependentDefUseDependence this.!showMessageDialog
  32: 21 -> 49 outputDependence this.!showMessageDialog
  33: 22 -> 24 trueControlDependence
  34: 22 -> 25 fallThroughControlDependence
  35: 22 -> 26 trueControlDependence
  36: 22 -> 38 trueControlDependence
  37: 22 -> 39 trueControlDependence
  38: 22 -> 40 trueControlDependence
  39: 22 -> 41 trueControlDependence
  40: 22 -> 42 trueControlDependence
  41: 22 -> 43 trueControlDependence
  42: 22 -> 44 trueControlDependence
  43: 22 -> 50 outputDependence $_
  44: 22 -> 65 outputDependence $_
  45: 23 -> 27 declaration
  46: 23 -> 27 loopIndependentDefUseDependence confirm$2
  47: 25 -> 1 exceptionCatch
  48: 25 -> 23 trueControlDependence
  49: 25 -> 27 trueControlDependence
  50: 26 -> 23 loopIndependentDefUseDependence this.!showConfirmDialog
  51: 27 -> 28 trueControlDependence
  52: 27 -> 38 trueControlDependence
  53: 27 -> 39 trueControlDependence
  54: 27 -> 40 falseControlDependence
  55: 27 -> 41 trueControlDependence
  56: 27 -> 42 falseControlDependence
  57: 27 -> 43 trueControlDependence
  58: 27 -> 44 trueControlDependence
  59: 28 -> 38 trueControlDependence
  60: 28 -> 39 trueControlDependence
  61: 28 -> 40 fallThroughControlDependence
  62: 28 -> 41 trueControlDependence
  63: 28 -> 42 fallThroughControlDependence
  64: 28 -> 43 trueControlDependence
  65: 28 -> 44 trueControlDependence
  66: 28 -> 67 loopIndependentDefUseDependence $_
  67: 3 -> 12 loopIndependentDefUseDependence filename$0
  68: 3 -> 20 loopIndependentDefUseDependence filename$0
  69: 3 -> 34 loopIndependentDefUseDependence filename$0
  70: 3 -> 43 loopIndependentDefUseDependence filename$0
  71: 3 -> 48 loopIndependentDefUseDependence filename$0
  72: 3 -> 59 loopIndependentDefUseDependence filename$0
  73: 3 -> 7 loopIndependentDefUseDependence filename$0
  74: 31 -> 39 loopIndependentDefUseDependence canvas$1
  75: 31 -> 53 loopIndependentDefUseDependence canvas$1
  76: 31 -> 62 loopIndependentDefUseDependence canvas$1
  77: 31 -> 63 loopIndependentDefUseDependence canvas$1
  78: 33 -> 35 loopIndependentDefUseDependence this.tabbedCanvas.selectedTab
  79: 34 -> 35 summary
  80: 35 -> 31 loopIndependentDefUseDependence this.tabbedCanvas.!openTab
  81: 35 -> 39 loopIndependentDefUseDependence this.tabbedCanvas.!openTab
  82: 35 -> 53 loopIndependentDefUseDependence this.tabbedCanvas.!openTab
  83: 35 -> 62 loopIndependentDefUseDependence this.tabbedCanvas.!openTab
  84: 35 -> 63 loopIndependentDefUseDependence this.tabbedCanvas.!openTab
  85: 35 -> 67 loopIndependentDefUseDependence this.tabbedCanvas.selectedTab
  86: 37 -> 45 declaration
  87: 37 -> 45 loopIndependentDefUseDependence result$3
  88: 4 -> 15 declaration
  89: 4 -> 15 loopIndependentDefUseDependence canvas$1
  90: 4 -> 31 declaration
  91: 4 -> 31 outputDependence canvas$1
  92: 4 -> 39 declaration
  93: 4 -> 39 loopIndependentDefUseDependence canvas$1
  94: 4 -> 53 declaration
  95: 4 -> 53 loopIndependentDefUseDependence canvas$1
  96: 4 -> 62 declaration
  97: 4 -> 62 loopIndependentDefUseDependence canvas$1
  98: 4 -> 63 declaration
  99: 4 -> 63 loopIndependentDefUseDependence canvas$1
 100: 4 -> 9 declaration
 101: 4 -> 9 loopIndependentDefUseDependence canvas$1
 102: 41 -> 38 loopIndependentDefUseDependence canvas$1.!getFigureManager
 103: 41 -> 42 loopIndependentDefUseDependence canvas$1.!getFigureManager
 104: 42 -> 2 exceptionCatch
 105: 42 -> 37 trueControlDependence
 106: 42 -> 44 loopIndependentDefUseDependence canvas$1.!getFigureManager
 107: 42 -> 45 trueControlDependence
 108: 43 -> 44 summary
 109: 44 -> 37 loopIndependentDefUseDependence canvas$1.!getFigureManager.!load
 110: 45 -> 47 trueControlDependence
 111: 45 -> 48 trueControlDependence
 112: 45 -> 49 trueControlDependence
 113: 45 -> 52 falseControlDependence
 114: 45 -> 53 trueControlDependence
 115: 45 -> 54 falseControlDependence
 116: 45 -> 55 trueControlDependence
 117: 45 -> 56 trueControlDependence
 118: 45 -> 57 falseControlDependence
 119: 45 -> 58 trueControlDependence
 120: 45 -> 59 falseControlDependence
 121: 45 -> 60 trueControlDependence
 122: 45 -> 61 falseControlDependence
 123: 45 -> 62 trueControlDependence
 124: 45 -> 63 falseControlDependence
 125: 45 -> 64 trueControlDependence
 126: 45 -> 65 falseControlDependence
 127: 48 -> 1 exceptionCatch
 128: 48 -> 46 trueControlDependence
 129: 48 -> 50 trueControlDependence
 130: 49 -> 46 loopIndependentDefUseDependence this.!showMessageDialog
 131: 50 -> 52 fallThroughControlDependence
 132: 50 -> 53 trueControlDependence
 133: 50 -> 54 fallThroughControlDependence
 134: 50 -> 55 trueControlDependence
 135: 50 -> 56 trueControlDependence
 136: 50 -> 57 fallThroughControlDependence
 137: 50 -> 58 trueControlDependence
 138: 50 -> 59 fallThroughControlDependence
 139: 50 -> 60 trueControlDependence
 140: 50 -> 61 fallThroughControlDependence
 141: 50 -> 62 trueControlDependence
 142: 50 -> 63 fallThroughControlDependence
 143: 50 -> 64 trueControlDependence
 144: 50 -> 65 fallThroughControlDependence
 145: 50 -> 67 loopIndependentDefUseDependence $_
 146: 54 -> 56 loopIndependentDefUseDependence canvas$1.changed
 147: 55 -> 56 summary
 148: 56 -> 52 loopIndependentDefUseDependence canvas$1.!setChanged
 149: 56 -> 67 loopIndependentDefUseDependence canvas$1.changed
 150: 59 -> 60 loopIndependentDefUseDependence this.tool
 151: 59 -> 60 loopIndependentDefUseDependence this.tool.title
 152: 60 -> 57 loopIndependentDefUseDependence this.tool.!setTitle
 153: 60 -> 67 loopIndependentDefUseDependence this.tool
 154: 60 -> 67 loopIndependentDefUseDependence this.tool.title
 155: 64 -> 61 loopIndependentDefUseDependence canvas$1.!repaint
 156: 65 -> 67 loopIndependentDefUseDependence $_
 157: 8 -> 13 outputDependence this.tabbedCanvas.!getCanvas
 158: 8 -> 4 loopIndependentDefUseDependence this.tabbedCanvas.!getCanvas
 159: 9 -> 14 trueControlDependence
 160: 9 -> 15 trueControlDependence
 161: 9 -> 16 trueControlDependence
 162: 9 -> 17 trueControlDependence
 163: 9 -> 31 falseControlDependence
 164: 9 -> 32 trueControlDependence
 165: 9 -> 33 falseControlDependence
 166: 9 -> 34 trueControlDependence
 167: 9 -> 35 trueControlDependence
 168: 9 -> 38 trueControlDependence
 169: 9 -> 39 trueControlDependence
 170: 9 -> 40 falseControlDependence
 171: 9 -> 41 trueControlDependence
 172: 9 -> 42 falseControlDependence
 173: 9 -> 43 trueControlDependence
 174: 9 -> 44 trueControlDependence
--
   0: openAction
   1: 0 -> 1 trueControlDependence
--
   0: closeFile( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 12 trueControlDependence
   4: 0 -> 2 trueControlDependence
   5: 0 -> 3 trueControlDependence
   6: 0 -> 4 trueControlDependence
   7: 0 -> 5 trueControlDependence
   8: 0 -> 7 trueControlDependence
   9: 0 -> 8 trueControlDependence
  10: 0 -> 9 trueControlDependence
  11: 10 -> 12 loopIndependentDefUseDependence this.tabbedCanvas
  12: 10 -> 12 loopIndependentDefUseDependence this.tabbedCanvas.selectedTab
  13: 10 -> 6 loopIndependentDefUseDependence this.!closeFile
  14: 2 -> 9 declaration
  15: 2 -> 9 loopIndependentDefUseDependence canvas$0
  16: 5 -> 2 loopIndependentDefUseDependence this.tabbedCanvas.!getCurrentCanvas
  17: 5 -> 9 loopIndependentDefUseDependence this.tabbedCanvas.!getCurrentCanvas
  18: 8 -> 1 exceptionCatch
  19: 8 -> 10 loopIndependentDefUseDependence this.tabbedCanvas
  20: 8 -> 10 loopIndependentDefUseDependence this.tabbedCanvas.selectedTab
  21: 8 -> 6 trueControlDependence
--
   0: initEditMenu( javax.swing.JMenu )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 100 trueControlDependence
   4: 0 -> 101 trueControlDependence
   5: 0 -> 102 trueControlDependence
   6: 0 -> 103 trueControlDependence
   7: 0 -> 104 trueControlDependence
   8: 0 -> 105 trueControlDependence
   9: 0 -> 106 trueControlDependence
  10: 0 -> 107 trueControlDependence
  11: 0 -> 108 trueControlDependence
  12: 0 -> 109 trueControlDependence
  13: 0 -> 11 trueControlDependence
  14: 0 -> 110 trueControlDependence
  15: 0 -> 111 trueControlDependence
  16: 0 -> 112 trueControlDependence
  17: 0 -> 113 trueControlDependence
  18: 0 -> 114 trueControlDependence
  19: 0 -> 115 trueControlDependence
  20: 0 -> 116 trueControlDependence
  21: 0 -> 117 trueControlDependence
  22: 0 -> 118 trueControlDependence
  23: 0 -> 119 trueControlDependence
  24: 0 -> 12 trueControlDependence
  25: 0 -> 120 trueControlDependence
  26: 0 -> 121 trueControlDependence
  27: 0 -> 122 trueControlDependence
  28: 0 -> 123 trueControlDependence
  29: 0 -> 124 trueControlDependence
  30: 0 -> 125 trueControlDependence
  31: 0 -> 126 trueControlDependence
  32: 0 -> 127 trueControlDependence
  33: 0 -> 128 trueControlDependence
  34: 0 -> 129 trueControlDependence
  35: 0 -> 13 trueControlDependence
  36: 0 -> 130 trueControlDependence
  37: 0 -> 131 trueControlDependence
  38: 0 -> 132 trueControlDependence
  39: 0 -> 133 trueControlDependence
  40: 0 -> 134 trueControlDependence
  41: 0 -> 135 trueControlDependence
  42: 0 -> 136 trueControlDependence
  43: 0 -> 137 trueControlDependence
  44: 0 -> 138 trueControlDependence
  45: 0 -> 139 trueControlDependence
  46: 0 -> 14 trueControlDependence
  47: 0 -> 140 trueControlDependence
  48: 0 -> 141 trueControlDependence
  49: 0 -> 142 trueControlDependence
  50: 0 -> 143 trueControlDependence
  51: 0 -> 144 trueControlDependence
  52: 0 -> 145 trueControlDependence
  53: 0 -> 146 trueControlDependence
  54: 0 -> 147 trueControlDependence
  55: 0 -> 149 trueControlDependence
  56: 0 -> 15 trueControlDependence
  57: 0 -> 16 trueControlDependence
  58: 0 -> 17 trueControlDependence
  59: 0 -> 18 trueControlDependence
  60: 0 -> 19 trueControlDependence
  61: 0 -> 2 trueControlDependence
  62: 0 -> 20 trueControlDependence
  63: 0 -> 21 trueControlDependence
  64: 0 -> 22 trueControlDependence
  65: 0 -> 23 trueControlDependence
  66: 0 -> 24 trueControlDependence
  67: 0 -> 25 trueControlDependence
  68: 0 -> 26 trueControlDependence
  69: 0 -> 27 trueControlDependence
  70: 0 -> 28 trueControlDependence
  71: 0 -> 29 trueControlDependence
  72: 0 -> 3 trueControlDependence
  73: 0 -> 30 trueControlDependence
  74: 0 -> 31 trueControlDependence
  75: 0 -> 32 trueControlDependence
  76: 0 -> 33 trueControlDependence
  77: 0 -> 34 trueControlDependence
  78: 0 -> 35 trueControlDependence
  79: 0 -> 36 trueControlDependence
  80: 0 -> 37 trueControlDependence
  81: 0 -> 38 trueControlDependence
  82: 0 -> 39 trueControlDependence
  83: 0 -> 4 trueControlDependence
  84: 0 -> 40 trueControlDependence
  85: 0 -> 41 trueControlDependence
  86: 0 -> 42 trueControlDependence
  87: 0 -> 43 trueControlDependence
  88: 0 -> 44 trueControlDependence
  89: 0 -> 45 trueControlDependence
  90: 0 -> 46 trueControlDependence
  91: 0 -> 47 trueControlDependence
  92: 0 -> 48 trueControlDependence
  93: 0 -> 49 trueControlDependence
  94: 0 -> 5 trueControlDependence
  95: 0 -> 50 trueControlDependence
  96: 0 -> 51 trueControlDependence
  97: 0 -> 52 trueControlDependence
  98: 0 -> 53 trueControlDependence
  99: 0 -> 54 trueControlDependence
 100: 0 -> 55 trueControlDependence
 101: 0 -> 56 trueControlDependence
 102: 0 -> 57 trueControlDependence
 103: 0 -> 58 trueControlDependence
 104: 0 -> 59 trueControlDependence
 105: 0 -> 6 trueControlDependence
 106: 0 -> 60 trueControlDependence
 107: 0 -> 61 trueControlDependence
 108: 0 -> 62 trueControlDependence
 109: 0 -> 63 trueControlDependence
 110: 0 -> 64 trueControlDependence
 111: 0 -> 65 trueControlDependence
 112: 0 -> 66 trueControlDependence
 113: 0 -> 67 trueControlDependence
 114: 0 -> 68 trueControlDependence
 115: 0 -> 69 trueControlDependence
 116: 0 -> 7 trueControlDependence
 117: 0 -> 70 trueControlDependence
 118: 0 -> 71 trueControlDependence
 119: 0 -> 72 trueControlDependence
 120: 0 -> 73 trueControlDependence
 121: 0 -> 74 trueControlDependence
 122: 0 -> 75 trueControlDependence
 123: 0 -> 76 trueControlDependence
 124: 0 -> 77 trueControlDependence
 125: 0 -> 78 trueControlDependence
 126: 0 -> 79 trueControlDependence
 127: 0 -> 8 trueControlDependence
 128: 0 -> 80 trueControlDependence
 129: 0 -> 81 trueControlDependence
 130: 0 -> 82 trueControlDependence
 131: 0 -> 83 trueControlDependence
 132: 0 -> 84 trueControlDependence
 133: 0 -> 85 trueControlDependence
 134: 0 -> 86 trueControlDependence
 135: 0 -> 87 trueControlDependence
 136: 0 -> 88 trueControlDependence
 137: 0 -> 89 trueControlDependence
 138: 0 -> 9 trueControlDependence
 139: 0 -> 90 trueControlDependence
 140: 0 -> 91 trueControlDependence
 141: 0 -> 92 trueControlDependence
 142: 0 -> 93 trueControlDependence
 143: 0 -> 94 trueControlDependence
 144: 0 -> 95 trueControlDependence
 145: 0 -> 96 trueControlDependence
 146: 0 -> 97 trueControlDependence
 147: 0 -> 98 trueControlDependence
 148: 0 -> 99 trueControlDependence
 149: 1 -> 3 loopIndependentDefUseDependence menu$0
 150: 1 -> 4 loopIndependentDefUseDependence menu$0
 151: 100 -> 101 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 152: 100 -> 101 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 153: 100 -> 101 loopIndependentDefUseDependence menu$0
 154: 101 -> 103 loopIndependentDefUseDependence menu$0.!add
 155: 101 -> 104 loopIndependentDefUseDependence menu$0.!add
 156: 101 -> 107 loopIndependentDefUseDependence menu$0.!add
 157: 101 -> 122 loopIndependentDefUseDependence menu$0
 158: 101 -> 123 loopIndependentDefUseDependence menu$0
 159: 101 -> 127 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 160: 101 -> 127 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 161: 101 -> 128 outputDependence menu$0.!add
 162: 101 -> 98 loopIndependentDefUseDependence menu$0.!add
 163: 105 -> 102 loopIndependentDefUseDependence pasteItem$5.!setMnemonic
 164: 108 -> 109 loopIndependentDefUseDependence pasteItem$5
 165: 108 -> 109 loopIndependentDefUseDependence pasteItem$5.defaultIcon
 166: 108 -> 109 loopIndependentDefUseDependence pasteItem$5.disabledIcon
 167: 109 -> 106 loopIndependentDefUseDependence pasteItem$5.!setIcon
 168: 109 -> 111 loopIndependentDefUseDependence pasteItem$5
 169: 109 -> 112 loopIndependentDefUseDependence pasteItem$5
 170: 109 -> 149 loopIndependentDefUseDependence pasteItem$5.defaultIcon
 171: 109 -> 149 loopIndependentDefUseDependence pasteItem$5.disabledIcon
 172: 112 -> 116 loopIndependentDefUseDependence pasteItem$5
 173: 112 -> 116 loopIndependentDefUseDependence pasteItem$5.accelerator
 174: 115 -> 112 loopIndependentDefUseDependence this.!getKeyStroke
 175: 115 -> 142 outputDependence this.!getKeyStroke
 176: 116 -> 110 loopIndependentDefUseDependence pasteItem$5.!setAccelerator
 177: 116 -> 118 loopIndependentDefUseDependence pasteItem$5
 178: 116 -> 119 loopIndependentDefUseDependence pasteItem$5
 179: 116 -> 149 loopIndependentDefUseDependence pasteItem$5.accelerator
 180: 12 -> 13 loopIndependentDefUseDependence undoItem$1
 181: 12 -> 13 loopIndependentDefUseDependence undoItem$1.defaultIcon
 182: 12 -> 13 loopIndependentDefUseDependence undoItem$1.disabledIcon
 183: 120 -> 117 loopIndependentDefUseDependence pasteItem$5.!setEnabled
 184: 123 -> 124 loopIndependentDefUseDependence menu$0
 185: 123 -> 124 loopIndependentDefUseDependence menu$0.popupMenu
 186: 123 -> 124 outputDependence menu$0.popupListener
 187: 124 -> 121 loopIndependentDefUseDependence menu$0.!addSeparator
 188: 124 -> 126 loopIndependentDefUseDependence menu$0
 189: 124 -> 127 loopIndependentDefUseDependence menu$0
 190: 124 -> 127 loopIndependentDefUseDependence menu$0.popupMenu
 191: 124 -> 128 loopIndependentDefUseDependence menu$0.popupMenu
 192: 124 -> 149 loopIndependentDefUseDependence menu$0.popupListener
 193: 124 -> 149 loopIndependentDefUseDependence menu$0.popupMenu
 194: 125 -> 130 declaration
 195: 125 -> 130 loopIndependentDefUseDependence deleteItem$6
 196: 125 -> 131 declaration
 197: 125 -> 131 loopIndependentDefUseDependence deleteItem$6
 198: 125 -> 134 declaration
 199: 125 -> 134 loopIndependentDefUseDependence deleteItem$6
 200: 125 -> 135 declaration
 201: 125 -> 135 loopIndependentDefUseDependence deleteItem$6
 202: 125 -> 136 declaration
 203: 125 -> 138 declaration
 204: 125 -> 139 declaration
 205: 125 -> 143 declaration
 206: 125 -> 145 declaration
 207: 125 -> 146 declaration
 208: 127 -> 128 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 209: 127 -> 128 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 210: 127 -> 128 loopIndependentDefUseDependence menu$0
 211: 128 -> 125 loopIndependentDefUseDependence menu$0.!add
 212: 128 -> 130 loopIndependentDefUseDependence menu$0.!add
 213: 128 -> 131 loopIndependentDefUseDependence menu$0.!add
 214: 128 -> 134 loopIndependentDefUseDependence menu$0.!add
 215: 128 -> 149 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 216: 128 -> 149 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 217: 13 -> 10 loopIndependentDefUseDependence undoItem$1.!setIcon
 218: 13 -> 149 loopIndependentDefUseDependence undoItem$1.defaultIcon
 219: 13 -> 149 loopIndependentDefUseDependence undoItem$1.disabledIcon
 220: 13 -> 15 loopIndependentDefUseDependence undoItem$1
 221: 13 -> 16 loopIndependentDefUseDependence undoItem$1
 222: 132 -> 129 loopIndependentDefUseDependence deleteItem$6.!setMnemonic
 223: 135 -> 136 loopIndependentDefUseDependence deleteItem$6
 224: 135 -> 136 loopIndependentDefUseDependence deleteItem$6.defaultIcon
 225: 135 -> 136 loopIndependentDefUseDependence deleteItem$6.disabledIcon
 226: 136 -> 133 loopIndependentDefUseDependence deleteItem$6.!setIcon
 227: 136 -> 138 loopIndependentDefUseDependence deleteItem$6
 228: 136 -> 139 loopIndependentDefUseDependence deleteItem$6
 229: 136 -> 149 loopIndependentDefUseDependence deleteItem$6.defaultIcon
 230: 136 -> 149 loopIndependentDefUseDependence deleteItem$6.disabledIcon
 231: 139 -> 143 loopIndependentDefUseDependence deleteItem$6
 232: 139 -> 143 loopIndependentDefUseDependence deleteItem$6.accelerator
 233: 142 -> 139 loopIndependentDefUseDependence this.!getKeyStroke
 234: 143 -> 137 loopIndependentDefUseDependence deleteItem$6.!setAccelerator
 235: 143 -> 145 loopIndependentDefUseDependence deleteItem$6
 236: 143 -> 146 loopIndependentDefUseDependence deleteItem$6
 237: 143 -> 149 loopIndependentDefUseDependence deleteItem$6.accelerator
 238: 147 -> 144 loopIndependentDefUseDependence deleteItem$6.!setEnabled
 239: 16 -> 20 loopIndependentDefUseDependence undoItem$1
 240: 16 -> 20 loopIndependentDefUseDependence undoItem$1.accelerator
 241: 19 -> 16 loopIndependentDefUseDependence this.!getKeyStroke
 242: 19 -> 42 outputDependence this.!getKeyStroke
 243: 2 -> 11 declaration
 244: 2 -> 11 loopIndependentDefUseDependence undoItem$1
 245: 2 -> 12 declaration
 246: 2 -> 12 loopIndependentDefUseDependence undoItem$1
 247: 2 -> 13 declaration
 248: 2 -> 15 declaration
 249: 2 -> 16 declaration
 250: 2 -> 20 declaration
 251: 2 -> 7 declaration
 252: 2 -> 7 loopIndependentDefUseDependence undoItem$1
 253: 2 -> 8 declaration
 254: 2 -> 8 loopIndependentDefUseDependence undoItem$1
 255: 20 -> 14 loopIndependentDefUseDependence undoItem$1.!setAccelerator
 256: 20 -> 149 loopIndependentDefUseDependence undoItem$1.accelerator
 257: 24 -> 21 loopIndependentDefUseDependence this.undoAction.!setEnabled
 258: 25 -> 30 declaration
 259: 25 -> 30 loopIndependentDefUseDependence redoItem$2
 260: 25 -> 31 declaration
 261: 25 -> 31 loopIndependentDefUseDependence redoItem$2
 262: 25 -> 34 declaration
 263: 25 -> 34 loopIndependentDefUseDependence redoItem$2
 264: 25 -> 35 declaration
 265: 25 -> 35 loopIndependentDefUseDependence redoItem$2
 266: 25 -> 36 declaration
 267: 25 -> 38 declaration
 268: 25 -> 39 declaration
 269: 25 -> 43 declaration
 270: 27 -> 28 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 271: 27 -> 28 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 272: 27 -> 28 loopIndependentDefUseDependence menu$0
 273: 28 -> 25 loopIndependentDefUseDependence menu$0.!add
 274: 28 -> 30 loopIndependentDefUseDependence menu$0.!add
 275: 28 -> 31 loopIndependentDefUseDependence menu$0.!add
 276: 28 -> 34 loopIndependentDefUseDependence menu$0.!add
 277: 28 -> 49 loopIndependentDefUseDependence menu$0
 278: 28 -> 50 loopIndependentDefUseDependence menu$0
 279: 28 -> 54 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 280: 28 -> 54 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 281: 28 -> 55 outputDependence menu$0.!add
 282: 32 -> 29 loopIndependentDefUseDependence redoItem$2.!setMnemonic
 283: 35 -> 36 loopIndependentDefUseDependence redoItem$2
 284: 35 -> 36 loopIndependentDefUseDependence redoItem$2.defaultIcon
 285: 35 -> 36 loopIndependentDefUseDependence redoItem$2.disabledIcon
 286: 36 -> 149 loopIndependentDefUseDependence redoItem$2.defaultIcon
 287: 36 -> 149 loopIndependentDefUseDependence redoItem$2.disabledIcon
 288: 36 -> 33 loopIndependentDefUseDependence redoItem$2.!setIcon
 289: 36 -> 38 loopIndependentDefUseDependence redoItem$2
 290: 36 -> 39 loopIndependentDefUseDependence redoItem$2
 291: 39 -> 43 loopIndependentDefUseDependence redoItem$2
 292: 39 -> 43 loopIndependentDefUseDependence redoItem$2.accelerator
 293: 4 -> 5 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 294: 4 -> 5 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 295: 4 -> 5 loopIndependentDefUseDependence menu$0
 296: 42 -> 39 loopIndependentDefUseDependence this.!getKeyStroke
 297: 42 -> 69 outputDependence this.!getKeyStroke
 298: 43 -> 149 loopIndependentDefUseDependence redoItem$2.accelerator
 299: 43 -> 37 loopIndependentDefUseDependence redoItem$2.!setAccelerator
 300: 47 -> 44 loopIndependentDefUseDependence this.redoAction.!setEnabled
 301: 5 -> 11 loopIndependentDefUseDependence menu$0.!add
 302: 5 -> 2 loopIndependentDefUseDependence menu$0.!add
 303: 5 -> 26 loopIndependentDefUseDependence menu$0
 304: 5 -> 27 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 305: 5 -> 27 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 306: 5 -> 27 loopIndependentDefUseDependence menu$0
 307: 5 -> 28 outputDependence menu$0.!add
 308: 5 -> 7 loopIndependentDefUseDependence menu$0.!add
 309: 5 -> 8 loopIndependentDefUseDependence menu$0.!add
 310: 50 -> 51 loopIndependentDefUseDependence menu$0
 311: 50 -> 51 loopIndependentDefUseDependence menu$0.popupMenu
 312: 50 -> 51 outputDependence menu$0.popupListener
 313: 51 -> 100 loopIndependentDefUseDependence menu$0.popupMenu
 314: 51 -> 101 loopIndependentDefUseDependence menu$0.popupMenu
 315: 51 -> 123 loopIndependentDefUseDependence menu$0.popupMenu
 316: 51 -> 123 outputDependence menu$0.popupListener
 317: 51 -> 124 outputDependence menu$0.!addSeparator
 318: 51 -> 48 loopIndependentDefUseDependence menu$0.!addSeparator
 319: 51 -> 53 loopIndependentDefUseDependence menu$0
 320: 51 -> 54 loopIndependentDefUseDependence menu$0
 321: 51 -> 54 loopIndependentDefUseDependence menu$0.popupMenu
 322: 51 -> 55 loopIndependentDefUseDependence menu$0.popupMenu
 323: 51 -> 77 loopIndependentDefUseDependence menu$0.popupMenu
 324: 51 -> 78 loopIndependentDefUseDependence menu$0.popupMenu
 325: 52 -> 57 declaration
 326: 52 -> 57 loopIndependentDefUseDependence cutItem$3
 327: 52 -> 58 declaration
 328: 52 -> 58 loopIndependentDefUseDependence cutItem$3
 329: 52 -> 61 declaration
 330: 52 -> 61 loopIndependentDefUseDependence cutItem$3
 331: 52 -> 62 declaration
 332: 52 -> 62 loopIndependentDefUseDependence cutItem$3
 333: 52 -> 63 declaration
 334: 52 -> 65 declaration
 335: 52 -> 66 declaration
 336: 52 -> 70 declaration
 337: 52 -> 72 declaration
 338: 52 -> 73 declaration
 339: 54 -> 55 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 340: 54 -> 55 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 341: 54 -> 55 loopIndependentDefUseDependence menu$0
 342: 55 -> 52 loopIndependentDefUseDependence menu$0.!add
 343: 55 -> 57 loopIndependentDefUseDependence menu$0.!add
 344: 55 -> 58 loopIndependentDefUseDependence menu$0.!add
 345: 55 -> 61 loopIndependentDefUseDependence menu$0.!add
 346: 55 -> 76 loopIndependentDefUseDependence menu$0
 347: 55 -> 77 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 348: 55 -> 77 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 349: 55 -> 77 loopIndependentDefUseDependence menu$0
 350: 55 -> 78 outputDependence menu$0.!add
 351: 59 -> 56 loopIndependentDefUseDependence cutItem$3.!setMnemonic
 352: 62 -> 63 loopIndependentDefUseDependence cutItem$3
 353: 62 -> 63 loopIndependentDefUseDependence cutItem$3.defaultIcon
 354: 62 -> 63 loopIndependentDefUseDependence cutItem$3.disabledIcon
 355: 63 -> 149 loopIndependentDefUseDependence cutItem$3.defaultIcon
 356: 63 -> 149 loopIndependentDefUseDependence cutItem$3.disabledIcon
 357: 63 -> 60 loopIndependentDefUseDependence cutItem$3.!setIcon
 358: 63 -> 65 loopIndependentDefUseDependence cutItem$3
 359: 63 -> 66 loopIndependentDefUseDependence cutItem$3
 360: 66 -> 70 loopIndependentDefUseDependence cutItem$3
 361: 66 -> 70 loopIndependentDefUseDependence cutItem$3.accelerator
 362: 69 -> 66 loopIndependentDefUseDependence this.!getKeyStroke
 363: 69 -> 92 outputDependence this.!getKeyStroke
 364: 70 -> 149 loopIndependentDefUseDependence cutItem$3.accelerator
 365: 70 -> 64 loopIndependentDefUseDependence cutItem$3.!setAccelerator
 366: 70 -> 72 loopIndependentDefUseDependence cutItem$3
 367: 70 -> 73 loopIndependentDefUseDependence cutItem$3
 368: 74 -> 71 loopIndependentDefUseDependence cutItem$3.!setEnabled
 369: 75 -> 80 declaration
 370: 75 -> 80 loopIndependentDefUseDependence copyItem$4
 371: 75 -> 81 declaration
 372: 75 -> 81 loopIndependentDefUseDependence copyItem$4
 373: 75 -> 84 declaration
 374: 75 -> 84 loopIndependentDefUseDependence copyItem$4
 375: 75 -> 85 declaration
 376: 75 -> 85 loopIndependentDefUseDependence copyItem$4
 377: 75 -> 86 declaration
 378: 75 -> 88 declaration
 379: 75 -> 89 declaration
 380: 75 -> 93 declaration
 381: 75 -> 95 declaration
 382: 75 -> 96 declaration
 383: 77 -> 78 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 384: 77 -> 78 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 385: 77 -> 78 loopIndependentDefUseDependence menu$0
 386: 78 -> 100 loopIndependentDefUseDependence javax.swing.AbstractButton.action
 387: 78 -> 100 loopIndependentDefUseDependence javax.swing.AbstractButton.actionPropertyChangeListener
 388: 78 -> 100 loopIndependentDefUseDependence menu$0
 389: 78 -> 101 outputDependence menu$0.!add
 390: 78 -> 75 loopIndependentDefUseDependence menu$0.!add
 391: 78 -> 80 loopIndependentDefUseDependence menu$0.!add
 392: 78 -> 81 loopIndependentDefUseDependence menu$0.!add
 393: 78 -> 84 loopIndependentDefUseDependence menu$0.!add
 394: 78 -> 99 loopIndependentDefUseDependence menu$0
 395: 82 -> 79 loopIndependentDefUseDependence copyItem$4.!setMnemonic
 396: 85 -> 86 loopIndependentDefUseDependence copyItem$4
 397: 85 -> 86 loopIndependentDefUseDependence copyItem$4.defaultIcon
 398: 85 -> 86 loopIndependentDefUseDependence copyItem$4.disabledIcon
 399: 86 -> 149 loopIndependentDefUseDependence copyItem$4.defaultIcon
 400: 86 -> 149 loopIndependentDefUseDependence copyItem$4.disabledIcon
 401: 86 -> 83 loopIndependentDefUseDependence copyItem$4.!setIcon
 402: 86 -> 88 loopIndependentDefUseDependence copyItem$4
 403: 86 -> 89 loopIndependentDefUseDependence copyItem$4
 404: 89 -> 93 loopIndependentDefUseDependence copyItem$4
 405: 89 -> 93 loopIndependentDefUseDependence copyItem$4.accelerator
 406: 9 -> 6 loopIndependentDefUseDependence undoItem$1.!setMnemonic
 407: 92 -> 115 outputDependence this.!getKeyStroke
 408: 92 -> 89 loopIndependentDefUseDependence this.!getKeyStroke
 409: 93 -> 149 loopIndependentDefUseDependence copyItem$4.accelerator
 410: 93 -> 87 loopIndependentDefUseDependence copyItem$4.!setAccelerator
 411: 93 -> 95 loopIndependentDefUseDependence copyItem$4
 412: 93 -> 96 loopIndependentDefUseDependence copyItem$4
 413: 97 -> 94 loopIndependentDefUseDependence copyItem$4.!setEnabled
 414: 98 -> 103 declaration
 415: 98 -> 103 loopIndependentDefUseDependence pasteItem$5
 416: 98 -> 104 declaration
 417: 98 -> 104 loopIndependentDefUseDependence pasteItem$5
 418: 98 -> 107 declaration
 419: 98 -> 107 loopIndependentDefUseDependence pasteItem$5
 420: 98 -> 108 declaration
 421: 98 -> 108 loopIndependentDefUseDependence pasteItem$5
 422: 98 -> 109 declaration
 423: 98 -> 111 declaration
 424: 98 -> 112 declaration
 425: 98 -> 116 declaration
 426: 98 -> 118 declaration
 427: 98 -> 119 declaration
--
----- ClDG (to here) -----

