----- ClDG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.DrawMenu
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.DrawMenu.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.DrawMenu.serialVersionUID }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#toolBar ]
   1 fieldDeclaration D = { this.toolBar } U = { this.toolBar }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#copyAction ]
   1 fieldDeclaration D = { this.copyAction } U = { this.copyAction }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#initFileActions( ) ]
   1 assignment D = { this.newAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
   6 receiver D = {  } U = {  }
   7 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
   8 receiver D = {  } U = { this.!getClass( ) }
   9 receiver D = {  } U = {  }
  10 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  11 actualOut D = { this.!getClass( ) } U = {  }
  12 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  13 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
* actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
* actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  16 assignment D = { this.openAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
  17 receiver D = {  } U = {  }
  18 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  19 actualIn D = {  } U = { $java.lang.String }
  20 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
  21 receiver D = {  } U = {  }
  22 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  23 receiver D = {  } U = { this.!getClass( ) }
  24 receiver D = {  } U = {  }
  25 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  26 actualOut D = { this.!getClass( ) } U = {  }
  27 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  28 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
* actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
* actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  31 assignment D = { this.saveAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
  32 receiver D = {  } U = {  }
  33 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  34 actualIn D = {  } U = { $java.lang.String }
  35 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
  36 receiver D = {  } U = {  }
  37 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  38 receiver D = {  } U = { this.!getClass( ) }
  39 receiver D = {  } U = {  }
  40 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  41 actualOut D = { this.!getClass( ) } U = {  }
  42 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  43 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
* actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
* actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  47 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#createPopup( javax.swing.JPopupMenu ) ]
   1 formalIn D = { popup$0 } U = {  }
   2 localDeclaration D = { undoMenuItem$1 } U = { popup$0.!add( javax.swing.Action ) }
   3 receiver D = {  } U = { popup$0 }
   4 methodCall D = {  } U = { popup$0.!javax.swing.AbstractButton.action, popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.undoAction } TO = javax.swing.JPopupMenu#add( javax.swing.Action )
* actualOut D = { popup$0.!add( javax.swing.Action ), popup$0.!javax.swing.AbstractButton.action, popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { popup$0.!javax.swing.AbstractButton.action, popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
   6 assignment D = {  } U = { undoMenuItem$1.!setIcon( javax.swing.Icon ) }
   7 receiver D = {  } U = { undoMenuItem$1 }
   8 methodCall D = {  } U = { popup$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, popup$0.!add( javax.swing.Action ).!java.awt.Component.height, popup$0.!add( javax.swing.Action ).!java.awt.Component.width, popup$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, popup$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, undoMenuItem$1.!java.awt.Component.changeSupport, undoMenuItem$1.!java.awt.Component.height, undoMenuItem$1.!java.awt.Component.width, undoMenuItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, undoMenuItem$1.!javax.swing.AbstractButton.accessibleContext, undoMenuItem$1.!javax.swing.AbstractButton.defaultIcon, undoMenuItem$1.!javax.swing.AbstractButton.disabledIcon, undoMenuItem$1.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
* actualOut D = { undoMenuItem$1.!javax.swing.AbstractButton.defaultIcon, undoMenuItem$1.!javax.swing.AbstractButton.disabledIcon, undoMenuItem$1.!setIcon( javax.swing.Icon ) } U = { popup$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, popup$0.!add( javax.swing.Action ).!java.awt.Component.height, popup$0.!add( javax.swing.Action ).!java.awt.Component.width, popup$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, popup$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, undoMenuItem$1.!java.awt.Component.changeSupport, undoMenuItem$1.!java.awt.Component.height, undoMenuItem$1.!java.awt.Component.width, undoMenuItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, undoMenuItem$1.!javax.swing.AbstractButton.accessibleContext, undoMenuItem$1.!javax.swing.AbstractButton.defaultIcon, undoMenuItem$1.!javax.swing.AbstractButton.disabledIcon, undoMenuItem$1.!javax.swing.JComponent.revalidateRunnableScheduled }
  10 assignment D = {  } U = { popup$0.!add( javax.swing.JMenuItem ) }
  11 receiver D = {  } U = { popup$0 }
  12 methodCall D = {  } U = { undoMenuItem$1 } TO = javax.swing.JPopupMenu#add( javax.swing.JMenuItem )
  13 actualOut D = { popup$0.!add( javax.swing.JMenuItem ) } U = {  }
  14 localDeclaration D = { redoMenuItem$2 } U = { popup$0.!add( javax.swing.Action ) }
  15 receiver D = {  } U = { popup$0 }
  16 methodCall D = {  } U = { popup$0.!javax.swing.AbstractButton.action, popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.redoAction } TO = javax.swing.JPopupMenu#add( javax.swing.Action )
* actualOut D = { popup$0.!add( javax.swing.Action ), popup$0.!javax.swing.AbstractButton.action, popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { popup$0.!javax.swing.AbstractButton.action, popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  18 assignment D = {  } U = { redoMenuItem$2.!setIcon( javax.swing.Icon ) }
  19 receiver D = {  } U = { redoMenuItem$2 }
  20 methodCall D = {  } U = { popup$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, popup$0.!add( javax.swing.Action ).!java.awt.Component.height, popup$0.!add( javax.swing.Action ).!java.awt.Component.width, popup$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, popup$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, redoMenuItem$2.!java.awt.Component.changeSupport, redoMenuItem$2.!java.awt.Component.height, redoMenuItem$2.!java.awt.Component.width, redoMenuItem$2.!javax.accessibility.AccessibleContext.accessibleChangeSupport, redoMenuItem$2.!javax.swing.AbstractButton.accessibleContext, redoMenuItem$2.!javax.swing.AbstractButton.defaultIcon, redoMenuItem$2.!javax.swing.AbstractButton.disabledIcon, redoMenuItem$2.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
* actualOut D = { redoMenuItem$2.!javax.swing.AbstractButton.defaultIcon, redoMenuItem$2.!javax.swing.AbstractButton.disabledIcon, redoMenuItem$2.!setIcon( javax.swing.Icon ) } U = { popup$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, popup$0.!add( javax.swing.Action ).!java.awt.Component.height, popup$0.!add( javax.swing.Action ).!java.awt.Component.width, popup$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, popup$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, redoMenuItem$2.!java.awt.Component.changeSupport, redoMenuItem$2.!java.awt.Component.height, redoMenuItem$2.!java.awt.Component.width, redoMenuItem$2.!javax.accessibility.AccessibleContext.accessibleChangeSupport, redoMenuItem$2.!javax.swing.AbstractButton.accessibleContext, redoMenuItem$2.!javax.swing.AbstractButton.defaultIcon, redoMenuItem$2.!javax.swing.AbstractButton.disabledIcon, redoMenuItem$2.!javax.swing.JComponent.revalidateRunnableScheduled }
  22 assignment D = {  } U = { popup$0.!add( javax.swing.JMenuItem ) }
  23 receiver D = {  } U = { popup$0 }
  24 methodCall D = {  } U = { redoMenuItem$2 } TO = javax.swing.JPopupMenu#add( javax.swing.JMenuItem )
  25 actualOut D = { popup$0.!add( javax.swing.JMenuItem ) } U = {  }
  27 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#getFileName( boolean ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { open$0 } U = {  }
   3 localDeclaration D = { chooser$1 } U = { javax.swing.JFileChooser.!JFileChooser( ) }
   4 receiver D = {  } U = {  }
   5 constructorCall D = {  } U = {  } TO = javax.swing.JFileChooser#JFileChooser( )
* actualOut D = { javax.swing.JFileChooser.!JFileChooser( ), javax.swing.JFileChooser.!javax.swing.JFileChooser.accessibleContext, javax.swing.JFileChooser.!javax.swing.JFileChooser.accessory, javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonMnemonic, javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonText, javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonToolTipText, javax.swing.JFileChooser.!javax.swing.JFileChooser.controlsShown, javax.swing.JFileChooser.!javax.swing.JFileChooser.currentDirectory, javax.swing.JFileChooser.!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogTitle, javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogType, javax.swing.JFileChooser.!javax.swing.JFileChooser.dragEnabled, javax.swing.JFileChooser.!javax.swing.JFileChooser.fileFilter, javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSelectionMode, javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSystemView, javax.swing.JFileChooser.!javax.swing.JFileChooser.fileView, javax.swing.JFileChooser.!javax.swing.JFileChooser.filters, javax.swing.JFileChooser.!javax.swing.JFileChooser.multiSelectionEnabled, javax.swing.JFileChooser.!javax.swing.JFileChooser.returnValue, javax.swing.JFileChooser.!javax.swing.JFileChooser.selectedFile, javax.swing.JFileChooser.!javax.swing.JFileChooser.showFilesListener, javax.swing.JFileChooser.!javax.swing.JFileChooser.useAcceptAllFileFilter, javax.swing.JFileChooser.!javax.swing.JFileChooser.useFileHiding } U = {  }
   7 assignment D = {  } U = { chooser$1.!setDialogTitle( java.lang.String ) }
   8 receiver D = {  } U = { chooser$1 }
   9 methodCall D = {  } U = { $java.lang.String, chooser$1.!java.awt.Component.changeSupport, chooser$1.!java.awt.Dialog.peer, chooser$1.!java.awt.Dialog.title, chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogTitle, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Component.changeSupport, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Dialog.peer, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Dialog.title, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialogTitle } TO = javax.swing.JFileChooser#setDialogTitle( java.lang.String )
* actualOut D = { chooser$1.!java.awt.Dialog.title, chooser$1.!javax.swing.JFileChooser.dialogTitle, chooser$1.!setDialogTitle( java.lang.String ) } U = { chooser$1.!java.awt.Component.changeSupport, chooser$1.!java.awt.Dialog.peer, chooser$1.!java.awt.Dialog.title, chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogTitle, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Component.changeSupport, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Dialog.peer, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Dialog.title, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialogTitle }
  11 assignment D = {  } U = { chooser$1.!setCurrentDirectory( java.io.File ) }
  12 receiver D = {  } U = { chooser$1 }
  13 methodCall D = {  } U = { chooser$1.!java.awt.Component.changeSupport, chooser$1.!java.io.File.fs, chooser$1.!java.io.File.path, chooser$1.!javax.swing.JFileChooser.currentDirectory, chooser$1.!javax.swing.JFileChooser.fileSystemView, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Component.changeSupport, javax.swing.JFileChooser.!JFileChooser( ).!java.io.File.fs, javax.swing.JFileChooser.!JFileChooser( ).!java.io.File.path, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.currentDirectory, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.fileSystemView, this.directory } TO = javax.swing.JFileChooser#setCurrentDirectory( java.io.File )
* actualOut D = { chooser$1.!javax.swing.JFileChooser.currentDirectory, chooser$1.!setCurrentDirectory( java.io.File ) } U = { chooser$1.!java.awt.Component.changeSupport, chooser$1.!java.io.File.fs, chooser$1.!java.io.File.path, chooser$1.!javax.swing.JFileChooser.currentDirectory, chooser$1.!javax.swing.JFileChooser.fileSystemView, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Component.changeSupport, javax.swing.JFileChooser.!JFileChooser( ).!java.io.File.fs, javax.swing.JFileChooser.!JFileChooser( ).!java.io.File.path, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.currentDirectory, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.fileSystemView }
  15 localDeclaration D = { result$2 } U = {  }
  16 ifSt D = {  } U = { open$0 }
  17 assignment D = { result$2 } U = { chooser$1.!showOpenDialog( java.awt.Component ) }
  18 receiver D = {  } U = { chooser$1 }
  19 methodCall D = {  } U = { chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogType, chooser$1.!javax.swing.JFileChooser.returnValue, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialogType, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.returnValue, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JFileChooser#showOpenDialog( java.awt.Component )
* actualOut D = { chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogType, chooser$1.!javax.swing.JFileChooser.returnValue, chooser$1.!showOpenDialog( java.awt.Component ) } U = { chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogType, chooser$1.!javax.swing.JFileChooser.returnValue, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialogType, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.returnValue }
  21 assignment D = { result$2 } U = { chooser$1.!showSaveDialog( java.awt.Component ) }
  22 receiver D = {  } U = { chooser$1 }
  23 methodCall D = {  } U = { chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogType, chooser$1.!javax.swing.JFileChooser.returnValue, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialogType, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.returnValue, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JFileChooser#showSaveDialog( java.awt.Component )
* actualOut D = { chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogType, chooser$1.!javax.swing.JFileChooser.returnValue, chooser$1.!showSaveDialog( java.awt.Component ) } U = { chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogType, chooser$1.!javax.swing.JFileChooser.returnValue, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialogType, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.returnValue }
  26 localDeclaration D = { file$3 } U = { chooser$1.!getSelectedFile( ) }
  27 receiver D = {  } U = { chooser$1 }
  28 methodCall D = {  } U = { chooser$1.!javax.swing.JFileChooser.selectedFile, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.selectedFile } TO = javax.swing.JFileChooser#getSelectedFile( )
  29 actualOut D = { chooser$1.!getSelectedFile( ) } U = { chooser$1.!javax.swing.JFileChooser.selectedFile, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.selectedFile }
  30 ifSt D = {  } U = { file$3, result$2, result$2.APPROVE_OPTION }
  31 assignment D = { this.directory } U = { chooser$1.!getCurrentDirectory( ) }
  32 receiver D = {  } U = { chooser$1 }
  33 methodCall D = {  } U = { chooser$1.!javax.swing.JFileChooser.currentDirectory, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.currentDirectory } TO = javax.swing.JFileChooser#getCurrentDirectory( )
  34 actualOut D = { chooser$1.!getCurrentDirectory( ) } U = { chooser$1.!javax.swing.JFileChooser.currentDirectory, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.currentDirectory }
  35 returnSt D = { $_ } U = { file$3.!getPath( ) }
  36 receiver D = {  } U = { file$3 }
  37 methodCall D = {  } U = { chooser$1.!getSelectedFile( ).!java.io.File.path, file$3.!java.io.File.path } TO = java.io.File#getPath( )
  38 actualOut D = { file$3.!getPath( ) } U = { chooser$1.!getSelectedFile( ).!java.io.File.path, file$3.!java.io.File.path }
  40 returnSt D = { $_ } U = {  }
  42 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ) ]
   1 formalIn D = { tool$0 } U = {  }
   2 formalIn D = { tabbedCanvas$1 } U = {  }
   3 assignment D = { this.tool } U = { tool$0, tool$0.menu, tool$0.selector, tool$0.tabbedCanvas }
   4 assignment D = { this.tabbedCanvas } U = { tabbedCanvas$1, tabbedCanvas$1.canvases, tabbedCanvas$1.menu, tabbedCanvas$1.selectedTab, tabbedCanvas$1.selector }
   5 assignment D = { this.menuBar } U = { javax.swing.JMenuBar.!JMenuBar( ) }
   6 receiver D = {  } U = {  }
   7 constructorCall D = {  } U = { javax.swing.JMenuBar.!java.awt.Component.focusTraversalKeysEnabled, javax.swing.JMenuBar.!javax.swing.JMenuBar.selectionModel } TO = javax.swing.JMenuBar#JMenuBar( )
* actualOut D = { javax.swing.JMenuBar.!JMenuBar( ), javax.swing.JMenuBar.!java.awt.Component.focusTraversalKeysEnabled, javax.swing.JMenuBar.!javax.swing.DefaultSingleSelectionModel.changeEvent, javax.swing.JMenuBar.!javax.swing.DefaultSingleSelectionModel.index, javax.swing.JMenuBar.!javax.swing.DefaultSingleSelectionModel.listenerList, javax.swing.JMenuBar.!javax.swing.JComponent.inputVerifier, javax.swing.JMenuBar.!javax.swing.JComponent.listenerList, javax.swing.JMenuBar.!javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JMenuBar.!javax.swing.JComponent.verifyInputWhenFocusTarget, javax.swing.JMenuBar.!javax.swing.JMenuBar.margin, javax.swing.JMenuBar.!javax.swing.JMenuBar.paintBorder, javax.swing.JMenuBar.!javax.swing.JMenuBar.selectionModel } U = { javax.swing.JMenuBar.!java.awt.Component.focusTraversalKeysEnabled, javax.swing.JMenuBar.!javax.swing.JMenuBar.selectionModel }
   9 assignment D = {  } U = { this.!initMenuBar( javax.swing.JMenuBar ) }
  10 receiver D = {  } U = {  }
  11 methodCall D = {  } U = { KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK, KeyEvent.VK_DELETE, KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK, KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK, KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK, KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK, KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK, KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK, KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.closeItem$3.!javax.swing.AbstractButton.listenerList, this.closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.copyAction, this.copyItem$4.!javax.swing.AbstractButton.accessibleContext, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutAction, this.cutItem$3.!javax.swing.AbstractButton.accessibleContext, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteAction, this.deleteItem$6.!javax.swing.AbstractButton.accessibleContext, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.emptyListItem$9.!javax.swing.AbstractButton.model, this.exitItem$13.!javax.swing.AbstractButton.listenerList, this.fileListMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.fileMenu$1.!javax.swing.AbstractButton.model, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newAction, this.newItem$1.!java.awt.Component.changeSupport, this.newItem$1.!java.awt.Component.height, this.newItem$1.!java.awt.Component.width, this.newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.newItem$1.!javax.swing.AbstractButton.accessibleContext, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openAction, this.openItem$2.!javax.swing.AbstractButton.accessibleContext, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.pasteAction, this.pasteItem$5.!javax.swing.AbstractButton.accessibleContext, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoAction, this.redoItem$2.!javax.swing.AbstractButton.accessibleContext, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.saveAction, this.saveAsItem$6.!javax.swing.AbstractButton.listenerList, this.saveItem$5.!javax.swing.AbstractButton.accessibleContext, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator, this.undoAction, this.undoItem$1.!javax.swing.AbstractButton.accessibleContext, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.JMenuItem.accelerator, this.windowMenu$3.!javax.swing.JMenu.listenerList } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initMenuBar( javax.swing.JMenuBar )
  12 actualIn D = {  } U = { this.menuBar }
* actualOut D = { this.!initMenuBar( javax.swing.JMenuBar ), this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.description, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.height, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.location, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.width, this.javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, this.javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, this.javax.swing.JMenu.!javax.swing.JMenu.menuEvent, this.javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.JMenuItem.accelerator } U = { KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK, KeyEvent.VK_DELETE, KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK, KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK, KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK, KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK, KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK, KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK, KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.closeItem$3.!javax.swing.AbstractButton.listenerList, this.closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.copyAction, this.copyItem$4.!javax.swing.AbstractButton.accessibleContext, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutAction, this.cutItem$3.!javax.swing.AbstractButton.accessibleContext, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteAction, this.deleteItem$6.!javax.swing.AbstractButton.accessibleContext, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.emptyListItem$9.!javax.swing.AbstractButton.model, this.exitItem$13.!javax.swing.AbstractButton.listenerList, this.fileListMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.fileMenu$1.!javax.swing.AbstractButton.model, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newAction, this.newItem$1.!java.awt.Component.changeSupport, this.newItem$1.!java.awt.Component.height, this.newItem$1.!java.awt.Component.width, this.newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.newItem$1.!javax.swing.AbstractButton.accessibleContext, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openAction, this.openItem$2.!javax.swing.AbstractButton.accessibleContext, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.pasteAction, this.pasteItem$5.!javax.swing.AbstractButton.accessibleContext, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoAction, this.redoItem$2.!javax.swing.AbstractButton.accessibleContext, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.saveAction, this.saveAsItem$6.!javax.swing.AbstractButton.listenerList, this.saveItem$5.!javax.swing.AbstractButton.accessibleContext, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator, this.undoAction, this.undoItem$1.!javax.swing.AbstractButton.accessibleContext, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.JMenuItem.accelerator, this.windowMenu$3.!javax.swing.JMenu.listenerList }
  14 assignment D = { this.toolBar } U = { javax.swing.JToolBar.!JToolBar( ) }
  15 receiver D = {  } U = {  }
  16 constructorCall D = {  } U = {  } TO = javax.swing.JToolBar#JToolBar( )
  17 actualOut D = { javax.swing.JToolBar.!JToolBar( ) } U = {  }
  18 assignment D = {  } U = { this.toolBar.!setFloatable( boolean ) }
  19 receiver D = {  } U = { this.toolBar }
  20 methodCall D = {  } U = { javax.swing.JToolBar.!JToolBar( ).!java.awt.Component.height, javax.swing.JToolBar.!JToolBar( ).!java.awt.Component.width, javax.swing.JToolBar.!JToolBar( ).!javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JToolBar.!JToolBar( ).!javax.swing.JToolBar.floatable, this.toolBar.!java.awt.Component.height, this.toolBar.!java.awt.Component.width, this.toolBar.!javax.swing.JComponent.revalidateRunnableScheduled, this.toolBar.!javax.swing.JToolBar.floatable } TO = javax.swing.JToolBar#setFloatable( boolean )
* actualOut D = { this.toolBar.!javax.swing.JToolBar.floatable, this.toolBar.!setFloatable( boolean ) } U = { javax.swing.JToolBar.!JToolBar( ).!java.awt.Component.height, javax.swing.JToolBar.!JToolBar( ).!java.awt.Component.width, javax.swing.JToolBar.!JToolBar( ).!javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JToolBar.!JToolBar( ).!javax.swing.JToolBar.floatable, this.toolBar.!java.awt.Component.height, this.toolBar.!java.awt.Component.width, this.toolBar.!javax.swing.JComponent.revalidateRunnableScheduled, this.toolBar.!javax.swing.JToolBar.floatable }
  22 assignment D = {  } U = { this.!initToolBar( javax.swing.JToolBar ) }
  23 receiver D = {  } U = {  }
  24 methodCall D = {  } U = { this.copyAction, this.cutAction, this.newAction, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, this.newButton$1.!javax.swing.JComponent.clientProperties, this.newButton$1.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.newButton$1.!javax.swing.ToolTipManager.accessibilityKeyListener, this.newButton$1.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.openAction, this.pasteAction, this.redoAction, this.redoButton$8.!javax.swing.AbstractButton.model, this.saveAction, this.toolBar$0.!javax.swing.AbstractButton.action, this.toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.undoAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initToolBar( javax.swing.JToolBar )
  25 actualIn D = {  } U = { this.toolBar }
* actualOut D = { this.!initToolBar( javax.swing.JToolBar ), this.newButton$1.!javax.swing.JComponent.aaHint, this.newButton$1.!javax.swing.JComponent.lcdRenderingHint, this.toolBar$0.!javax.swing.AbstractButton.action, this.toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { this.copyAction, this.cutAction, this.newAction, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, this.newButton$1.!javax.swing.JComponent.clientProperties, this.newButton$1.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.newButton$1.!javax.swing.ToolTipManager.accessibilityKeyListener, this.newButton$1.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.openAction, this.pasteAction, this.redoAction, this.redoButton$8.!javax.swing.AbstractButton.model, this.saveAction, this.toolBar$0.!javax.swing.AbstractButton.action, this.toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.undoAction }
  27 assignment D = { this.directory } U = { java.io.File.!File( java.lang.String ) }
  28 receiver D = {  } U = {  }
  29 constructorCall D = {  } U = { $java.lang.String, java.io.File.!java.io.File.fs, java.io.File.!java.io.File.path } TO = java.io.File#File( java.lang.String )
* actualOut D = { java.io.File.!File( java.lang.String ), java.io.File.!java.io.File.path, java.io.File.!java.io.File.prefixLength, java.io.File.!java.io.File.status } U = { java.io.File.!java.io.File.fs, java.io.File.!java.io.File.path }
  31 assignment D = { this.recentFiles } U = { java.util.ArrayList.!ArrayList( ) }
  32 receiver D = {  } U = {  }
  33 constructorCall D = {  } U = { java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA } TO = java.util.ArrayList#ArrayList( )
* actualOut D = { java.util.ArrayList.!ArrayList( ), java.util.ArrayList.!java.util.AbstractList.modCount, java.util.ArrayList.!java.util.ArrayList.elementData } U = { java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA }
  35 assignment D = { this.clipboard } U = {  }
  36 assignment D = { this.autoSave } U = { jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ) }
  37 receiver D = {  } U = {  }
  38 constructorCall D = {  } U = { tabbedCanvas$0.canvases, tabbedCanvas$0.menu, tabbedCanvas$0.selectedTab, tabbedCanvas$0.selector } TO = jp.ac.ritsumei.cs.draw.AutoSave#AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas )
  39 actualIn D = {  } U = { tabbedCanvas$1, tabbedCanvas$1.canvases, tabbedCanvas$1.menu, tabbedCanvas$1.selectedTab, tabbedCanvas$1.selector, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.menu, this.tabbedCanvas.selectedTab, this.tabbedCanvas.selector }
  40 actualOut D = { jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ) } U = { tabbedCanvas$0.canvases, tabbedCanvas$0.menu, tabbedCanvas$0.selectedTab, tabbedCanvas$0.selector }
  41 assignment D = {  } U = { this.autoSave.!start( ) }
  42 receiver D = {  } U = { this.autoSave }
  43 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.Thread.group, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.Thread.threadStatus, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.destroyed, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.nUnstartedThreads, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.nthreads, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.threads, this.autoSave.!java.lang.Thread.group, this.autoSave.!java.lang.Thread.threadStatus, this.autoSave.!java.lang.ThreadGroup.destroyed, this.autoSave.!java.lang.ThreadGroup.nUnstartedThreads, this.autoSave.!java.lang.ThreadGroup.nthreads, this.autoSave.!java.lang.ThreadGroup.threads } TO = java.lang.Thread#start( )
* actualOut D = { this.autoSave.!java.lang.ThreadGroup.nUnstartedThreads, this.autoSave.!java.lang.ThreadGroup.nthreads, this.autoSave.!java.lang.ThreadGroup.threads, this.autoSave.!start( ) } U = { jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.Thread.group, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.Thread.threadStatus, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.destroyed, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.nUnstartedThreads, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.nthreads, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.threads, this.autoSave.!java.lang.Thread.group, this.autoSave.!java.lang.Thread.threadStatus, this.autoSave.!java.lang.ThreadGroup.destroyed, this.autoSave.!java.lang.ThreadGroup.nUnstartedThreads, this.autoSave.!java.lang.ThreadGroup.nthreads, this.autoSave.!java.lang.ThreadGroup.threads }
  46 formalOut D = {  } U = { $_ }
* actualOut D = { this.copyAction } U = {  }
* actualOut D = { this.cutAction } U = {  }
* actualOut D = { this.deleteAction } U = {  }
* actualOut D = { this.fileListMenu } U = {  }
* actualOut D = { this.fileListener } U = {  }
* actualOut D = { this.newAction } U = {  }
* actualOut D = { this.openAction } U = {  }
* actualOut D = { this.pasteAction } U = {  }
* actualOut D = { this.redoAction } U = {  }
* actualOut D = { this.saveAction } U = {  }
* actualOut D = { this.undoAction } U = {  }
* actualOut D = { this.windowListener } U = {  }
* actualOut D = { jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).tabbedCanvas } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#tool ]
   1 fieldDeclaration D = { this.tool } U = { this.tool }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#updateEditState( boolean ) ]
   1 formalIn D = { grabbed$0 } U = {  }
   2 assignment D = {  } U = { this.cutAction.!setEnabled( boolean ) }
   3 receiver D = {  } U = { this.cutAction }
   4 methodCall D = {  } U = { grabbed$0 } TO = javax.swing.Action#setEnabled( boolean )
   5 actualOut D = { this.cutAction.!setEnabled( boolean ) } U = {  }
   6 assignment D = {  } U = { this.copyAction.!setEnabled( boolean ) }
   7 receiver D = {  } U = { this.copyAction }
   8 methodCall D = {  } U = { grabbed$0 } TO = javax.swing.Action#setEnabled( boolean )
   9 actualOut D = { this.copyAction.!setEnabled( boolean ) } U = {  }
  10 ifSt D = {  } U = { this.clipboard, this.clipboard.color, this.clipboard.endX, this.clipboard.endY, this.clipboard.outlineWidth, this.clipboard.startX, this.clipboard.startY }
  11 assignment D = {  } U = { this.pasteAction.!setEnabled( boolean ) }
  12 receiver D = {  } U = { this.pasteAction }
  13 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  14 actualOut D = { this.pasteAction.!setEnabled( boolean ) } U = {  }
  15 assignment D = {  } U = { this.pasteAction.!setEnabled( boolean ) }
  16 receiver D = {  } U = { this.pasteAction }
  17 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  18 actualOut D = { this.pasteAction.!setEnabled( boolean ) } U = {  }
  20 assignment D = {  } U = { this.deleteAction.!setEnabled( boolean ) }
  21 receiver D = {  } U = { this.deleteAction }
  22 methodCall D = {  } U = { grabbed$0 } TO = javax.swing.Action#setEnabled( boolean )
  23 actualOut D = { this.deleteAction.!setEnabled( boolean ) } U = {  }
  25 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#recentFiles ]
   1 fieldDeclaration D = { this.recentFiles } U = { this.recentFiles }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#cutAction ]
   1 fieldDeclaration D = { this.cutAction } U = { this.cutAction }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#undoAction ]
   1 fieldDeclaration D = { this.undoAction } U = { this.undoAction }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#saveTempFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 formalIn D = { canvas$0 } U = {  }
   2 localDeclaration D = { tempName$1 } U = { $java.lang.String, canvas$0.!getFigureManager( ).!getFilename( ) }
   3 receiver D = {  } U = { canvas$0.!getFigureManager( ) }
   4 receiver D = {  } U = { canvas$0 }
   5 methodCall D = {  } U = { canvas$0.figureManager, this.figureManager.figures, this.figureManager.filename } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
   6 actualOut D = { canvas$0.!getFigureManager( ) } U = { canvas$0.figureManager, this.figureManager.figures, this.figureManager.filename }
   7 methodCall D = {  } U = { canvas$0.!getFigureManager( ).filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
   8 actualOut D = { canvas$0.!getFigureManager( ).!getFilename( ) } U = { canvas$0.!getFigureManager( ).filename }
   9 returnSt D = { $_ } U = { canvas$0.!getFigureManager( ).!store( java.lang.String ) }
  10 receiver D = {  } U = { canvas$0.!getFigureManager( ) }
  11 receiver D = {  } U = { canvas$0 }
  12 methodCall D = {  } U = { canvas$0.figureManager, this.figureManager.figures, this.figureManager.filename } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  13 actualOut D = { canvas$0.!getFigureManager( ) } U = { canvas$0.figureManager, this.figureManager.figures, this.figureManager.filename }
  14 methodCall D = {  } U = { System.err, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, canvas$0.!getFigureManager( ).figures, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.!java.lang.String.COMPACT_STRINGS } TO = jp.ac.ritsumei.cs.draw.FigureManager#store( java.lang.String )
  15 actualIn D = {  } U = { tempName$1 }
* actualOut D = { canvas$0.!getFigureManager( ).!store( java.lang.String ), canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count } U = { System.err, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, canvas$0.!getFigureManager( ).figures, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.!java.lang.String.COMPACT_STRINGS }
  18 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#deleteAction ]
   1 fieldDeclaration D = { this.deleteAction } U = { this.deleteAction }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { canvas$0 } U = {  }
   3 ifSt D = {  } U = { canvas$0.!hasChanged( ) }
   4 receiver D = {  } U = { canvas$0 }
   5 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#hasChanged( )
   6 actualOut D = { canvas$0.!hasChanged( ) } U = {  }
   7 localDeclaration D = { result$1 } U = { this.!showConfirmDialog( java.awt.Component java.lang.Object ) }
   8 receiver D = {  } U = {  }
   9 methodCall D = {  } U = { $java.lang.String, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showConfirmDialog( java.awt.Component java.lang.Object )
  10 actualOut D = { this.!showConfirmDialog( java.awt.Component java.lang.Object ) } U = {  }
  11 ifSt D = {  } U = { result$1, result$1.CANCEL_OPTION }
  12 returnSt D = { $_ } U = {  }
  13 ifSt D = {  } U = { result$1, result$1.YES_OPTION }
  14 ifSt D = {  } U = { this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
  15 receiver D = {  } U = {  }
  16 methodCall D = {  } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
  17 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
* actualOut D = { this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas ), this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, this.canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  19 localDeclaration D = { result2$2 } U = { this.!showConfirmDialog( java.awt.Component java.lang.Object ) }
  20 receiver D = {  } U = {  }
  21 methodCall D = {  } U = { $java.lang.String, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showConfirmDialog( java.awt.Component java.lang.Object )
  22 actualOut D = { this.!showConfirmDialog( java.awt.Component java.lang.Object ) } U = {  }
  23 ifSt D = {  } U = { result2$2, result2$2.CANCEL_OPTION }
  24 returnSt D = { $_ } U = {  }
  30 assignment D = {  } U = { this.tabbedCanvas.!closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
  31 receiver D = {  } U = { this.tabbedCanvas }
  32 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.!javax.accessibility.AccessibleState.SELECTED, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.JTabbedPane.visComp, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
  33 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
* actualOut D = { this.!javax.swing.JTabbedPane.visComp, this.tabbedCanvas.!closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.!javax.accessibility.AccessibleState.SELECTED, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.JTabbedPane.visComp, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
  35 ifSt D = {  } U = { this.tabbedCanvas.!getOpenFileNum( ) }
  36 receiver D = {  } U = { this.tabbedCanvas }
  37 methodCall D = {  } U = { this.tabbedCanvas.canvases } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getOpenFileNum( )
  38 actualOut D = { this.tabbedCanvas.!getOpenFileNum( ) } U = { this.tabbedCanvas.canvases }
  39 assignment D = {  } U = { this.tool.!terminate( ) }
  40 receiver D = {  } U = { this.tool }
  41 methodCall D = {  } U = { this.!java.lang.Runtime.currentRuntime } TO = jp.ac.ritsumei.cs.draw.DrawTool#terminate( )
  42 actualOut D = { this.tool.!terminate( ) } U = { this.!java.lang.Runtime.currentRuntime }
  44 returnSt D = { $_ } U = {  }
  46 formalOut D = {  } U = { $_ }
* actualOut D = { this.selectedTab } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#newAction ]
   1 fieldDeclaration D = { this.newAction } U = { this.newAction }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#newFile( ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 localDeclaration D = { filename$0 } U = { this.!getFileName( boolean ) }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { result$2.APPROVE_OPTION, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#getFileName( boolean )
   5 actualIn D = {  } U = {  }
* actualOut D = { this.!getFileName( boolean ), this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessibleContext, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonMnemonic, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonToolTipText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.controlsShown, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.currentDirectory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialog, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogTitle, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogType, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dragEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSelectionMode, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSystemView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.filters, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.multiSelectionEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.selectedFile, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.showFilesListener, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useAcceptAllFileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useFileHiding } U = { result$2.APPROVE_OPTION, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
   7 ifSt D = {  } U = { filename$0 }
   8 returnSt D = { $_ } U = {  }
  10 ifSt D = {  } U = { this.!fileExists( java.lang.String ) }
  11 receiver D = {  } U = {  }
  12 methodCall D = {  } U = { this.file$1.!java.io.File$PathStatus.CHECKED, this.file$1.!java.io.File$PathStatus.INVALID, this.file$1.!java.io.File.fs, this.file$1.!java.io.File.path, this.file$1.!java.io.File.status, this.file$1.!java.lang.System.security, this.java.io.File.!java.io.File.fs, this.java.io.File.!java.io.File.path } TO = jp.ac.ritsumei.cs.draw.DrawMenu#fileExists( java.lang.String )
  13 actualIn D = {  } U = { filename$0 }
* actualOut D = { this.!fileExists( java.lang.String ), this.file$1.!java.io.File.status, this.java.io.File.!java.io.File.path, this.java.io.File.!java.io.File.prefixLength, this.java.io.File.!java.io.File.status } U = { this.file$1.!java.io.File$PathStatus.CHECKED, this.file$1.!java.io.File$PathStatus.INVALID, this.file$1.!java.io.File.fs, this.file$1.!java.io.File.path, this.file$1.!java.io.File.status, this.file$1.!java.lang.System.security, this.java.io.File.!java.io.File.fs, this.java.io.File.!java.io.File.path }
  15 assignment D = {  } U = { this.!showMessageDialog( java.awt.Component java.lang.Object ) }
  16 receiver D = {  } U = {  }
  17 methodCall D = {  } U = { $java.lang.String, filename$0, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showMessageDialog( java.awt.Component java.lang.Object )
  18 actualOut D = { this.!showMessageDialog( java.awt.Component java.lang.Object ) } U = {  }
  19 returnSt D = { $_ } U = {  }
  21 localDeclaration D = { canvas$1 } U = { this.tabbedCanvas.!openTab( java.lang.String ) }
  22 receiver D = {  } U = { this.tabbedCanvas }
  23 methodCall D = {  } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!java.awt.Component.background, this.!java.awt.Component.height, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!java.awt.Component.width, this.!java.awt.Container.dispatcher, this.!java.awt.Container.parent, this.!java.awt.Container.peer, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.canvas$1.figureManager, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.figureManager.figures, this.figureManager.filename, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.fmanager$3.filename.!java.lang.String.coder, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#openTab( java.lang.String )
  24 actualIn D = {  } U = { filename$0 }
* actualOut D = { this.!java.awt.Component.background, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.newEventsOnly, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!javax.swing.JTabbedPane.haveRegistered, this.canvas$1.support.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.inProgress, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.indexOfNextAdd, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.height, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.width, this.jp.ac.ritsumei.cs.draw.DrawCanvas.jp.ac.ritsumei.cs.draw.FigureManager.java.util.LinkedList.!java.util.LinkedList.size, this.tabbedCanvas.!openTab( java.lang.String ) } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!java.awt.Component.background, this.!java.awt.Component.height, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!java.awt.Component.width, this.!java.awt.Container.dispatcher, this.!java.awt.Container.parent, this.!java.awt.Container.peer, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.canvas$1.figureManager, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.figureManager.figures, this.figureManager.filename, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.fmanager$3.filename.!java.lang.String.coder, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo }
  26 assignment D = {  } U = { this.!addRecentFile( java.lang.String ) }
  27 receiver D = {  } U = {  }
  28 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES, this.recentFiles } TO = jp.ac.ritsumei.cs.draw.DrawMenu#addRecentFile( java.lang.String )
  29 actualIn D = {  } U = { filename$0 }
  30 actualOut D = { this.!addRecentFile( java.lang.String ) } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES, this.recentFiles }
  31 assignment D = {  } U = { this.tool.!setTitle( java.lang.String ) }
  32 receiver D = {  } U = { this.tool }
  33 methodCall D = {  } U = { filename$0, this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title } TO = java.awt.Frame#setTitle( java.lang.String )
* actualOut D = { this.tool.!java.awt.Frame.title, this.tool.!setTitle( java.lang.String ) } U = { this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title }
  35 assignment D = {  } U = { canvas$1.!repaint( ) }
  36 receiver D = {  } U = { canvas$1 }
  37 methodCall D = {  } U = { canvas$1.!java.awt.Component.height, canvas$1.!java.awt.Component.parent, canvas$1.!java.awt.Component.peer, canvas$1.!java.awt.Component.width, canvas$1.!java.awt.Component.x, canvas$1.!java.awt.Component.y, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.height, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.parent, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.peer, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.width, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.x, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.y } TO = java.awt.Component#repaint( )
  38 actualOut D = { canvas$1.!repaint( ) } U = { canvas$1.!java.awt.Component.height, canvas$1.!java.awt.Component.parent, canvas$1.!java.awt.Component.peer, canvas$1.!java.awt.Component.width, canvas$1.!java.awt.Component.x, canvas$1.!java.awt.Component.y, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.height, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.parent, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.peer, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.width, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.x, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.y }
  39 returnSt D = { $_ } U = {  }
  41 formalOut D = {  } U = { $_ }
* actualOut D = { this.directory } U = {  }
* actualOut D = { this.changed } U = {  }
* actualOut D = { this.tabbedCanvas.!openTab( java.lang.String ).figureManager } U = {  }
* actualOut D = { this.tabbedCanvas.!openTab( java.lang.String ).figureManager } U = {  }
* actualOut D = { this.tabbedCanvas.!openTab( java.lang.String ).menu } U = {  }
* actualOut D = { this.tabbedCanvas.!openTab( java.lang.String ).selector } U = {  }
* actualOut D = { this.canvas$1.undoManager } U = {  }
* actualOut D = { this.tabbedCanvas.!openTab( java.lang.String ).figures } U = {  }
* actualOut D = { this.tabbedCanvas.!openTab( java.lang.String ).figures } U = {  }
* actualOut D = { this.tabbedCanvas.!openTab( java.lang.String ).filename } U = {  }
* actualOut D = { this.tabbedCanvas.!openTab( java.lang.String ).filename } U = {  }
* actualOut D = { this.selectedTab } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#windowListener ]
   1 fieldDeclaration D = { this.windowListener } U = { this.windowListener }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#saveAsFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { canvas$0 } U = {  }
   3 localDeclaration D = { filename$1 } U = { this.!getFileName( boolean ) }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = { result$2.APPROVE_OPTION, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#getFileName( boolean )
   6 actualIn D = {  } U = {  }
* actualOut D = { this.!getFileName( boolean ), this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessibleContext, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonMnemonic, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonToolTipText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.controlsShown, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.currentDirectory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialog, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogTitle, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogType, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dragEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSelectionMode, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSystemView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.filters, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.multiSelectionEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.selectedFile, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.showFilesListener, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useAcceptAllFileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useFileHiding } U = { result$2.APPROVE_OPTION, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
   8 ifSt D = {  } U = { filename$1 }
   9 returnSt D = { $_ } U = {  }
  11 ifSt D = {  } U = { this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String ) }
  12 receiver D = {  } U = {  }
  13 methodCall D = {  } U = { System.err, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String )
  14 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
  15 actualIn D = {  } U = { filename$1 }
* actualOut D = { this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String ), this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, this.canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count } U = { System.err, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  17 assignment D = {  } U = { this.tabbedCanvas.!updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
  18 receiver D = {  } U = { this.tabbedCanvas }
  19 methodCall D = {  } U = { File.separator, this.!java.awt.Component.height, this.!java.awt.Component.width, this.!java.lang.String.value, this.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.!javax.swing.JComponent.revalidateRunnableScheduled, this.!javax.swing.JTabbedPane$Page.tip, this.!javax.swing.JTabbedPane$Page.title, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.!javax.swing.ToolTipManager.accessibilityKeyListener, this.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.coder, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.value, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
  20 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
* actualOut D = { this.!javax.swing.JTabbedPane$Page.tip, this.!javax.swing.JTabbedPane$Page.title, this.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) } U = { File.separator, this.!java.awt.Component.height, this.!java.awt.Component.width, this.!java.lang.String.value, this.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.!javax.swing.JComponent.revalidateRunnableScheduled, this.!javax.swing.JTabbedPane$Page.tip, this.!javax.swing.JTabbedPane$Page.title, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.!javax.swing.ToolTipManager.accessibilityKeyListener, this.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.coder, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.value, this.tabbedCanvas.selectedTab }
  22 assignment D = {  } U = { this.!addRecentFile( java.lang.String ) }
  23 receiver D = {  } U = {  }
  24 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES, this.recentFiles } TO = jp.ac.ritsumei.cs.draw.DrawMenu#addRecentFile( java.lang.String )
  25 actualIn D = {  } U = { filename$1 }
  26 actualOut D = { this.!addRecentFile( java.lang.String ) } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES, this.recentFiles }
  27 assignment D = {  } U = { this.tool.!setTitle( java.lang.String ) }
  28 receiver D = {  } U = { this.tool }
  29 methodCall D = {  } U = { filename$1, this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title } TO = java.awt.Frame#setTitle( java.lang.String )
* actualOut D = { this.tool.!java.awt.Frame.title, this.tool.!setTitle( java.lang.String ) } U = { this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title }
  31 returnSt D = { $_ } U = {  }
  33 returnSt D = { $_ } U = {  }
  35 formalOut D = {  } U = { $_ }
* actualOut D = { this.directory } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#menuBar ]
   1 fieldDeclaration D = { this.menuBar } U = { this.menuBar }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#getToolBar( ) ]
   1 returnSt D = { $_ } U = { this.toolBar }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#closeAllFiles( ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 enhancedForSt D = { canvas$0 } U = { this.tabbedCanvas.!getAllCanvases( ) }
   3 receiver D = {  } U = { this.tabbedCanvas }
   4 methodCall D = {  } U = { this.tabbedCanvas.canvases } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getAllCanvases( )
   5 actualOut D = { this.tabbedCanvas.!getAllCanvases( ) } U = { this.tabbedCanvas.canvases }
   6 ifSt D = {  } U = { this.!closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, result$1.CANCEL_OPTION, result$1.YES_OPTION, result2$2.CANCEL_OPTION, this.!java.lang.Runtime.currentRuntime, this.!java.lang.String.COMPACT_STRINGS, this.!javax.accessibility.AccessibleState.SELECTED, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.JTabbedPane.visComp, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tabbedCanvas, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   9 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
* actualOut D = { this.!closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas ), this.!javax.swing.JTabbedPane.visComp, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, this.canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, result$1.CANCEL_OPTION, result$1.YES_OPTION, result2$2.CANCEL_OPTION, this.!java.lang.Runtime.currentRuntime, this.!java.lang.String.COMPACT_STRINGS, this.!javax.accessibility.AccessibleState.SELECTED, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.JTabbedPane.visComp, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tabbedCanvas, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  11 returnSt D = {  } U = {  }
  14 formalOut D = {  } U = { $_ }
* actualOut D = { this.selectedTab } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#redoAction ]
   1 fieldDeclaration D = { this.redoAction } U = { this.redoAction }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#getMenuBar( ) ]
   1 returnSt D = { $_ } U = { this.menuBar }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#openFile( ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 throwsClause D = {  } U = { $java.lang.NumberFormatException }
   3 localDeclaration D = { filename$0 } U = { this.!getFileName( boolean ) }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = { result$2.APPROVE_OPTION, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#getFileName( boolean )
   6 actualIn D = {  } U = {  }
* actualOut D = { this.!getFileName( boolean ), this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessibleContext, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonMnemonic, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonToolTipText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.controlsShown, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.currentDirectory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialog, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogTitle, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogType, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dragEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSelectionMode, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSystemView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.filters, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.multiSelectionEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.selectedFile, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.showFilesListener, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useAcceptAllFileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useFileHiding } U = { result$2.APPROVE_OPTION, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
   8 ifSt D = {  } U = { filename$0 }
   9 returnSt D = { $_ } U = {  }
  11 returnSt D = { $_ } U = { this.!openFile( java.lang.String ) }
  12 receiver D = {  } U = {  }
  13 methodCall D = {  } U = { Color.white, File.separator, FilledOval.name, FilledRect.name, Line.name, Oval.name, Rect.name, System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, confirm$2.NO_OPTION, figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY, figure$17.color, figure$17.endX, figure$17.endY, figure$17.outlineWidth, figure$17.startX, figure$17.startY, figure$7.color, figure$7.endX, figure$7.endY, figure$7.outlineWidth, figure$7.startX, figure$7.startY, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!java.awt.Component.background, this.!java.awt.Component.height, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!java.awt.Component.width, this.!java.awt.Container.dispatcher, this.!java.awt.Container.parent, this.!java.awt.Container.peer, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.lock, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).figures, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, this.canvas$1.!getFigureManager( ).st$6.!java.lang.String.value, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.str, this.canvas$1.!java.awt.Component.height, this.canvas$1.!java.awt.Component.parent, this.canvas$1.!java.awt.Component.peer, this.canvas$1.!java.awt.Component.width, this.canvas$1.!java.awt.Component.x, this.canvas$1.!java.awt.Component.y, this.canvas$1.changed, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.figureManager.figures, this.figureManager.filename, this.figures, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.kind$0.!java.lang.String.value, this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.tabbedCanvas, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvases, this.tool, this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title, this.tool.YES_NO_OPTION, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#openFile( java.lang.String )
  14 actualIn D = {  } U = { filename$0 }
* actualOut D = { this.!java.awt.Component.background, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.newEventsOnly, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!javax.swing.JTabbedPane.haveRegistered, this.!openFile( java.lang.String ), this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.cs, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.falpha, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.frgbvalue, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.fvalue, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.value, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.markedChar, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.markedSkipLF, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.nChars, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.readAheadLimit, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).java.io.FileReader.!java.io.InputStreamReader.sd, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.delimiters, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.hasSurrogates, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.maxPosition, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.newPosition, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.retDelims, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.str, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.canvas$1.support.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.inProgress, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.indexOfNextAdd, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.height, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.width, this.jp.ac.ritsumei.cs.draw.DrawCanvas.jp.ac.ritsumei.cs.draw.FigureManager.java.util.LinkedList.!java.util.LinkedList.size, this.tool.!java.awt.Frame.title } U = { Color.white, File.separator, FilledOval.name, FilledRect.name, Line.name, Oval.name, Rect.name, System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, confirm$2.NO_OPTION, figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY, figure$17.color, figure$17.endX, figure$17.endY, figure$17.outlineWidth, figure$17.startX, figure$17.startY, figure$7.color, figure$7.endX, figure$7.endY, figure$7.outlineWidth, figure$7.startX, figure$7.startY, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!java.awt.Component.background, this.!java.awt.Component.height, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!java.awt.Component.width, this.!java.awt.Container.dispatcher, this.!java.awt.Container.parent, this.!java.awt.Container.peer, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.lock, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).figures, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, this.canvas$1.!getFigureManager( ).st$6.!java.lang.String.value, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.str, this.canvas$1.!java.awt.Component.height, this.canvas$1.!java.awt.Component.parent, this.canvas$1.!java.awt.Component.peer, this.canvas$1.!java.awt.Component.width, this.canvas$1.!java.awt.Component.x, this.canvas$1.!java.awt.Component.y, this.canvas$1.changed, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.figureManager.figures, this.figureManager.filename, this.figures, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.kind$0.!java.lang.String.value, this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.tabbedCanvas, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvases, this.tool, this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title, this.tool.YES_NO_OPTION, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  17 formalOut D = {  } U = { $_ }
* actualOut D = { this.directory } U = {  }
* actualOut D = { this.changed } U = {  }
* actualOut D = { $_.figureManager } U = {  }
* actualOut D = { $_.figureManager } U = {  }
* actualOut D = { $_.menu } U = {  }
* actualOut D = { $_.selector } U = {  }
* actualOut D = { this.canvas$1.undoManager } U = {  }
* actualOut D = { this.figure$7.endX } U = {  }
* actualOut D = { this.figure$7.endY } U = {  }
* actualOut D = { this.figure$7.startX } U = {  }
* actualOut D = { this.figure$7.startY } U = {  }
* actualOut D = { $_.figures } U = {  }
* actualOut D = { $_.figures } U = {  }
* actualOut D = { $_.filename } U = {  }
* actualOut D = { $_.filename } U = {  }
* actualOut D = { this.selectedTab } U = {  }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#fileExists( java.lang.String ) ]
   1 formalIn D = { name$0 } U = {  }
   2 localDeclaration D = { file$1 } U = { java.io.File.!File( java.lang.String ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = { java.io.File.!java.io.File.fs, java.io.File.!java.io.File.path, name$0 } TO = java.io.File#File( java.lang.String )
* actualOut D = { java.io.File.!File( java.lang.String ), java.io.File.!java.io.File.path, java.io.File.!java.io.File.prefixLength, java.io.File.!java.io.File.status } U = { java.io.File.!java.io.File.fs, java.io.File.!java.io.File.path }
   6 returnSt D = { $_ } U = { file$1.!exists( ) }
   7 receiver D = {  } U = { file$1 }
   8 methodCall D = {  } U = { file$1.!java.io.File$PathStatus.CHECKED, file$1.!java.io.File$PathStatus.INVALID, file$1.!java.io.File.fs, file$1.!java.io.File.path, file$1.!java.io.File.status, file$1.!java.lang.System.security, java.io.File.!File( java.lang.String ).!java.io.File$PathStatus.CHECKED, java.io.File.!File( java.lang.String ).!java.io.File$PathStatus.INVALID, java.io.File.!File( java.lang.String ).!java.io.File.fs, java.io.File.!File( java.lang.String ).!java.io.File.path, java.io.File.!File( java.lang.String ).!java.io.File.status, java.io.File.!File( java.lang.String ).!java.lang.System.security } TO = java.io.File#exists( )
* actualOut D = { file$1.!exists( ), file$1.!java.io.File.status } U = { file$1.!java.io.File$PathStatus.CHECKED, file$1.!java.io.File$PathStatus.INVALID, file$1.!java.io.File.fs, file$1.!java.io.File.path, file$1.!java.io.File.status, file$1.!java.lang.System.security, java.io.File.!File( java.lang.String ).!java.io.File$PathStatus.CHECKED, java.io.File.!File( java.lang.String ).!java.io.File$PathStatus.INVALID, java.io.File.!File( java.lang.String ).!java.io.File.fs, java.io.File.!File( java.lang.String ).!java.io.File.path, java.io.File.!File( java.lang.String ).!java.io.File.status, java.io.File.!File( java.lang.String ).!java.lang.System.security }
  11 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#initToolBar( javax.swing.JToolBar ) ]
   1 formalIn D = { toolBar$0 } U = {  }
   2 localDeclaration D = { newButton$1 } U = { toolBar$0.!add( javax.swing.Action ) }
   3 receiver D = {  } U = { toolBar$0 }
   4 methodCall D = {  } U = { this.newAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
* actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
   6 assignment D = {  } U = { newButton$1.!setToolTipText( java.lang.String ) }
   7 receiver D = {  } U = { newButton$1 }
   8 methodCall D = {  } U = { $java.lang.String, newButton$1.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, newButton$1.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, newButton$1.!javax.swing.JComponent.clientProperties, newButton$1.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, newButton$1.!javax.swing.ToolTipManager.accessibilityKeyListener, newButton$1.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
* actualOut D = { newButton$1.!javax.swing.JComponent.aaHint, newButton$1.!javax.swing.JComponent.lcdRenderingHint, newButton$1.!setToolTipText( java.lang.String ) } U = { newButton$1.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, newButton$1.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, newButton$1.!javax.swing.JComponent.clientProperties, newButton$1.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, newButton$1.!javax.swing.ToolTipManager.accessibilityKeyListener, newButton$1.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  10 localDeclaration D = { openButton$2 } U = { toolBar$0.!add( javax.swing.Action ) }
  11 receiver D = {  } U = { toolBar$0 }
  12 methodCall D = {  } U = { this.openAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
* actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  14 assignment D = {  } U = { openButton$2.!setToolTipText( java.lang.String ) }
  15 receiver D = {  } U = { openButton$2 }
  16 methodCall D = {  } U = { $java.lang.String, openButton$2.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, openButton$2.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, openButton$2.!javax.swing.JComponent.clientProperties, openButton$2.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, openButton$2.!javax.swing.ToolTipManager.accessibilityKeyListener, openButton$2.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
* actualOut D = { openButton$2.!javax.swing.JComponent.aaHint, openButton$2.!javax.swing.JComponent.lcdRenderingHint, openButton$2.!setToolTipText( java.lang.String ) } U = { openButton$2.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, openButton$2.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, openButton$2.!javax.swing.JComponent.clientProperties, openButton$2.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, openButton$2.!javax.swing.ToolTipManager.accessibilityKeyListener, openButton$2.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  18 localDeclaration D = { saveButton$3 } U = { toolBar$0.!add( javax.swing.Action ) }
  19 receiver D = {  } U = { toolBar$0 }
  20 methodCall D = {  } U = { this.saveAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
* actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  22 assignment D = {  } U = { saveButton$3.!setToolTipText( java.lang.String ) }
  23 receiver D = {  } U = { saveButton$3 }
  24 methodCall D = {  } U = { $java.lang.String, saveButton$3.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, saveButton$3.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, saveButton$3.!javax.swing.JComponent.clientProperties, saveButton$3.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, saveButton$3.!javax.swing.ToolTipManager.accessibilityKeyListener, saveButton$3.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
* actualOut D = { saveButton$3.!javax.swing.JComponent.aaHint, saveButton$3.!javax.swing.JComponent.lcdRenderingHint, saveButton$3.!setToolTipText( java.lang.String ) } U = { saveButton$3.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, saveButton$3.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, saveButton$3.!javax.swing.JComponent.clientProperties, saveButton$3.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, saveButton$3.!javax.swing.ToolTipManager.accessibilityKeyListener, saveButton$3.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  26 assignment D = {  } U = { toolBar$0.!addSeparator( ) }
  27 receiver D = {  } U = { toolBar$0 }
  28 methodCall D = {  } U = {  } TO = javax.swing.JToolBar#addSeparator( )
  29 actualOut D = { toolBar$0.!addSeparator( ) } U = {  }
  30 localDeclaration D = { cutButton$4 } U = { toolBar$0.!add( javax.swing.Action ) }
  31 receiver D = {  } U = { toolBar$0 }
  32 methodCall D = {  } U = { this.cutAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
* actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  34 assignment D = {  } U = { cutButton$4.!setToolTipText( java.lang.String ) }
  35 receiver D = {  } U = { cutButton$4 }
  36 methodCall D = {  } U = { $java.lang.String, cutButton$4.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, cutButton$4.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, cutButton$4.!javax.swing.JComponent.clientProperties, cutButton$4.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, cutButton$4.!javax.swing.ToolTipManager.accessibilityKeyListener, cutButton$4.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
* actualOut D = { cutButton$4.!javax.swing.JComponent.aaHint, cutButton$4.!javax.swing.JComponent.lcdRenderingHint, cutButton$4.!setToolTipText( java.lang.String ) } U = { cutButton$4.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, cutButton$4.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, cutButton$4.!javax.swing.JComponent.clientProperties, cutButton$4.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, cutButton$4.!javax.swing.ToolTipManager.accessibilityKeyListener, cutButton$4.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  38 localDeclaration D = { copyButton$5 } U = { toolBar$0.!add( javax.swing.Action ) }
  39 receiver D = {  } U = { toolBar$0 }
  40 methodCall D = {  } U = { this.copyAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
* actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  42 assignment D = {  } U = { copyButton$5.!setToolTipText( java.lang.String ) }
  43 receiver D = {  } U = { copyButton$5 }
  44 methodCall D = {  } U = { $java.lang.String, copyButton$5.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, copyButton$5.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, copyButton$5.!javax.swing.JComponent.clientProperties, copyButton$5.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, copyButton$5.!javax.swing.ToolTipManager.accessibilityKeyListener, copyButton$5.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
* actualOut D = { copyButton$5.!javax.swing.JComponent.aaHint, copyButton$5.!javax.swing.JComponent.lcdRenderingHint, copyButton$5.!setToolTipText( java.lang.String ) } U = { copyButton$5.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, copyButton$5.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, copyButton$5.!javax.swing.JComponent.clientProperties, copyButton$5.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, copyButton$5.!javax.swing.ToolTipManager.accessibilityKeyListener, copyButton$5.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  46 localDeclaration D = { pasteButton$6 } U = { toolBar$0.!add( javax.swing.Action ) }
  47 receiver D = {  } U = { toolBar$0 }
  48 methodCall D = {  } U = { this.pasteAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
* actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  50 assignment D = {  } U = { pasteButton$6.!setToolTipText( java.lang.String ) }
  51 receiver D = {  } U = { pasteButton$6 }
  52 methodCall D = {  } U = { $java.lang.String, pasteButton$6.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, pasteButton$6.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, pasteButton$6.!javax.swing.JComponent.clientProperties, pasteButton$6.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, pasteButton$6.!javax.swing.ToolTipManager.accessibilityKeyListener, pasteButton$6.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
* actualOut D = { pasteButton$6.!javax.swing.JComponent.aaHint, pasteButton$6.!javax.swing.JComponent.lcdRenderingHint, pasteButton$6.!setToolTipText( java.lang.String ) } U = { pasteButton$6.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, pasteButton$6.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, pasteButton$6.!javax.swing.JComponent.clientProperties, pasteButton$6.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, pasteButton$6.!javax.swing.ToolTipManager.accessibilityKeyListener, pasteButton$6.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  54 assignment D = {  } U = { toolBar$0.!addSeparator( ) }
  55 receiver D = {  } U = { toolBar$0 }
  56 methodCall D = {  } U = {  } TO = javax.swing.JToolBar#addSeparator( )
  57 actualOut D = { toolBar$0.!addSeparator( ) } U = {  }
  58 localDeclaration D = { undoButton$7 } U = { toolBar$0.!add( javax.swing.Action ) }
  59 receiver D = {  } U = { toolBar$0 }
  60 methodCall D = {  } U = { this.undoAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
* actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  62 assignment D = {  } U = { undoButton$7.!setToolTipText( java.lang.String ) }
  63 receiver D = {  } U = { undoButton$7 }
  64 methodCall D = {  } U = { $java.lang.String, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener, undoButton$7.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, undoButton$7.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, undoButton$7.!javax.swing.JComponent.clientProperties, undoButton$7.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, undoButton$7.!javax.swing.ToolTipManager.accessibilityKeyListener, undoButton$7.!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
* actualOut D = { undoButton$7.!javax.swing.JComponent.aaHint, undoButton$7.!javax.swing.JComponent.lcdRenderingHint, undoButton$7.!setToolTipText( java.lang.String ) } U = { toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener, undoButton$7.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, undoButton$7.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, undoButton$7.!javax.swing.JComponent.clientProperties, undoButton$7.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, undoButton$7.!javax.swing.ToolTipManager.accessibilityKeyListener, undoButton$7.!javax.swing.ToolTipManager.moveBeforeEnterListener }
  66 assignment D = {  } U = { this.undoAction.!setEnabled( boolean ) }
  67 receiver D = {  } U = { this.undoAction }
  68 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  69 actualOut D = { this.undoAction.!setEnabled( boolean ) } U = {  }
  70 localDeclaration D = { redoButton$8 } U = { toolBar$0.!add( javax.swing.Action ) }
  71 receiver D = {  } U = { toolBar$0 }
  72 methodCall D = {  } U = { this.redoAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
* actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  74 assignment D = {  } U = { redoButton$8.!setToolTipText( java.lang.String ) }
  75 receiver D = {  } U = { redoButton$8 }
  76 methodCall D = {  } U = { $java.lang.String, redoButton$8.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, redoButton$8.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, redoButton$8.!javax.swing.JComponent.clientProperties, redoButton$8.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, redoButton$8.!javax.swing.ToolTipManager.accessibilityKeyListener, redoButton$8.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
* actualOut D = { redoButton$8.!javax.swing.JComponent.aaHint, redoButton$8.!javax.swing.JComponent.lcdRenderingHint, redoButton$8.!setToolTipText( java.lang.String ) } U = { redoButton$8.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, redoButton$8.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, redoButton$8.!javax.swing.JComponent.clientProperties, redoButton$8.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, redoButton$8.!javax.swing.ToolTipManager.accessibilityKeyListener, redoButton$8.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  78 assignment D = {  } U = { redoButton$8.!setEnabled( boolean ) }
  79 receiver D = {  } U = { redoButton$8 }
  80 methodCall D = {  } U = { redoButton$8.!javax.swing.AbstractButton.model, toolBar$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setEnabled( boolean )
  81 actualOut D = { redoButton$8.!setEnabled( boolean ) } U = { redoButton$8.!javax.swing.AbstractButton.model, toolBar$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
  83 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#RECENT_FILES ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#addRecentFile( java.lang.String ) ]
   1 formalIn D = { filename$0 } U = {  }
   2 localDeclaration D = { offset$1 } U = { this.recentFiles.!indexOf( java.lang.Object ) }
   3 receiver D = {  } U = { this.recentFiles }
   4 methodCall D = {  } U = { filename$0 } TO = java.util.List#indexOf( java.lang.Object )
   5 actualOut D = { this.recentFiles.!indexOf( java.lang.Object ) } U = {  }
   6 ifSt D = {  } U = { offset$1 }
   7 assignment D = {  } U = { this.recentFiles.!add( int java.lang.Object ) }
   8 receiver D = {  } U = { this.recentFiles }
   9 methodCall D = {  } U = { filename$0 } TO = java.util.List#add( int java.lang.Object )
  10 actualOut D = { this.recentFiles.!add( int java.lang.Object ) } U = {  }
  11 ifSt D = {  } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES, this.recentFiles.!size( ) }
  12 receiver D = {  } U = { this.recentFiles }
  13 methodCall D = {  } U = {  } TO = java.util.List#size( )
  14 actualOut D = { this.recentFiles.!size( ) } U = {  }
  15 assignment D = {  } U = { this.recentFiles.!remove( int ) }
  16 receiver D = {  } U = { this.recentFiles }
  17 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES } TO = java.util.List#remove( int )
  18 actualOut D = { this.recentFiles.!remove( int ) } U = {  }
  20 assignment D = {  } U = { this.recentFiles.!remove( int ) }
  21 receiver D = {  } U = { this.recentFiles }
  22 methodCall D = {  } U = { offset$1 } TO = java.util.List#remove( int )
  23 actualOut D = { this.recentFiles.!remove( int ) } U = {  }
  24 assignment D = {  } U = { this.recentFiles.!add( int java.lang.Object ) }
  25 receiver D = {  } U = { this.recentFiles }
  26 methodCall D = {  } U = { filename$0 } TO = java.util.List#add( int java.lang.Object )
  27 actualOut D = { this.recentFiles.!add( int java.lang.Object ) } U = {  }
  30 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#fileListMenu ]
   1 fieldDeclaration D = { this.fileListMenu } U = { this.fileListMenu }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { canvas$0 } U = {  }
   3 formalIn D = { filename$1 } U = {  }
   4 localDeclaration D = { result$2 } U = { canvas$0.!getFigureManager( ).!store( java.lang.String ) }
   5 receiver D = {  } U = { canvas$0.!getFigureManager( ) }
   6 receiver D = {  } U = { canvas$0 }
   7 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
   8 actualOut D = { canvas$0.!getFigureManager( ) } U = {  }
   9 methodCall D = {  } U = { System.err, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, canvas$0.!getFigureManager( ).figures, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.!java.lang.String.COMPACT_STRINGS } TO = jp.ac.ritsumei.cs.draw.FigureManager#store( java.lang.String )
  10 actualIn D = {  } U = { filename$1 }
* actualOut D = { canvas$0.!getFigureManager( ).!store( java.lang.String ), canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count } U = { System.err, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, canvas$0.!getFigureManager( ).figures, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.!java.lang.String.COMPACT_STRINGS }
  12 ifSt D = {  } U = { result$2 }
  13 assignment D = {  } U = { this.!showMessageDialog( java.awt.Component java.lang.Object ) }
  14 receiver D = {  } U = {  }
  15 methodCall D = {  } U = { $java.lang.String, filename$1, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showMessageDialog( java.awt.Component java.lang.Object )
  16 actualOut D = { this.!showMessageDialog( java.awt.Component java.lang.Object ) } U = {  }
  17 returnSt D = { $_ } U = {  }
  19 assignment D = {  } U = { canvas$0.!setChanged( boolean ) }
  20 receiver D = {  } U = { canvas$0 }
  21 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setChanged( boolean )
  22 actualIn D = {  } U = {  }
  23 actualOut D = { canvas$0.!setChanged( boolean ) } U = {  }
  24 returnSt D = { $_ } U = {  }
  26 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#clipboard ]
   1 fieldDeclaration D = { this.clipboard } U = { this.clipboard }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#initEditActions( ) ]
   1 assignment D = { this.undoAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
   6 receiver D = {  } U = {  }
   7 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
   8 receiver D = {  } U = { this.!getClass( ) }
   9 receiver D = {  } U = {  }
  10 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  11 actualOut D = { this.!getClass( ) } U = {  }
  12 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  13 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
* actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
* actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  16 assignment D = { this.redoAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
  17 receiver D = {  } U = {  }
  18 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  19 actualIn D = {  } U = { $java.lang.String }
  20 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
  21 receiver D = {  } U = {  }
  22 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  23 receiver D = {  } U = { this.!getClass( ) }
  24 receiver D = {  } U = {  }
  25 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  26 actualOut D = { this.!getClass( ) } U = {  }
  27 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  28 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
* actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
* actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  31 assignment D = { this.cutAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
  32 receiver D = {  } U = {  }
  33 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  34 actualIn D = {  } U = { $java.lang.String }
  35 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
  36 receiver D = {  } U = {  }
  37 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  38 receiver D = {  } U = { this.!getClass( ) }
  39 receiver D = {  } U = {  }
  40 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  41 actualOut D = { this.!getClass( ) } U = {  }
  42 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  43 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
* actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
* actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  46 assignment D = { this.copyAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
  47 receiver D = {  } U = {  }
  48 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  49 actualIn D = {  } U = { $java.lang.String }
  50 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
  51 receiver D = {  } U = {  }
  52 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  53 receiver D = {  } U = { this.!getClass( ) }
  54 receiver D = {  } U = {  }
  55 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  56 actualOut D = { this.!getClass( ) } U = {  }
  57 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  58 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
* actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
* actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  61 assignment D = { this.pasteAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
  62 receiver D = {  } U = {  }
  63 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  64 actualIn D = {  } U = { $java.lang.String }
  65 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
  66 receiver D = {  } U = {  }
  67 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  68 receiver D = {  } U = { this.!getClass( ) }
  69 receiver D = {  } U = {  }
  70 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  71 actualOut D = { this.!getClass( ) } U = {  }
  72 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  73 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
* actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
* actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  76 assignment D = { this.deleteAction } U = { .!AbstractAction( java.lang.String ) }
  77 receiver D = {  } U = {  }
  78 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String )
  79 actualIn D = {  } U = { $java.lang.String }
* actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  82 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#updateRedoState( ) ]
   1 localDeclaration D = { canvas$0 } U = { this.tabbedCanvas.!getCurrentCanvas( ) }
   2 receiver D = {  } U = { this.tabbedCanvas }
   3 methodCall D = {  } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCurrentCanvas( )
   4 actualOut D = { this.tabbedCanvas.!getCurrentCanvas( ) } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
   5 ifSt D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).changed, this.tabbedCanvas.!getCurrentCanvas( ).curX, this.tabbedCanvas.!getCurrentCanvas( ).curY, this.tabbedCanvas.!getCurrentCanvas( ).currentFigure, this.tabbedCanvas.!getCurrentCanvas( ).figureManager, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure, this.tabbedCanvas.!getCurrentCanvas( ).isGrabMode, this.tabbedCanvas.!getCurrentCanvas( ).menu, this.tabbedCanvas.!getCurrentCanvas( ).selector, this.tabbedCanvas.!getCurrentCanvas( ).support, this.tabbedCanvas.!getCurrentCanvas( ).undoManager }
   6 returnSt D = {  } U = {  }
   8 localDeclaration D = { undoManager$1 } U = { canvas$0.!getUndoManager( ) }
   9 receiver D = {  } U = { canvas$0 }
  10 methodCall D = {  } U = { canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).undoManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getUndoManager( )
  11 actualOut D = { canvas$0.!getUndoManager( ) } U = { canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).undoManager }
  12 ifSt D = {  } U = { undoManager$1, undoManager$1.!canRedo( ) }
  13 receiver D = {  } U = { undoManager$1 }
  14 methodCall D = {  } U = { canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.edits, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.inProgress, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.indexOfNextAdd, undoManager$1.!javax.swing.undo.UndoManager.edits, undoManager$1.!javax.swing.undo.UndoManager.inProgress, undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd } TO = javax.swing.undo.UndoManager#canRedo( )
  15 actualOut D = { undoManager$1.!canRedo( ) } U = { canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.edits, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.inProgress, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.indexOfNextAdd, undoManager$1.!javax.swing.undo.UndoManager.edits, undoManager$1.!javax.swing.undo.UndoManager.inProgress, undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd }
  16 assignment D = {  } U = { this.redoAction.!setEnabled( boolean ) }
  17 receiver D = {  } U = { this.redoAction }
  18 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  19 actualOut D = { this.redoAction.!setEnabled( boolean ) } U = {  }
  20 assignment D = {  } U = { this.redoAction.!setEnabled( boolean ) }
  21 receiver D = {  } U = { this.redoAction }
  22 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  23 actualOut D = { this.redoAction.!setEnabled( boolean ) } U = {  }
  26 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#directory ]
   1 fieldDeclaration D = { this.directory } U = { this.directory }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#tabbedCanvas ]
   1 fieldDeclaration D = { this.tabbedCanvas } U = { this.tabbedCanvas }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#fileListener ]
   1 fieldDeclaration D = { this.fileListener } U = { this.fileListener }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#autoSave ]
   1 fieldDeclaration D = { this.autoSave } U = { this.autoSave }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#saveAction ]
   1 fieldDeclaration D = { this.saveAction } U = { this.saveAction }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#initMenuBar( javax.swing.JMenuBar ) ]
   1 formalIn D = { menuBar$0 } U = {  }
   2 localDeclaration D = { fileMenu$1 } U = { javax.swing.JMenu.!JMenu( java.lang.String ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenu#JMenu( java.lang.String )
* actualOut D = { javax.swing.JMenu.!JMenu( java.lang.String ), javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, javax.swing.JMenu.!javax.swing.JMenu.menuEvent } U = {  }
   6 assignment D = {  } U = { fileMenu$1.!setMnemonic( char ) }
   7 receiver D = {  } U = { fileMenu$1 }
   8 methodCall D = {  } U = { fileMenu$1.!javax.swing.AbstractButton.model, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
   9 actualOut D = { fileMenu$1.!setMnemonic( char ) } U = { fileMenu$1.!javax.swing.AbstractButton.model, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model }
  10 assignment D = {  } U = { menuBar$0.!add( javax.swing.JMenu ) }
  11 receiver D = {  } U = { menuBar$0 }
  12 methodCall D = {  } U = { fileMenu$1 } TO = javax.swing.JMenuBar#add( javax.swing.JMenu )
  13 actualOut D = { menuBar$0.!add( javax.swing.JMenu ) } U = {  }
  14 assignment D = {  } U = { this.!initFileActions( ) }
  15 receiver D = {  } U = {  }
  16 methodCall D = {  } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initFileActions( )
* actualOut D = { this.!initFileActions( ), this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.description, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.height, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.location, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  18 assignment D = {  } U = { this.!initFileMenu( javax.swing.JMenu ) }
  19 receiver D = {  } U = {  }
  20 methodCall D = {  } U = { KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK, KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK, KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK, this.closeItem$3.!javax.swing.AbstractButton.listenerList, this.closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.emptyListItem$9.!javax.swing.AbstractButton.model, this.exitItem$13.!javax.swing.AbstractButton.listenerList, this.fileListMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newAction, this.newItem$1.!java.awt.Component.changeSupport, this.newItem$1.!java.awt.Component.height, this.newItem$1.!java.awt.Component.width, this.newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.newItem$1.!javax.swing.AbstractButton.accessibleContext, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.AbstractButton.model, this.newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openAction, this.openItem$2.!javax.swing.AbstractButton.accessibleContext, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.saveAction, this.saveAsItem$6.!javax.swing.AbstractButton.listenerList, this.saveItem$5.!javax.swing.AbstractButton.accessibleContext, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initFileMenu( javax.swing.JMenu )
  21 actualIn D = {  } U = { fileMenu$1 }
* actualOut D = { this.!initFileMenu( javax.swing.JMenu ), this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, this.javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, this.javax.swing.JMenu.!javax.swing.JMenu.menuEvent, this.javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator } U = { KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK, KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK, KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK, this.closeItem$3.!javax.swing.AbstractButton.listenerList, this.closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.emptyListItem$9.!javax.swing.AbstractButton.model, this.exitItem$13.!javax.swing.AbstractButton.listenerList, this.fileListMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newAction, this.newItem$1.!java.awt.Component.changeSupport, this.newItem$1.!java.awt.Component.height, this.newItem$1.!java.awt.Component.width, this.newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.newItem$1.!javax.swing.AbstractButton.accessibleContext, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.AbstractButton.model, this.newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openAction, this.openItem$2.!javax.swing.AbstractButton.accessibleContext, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.saveAction, this.saveAsItem$6.!javax.swing.AbstractButton.listenerList, this.saveItem$5.!javax.swing.AbstractButton.accessibleContext, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator }
  23 localDeclaration D = { editMenu$2 } U = { javax.swing.JMenu.!JMenu( java.lang.String ) }
  24 receiver D = {  } U = {  }
  25 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenu#JMenu( java.lang.String )
* actualOut D = { javax.swing.JMenu.!JMenu( java.lang.String ), javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, javax.swing.JMenu.!javax.swing.JMenu.menuEvent } U = {  }
  27 assignment D = {  } U = { editMenu$2.!setMnemonic( char ) }
  28 receiver D = {  } U = { editMenu$2 }
  29 methodCall D = {  } U = { editMenu$2.!javax.swing.AbstractButton.model, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  30 actualOut D = { editMenu$2.!setMnemonic( char ) } U = { editMenu$2.!javax.swing.AbstractButton.model, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model }
  31 assignment D = {  } U = { menuBar$0.!add( javax.swing.JMenu ) }
  32 receiver D = {  } U = { menuBar$0 }
  33 methodCall D = {  } U = { editMenu$2 } TO = javax.swing.JMenuBar#add( javax.swing.JMenu )
  34 actualOut D = { menuBar$0.!add( javax.swing.JMenu ) } U = {  }
  35 assignment D = {  } U = { this.!initEditActions( ) }
  36 receiver D = {  } U = {  }
  37 methodCall D = {  } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initEditActions( )
* actualOut D = { this.!initEditActions( ), this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.description, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.height, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.location, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  39 assignment D = {  } U = { this.!initEditMenu( javax.swing.JMenu ) }
  40 receiver D = {  } U = {  }
  41 methodCall D = {  } U = { KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK, KeyEvent.VK_DELETE, KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK, KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK, KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK, KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK, this.copyAction, this.copyItem$4.!javax.swing.AbstractButton.accessibleContext, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutAction, this.cutItem$3.!javax.swing.AbstractButton.accessibleContext, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.AbstractButton.model, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteAction, this.deleteItem$6.!javax.swing.AbstractButton.accessibleContext, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.pasteAction, this.pasteItem$5.!javax.swing.AbstractButton.accessibleContext, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoAction, this.redoItem$2.!javax.swing.AbstractButton.accessibleContext, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.undoAction, this.undoItem$1.!java.awt.Component.changeSupport, this.undoItem$1.!java.awt.Component.height, this.undoItem$1.!java.awt.Component.width, this.undoItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.undoItem$1.!javax.swing.AbstractButton.accessibleContext, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.AbstractButton.model, this.undoItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.undoItem$1.!javax.swing.JMenuItem.accelerator } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initEditMenu( javax.swing.JMenu )
  42 actualIn D = {  } U = { editMenu$2 }
* actualOut D = { this.!initEditMenu( javax.swing.JMenu ), this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.JMenuItem.accelerator } U = { KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK, KeyEvent.VK_DELETE, KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK, KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK, KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK, KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK, this.copyAction, this.copyItem$4.!javax.swing.AbstractButton.accessibleContext, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutAction, this.cutItem$3.!javax.swing.AbstractButton.accessibleContext, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.AbstractButton.model, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteAction, this.deleteItem$6.!javax.swing.AbstractButton.accessibleContext, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.pasteAction, this.pasteItem$5.!javax.swing.AbstractButton.accessibleContext, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoAction, this.redoItem$2.!javax.swing.AbstractButton.accessibleContext, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.undoAction, this.undoItem$1.!java.awt.Component.changeSupport, this.undoItem$1.!java.awt.Component.height, this.undoItem$1.!java.awt.Component.width, this.undoItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.undoItem$1.!javax.swing.AbstractButton.accessibleContext, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.AbstractButton.model, this.undoItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.undoItem$1.!javax.swing.JMenuItem.accelerator }
  44 localDeclaration D = { windowMenu$3 } U = { javax.swing.JMenu.!JMenu( java.lang.String ) }
  45 receiver D = {  } U = {  }
  46 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenu#JMenu( java.lang.String )
* actualOut D = { javax.swing.JMenu.!JMenu( java.lang.String ), javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, javax.swing.JMenu.!javax.swing.JMenu.menuEvent } U = {  }
  48 assignment D = {  } U = { windowMenu$3.!setMnemonic( char ) }
  49 receiver D = {  } U = { windowMenu$3 }
  50 methodCall D = {  } U = { javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model, windowMenu$3.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  51 actualOut D = { windowMenu$3.!setMnemonic( char ) } U = { javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model, windowMenu$3.!javax.swing.AbstractButton.model }
  52 assignment D = {  } U = { menuBar$0.!add( javax.swing.JMenu ) }
  53 receiver D = {  } U = { menuBar$0 }
  54 methodCall D = {  } U = { windowMenu$3 } TO = javax.swing.JMenuBar#add( javax.swing.JMenu )
  55 actualOut D = { menuBar$0.!add( javax.swing.JMenu ) } U = {  }
  56 assignment D = { this.windowListener } U = { .!ActionListener( ) }
  57 receiver D = {  } U = {  }
  58 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
  59 actualOut D = { .!ActionListener( ) } U = {  }
  60 assignment D = {  } U = { windowMenu$3.!addMenuListener( javax.swing.event.MenuListener ) }
  61 receiver D = {  } U = { windowMenu$3 }
  62 methodCall D = {  } U = { .!MenuListener( ), javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.JMenu.listenerList, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.event.EventListenerList.listenerList, windowMenu$3.!javax.swing.JMenu.listenerList, windowMenu$3.!javax.swing.event.EventListenerList.NULL_ARRAY, windowMenu$3.!javax.swing.event.EventListenerList.listenerList } TO = javax.swing.JMenu#addMenuListener( javax.swing.event.MenuListener )
  63 receiver D = {  } U = {  }
  64 constructorCall D = {  } U = {  } TO = javax.swing.event.MenuListener#MenuListener( )
  65 actualOut D = { .!MenuListener( ) } U = {  }
* actualOut D = { windowMenu$3.!addMenuListener( javax.swing.event.MenuListener ), windowMenu$3.!javax.swing.event.EventListenerList.listenerList } U = { javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.JMenu.listenerList, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.event.EventListenerList.listenerList, windowMenu$3.!javax.swing.JMenu.listenerList, windowMenu$3.!javax.swing.event.EventListenerList.NULL_ARRAY, windowMenu$3.!javax.swing.event.EventListenerList.listenerList }
  68 formalOut D = {  } U = { $_ }
* actualOut D = { this.newAction } U = {  }
* actualOut D = { this.openAction } U = {  }
* actualOut D = { this.saveAction } U = {  }
* actualOut D = { this.fileListMenu } U = {  }
* actualOut D = { this.fileListener } U = {  }
* actualOut D = { this.copyAction } U = {  }
* actualOut D = { this.cutAction } U = {  }
* actualOut D = { this.deleteAction } U = {  }
* actualOut D = { this.pasteAction } U = {  }
* actualOut D = { this.redoAction } U = {  }
* actualOut D = { this.undoAction } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#pasteAction ]
   1 fieldDeclaration D = { this.pasteAction } U = { this.pasteAction }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#initFileMenu( javax.swing.JMenu ) ]
   1 formalIn D = { menu$0 } U = {  }
   2 localDeclaration D = { newItem$1 } U = { menu$0.!add( javax.swing.Action ) }
   3 receiver D = {  } U = { menu$0 }
   4 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.newAction } TO = javax.swing.JMenu#add( javax.swing.Action )
* actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
   6 assignment D = {  } U = { newItem$1.!setMnemonic( char ) }
   7 receiver D = {  } U = { newItem$1 }
   8 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, newItem$1.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
   9 actualOut D = { newItem$1.!setMnemonic( char ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, newItem$1.!javax.swing.AbstractButton.model }
  10 assignment D = {  } U = { newItem$1.!setIcon( javax.swing.Icon ) }
  11 receiver D = {  } U = { newItem$1 }
  12 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, newItem$1.!java.awt.Component.changeSupport, newItem$1.!java.awt.Component.height, newItem$1.!java.awt.Component.width, newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, newItem$1.!javax.swing.AbstractButton.accessibleContext, newItem$1.!javax.swing.AbstractButton.defaultIcon, newItem$1.!javax.swing.AbstractButton.disabledIcon, newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
* actualOut D = { newItem$1.!javax.swing.AbstractButton.defaultIcon, newItem$1.!javax.swing.AbstractButton.disabledIcon, newItem$1.!setIcon( javax.swing.Icon ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, newItem$1.!java.awt.Component.changeSupport, newItem$1.!java.awt.Component.height, newItem$1.!java.awt.Component.width, newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, newItem$1.!javax.swing.AbstractButton.accessibleContext, newItem$1.!javax.swing.AbstractButton.defaultIcon, newItem$1.!javax.swing.AbstractButton.disabledIcon, newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled }
  14 assignment D = {  } U = { newItem$1.!setAccelerator( javax.swing.KeyStroke ) }
  15 receiver D = {  } U = { newItem$1 }
  16 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, newItem$1.!java.awt.Component.changeSupport, newItem$1.!java.awt.Component.height, newItem$1.!java.awt.Component.width, newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, newItem$1.!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  19 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
* actualOut D = { newItem$1.!javax.swing.JMenuItem.accelerator, newItem$1.!setAccelerator( javax.swing.KeyStroke ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, newItem$1.!java.awt.Component.changeSupport, newItem$1.!java.awt.Component.height, newItem$1.!java.awt.Component.width, newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, newItem$1.!javax.swing.JMenuItem.accelerator }
  21 localDeclaration D = { openItem$2 } U = { menu$0.!add( javax.swing.Action ) }
  22 receiver D = {  } U = { menu$0 }
  23 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.openAction } TO = javax.swing.JMenu#add( javax.swing.Action )
* actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
  25 assignment D = {  } U = { openItem$2.!setMnemonic( char ) }
  26 receiver D = {  } U = { openItem$2 }
  27 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, openItem$2.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  28 actualOut D = { openItem$2.!setMnemonic( char ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, openItem$2.!javax.swing.AbstractButton.model }
  29 assignment D = {  } U = { openItem$2.!setIcon( javax.swing.Icon ) }
  30 receiver D = {  } U = { openItem$2 }
  31 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, openItem$2.!java.awt.Component.changeSupport, openItem$2.!java.awt.Component.height, openItem$2.!java.awt.Component.width, openItem$2.!javax.accessibility.AccessibleContext.accessibleChangeSupport, openItem$2.!javax.swing.AbstractButton.accessibleContext, openItem$2.!javax.swing.AbstractButton.defaultIcon, openItem$2.!javax.swing.AbstractButton.disabledIcon, openItem$2.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
* actualOut D = { openItem$2.!javax.swing.AbstractButton.defaultIcon, openItem$2.!javax.swing.AbstractButton.disabledIcon, openItem$2.!setIcon( javax.swing.Icon ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, openItem$2.!java.awt.Component.changeSupport, openItem$2.!java.awt.Component.height, openItem$2.!java.awt.Component.width, openItem$2.!javax.accessibility.AccessibleContext.accessibleChangeSupport, openItem$2.!javax.swing.AbstractButton.accessibleContext, openItem$2.!javax.swing.AbstractButton.defaultIcon, openItem$2.!javax.swing.AbstractButton.disabledIcon, openItem$2.!javax.swing.JComponent.revalidateRunnableScheduled }
  33 assignment D = {  } U = { openItem$2.!setAccelerator( javax.swing.KeyStroke ) }
  34 receiver D = {  } U = { openItem$2 }
  35 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, openItem$2.!java.awt.Component.changeSupport, openItem$2.!java.awt.Component.height, openItem$2.!java.awt.Component.width, openItem$2.!javax.swing.JComponent.revalidateRunnableScheduled, openItem$2.!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  36 receiver D = {  } U = {  }
  37 methodCall D = {  } U = { KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  38 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
* actualOut D = { openItem$2.!javax.swing.JMenuItem.accelerator, openItem$2.!setAccelerator( javax.swing.KeyStroke ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, openItem$2.!java.awt.Component.changeSupport, openItem$2.!java.awt.Component.height, openItem$2.!java.awt.Component.width, openItem$2.!javax.swing.JComponent.revalidateRunnableScheduled, openItem$2.!javax.swing.JMenuItem.accelerator }
  40 localDeclaration D = { closeItem$3 } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ) }
  41 receiver D = {  } U = {  }
  42 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
* actualOut D = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ), javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged } U = {  }
  44 assignment D = {  } U = { closeItem$3.!setMnemonic( char ) }
  45 receiver D = {  } U = { closeItem$3 }
  46 methodCall D = {  } U = { closeItem$3.!javax.swing.AbstractButton.model, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  47 actualOut D = { closeItem$3.!setMnemonic( char ) } U = { closeItem$3.!javax.swing.AbstractButton.model, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model }
  48 assignment D = {  } U = { menu$0.!add( javax.swing.JMenuItem ) }
  49 receiver D = {  } U = { menu$0 }
  50 methodCall D = {  } U = { closeItem$3, menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
* actualOut D = { menu$0.!add( javax.swing.JMenuItem ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
  52 assignment D = {  } U = { closeItem$3.!addActionListener( java.awt.event.ActionListener ) }
  53 receiver D = {  } U = { closeItem$3 }
  54 methodCall D = {  } U = { .!ActionListener( ), closeItem$3.!javax.swing.AbstractButton.listenerList, closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, closeItem$3.!javax.swing.event.EventListenerList.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList } TO = javax.swing.AbstractButton#addActionListener( java.awt.event.ActionListener )
  55 receiver D = {  } U = {  }
  56 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
  57 actualOut D = { .!ActionListener( ) } U = {  }
* actualOut D = { closeItem$3.!addActionListener( java.awt.event.ActionListener ), closeItem$3.!javax.swing.event.EventListenerList.listenerList } U = { closeItem$3.!javax.swing.AbstractButton.listenerList, closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, closeItem$3.!javax.swing.event.EventListenerList.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList }
  59 assignment D = {  } U = { menu$0.!addSeparator( ) }
  60 receiver D = {  } U = { menu$0 }
  61 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#addSeparator( )
* actualOut D = { menu$0.!addSeparator( ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
  63 localDeclaration D = { saveItem$5 } U = { menu$0.!add( javax.swing.Action ) }
  64 receiver D = {  } U = { menu$0 }
  65 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.saveAction } TO = javax.swing.JMenu#add( javax.swing.Action )
* actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
  67 assignment D = {  } U = { saveItem$5.!setMnemonic( char ) }
  68 receiver D = {  } U = { saveItem$5 }
  69 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, saveItem$5.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  70 actualOut D = { saveItem$5.!setMnemonic( char ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, saveItem$5.!javax.swing.AbstractButton.model }
  71 assignment D = {  } U = { saveItem$5.!setIcon( javax.swing.Icon ) }
  72 receiver D = {  } U = { saveItem$5 }
  73 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, saveItem$5.!java.awt.Component.changeSupport, saveItem$5.!java.awt.Component.height, saveItem$5.!java.awt.Component.width, saveItem$5.!javax.accessibility.AccessibleContext.accessibleChangeSupport, saveItem$5.!javax.swing.AbstractButton.accessibleContext, saveItem$5.!javax.swing.AbstractButton.defaultIcon, saveItem$5.!javax.swing.AbstractButton.disabledIcon, saveItem$5.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
* actualOut D = { saveItem$5.!javax.swing.AbstractButton.defaultIcon, saveItem$5.!javax.swing.AbstractButton.disabledIcon, saveItem$5.!setIcon( javax.swing.Icon ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, saveItem$5.!java.awt.Component.changeSupport, saveItem$5.!java.awt.Component.height, saveItem$5.!java.awt.Component.width, saveItem$5.!javax.accessibility.AccessibleContext.accessibleChangeSupport, saveItem$5.!javax.swing.AbstractButton.accessibleContext, saveItem$5.!javax.swing.AbstractButton.defaultIcon, saveItem$5.!javax.swing.AbstractButton.disabledIcon, saveItem$5.!javax.swing.JComponent.revalidateRunnableScheduled }
  75 assignment D = {  } U = { saveItem$5.!setAccelerator( javax.swing.KeyStroke ) }
  76 receiver D = {  } U = { saveItem$5 }
  77 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, saveItem$5.!java.awt.Component.changeSupport, saveItem$5.!java.awt.Component.height, saveItem$5.!java.awt.Component.width, saveItem$5.!javax.swing.JComponent.revalidateRunnableScheduled, saveItem$5.!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  78 receiver D = {  } U = {  }
  79 methodCall D = {  } U = { KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  80 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
* actualOut D = { saveItem$5.!javax.swing.JMenuItem.accelerator, saveItem$5.!setAccelerator( javax.swing.KeyStroke ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, saveItem$5.!java.awt.Component.changeSupport, saveItem$5.!java.awt.Component.height, saveItem$5.!java.awt.Component.width, saveItem$5.!javax.swing.JComponent.revalidateRunnableScheduled, saveItem$5.!javax.swing.JMenuItem.accelerator }
  82 localDeclaration D = { saveAsItem$6 } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ) }
  83 receiver D = {  } U = {  }
  84 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
* actualOut D = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ), javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged } U = {  }
  86 assignment D = {  } U = { saveAsItem$6.!setMnemonic( char ) }
  87 receiver D = {  } U = { saveAsItem$6 }
  88 methodCall D = {  } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model, saveAsItem$6.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  89 actualOut D = { saveAsItem$6.!setMnemonic( char ) } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model, saveAsItem$6.!javax.swing.AbstractButton.model }
  90 assignment D = {  } U = { menu$0.!add( javax.swing.JMenuItem ) }
  91 receiver D = {  } U = { menu$0 }
  92 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu, saveAsItem$6 } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
* actualOut D = { menu$0.!add( javax.swing.JMenuItem ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
  94 assignment D = {  } U = { saveAsItem$6.!addActionListener( java.awt.event.ActionListener ) }
  95 receiver D = {  } U = { saveAsItem$6 }
  96 methodCall D = {  } U = { .!ActionListener( ), javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList, saveAsItem$6.!javax.swing.AbstractButton.listenerList, saveAsItem$6.!javax.swing.event.EventListenerList.NULL_ARRAY, saveAsItem$6.!javax.swing.event.EventListenerList.listenerList } TO = javax.swing.AbstractButton#addActionListener( java.awt.event.ActionListener )
  97 receiver D = {  } U = {  }
  98 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
  99 actualOut D = { .!ActionListener( ) } U = {  }
* actualOut D = { saveAsItem$6.!addActionListener( java.awt.event.ActionListener ), saveAsItem$6.!javax.swing.event.EventListenerList.listenerList } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList, saveAsItem$6.!javax.swing.AbstractButton.listenerList, saveAsItem$6.!javax.swing.event.EventListenerList.NULL_ARRAY, saveAsItem$6.!javax.swing.event.EventListenerList.listenerList }
 101 assignment D = {  } U = { menu$0.!addSeparator( ) }
 102 receiver D = {  } U = { menu$0 }
 103 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#addSeparator( )
* actualOut D = { menu$0.!addSeparator( ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
 105 assignment D = { this.fileListMenu } U = { javax.swing.JMenu.!JMenu( java.lang.String ) }
 106 receiver D = {  } U = {  }
 107 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenu#JMenu( java.lang.String )
* actualOut D = { javax.swing.JMenu.!JMenu( java.lang.String ), javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, javax.swing.JMenu.!javax.swing.JMenu.menuEvent } U = {  }
 109 assignment D = {  } U = { this.fileListMenu.!setMnemonic( char ) }
 110 receiver D = {  } U = { this.fileListMenu }
 111 methodCall D = {  } U = { javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model, this.fileListMenu.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
 112 actualOut D = { this.fileListMenu.!setMnemonic( char ) } U = { javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model, this.fileListMenu.!javax.swing.AbstractButton.model }
 113 assignment D = {  } U = { menu$0.!add( javax.swing.JMenuItem ) }
 114 receiver D = {  } U = { menu$0 }
 115 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu, this.fileListMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
* actualOut D = { menu$0.!add( javax.swing.JMenuItem ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
 117 localDeclaration D = { emptyListItem$9 } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ) }
 118 receiver D = {  } U = {  }
 119 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
* actualOut D = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ), javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged } U = {  }
 121 assignment D = {  } U = { emptyListItem$9.!setEnabled( boolean ) }
 122 receiver D = {  } U = { emptyListItem$9 }
 123 methodCall D = {  } U = { emptyListItem$9.!javax.swing.AbstractButton.model, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model } TO = javax.swing.JMenuItem#setEnabled( boolean )
 124 actualOut D = { emptyListItem$9.!setEnabled( boolean ) } U = { emptyListItem$9.!javax.swing.AbstractButton.model, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model }
 125 assignment D = {  } U = { this.fileListMenu.!add( javax.swing.JMenuItem ) }
 126 receiver D = {  } U = { this.fileListMenu }
 127 methodCall D = {  } U = { emptyListItem$9, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.JMenu.popupMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
* actualOut D = { this.fileListMenu.!add( javax.swing.JMenuItem ), this.fileListMenu.!javax.swing.JMenu.popupListener, this.fileListMenu.!javax.swing.JMenu.popupMenu } U = { javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.JMenu.popupMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu }
 129 assignment D = { this.fileListener } U = { .!ActionListener( ) }
 130 receiver D = {  } U = {  }
 131 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
 132 actualOut D = { .!ActionListener( ) } U = {  }
 133 assignment D = {  } U = { menu$0.!addSeparator( ) }
 134 receiver D = {  } U = { menu$0 }
 135 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#addSeparator( )
* actualOut D = { menu$0.!addSeparator( ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
 137 localDeclaration D = { exitItem$13 } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ) }
 138 receiver D = {  } U = {  }
 139 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
* actualOut D = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ), javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged } U = {  }
 141 assignment D = {  } U = { exitItem$13.!setMnemonic( char ) }
 142 receiver D = {  } U = { exitItem$13 }
 143 methodCall D = {  } U = { exitItem$13.!javax.swing.AbstractButton.model, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
 144 actualOut D = { exitItem$13.!setMnemonic( char ) } U = { exitItem$13.!javax.swing.AbstractButton.model, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model }
 145 assignment D = {  } U = { menu$0.!add( javax.swing.JMenuItem ) }
 146 receiver D = {  } U = { menu$0 }
 147 methodCall D = {  } U = { exitItem$13, menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
* actualOut D = { menu$0.!add( javax.swing.JMenuItem ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
 149 assignment D = {  } U = { exitItem$13.!addActionListener( java.awt.event.ActionListener ) }
 150 receiver D = {  } U = { exitItem$13 }
 151 methodCall D = {  } U = { .!ActionListener( ), exitItem$13.!javax.swing.AbstractButton.listenerList, exitItem$13.!javax.swing.event.EventListenerList.NULL_ARRAY, exitItem$13.!javax.swing.event.EventListenerList.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList } TO = javax.swing.AbstractButton#addActionListener( java.awt.event.ActionListener )
 152 receiver D = {  } U = {  }
 153 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
 154 actualOut D = { .!ActionListener( ) } U = {  }
* actualOut D = { exitItem$13.!addActionListener( java.awt.event.ActionListener ), exitItem$13.!javax.swing.event.EventListenerList.listenerList } U = { exitItem$13.!javax.swing.AbstractButton.listenerList, exitItem$13.!javax.swing.event.EventListenerList.NULL_ARRAY, exitItem$13.!javax.swing.event.EventListenerList.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList }
 157 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#updateUndoState( ) ]
   1 localDeclaration D = { canvas$0 } U = { this.tabbedCanvas.!getCurrentCanvas( ) }
   2 receiver D = {  } U = { this.tabbedCanvas }
   3 methodCall D = {  } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCurrentCanvas( )
   4 actualOut D = { this.tabbedCanvas.!getCurrentCanvas( ) } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
   5 ifSt D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).changed, this.tabbedCanvas.!getCurrentCanvas( ).curX, this.tabbedCanvas.!getCurrentCanvas( ).curY, this.tabbedCanvas.!getCurrentCanvas( ).currentFigure, this.tabbedCanvas.!getCurrentCanvas( ).figureManager, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure, this.tabbedCanvas.!getCurrentCanvas( ).isGrabMode, this.tabbedCanvas.!getCurrentCanvas( ).menu, this.tabbedCanvas.!getCurrentCanvas( ).selector, this.tabbedCanvas.!getCurrentCanvas( ).support, this.tabbedCanvas.!getCurrentCanvas( ).undoManager }
   6 returnSt D = {  } U = {  }
   8 localDeclaration D = { undoManager$1 } U = { canvas$0.!getUndoManager( ) }
   9 receiver D = {  } U = { canvas$0 }
  10 methodCall D = {  } U = { canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).undoManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getUndoManager( )
  11 actualOut D = { canvas$0.!getUndoManager( ) } U = { canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).undoManager }
  12 ifSt D = {  } U = { undoManager$1, undoManager$1.!canUndo( ) }
  13 receiver D = {  } U = { undoManager$1 }
  14 methodCall D = {  } U = { canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.edits, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.inProgress, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.indexOfNextAdd, undoManager$1.!javax.swing.undo.UndoManager.edits, undoManager$1.!javax.swing.undo.UndoManager.inProgress, undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd } TO = javax.swing.undo.UndoManager#canUndo( )
  15 actualOut D = { undoManager$1.!canUndo( ) } U = { canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.edits, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.inProgress, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.indexOfNextAdd, undoManager$1.!javax.swing.undo.UndoManager.edits, undoManager$1.!javax.swing.undo.UndoManager.inProgress, undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd }
  16 assignment D = {  } U = { this.undoAction.!setEnabled( boolean ) }
  17 receiver D = {  } U = { this.undoAction }
  18 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  19 actualOut D = { this.undoAction.!setEnabled( boolean ) } U = {  }
  20 assignment D = {  } U = { this.undoAction.!setEnabled( boolean ) }
  21 receiver D = {  } U = { this.undoAction }
  22 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  23 actualOut D = { this.undoAction.!setEnabled( boolean ) } U = {  }
  26 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { canvas$0 } U = {  }
   3 returnSt D = { $_ } U = { this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String ) }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = { System.err, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String )
   6 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
   7 actualIn D = {  } U = { canvas$0.!getFigureManager( ).!getFilename( ) }
   8 receiver D = {  } U = { canvas$0.!getFigureManager( ) }
   9 receiver D = {  } U = { canvas$0 }
  10 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  11 actualOut D = { canvas$0.!getFigureManager( ) } U = {  }
  12 methodCall D = {  } U = { canvas$0.!getFigureManager( ).filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
  13 actualOut D = { canvas$0.!getFigureManager( ).!getFilename( ) } U = { canvas$0.!getFigureManager( ).filename }
* actualOut D = { this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String ), this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, this.canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count } U = { System.err, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  16 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#buildRecentFileMenu( ) ]
   1 assignment D = {  } U = { this.fileListMenu.!removeAll( ) }
   2 receiver D = {  } U = { this.fileListMenu }
   3 methodCall D = {  } U = { this.fileListMenu.!java.awt.Container.component, this.fileListMenu.!java.awt.Container.containerListener, this.fileListMenu.!java.awt.Container.descendantsCount, this.fileListMenu.!java.awt.Container.eventMask, this.fileListMenu.!java.awt.Container.layoutMgr, this.fileListMenu.!java.awt.Container.listeningBoundsChildren, this.fileListMenu.!java.awt.Container.listeningChildren, this.fileListMenu.!java.awt.Container.peer, this.fileListMenu.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#removeAll( )
* actualOut D = { this.fileListMenu.!java.awt.Component.parent, this.fileListMenu.!removeAll( ) } U = { this.fileListMenu.!java.awt.Container.component, this.fileListMenu.!java.awt.Container.containerListener, this.fileListMenu.!java.awt.Container.descendantsCount, this.fileListMenu.!java.awt.Container.eventMask, this.fileListMenu.!java.awt.Container.layoutMgr, this.fileListMenu.!java.awt.Container.listeningBoundsChildren, this.fileListMenu.!java.awt.Container.listeningChildren, this.fileListMenu.!java.awt.Container.peer, this.fileListMenu.!javax.swing.JMenu.popupMenu }
   5 enhancedForSt D = { filename$0 } U = { this.recentFiles }
   6 localDeclaration D = { fileItem$2 } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ) }
   7 receiver D = {  } U = {  }
   8 constructorCall D = {  } U = { filename$0 } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
* actualOut D = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ), javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged } U = {  }
  10 assignment D = {  } U = { this.fileListMenu.!add( javax.swing.JMenuItem ) }
  11 receiver D = {  } U = { this.fileListMenu }
  12 methodCall D = {  } U = { fileItem$2, this.fileListMenu.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
* actualOut D = { this.fileListMenu.!add( javax.swing.JMenuItem ), this.fileListMenu.!javax.swing.JMenu.popupListener, this.fileListMenu.!javax.swing.JMenu.popupMenu } U = { this.fileListMenu.!javax.swing.JMenu.popupMenu }
  14 assignment D = {  } U = { fileItem$2.!addActionListener( java.awt.event.ActionListener ) }
  15 receiver D = {  } U = { fileItem$2 }
  16 methodCall D = {  } U = { fileItem$2.!javax.swing.AbstractButton.listenerList, fileItem$2.!javax.swing.event.EventListenerList.NULL_ARRAY, fileItem$2.!javax.swing.event.EventListenerList.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList, this.fileListener } TO = javax.swing.AbstractButton#addActionListener( java.awt.event.ActionListener )
* actualOut D = { fileItem$2.!addActionListener( java.awt.event.ActionListener ), fileItem$2.!javax.swing.event.EventListenerList.listenerList } U = { fileItem$2.!javax.swing.AbstractButton.listenerList, fileItem$2.!javax.swing.event.EventListenerList.NULL_ARRAY, fileItem$2.!javax.swing.event.EventListenerList.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList }
  19 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#openFile( java.lang.String ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 throwsClause D = {  } U = { $java.lang.NumberFormatException }
   3 formalIn D = { filename$0 } U = {  }
   4 localDeclaration D = { canvas$1 } U = { this.tabbedCanvas.!getCanvas( java.lang.String ) }
   5 receiver D = {  } U = { this.tabbedCanvas }
   6 methodCall D = {  } U = { canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvases } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCanvas( java.lang.String )
   7 actualIn D = {  } U = { filename$0 }
   8 actualOut D = { this.tabbedCanvas.!getCanvas( java.lang.String ) } U = { canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvases }
   9 ifSt D = {  } U = { this.tabbedCanvas.!getCanvas( java.lang.String ) }
  10 receiver D = {  } U = { this.tabbedCanvas }
  11 methodCall D = {  } U = { canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.!getCanvas( java.lang.String ).changed, this.tabbedCanvas.!getCanvas( java.lang.String ).curX, this.tabbedCanvas.!getCanvas( java.lang.String ).curY, this.tabbedCanvas.!getCanvas( java.lang.String ).currentFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager, this.tabbedCanvas.!getCanvas( java.lang.String ).grabbedFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).isGrabMode, this.tabbedCanvas.!getCanvas( java.lang.String ).menu, this.tabbedCanvas.!getCanvas( java.lang.String ).selector, this.tabbedCanvas.!getCanvas( java.lang.String ).support, this.tabbedCanvas.!getCanvas( java.lang.String ).undoManager, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvases, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).filename, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCanvas( java.lang.String )
  12 actualIn D = {  } U = { filename$0 }
  13 actualOut D = { this.tabbedCanvas.!getCanvas( java.lang.String ) } U = { canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.!getCanvas( java.lang.String ).changed, this.tabbedCanvas.!getCanvas( java.lang.String ).curX, this.tabbedCanvas.!getCanvas( java.lang.String ).curY, this.tabbedCanvas.!getCanvas( java.lang.String ).currentFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager, this.tabbedCanvas.!getCanvas( java.lang.String ).grabbedFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).isGrabMode, this.tabbedCanvas.!getCanvas( java.lang.String ).menu, this.tabbedCanvas.!getCanvas( java.lang.String ).selector, this.tabbedCanvas.!getCanvas( java.lang.String ).support, this.tabbedCanvas.!getCanvas( java.lang.String ).undoManager, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvases, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).filename, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager }
  14 ifSt D = {  } U = { canvas$1.!hasChanged( ) }
  15 receiver D = {  } U = { canvas$1 }
  16 methodCall D = {  } U = { canvas$1.changed } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#hasChanged( )
  17 actualOut D = { canvas$1.!hasChanged( ) } U = { canvas$1.changed }
  18 assignment D = {  } U = { this.!showMessageDialog( java.awt.Component java.lang.Object ) }
  19 receiver D = {  } U = {  }
  20 methodCall D = {  } U = { $java.lang.String, filename$0, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showMessageDialog( java.awt.Component java.lang.Object )
  21 actualOut D = { this.!showMessageDialog( java.awt.Component java.lang.Object ) } U = {  }
  22 returnSt D = { $_ } U = {  }
  23 localDeclaration D = { confirm$2 } U = { this.!showConfirmDialog( java.awt.Component java.lang.Object java.lang.String int ) }
  24 receiver D = {  } U = {  }
  25 methodCall D = {  } U = { $java.lang.String, this.tool, this.tool.YES_NO_OPTION, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showConfirmDialog( java.awt.Component java.lang.Object java.lang.String int )
  26 actualOut D = { this.!showConfirmDialog( java.awt.Component java.lang.Object java.lang.String int ) } U = {  }
  27 ifSt D = {  } U = { confirm$2, confirm$2.NO_OPTION }
  28 returnSt D = { $_ } U = {  }
  31 assignment D = { canvas$1 } U = { this.tabbedCanvas.!openTab( java.lang.String ) }
  32 receiver D = {  } U = { this.tabbedCanvas }
  33 methodCall D = {  } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!java.awt.Component.background, this.!java.awt.Component.height, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!java.awt.Component.width, this.!java.awt.Container.dispatcher, this.!java.awt.Container.parent, this.!java.awt.Container.peer, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.canvas$1.figureManager, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.figureManager.figures, this.figureManager.filename, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.fmanager$3.filename.!java.lang.String.coder, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.tabbedCanvas.!getCanvas( java.lang.String ).changed, this.tabbedCanvas.!getCanvas( java.lang.String ).curX, this.tabbedCanvas.!getCanvas( java.lang.String ).curY, this.tabbedCanvas.!getCanvas( java.lang.String ).currentFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager, this.tabbedCanvas.!getCanvas( java.lang.String ).grabbedFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).isGrabMode, this.tabbedCanvas.!getCanvas( java.lang.String ).menu, this.tabbedCanvas.!getCanvas( java.lang.String ).selector, this.tabbedCanvas.!getCanvas( java.lang.String ).support, this.tabbedCanvas.!getCanvas( java.lang.String ).undoManager, this.this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager, this.this.tabbedCanvas.!getCanvas( java.lang.String ).support, this.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!java.util.Vector.elementCount, this.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!java.util.Vector.elementData, this.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!java.util.Vector.modCount, this.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!javax.swing.undo.UndoableEditSupport.listeners } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#openTab( java.lang.String )
  34 actualIn D = {  } U = { filename$0 }
* actualOut D = { this.!java.awt.Component.background, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.newEventsOnly, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!javax.swing.JTabbedPane.haveRegistered, this.canvas$1.support.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.inProgress, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.indexOfNextAdd, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.height, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.width, this.jp.ac.ritsumei.cs.draw.DrawCanvas.jp.ac.ritsumei.cs.draw.FigureManager.java.util.LinkedList.!java.util.LinkedList.size, this.tabbedCanvas.!openTab( java.lang.String ) } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!java.awt.Component.background, this.!java.awt.Component.height, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!java.awt.Component.width, this.!java.awt.Container.dispatcher, this.!java.awt.Container.parent, this.!java.awt.Container.peer, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.canvas$1.figureManager, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.figureManager.figures, this.figureManager.filename, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.fmanager$3.filename.!java.lang.String.coder, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.tabbedCanvas.!getCanvas( java.lang.String ).changed, this.tabbedCanvas.!getCanvas( java.lang.String ).curX, this.tabbedCanvas.!getCanvas( java.lang.String ).curY, this.tabbedCanvas.!getCanvas( java.lang.String ).currentFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager, this.tabbedCanvas.!getCanvas( java.lang.String ).grabbedFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).isGrabMode, this.tabbedCanvas.!getCanvas( java.lang.String ).menu, this.tabbedCanvas.!getCanvas( java.lang.String ).selector, this.tabbedCanvas.!getCanvas( java.lang.String ).support, this.tabbedCanvas.!getCanvas( java.lang.String ).undoManager, this.this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager, this.this.tabbedCanvas.!getCanvas( java.lang.String ).support, this.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!java.util.Vector.elementCount, this.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!java.util.Vector.elementData, this.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!java.util.Vector.modCount, this.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!javax.swing.undo.UndoableEditSupport.listeners }
  37 localDeclaration D = { result$3 } U = { canvas$1.!getFigureManager( ).!load( java.lang.String ) }
  38 receiver D = {  } U = { canvas$1.!getFigureManager( ) }
  39 receiver D = {  } U = { canvas$1 }
  40 methodCall D = {  } U = { canvas$1.figureManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.!openTab( java.lang.String ).figureManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  41 actualOut D = { canvas$1.!getFigureManager( ) } U = { canvas$1.figureManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.!openTab( java.lang.String ).figureManager }
  42 methodCall D = {  } U = { Color.black, FilledOval.name, FilledRect.name, Line.name, Oval.name, Rect.name, System.err, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.out, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.lock, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, canvas$1.!getFigureManager( ).figures, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, canvas$1.!getFigureManager( ).st$6.!java.lang.String.value, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.str, figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY, figure$17.color, figure$17.endX, figure$17.endY, figure$17.outlineWidth, figure$17.startX, figure$17.startY, figure$7.color, figure$7.endX, figure$7.endY, figure$7.outlineWidth, figure$7.startX, figure$7.startY, this.figures, this.kind$0.!java.lang.String.COMPACT_STRINGS, this.kind$0.!java.lang.String.coder, this.kind$0.!java.lang.String.value, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.out, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.lock, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).figures, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.lang.String.value, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.str } TO = jp.ac.ritsumei.cs.draw.FigureManager#load( java.lang.String )
  43 actualIn D = {  } U = { filename$0 }
* actualOut D = { canvas$1.!getFigureManager( ).!load( java.lang.String ), canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.cs, canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.falpha, canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.frgbvalue, canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.fvalue, canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.value, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.cb, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.in, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.markedChar, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.markedSkipLF, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.nChars, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.nextChar, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.readAheadLimit, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.skipLF, canvas$1.!getFigureManager( ).java.io.FileReader.!java.io.InputStreamReader.sd, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.currentPosition, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.delimiters, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.delimsChanged, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.hasSurrogates, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.maxPosition, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.newPosition, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.retDelims, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.str, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition } U = { Color.black, FilledOval.name, FilledRect.name, Line.name, Oval.name, Rect.name, System.err, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.out, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.lock, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, canvas$1.!getFigureManager( ).figures, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, canvas$1.!getFigureManager( ).st$6.!java.lang.String.value, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.str, figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY, figure$17.color, figure$17.endX, figure$17.endY, figure$17.outlineWidth, figure$17.startX, figure$17.startY, figure$7.color, figure$7.endX, figure$7.endY, figure$7.outlineWidth, figure$7.startX, figure$7.startY, this.figures, this.kind$0.!java.lang.String.COMPACT_STRINGS, this.kind$0.!java.lang.String.coder, this.kind$0.!java.lang.String.value, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.out, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.lock, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).figures, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.lang.String.value, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.str }
  45 ifSt D = {  } U = { result$3 }
  46 assignment D = {  } U = { this.!showMessageDialog( java.awt.Component java.lang.Object ) }
  47 receiver D = {  } U = {  }
  48 methodCall D = {  } U = { $java.lang.String, filename$0, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showMessageDialog( java.awt.Component java.lang.Object )
  49 actualOut D = { this.!showMessageDialog( java.awt.Component java.lang.Object ) } U = {  }
  50 returnSt D = { $_ } U = {  }
  52 assignment D = {  } U = { canvas$1.!setChanged( boolean ) }
  53 receiver D = {  } U = { canvas$1 }
  54 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setChanged( boolean )
  55 actualIn D = {  } U = {  }
  56 actualOut D = { canvas$1.!setChanged( boolean ) } U = {  }
  57 assignment D = {  } U = { this.tool.!setTitle( java.lang.String ) }
  58 receiver D = {  } U = { this.tool }
  59 methodCall D = {  } U = { filename$0, this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title } TO = java.awt.Frame#setTitle( java.lang.String )
* actualOut D = { this.tool.!java.awt.Frame.title, this.tool.!setTitle( java.lang.String ) } U = { this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title }
  61 assignment D = {  } U = { canvas$1.!repaint( ) }
  62 receiver D = {  } U = { canvas$1 }
  63 methodCall D = {  } U = { canvas$1.!java.awt.Component.height, canvas$1.!java.awt.Component.parent, canvas$1.!java.awt.Component.peer, canvas$1.!java.awt.Component.width, canvas$1.!java.awt.Component.x, canvas$1.!java.awt.Component.y, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.height, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.parent, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.peer, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.width, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.x, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.y } TO = java.awt.Component#repaint( )
  64 actualOut D = { canvas$1.!repaint( ) } U = { canvas$1.!java.awt.Component.height, canvas$1.!java.awt.Component.parent, canvas$1.!java.awt.Component.peer, canvas$1.!java.awt.Component.width, canvas$1.!java.awt.Component.x, canvas$1.!java.awt.Component.y, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.height, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.parent, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.peer, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.width, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.x, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.y }
  65 returnSt D = { $_ } U = {  }
  67 formalOut D = {  } U = { $_ }
* actualOut D = { this.changed } U = {  }
* actualOut D = { this.tabbedCanvas.!openTab( java.lang.String ).figureManager } U = {  }
* actualOut D = { this.tabbedCanvas.!openTab( java.lang.String ).figureManager } U = {  }
* actualOut D = { this.tabbedCanvas.!openTab( java.lang.String ).menu } U = {  }
* actualOut D = { this.tabbedCanvas.!openTab( java.lang.String ).selector } U = {  }
* actualOut D = { this.canvas$1.undoManager } U = {  }
* actualOut D = { this.tabbedCanvas.!openTab( java.lang.String ).figures } U = {  }
* actualOut D = { this.tabbedCanvas.!openTab( java.lang.String ).figures } U = {  }
* actualOut D = { this.tabbedCanvas.!openTab( java.lang.String ).filename } U = {  }
* actualOut D = { this.tabbedCanvas.!openTab( java.lang.String ).filename } U = {  }
* actualOut D = { this.selectedTab } U = {  }
* actualOut D = { this.figure$7.endX } U = {  }
* actualOut D = { this.figure$7.endY } U = {  }
* actualOut D = { this.figure$7.startX } U = {  }
* actualOut D = { this.figure$7.startY } U = {  }
* actualOut D = { canvas$1.changed } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#openAction ]
   1 fieldDeclaration D = { this.openAction } U = { this.openAction }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#closeFile( ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 localDeclaration D = { canvas$0 } U = { this.tabbedCanvas.!getCurrentCanvas( ) }
   3 receiver D = {  } U = { this.tabbedCanvas }
   4 methodCall D = {  } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCurrentCanvas( )
   5 actualOut D = { this.tabbedCanvas.!getCurrentCanvas( ) } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
   6 assignment D = {  } U = { this.!closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, result$1.CANCEL_OPTION, result$1.YES_OPTION, result2$2.CANCEL_OPTION, this.!java.lang.Runtime.currentRuntime, this.!java.lang.String.COMPACT_STRINGS, this.!javax.accessibility.AccessibleState.SELECTED, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.JTabbedPane.visComp, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tabbedCanvas, this.tabbedCanvas.!getCurrentCanvas( ).changed, this.tabbedCanvas.!getCurrentCanvas( ).curX, this.tabbedCanvas.!getCurrentCanvas( ).curY, this.tabbedCanvas.!getCurrentCanvas( ).currentFigure, this.tabbedCanvas.!getCurrentCanvas( ).figureManager, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure, this.tabbedCanvas.!getCurrentCanvas( ).isGrabMode, this.tabbedCanvas.!getCurrentCanvas( ).menu, this.tabbedCanvas.!getCurrentCanvas( ).selector, this.tabbedCanvas.!getCurrentCanvas( ).support, this.tabbedCanvas.!getCurrentCanvas( ).undoManager, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.tabbedCanvas.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).figures, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.out, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).figures, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).filename, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   9 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).changed, this.tabbedCanvas.!getCurrentCanvas( ).curX, this.tabbedCanvas.!getCurrentCanvas( ).curY, this.tabbedCanvas.!getCurrentCanvas( ).currentFigure, this.tabbedCanvas.!getCurrentCanvas( ).figureManager, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure, this.tabbedCanvas.!getCurrentCanvas( ).isGrabMode, this.tabbedCanvas.!getCurrentCanvas( ).menu, this.tabbedCanvas.!getCurrentCanvas( ).selector, this.tabbedCanvas.!getCurrentCanvas( ).support, this.tabbedCanvas.!getCurrentCanvas( ).undoManager }
* actualOut D = { this.!closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas ), this.!javax.swing.JTabbedPane.visComp, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, this.canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, result$1.CANCEL_OPTION, result$1.YES_OPTION, result2$2.CANCEL_OPTION, this.!java.lang.Runtime.currentRuntime, this.!java.lang.String.COMPACT_STRINGS, this.!javax.accessibility.AccessibleState.SELECTED, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.JTabbedPane.visComp, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tabbedCanvas, this.tabbedCanvas.!getCurrentCanvas( ).changed, this.tabbedCanvas.!getCurrentCanvas( ).curX, this.tabbedCanvas.!getCurrentCanvas( ).curY, this.tabbedCanvas.!getCurrentCanvas( ).currentFigure, this.tabbedCanvas.!getCurrentCanvas( ).figureManager, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure, this.tabbedCanvas.!getCurrentCanvas( ).isGrabMode, this.tabbedCanvas.!getCurrentCanvas( ).menu, this.tabbedCanvas.!getCurrentCanvas( ).selector, this.tabbedCanvas.!getCurrentCanvas( ).support, this.tabbedCanvas.!getCurrentCanvas( ).undoManager, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.tabbedCanvas.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).figures, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.out, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).figures, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).filename, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  12 formalOut D = {  } U = { $_ }
* actualOut D = { this.selectedTab } U = {  }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#initEditMenu( javax.swing.JMenu ) ]
   1 formalIn D = { menu$0 } U = {  }
   2 localDeclaration D = { undoItem$1 } U = { menu$0.!add( javax.swing.Action ) }
   3 receiver D = {  } U = { menu$0 }
   4 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.undoAction } TO = javax.swing.JMenu#add( javax.swing.Action )
* actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
   6 assignment D = {  } U = { undoItem$1.!setMnemonic( char ) }
   7 receiver D = {  } U = { undoItem$1 }
   8 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, undoItem$1.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
   9 actualOut D = { undoItem$1.!setMnemonic( char ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, undoItem$1.!javax.swing.AbstractButton.model }
  10 assignment D = {  } U = { undoItem$1.!setIcon( javax.swing.Icon ) }
  11 receiver D = {  } U = { undoItem$1 }
  12 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, undoItem$1.!java.awt.Component.changeSupport, undoItem$1.!java.awt.Component.height, undoItem$1.!java.awt.Component.width, undoItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, undoItem$1.!javax.swing.AbstractButton.accessibleContext, undoItem$1.!javax.swing.AbstractButton.defaultIcon, undoItem$1.!javax.swing.AbstractButton.disabledIcon, undoItem$1.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
* actualOut D = { undoItem$1.!javax.swing.AbstractButton.defaultIcon, undoItem$1.!javax.swing.AbstractButton.disabledIcon, undoItem$1.!setIcon( javax.swing.Icon ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, undoItem$1.!java.awt.Component.changeSupport, undoItem$1.!java.awt.Component.height, undoItem$1.!java.awt.Component.width, undoItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, undoItem$1.!javax.swing.AbstractButton.accessibleContext, undoItem$1.!javax.swing.AbstractButton.defaultIcon, undoItem$1.!javax.swing.AbstractButton.disabledIcon, undoItem$1.!javax.swing.JComponent.revalidateRunnableScheduled }
  14 assignment D = {  } U = { undoItem$1.!setAccelerator( javax.swing.KeyStroke ) }
  15 receiver D = {  } U = { undoItem$1 }
  16 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ), undoItem$1.!java.awt.Component.changeSupport, undoItem$1.!java.awt.Component.height, undoItem$1.!java.awt.Component.width, undoItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, undoItem$1.!javax.swing.JMenuItem.accelerator } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  19 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
* actualOut D = { undoItem$1.!javax.swing.JMenuItem.accelerator, undoItem$1.!setAccelerator( javax.swing.KeyStroke ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, undoItem$1.!java.awt.Component.changeSupport, undoItem$1.!java.awt.Component.height, undoItem$1.!java.awt.Component.width, undoItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, undoItem$1.!javax.swing.JMenuItem.accelerator }
  21 assignment D = {  } U = { this.undoAction.!setEnabled( boolean ) }
  22 receiver D = {  } U = { this.undoAction }
  23 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  24 actualOut D = { this.undoAction.!setEnabled( boolean ) } U = {  }
  25 localDeclaration D = { redoItem$2 } U = { menu$0.!add( javax.swing.Action ) }
  26 receiver D = {  } U = { menu$0 }
  27 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.redoAction } TO = javax.swing.JMenu#add( javax.swing.Action )
* actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
  29 assignment D = {  } U = { redoItem$2.!setMnemonic( char ) }
  30 receiver D = {  } U = { redoItem$2 }
  31 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, redoItem$2.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  32 actualOut D = { redoItem$2.!setMnemonic( char ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, redoItem$2.!javax.swing.AbstractButton.model }
  33 assignment D = {  } U = { redoItem$2.!setIcon( javax.swing.Icon ) }
  34 receiver D = {  } U = { redoItem$2 }
  35 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, redoItem$2.!java.awt.Component.changeSupport, redoItem$2.!java.awt.Component.height, redoItem$2.!java.awt.Component.width, redoItem$2.!javax.accessibility.AccessibleContext.accessibleChangeSupport, redoItem$2.!javax.swing.AbstractButton.accessibleContext, redoItem$2.!javax.swing.AbstractButton.defaultIcon, redoItem$2.!javax.swing.AbstractButton.disabledIcon, redoItem$2.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
* actualOut D = { redoItem$2.!javax.swing.AbstractButton.defaultIcon, redoItem$2.!javax.swing.AbstractButton.disabledIcon, redoItem$2.!setIcon( javax.swing.Icon ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, redoItem$2.!java.awt.Component.changeSupport, redoItem$2.!java.awt.Component.height, redoItem$2.!java.awt.Component.width, redoItem$2.!javax.accessibility.AccessibleContext.accessibleChangeSupport, redoItem$2.!javax.swing.AbstractButton.accessibleContext, redoItem$2.!javax.swing.AbstractButton.defaultIcon, redoItem$2.!javax.swing.AbstractButton.disabledIcon, redoItem$2.!javax.swing.JComponent.revalidateRunnableScheduled }
  37 assignment D = {  } U = { redoItem$2.!setAccelerator( javax.swing.KeyStroke ) }
  38 receiver D = {  } U = { redoItem$2 }
  39 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, redoItem$2.!java.awt.Component.changeSupport, redoItem$2.!java.awt.Component.height, redoItem$2.!java.awt.Component.width, redoItem$2.!javax.swing.JComponent.revalidateRunnableScheduled, redoItem$2.!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  40 receiver D = {  } U = {  }
  41 methodCall D = {  } U = { KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  42 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
* actualOut D = { redoItem$2.!javax.swing.JMenuItem.accelerator, redoItem$2.!setAccelerator( javax.swing.KeyStroke ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, redoItem$2.!java.awt.Component.changeSupport, redoItem$2.!java.awt.Component.height, redoItem$2.!java.awt.Component.width, redoItem$2.!javax.swing.JComponent.revalidateRunnableScheduled, redoItem$2.!javax.swing.JMenuItem.accelerator }
  44 assignment D = {  } U = { this.redoAction.!setEnabled( boolean ) }
  45 receiver D = {  } U = { this.redoAction }
  46 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  47 actualOut D = { this.redoAction.!setEnabled( boolean ) } U = {  }
  48 assignment D = {  } U = { menu$0.!addSeparator( ) }
  49 receiver D = {  } U = { menu$0 }
  50 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#addSeparator( )
* actualOut D = { menu$0.!addSeparator( ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
  52 localDeclaration D = { cutItem$3 } U = { menu$0.!add( javax.swing.Action ) }
  53 receiver D = {  } U = { menu$0 }
  54 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.cutAction } TO = javax.swing.JMenu#add( javax.swing.Action )
* actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
  56 assignment D = {  } U = { cutItem$3.!setMnemonic( char ) }
  57 receiver D = {  } U = { cutItem$3 }
  58 methodCall D = {  } U = { cutItem$3.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  59 actualOut D = { cutItem$3.!setMnemonic( char ) } U = { cutItem$3.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
  60 assignment D = {  } U = { cutItem$3.!setIcon( javax.swing.Icon ) }
  61 receiver D = {  } U = { cutItem$3 }
  62 methodCall D = {  } U = { cutItem$3.!java.awt.Component.changeSupport, cutItem$3.!java.awt.Component.height, cutItem$3.!java.awt.Component.width, cutItem$3.!javax.accessibility.AccessibleContext.accessibleChangeSupport, cutItem$3.!javax.swing.AbstractButton.accessibleContext, cutItem$3.!javax.swing.AbstractButton.defaultIcon, cutItem$3.!javax.swing.AbstractButton.disabledIcon, cutItem$3.!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
* actualOut D = { cutItem$3.!javax.swing.AbstractButton.defaultIcon, cutItem$3.!javax.swing.AbstractButton.disabledIcon, cutItem$3.!setIcon( javax.swing.Icon ) } U = { cutItem$3.!java.awt.Component.changeSupport, cutItem$3.!java.awt.Component.height, cutItem$3.!java.awt.Component.width, cutItem$3.!javax.accessibility.AccessibleContext.accessibleChangeSupport, cutItem$3.!javax.swing.AbstractButton.accessibleContext, cutItem$3.!javax.swing.AbstractButton.defaultIcon, cutItem$3.!javax.swing.AbstractButton.disabledIcon, cutItem$3.!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled }
  64 assignment D = {  } U = { cutItem$3.!setAccelerator( javax.swing.KeyStroke ) }
  65 receiver D = {  } U = { cutItem$3 }
  66 methodCall D = {  } U = { cutItem$3.!java.awt.Component.changeSupport, cutItem$3.!java.awt.Component.height, cutItem$3.!java.awt.Component.width, cutItem$3.!javax.swing.JComponent.revalidateRunnableScheduled, cutItem$3.!javax.swing.JMenuItem.accelerator, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  67 receiver D = {  } U = {  }
  68 methodCall D = {  } U = { KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  69 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
* actualOut D = { cutItem$3.!javax.swing.JMenuItem.accelerator, cutItem$3.!setAccelerator( javax.swing.KeyStroke ) } U = { cutItem$3.!java.awt.Component.changeSupport, cutItem$3.!java.awt.Component.height, cutItem$3.!java.awt.Component.width, cutItem$3.!javax.swing.JComponent.revalidateRunnableScheduled, cutItem$3.!javax.swing.JMenuItem.accelerator, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator }
  71 assignment D = {  } U = { cutItem$3.!setEnabled( boolean ) }
  72 receiver D = {  } U = { cutItem$3 }
  73 methodCall D = {  } U = { cutItem$3.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.JMenuItem#setEnabled( boolean )
  74 actualOut D = { cutItem$3.!setEnabled( boolean ) } U = { cutItem$3.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
  75 localDeclaration D = { copyItem$4 } U = { menu$0.!add( javax.swing.Action ) }
  76 receiver D = {  } U = { menu$0 }
  77 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.copyAction } TO = javax.swing.JMenu#add( javax.swing.Action )
* actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
  79 assignment D = {  } U = { copyItem$4.!setMnemonic( char ) }
  80 receiver D = {  } U = { copyItem$4 }
  81 methodCall D = {  } U = { copyItem$4.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  82 actualOut D = { copyItem$4.!setMnemonic( char ) } U = { copyItem$4.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
  83 assignment D = {  } U = { copyItem$4.!setIcon( javax.swing.Icon ) }
  84 receiver D = {  } U = { copyItem$4 }
  85 methodCall D = {  } U = { copyItem$4.!java.awt.Component.changeSupport, copyItem$4.!java.awt.Component.height, copyItem$4.!java.awt.Component.width, copyItem$4.!javax.accessibility.AccessibleContext.accessibleChangeSupport, copyItem$4.!javax.swing.AbstractButton.accessibleContext, copyItem$4.!javax.swing.AbstractButton.defaultIcon, copyItem$4.!javax.swing.AbstractButton.disabledIcon, copyItem$4.!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
* actualOut D = { copyItem$4.!javax.swing.AbstractButton.defaultIcon, copyItem$4.!javax.swing.AbstractButton.disabledIcon, copyItem$4.!setIcon( javax.swing.Icon ) } U = { copyItem$4.!java.awt.Component.changeSupport, copyItem$4.!java.awt.Component.height, copyItem$4.!java.awt.Component.width, copyItem$4.!javax.accessibility.AccessibleContext.accessibleChangeSupport, copyItem$4.!javax.swing.AbstractButton.accessibleContext, copyItem$4.!javax.swing.AbstractButton.defaultIcon, copyItem$4.!javax.swing.AbstractButton.disabledIcon, copyItem$4.!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled }
  87 assignment D = {  } U = { copyItem$4.!setAccelerator( javax.swing.KeyStroke ) }
  88 receiver D = {  } U = { copyItem$4 }
  89 methodCall D = {  } U = { copyItem$4.!java.awt.Component.changeSupport, copyItem$4.!java.awt.Component.height, copyItem$4.!java.awt.Component.width, copyItem$4.!javax.swing.JComponent.revalidateRunnableScheduled, copyItem$4.!javax.swing.JMenuItem.accelerator, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  90 receiver D = {  } U = {  }
  91 methodCall D = {  } U = { KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  92 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
* actualOut D = { copyItem$4.!javax.swing.JMenuItem.accelerator, copyItem$4.!setAccelerator( javax.swing.KeyStroke ) } U = { copyItem$4.!java.awt.Component.changeSupport, copyItem$4.!java.awt.Component.height, copyItem$4.!java.awt.Component.width, copyItem$4.!javax.swing.JComponent.revalidateRunnableScheduled, copyItem$4.!javax.swing.JMenuItem.accelerator, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator }
  94 assignment D = {  } U = { copyItem$4.!setEnabled( boolean ) }
  95 receiver D = {  } U = { copyItem$4 }
  96 methodCall D = {  } U = { copyItem$4.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.JMenuItem#setEnabled( boolean )
  97 actualOut D = { copyItem$4.!setEnabled( boolean ) } U = { copyItem$4.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
  98 localDeclaration D = { pasteItem$5 } U = { menu$0.!add( javax.swing.Action ) }
  99 receiver D = {  } U = { menu$0 }
 100 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.pasteAction } TO = javax.swing.JMenu#add( javax.swing.Action )
* actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
 102 assignment D = {  } U = { pasteItem$5.!setMnemonic( char ) }
 103 receiver D = {  } U = { pasteItem$5 }
 104 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, pasteItem$5.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
 105 actualOut D = { pasteItem$5.!setMnemonic( char ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, pasteItem$5.!javax.swing.AbstractButton.model }
 106 assignment D = {  } U = { pasteItem$5.!setIcon( javax.swing.Icon ) }
 107 receiver D = {  } U = { pasteItem$5 }
 108 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, pasteItem$5.!java.awt.Component.changeSupport, pasteItem$5.!java.awt.Component.height, pasteItem$5.!java.awt.Component.width, pasteItem$5.!javax.accessibility.AccessibleContext.accessibleChangeSupport, pasteItem$5.!javax.swing.AbstractButton.accessibleContext, pasteItem$5.!javax.swing.AbstractButton.defaultIcon, pasteItem$5.!javax.swing.AbstractButton.disabledIcon, pasteItem$5.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
* actualOut D = { pasteItem$5.!javax.swing.AbstractButton.defaultIcon, pasteItem$5.!javax.swing.AbstractButton.disabledIcon, pasteItem$5.!setIcon( javax.swing.Icon ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, pasteItem$5.!java.awt.Component.changeSupport, pasteItem$5.!java.awt.Component.height, pasteItem$5.!java.awt.Component.width, pasteItem$5.!javax.accessibility.AccessibleContext.accessibleChangeSupport, pasteItem$5.!javax.swing.AbstractButton.accessibleContext, pasteItem$5.!javax.swing.AbstractButton.defaultIcon, pasteItem$5.!javax.swing.AbstractButton.disabledIcon, pasteItem$5.!javax.swing.JComponent.revalidateRunnableScheduled }
 110 assignment D = {  } U = { pasteItem$5.!setAccelerator( javax.swing.KeyStroke ) }
 111 receiver D = {  } U = { pasteItem$5 }
 112 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, pasteItem$5.!java.awt.Component.changeSupport, pasteItem$5.!java.awt.Component.height, pasteItem$5.!java.awt.Component.width, pasteItem$5.!javax.swing.JComponent.revalidateRunnableScheduled, pasteItem$5.!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
 113 receiver D = {  } U = {  }
 114 methodCall D = {  } U = { KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
 115 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
* actualOut D = { pasteItem$5.!javax.swing.JMenuItem.accelerator, pasteItem$5.!setAccelerator( javax.swing.KeyStroke ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, pasteItem$5.!java.awt.Component.changeSupport, pasteItem$5.!java.awt.Component.height, pasteItem$5.!java.awt.Component.width, pasteItem$5.!javax.swing.JComponent.revalidateRunnableScheduled, pasteItem$5.!javax.swing.JMenuItem.accelerator }
 117 assignment D = {  } U = { pasteItem$5.!setEnabled( boolean ) }
 118 receiver D = {  } U = { pasteItem$5 }
 119 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, pasteItem$5.!javax.swing.AbstractButton.model } TO = javax.swing.JMenuItem#setEnabled( boolean )
 120 actualOut D = { pasteItem$5.!setEnabled( boolean ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, pasteItem$5.!javax.swing.AbstractButton.model }
 121 assignment D = {  } U = { menu$0.!addSeparator( ) }
 122 receiver D = {  } U = { menu$0 }
 123 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#addSeparator( )
* actualOut D = { menu$0.!addSeparator( ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
 125 localDeclaration D = { deleteItem$6 } U = { menu$0.!add( javax.swing.Action ) }
 126 receiver D = {  } U = { menu$0 }
 127 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.deleteAction } TO = javax.swing.JMenu#add( javax.swing.Action )
* actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
 129 assignment D = {  } U = { deleteItem$6.!setMnemonic( char ) }
 130 receiver D = {  } U = { deleteItem$6 }
 131 methodCall D = {  } U = { deleteItem$6.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
 132 actualOut D = { deleteItem$6.!setMnemonic( char ) } U = { deleteItem$6.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
 133 assignment D = {  } U = { deleteItem$6.!setIcon( javax.swing.Icon ) }
 134 receiver D = {  } U = { deleteItem$6 }
 135 methodCall D = {  } U = { deleteItem$6.!java.awt.Component.changeSupport, deleteItem$6.!java.awt.Component.height, deleteItem$6.!java.awt.Component.width, deleteItem$6.!javax.accessibility.AccessibleContext.accessibleChangeSupport, deleteItem$6.!javax.swing.AbstractButton.accessibleContext, deleteItem$6.!javax.swing.AbstractButton.defaultIcon, deleteItem$6.!javax.swing.AbstractButton.disabledIcon, deleteItem$6.!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
* actualOut D = { deleteItem$6.!javax.swing.AbstractButton.defaultIcon, deleteItem$6.!javax.swing.AbstractButton.disabledIcon, deleteItem$6.!setIcon( javax.swing.Icon ) } U = { deleteItem$6.!java.awt.Component.changeSupport, deleteItem$6.!java.awt.Component.height, deleteItem$6.!java.awt.Component.width, deleteItem$6.!javax.accessibility.AccessibleContext.accessibleChangeSupport, deleteItem$6.!javax.swing.AbstractButton.accessibleContext, deleteItem$6.!javax.swing.AbstractButton.defaultIcon, deleteItem$6.!javax.swing.AbstractButton.disabledIcon, deleteItem$6.!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled }
 137 assignment D = {  } U = { deleteItem$6.!setAccelerator( javax.swing.KeyStroke ) }
 138 receiver D = {  } U = { deleteItem$6 }
 139 methodCall D = {  } U = { deleteItem$6.!java.awt.Component.changeSupport, deleteItem$6.!java.awt.Component.height, deleteItem$6.!java.awt.Component.width, deleteItem$6.!javax.swing.JComponent.revalidateRunnableScheduled, deleteItem$6.!javax.swing.JMenuItem.accelerator, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
 140 receiver D = {  } U = {  }
 141 methodCall D = {  } U = { KeyEvent.VK_DELETE } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
 142 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
* actualOut D = { deleteItem$6.!javax.swing.JMenuItem.accelerator, deleteItem$6.!setAccelerator( javax.swing.KeyStroke ) } U = { deleteItem$6.!java.awt.Component.changeSupport, deleteItem$6.!java.awt.Component.height, deleteItem$6.!java.awt.Component.width, deleteItem$6.!javax.swing.JComponent.revalidateRunnableScheduled, deleteItem$6.!javax.swing.JMenuItem.accelerator, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator }
 144 assignment D = {  } U = { deleteItem$6.!setEnabled( boolean ) }
 145 receiver D = {  } U = { deleteItem$6 }
 146 methodCall D = {  } U = { deleteItem$6.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.JMenuItem#setEnabled( boolean )
 147 actualOut D = { deleteItem$6.!setEnabled( boolean ) } U = { deleteItem$6.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
 149 formalOut D = {  } U = { $_ }
--
   0: serialVersionUID
   1:    0 ->    1 trueControlDependence
--
   0: toolBar
   1:    0 ->    1 trueControlDependence
--
   0: copyAction
   1:    0 ->    1 trueControlDependence
--
   0: initFileActions( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   16 trueControlDependence
  15:    0 ->   17 trueControlDependence
  16:    0 ->   18 trueControlDependence
  17:    0 ->   19 trueControlDependence
  18:    0 ->   20 trueControlDependence
  19:    0 ->   21 trueControlDependence
  20:    0 ->   22 trueControlDependence
  21:    0 ->   23 trueControlDependence
  22:    0 ->   24 trueControlDependence
  23:    0 ->   25 trueControlDependence
  24:    0 ->   26 trueControlDependence
  25:    0 ->   27 trueControlDependence
  26:    0 ->   28 trueControlDependence
  27:    0 ->   31 trueControlDependence
  28:    0 ->   32 trueControlDependence
  29:    0 ->   33 trueControlDependence
  30:    0 ->   34 trueControlDependence
  31:    0 ->   35 trueControlDependence
  32:    0 ->   36 trueControlDependence
  33:    0 ->   37 trueControlDependence
  34:    0 ->   38 trueControlDependence
  35:    0 ->   39 trueControlDependence
  36:    0 ->   40 trueControlDependence
  37:    0 ->   41 trueControlDependence
  38:    0 ->   42 trueControlDependence
  39:    0 ->   43 trueControlDependence
  40:    0 ->   47 trueControlDependence
  41:    0 -> * trueControlDependence
  42:    0 -> * trueControlDependence
  43:    0 -> * trueControlDependence
  44:    0 -> * trueControlDependence
  45:    0 -> * trueControlDependence
  46:    0 -> * trueControlDependence
  47:   11 ->    8 loopIndependentDefUseDependence this.!getClass( )
  48:   11 ->   26 outputDependence this.!getClass( )
  49:   13 ->    7 loopIndependentDefUseDependence this.!getClass( ).!getResource( java.lang.String )
  50:   13 ->   28 outputDependence this.!getClass( ).!getResource( java.lang.String )
  51:   26 ->   23 loopIndependentDefUseDependence this.!getClass( )
  52:   26 ->   41 outputDependence this.!getClass( )
  53:   28 ->   22 loopIndependentDefUseDependence this.!getClass( ).!getResource( java.lang.String )
  54:   28 ->   43 outputDependence this.!getClass( ).!getResource( java.lang.String )
  55:   41 ->   38 loopIndependentDefUseDependence this.!getClass( )
  56:   43 ->   37 loopIndependentDefUseDependence this.!getClass( ).!getResource( java.lang.String )
  57: * ->    1 loopIndependentDefUseDependence .!AbstractAction( java.lang.String javax.swing.Icon )
  58: * ->    5 loopIndependentDefUseDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
  59: * ->   16 loopIndependentDefUseDependence .!AbstractAction( java.lang.String javax.swing.Icon )
  60: * ->   18 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
  61: * ->   18 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
  62: * ->   20 loopIndependentDefUseDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
  63: * ->   22 loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
  64: * ->   31 loopIndependentDefUseDependence .!AbstractAction( java.lang.String javax.swing.Icon )
  65: * ->   33 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
  66: * ->   33 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
  67: * ->   35 loopIndependentDefUseDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
  68: * ->   37 loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
  69: * -> * loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
  70: * -> * loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
  71: * -> * loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
  72: * -> * loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
  73: * -> * loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
  74: * -> * loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
  75: * -> * outputDependence .!AbstractAction( java.lang.String javax.swing.Icon )
  76: * -> * outputDependence .!AbstractAction( java.lang.String javax.swing.Icon )
  77: * -> * outputDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
  78: * -> * outputDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
  79: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext
  80: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext
  81: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.description
  82: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.description
  83: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.height
  84: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.height
  85: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus
  86: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus
  87: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.location
  88: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.location
  89: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.width
  90: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.width
--
   0: createPopup( javax.swing.JPopupMenu )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    0 ->    7 trueControlDependence
   7:    0 ->    8 trueControlDependence
   8:    0 ->   10 trueControlDependence
   9:    0 ->   11 trueControlDependence
  10:    0 ->   12 trueControlDependence
  11:    0 ->   13 trueControlDependence
  12:    0 ->   14 trueControlDependence
  13:    0 ->   15 trueControlDependence
  14:    0 ->   16 trueControlDependence
  15:    0 ->   18 trueControlDependence
  16:    0 ->   19 trueControlDependence
  17:    0 ->   20 trueControlDependence
  18:    0 ->   22 trueControlDependence
  19:    0 ->   23 trueControlDependence
  20:    0 ->   24 trueControlDependence
  21:    0 ->   25 trueControlDependence
  22:    0 ->   27 trueControlDependence
  23:    0 -> * trueControlDependence
  24:    0 -> * trueControlDependence
  25:    0 -> * trueControlDependence
  26:    0 -> * trueControlDependence
  27:    1 ->    3 loopIndependentDefUseDependence popup$0
  28:    1 ->   11 loopIndependentDefUseDependence popup$0
  29:    1 ->   15 loopIndependentDefUseDependence popup$0
  30:    1 ->   23 loopIndependentDefUseDependence popup$0
  31:    2 ->    7 declaration
  32:    2 ->    7 loopIndependentDefUseDependence undoMenuItem$1
  33:    2 ->   12 declaration
  34:    2 ->   12 loopIndependentDefUseDependence undoMenuItem$1
  35:   13 ->   10 loopIndependentDefUseDependence popup$0.!add( javax.swing.JMenuItem )
  36:   13 ->   25 outputDependence popup$0.!add( javax.swing.JMenuItem )
  37:   14 ->   19 declaration
  38:   14 ->   19 loopIndependentDefUseDependence redoMenuItem$2
  39:   14 ->   24 declaration
  40:   14 ->   24 loopIndependentDefUseDependence redoMenuItem$2
  41:   25 ->   22 loopIndependentDefUseDependence popup$0.!add( javax.swing.JMenuItem )
  42: * ->    2 loopIndependentDefUseDependence popup$0.!add( javax.swing.Action )
  43: * ->    6 loopIndependentDefUseDependence undoMenuItem$1.!setIcon( javax.swing.Icon )
  44: * ->   14 loopIndependentDefUseDependence popup$0.!add( javax.swing.Action )
  45: * ->   16 loopIndependentDefUseDependence popup$0.!javax.swing.AbstractButton.action
  46: * ->   16 loopIndependentDefUseDependence popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener
  47: * ->   18 loopIndependentDefUseDependence redoMenuItem$2.!setIcon( javax.swing.Icon )
  48: * -> * loopIndependentDefUseDependence popup$0.!javax.swing.AbstractButton.action
  49: * -> * loopIndependentDefUseDependence popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener
  50: * -> * outputDependence popup$0.!add( javax.swing.Action )
--
   0: getFileName( boolean )
   1:    0 ->    2 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    0 ->    5 trueControlDependence
   5:    0 ->    7 trueControlDependence
   6:    0 ->    8 trueControlDependence
   7:    0 ->    9 trueControlDependence
   8:    0 ->   11 trueControlDependence
   9:    0 ->   12 trueControlDependence
  10:    0 ->   13 trueControlDependence
  11:    0 ->   15 trueControlDependence
  12:    0 ->   16 trueControlDependence
  13:    0 -> * trueControlDependence
  14:    0 -> * trueControlDependence
  15:    0 -> * trueControlDependence
  16:    2 ->   16 loopIndependentDefUseDependence open$0
  17:    3 ->    8 declaration
  18:    3 ->    8 loopIndependentDefUseDependence chooser$1
  19:    3 ->   12 declaration
  20:    3 ->   12 loopIndependentDefUseDependence chooser$1
  21:    3 ->   18 declaration
  22:    3 ->   18 loopIndependentDefUseDependence chooser$1
  23:    3 ->   22 declaration
  24:    3 ->   22 loopIndependentDefUseDependence chooser$1
  25:    3 ->   27 declaration
  26:    3 ->   27 loopIndependentDefUseDependence chooser$1
  27:    3 ->   32 declaration
  28:    3 ->   32 loopIndependentDefUseDependence chooser$1
  29:   15 ->   17 declaration
  30:   15 ->   17 outputDependence result$2
  31:   15 ->   21 declaration
  32:   15 ->   21 outputDependence result$2
  33:   15 ->   30 declaration
  34:   16 ->   18 trueControlDependence
  35:   16 ->   19 trueControlDependence
  36:   16 ->   22 falseControlDependence
  37:   16 ->   23 falseControlDependence
  38:   17 ->   30 loopIndependentDefUseDependence result$2
  39:   19 ->    1 exceptionCatch
  40:   19 ->   17 trueControlDependence
  41:   19 ->   26 trueControlDependence
  42:   19 ->   27 trueControlDependence
  43:   19 ->   28 trueControlDependence
  44:   19 ->   29 trueControlDependence
  45:   19 ->   30 trueControlDependence
  46:   19 ->   42 trueControlDependence
  47:   19 -> * trueControlDependence
  48:   21 ->   30 loopIndependentDefUseDependence result$2
  49:   23 ->    1 exceptionCatch
  50:   23 ->   21 trueControlDependence
  51:   23 ->   26 trueControlDependence
  52:   23 ->   27 trueControlDependence
  53:   23 ->   28 trueControlDependence
  54:   23 ->   29 trueControlDependence
  55:   23 ->   30 trueControlDependence
  56:   23 ->   42 trueControlDependence
  57:   23 -> * trueControlDependence
  58:   26 ->   30 declaration
  59:   26 ->   30 loopIndependentDefUseDependence file$3
  60:   26 ->   36 declaration
  61:   26 ->   36 loopIndependentDefUseDependence file$3
  62:   29 ->   26 loopIndependentDefUseDependence chooser$1.!getSelectedFile( )
  63:   30 ->   31 trueControlDependence
  64:   30 ->   32 trueControlDependence
  65:   30 ->   33 trueControlDependence
  66:   30 ->   34 trueControlDependence
  67:   30 ->   35 trueControlDependence
  68:   30 ->   36 trueControlDependence
  69:   30 ->   37 trueControlDependence
  70:   30 ->   38 trueControlDependence
  71:   30 ->   40 falseControlDependence
  72:   34 ->   31 loopIndependentDefUseDependence chooser$1.!getCurrentDirectory( )
  73:   35 ->   40 fallThroughControlDependence
  74:   35 ->   42 loopIndependentDefUseDependence $_
  75:   38 ->   35 loopIndependentDefUseDependence file$3.!getPath( )
  76:   40 ->   42 loopIndependentDefUseDependence $_
  77: * ->    3 loopIndependentDefUseDependence javax.swing.JFileChooser.!JFileChooser( )
  78: * ->    7 loopIndependentDefUseDependence chooser$1.!setDialogTitle( java.lang.String )
  79: * ->   11 loopIndependentDefUseDependence chooser$1.!setCurrentDirectory( java.io.File )
  80: * ->   17 loopIndependentDefUseDependence chooser$1.!showOpenDialog( java.awt.Component )
  81: * ->   21 loopIndependentDefUseDependence chooser$1.!showSaveDialog( java.awt.Component )
  82: * ->   33 loopIndependentDefUseDependence chooser$1.!javax.swing.JFileChooser.currentDirectory
  83: * ->   34 loopIndependentDefUseDependence chooser$1.!javax.swing.JFileChooser.currentDirectory
--
   0: DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    9 trueControlDependence
   9:    0 ->   10 trueControlDependence
  10:    0 ->   11 trueControlDependence
  11:    0 ->   12 trueControlDependence
  12:    0 ->   14 trueControlDependence
  13:    0 ->   15 trueControlDependence
  14:    0 ->   16 trueControlDependence
  15:    0 ->   17 trueControlDependence
  16:    0 ->   18 trueControlDependence
  17:    0 ->   19 trueControlDependence
  18:    0 ->   20 trueControlDependence
  19:    0 ->   22 trueControlDependence
  20:    0 ->   23 trueControlDependence
  21:    0 ->   24 trueControlDependence
  22:    0 ->   25 trueControlDependence
  23:    0 ->   27 trueControlDependence
  24:    0 ->   28 trueControlDependence
  25:    0 ->   29 trueControlDependence
  26:    0 ->   31 trueControlDependence
  27:    0 ->   32 trueControlDependence
  28:    0 ->   33 trueControlDependence
  29:    0 ->   35 trueControlDependence
  30:    0 ->   36 trueControlDependence
  31:    0 ->   37 trueControlDependence
  32:    0 ->   38 trueControlDependence
  33:    0 ->   39 trueControlDependence
  34:    0 ->   40 trueControlDependence
  35:    0 ->   41 trueControlDependence
  36:    0 ->   42 trueControlDependence
  37:    0 ->   43 trueControlDependence
  38:    0 ->   46 trueControlDependence
  39:    0 -> * trueControlDependence
  40:    0 -> * trueControlDependence
  41:    0 -> * trueControlDependence
  42:    0 -> * trueControlDependence
  43:    0 -> * trueControlDependence
  44:    0 -> * trueControlDependence
  45:    0 -> * trueControlDependence
  46:    0 -> * trueControlDependence
  47:    0 -> * trueControlDependence
  48:    0 -> * trueControlDependence
  49:    0 -> * trueControlDependence
  50:    0 -> * trueControlDependence
  51:    0 -> * trueControlDependence
  52:    0 -> * trueControlDependence
  53:    0 -> * trueControlDependence
  54:    0 -> * trueControlDependence
  55:    0 -> * trueControlDependence
  56:    0 -> * trueControlDependence
  57:    0 -> * trueControlDependence
  58:    0 -> * trueControlDependence
  59:    1 ->    3 loopIndependentDefUseDependence tool$0
  60:    2 ->    4 loopIndependentDefUseDependence tabbedCanvas$1
  61:    2 ->   39 loopIndependentDefUseDependence tabbedCanvas$1
  62:    4 ->   39 loopIndependentDefUseDependence this.tabbedCanvas
  63:    5 ->   12 loopIndependentDefUseDependence this.menuBar
  64:   14 ->   19 loopIndependentDefUseDependence this.toolBar
  65:   14 ->   25 loopIndependentDefUseDependence this.toolBar
  66:   17 ->   14 loopIndependentDefUseDependence javax.swing.JToolBar.!JToolBar( )
  67:   36 ->   42 loopIndependentDefUseDependence this.autoSave
  68:   40 ->   36 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas )
  69: * ->    5 loopIndependentDefUseDependence javax.swing.JMenuBar.!JMenuBar( )
  70: * ->    9 loopIndependentDefUseDependence this.!initMenuBar( javax.swing.JMenuBar )
  71: * ->   18 loopIndependentDefUseDependence this.toolBar.!setFloatable( boolean )
  72: * ->   22 loopIndependentDefUseDependence this.!initToolBar( javax.swing.JToolBar )
  73: * ->   24 loopIndependentDefUseDependence this.copyAction
  74: * ->   24 loopIndependentDefUseDependence this.cutAction
  75: * ->   24 loopIndependentDefUseDependence this.newAction
  76: * ->   24 loopIndependentDefUseDependence this.openAction
  77: * ->   24 loopIndependentDefUseDependence this.pasteAction
  78: * ->   24 loopIndependentDefUseDependence this.redoAction
  79: * ->   24 loopIndependentDefUseDependence this.saveAction
  80: * ->   24 loopIndependentDefUseDependence this.undoAction
  81: * ->   27 loopIndependentDefUseDependence java.io.File.!File( java.lang.String )
  82: * ->   31 loopIndependentDefUseDependence java.util.ArrayList.!ArrayList( )
  83: * ->   41 loopIndependentDefUseDependence this.autoSave.!start( )
  84: * -> * loopIndependentDefUseDependence this.copyAction
  85: * -> * loopIndependentDefUseDependence this.copyAction
  86: * -> * loopIndependentDefUseDependence this.cutAction
  87: * -> * loopIndependentDefUseDependence this.cutAction
  88: * -> * loopIndependentDefUseDependence this.deleteAction
  89: * -> * loopIndependentDefUseDependence this.fileListMenu
  90: * -> * loopIndependentDefUseDependence this.newAction
  91: * -> * loopIndependentDefUseDependence this.newAction
  92: * -> * loopIndependentDefUseDependence this.openAction
  93: * -> * loopIndependentDefUseDependence this.openAction
  94: * -> * loopIndependentDefUseDependence this.pasteAction
  95: * -> * loopIndependentDefUseDependence this.pasteAction
  96: * -> * loopIndependentDefUseDependence this.redoAction
  97: * -> * loopIndependentDefUseDependence this.redoAction
  98: * -> * loopIndependentDefUseDependence this.saveAction
  99: * -> * loopIndependentDefUseDependence this.saveAction
 100: * -> * loopIndependentDefUseDependence this.undoAction
 101: * -> * loopIndependentDefUseDependence this.undoAction
--
   0: tool
   1:    0 ->    1 trueControlDependence
--
   0: updateEditState( boolean )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   20 trueControlDependence
  12:    0 ->   21 trueControlDependence
  13:    0 ->   22 trueControlDependence
  14:    0 ->   23 trueControlDependence
  15:    0 ->   25 trueControlDependence
  16:    1 ->    4 loopIndependentDefUseDependence grabbed$0
  17:    1 ->    8 loopIndependentDefUseDependence grabbed$0
  18:    1 ->   22 loopIndependentDefUseDependence grabbed$0
  19:    5 ->    2 loopIndependentDefUseDependence this.cutAction.!setEnabled( boolean )
  20:    9 ->    6 loopIndependentDefUseDependence this.copyAction.!setEnabled( boolean )
  21:   10 ->   11 trueControlDependence
  22:   10 ->   12 trueControlDependence
  23:   10 ->   13 trueControlDependence
  24:   10 ->   14 trueControlDependence
  25:   10 ->   15 falseControlDependence
  26:   10 ->   16 falseControlDependence
  27:   10 ->   17 falseControlDependence
  28:   10 ->   18 falseControlDependence
  29:   14 ->   11 loopIndependentDefUseDependence this.pasteAction.!setEnabled( boolean )
  30:   18 ->   15 loopIndependentDefUseDependence this.pasteAction.!setEnabled( boolean )
  31:   23 ->   20 loopIndependentDefUseDependence this.deleteAction.!setEnabled( boolean )
--
   0: recentFiles
   1:    0 ->    1 trueControlDependence
--
   0: cutAction
   1:    0 ->    1 trueControlDependence
--
   0: undoAction
   1:    0 ->    1 trueControlDependence
--
   0: saveTempFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   18 trueControlDependence
  17:    0 -> * trueControlDependence
  18:    1 ->    4 loopIndependentDefUseDependence canvas$0
  19:    1 ->   11 loopIndependentDefUseDependence canvas$0
  20:    2 ->   15 declaration
  21:    2 ->   15 loopIndependentDefUseDependence tempName$1
  22:    6 ->    3 loopIndependentDefUseDependence canvas$0.!getFigureManager( )
  23:    6 ->   13 outputDependence canvas$0.!getFigureManager( )
  24:    8 ->    2 loopIndependentDefUseDependence canvas$0.!getFigureManager( ).!getFilename( )
  25:    9 ->   18 loopIndependentDefUseDependence $_
  26:   13 ->   10 loopIndependentDefUseDependence canvas$0.!getFigureManager( )
  27: * ->    9 loopIndependentDefUseDependence canvas$0.!getFigureManager( ).!store( java.lang.String )
--
   0: deleteAction
   1:    0 ->    1 trueControlDependence
--
   0: closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1:    0 ->    2 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    0 ->    5 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    2 ->    4 loopIndependentDefUseDependence canvas$0
   7:    2 ->   17 loopIndependentDefUseDependence canvas$0
   8:    2 ->   33 loopIndependentDefUseDependence canvas$0
   9:    3 ->    8 trueControlDependence
  10:    3 ->    9 trueControlDependence
  11:    6 ->    3 loopIndependentDefUseDependence canvas$0.!hasChanged( )
  12:    7 ->   11 declaration
  13:    7 ->   11 loopIndependentDefUseDependence result$1
  14:    7 ->   13 declaration
  15:    7 ->   13 loopIndependentDefUseDependence result$1
  16:    9 ->    1 exceptionCatch
  17:    9 ->    7 trueControlDependence
  18:    9 ->   10 trueControlDependence
  19:    9 ->   11 trueControlDependence
  20:   10 ->    7 loopIndependentDefUseDependence this.!showConfirmDialog( java.awt.Component java.lang.Object )
  21:   10 ->   22 outputDependence this.!showConfirmDialog( java.awt.Component java.lang.Object )
  22:   11 ->   12 trueControlDependence
  23:   11 ->   13 falseControlDependence
  24:   12 ->   13 fallThroughControlDependence
  25:   12 ->   30 trueControlDependence
  26:   12 ->   31 trueControlDependence
  27:   12 ->   32 trueControlDependence
  28:   12 ->   33 trueControlDependence
  29:   12 ->   35 trueControlDependence
  30:   12 ->   36 trueControlDependence
  31:   12 ->   37 trueControlDependence
  32:   12 ->   38 trueControlDependence
  33:   12 ->   44 outputDependence $_
  34:   12 ->   44 trueControlDependence
  35:   12 ->   46 trueControlDependence
  36:   12 -> * trueControlDependence
  37:   12 -> * trueControlDependence
  38:   13 ->   15 trueControlDependence
  39:   13 ->   16 trueControlDependence
  40:   13 ->   17 trueControlDependence
  41:   14 ->   20 trueControlDependence
  42:   14 ->   21 trueControlDependence
  43:   16 ->    1 exceptionCatch
  44:   16 ->   14 trueControlDependence
  45:   16 -> * trueControlDependence
  46:   19 ->   23 declaration
  47:   19 ->   23 loopIndependentDefUseDependence result2$2
  48:   21 ->    1 exceptionCatch
  49:   21 ->   19 trueControlDependence
  50:   21 ->   22 trueControlDependence
  51:   21 ->   23 trueControlDependence
  52:   21 ->   46 trueControlDependence
  53:   22 ->   19 loopIndependentDefUseDependence this.!showConfirmDialog( java.awt.Component java.lang.Object )
  54:   23 ->   24 trueControlDependence
  55:   23 ->   30 falseControlDependence
  56:   23 ->   31 falseControlDependence
  57:   23 ->   32 falseControlDependence
  58:   23 ->   33 falseControlDependence
  59:   23 ->   35 falseControlDependence
  60:   23 ->   36 falseControlDependence
  61:   23 ->   37 falseControlDependence
  62:   23 ->   38 falseControlDependence
  63:   23 ->   44 falseControlDependence
  64:   23 -> * falseControlDependence
  65:   23 -> * falseControlDependence
  66:   24 ->   30 fallThroughControlDependence
  67:   24 ->   31 fallThroughControlDependence
  68:   24 ->   32 fallThroughControlDependence
  69:   24 ->   33 fallThroughControlDependence
  70:   24 ->   35 fallThroughControlDependence
  71:   24 ->   36 fallThroughControlDependence
  72:   24 ->   37 fallThroughControlDependence
  73:   24 ->   38 fallThroughControlDependence
  74:   24 ->   44 fallThroughControlDependence
  75:   24 ->   46 loopIndependentDefUseDependence $_
  76:   24 -> * fallThroughControlDependence
  77:   24 -> * fallThroughControlDependence
  78:   35 ->   39 trueControlDependence
  79:   35 ->   40 trueControlDependence
  80:   35 ->   41 trueControlDependence
  81:   35 ->   42 trueControlDependence
  82:   38 ->   35 loopIndependentDefUseDependence this.tabbedCanvas.!getOpenFileNum( )
  83:   42 ->   39 loopIndependentDefUseDependence this.tool.!terminate( )
  84:   44 ->   46 loopIndependentDefUseDependence $_
  85: * ->   14 loopIndependentDefUseDependence this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
  86: * ->   30 loopIndependentDefUseDependence this.tabbedCanvas.!closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
--
   0: newAction
   1:    0 ->    1 trueControlDependence
--
   0: newFile( )
   1:    0 ->    3 trueControlDependence
   2:    0 ->    4 trueControlDependence
   3:    0 ->    5 trueControlDependence
   4:    2 ->    7 declaration
   5:    2 ->    7 loopIndependentDefUseDependence filename$0
   6:    2 ->   13 declaration
   7:    2 ->   13 loopIndependentDefUseDependence filename$0
   8:    2 ->   17 declaration
   9:    2 ->   17 loopIndependentDefUseDependence filename$0
  10:    2 ->   24 declaration
  11:    2 ->   24 loopIndependentDefUseDependence filename$0
  12:    2 ->   29 declaration
  13:    2 ->   29 loopIndependentDefUseDependence filename$0
  14:    2 ->   33 declaration
  15:    2 ->   33 loopIndependentDefUseDependence filename$0
  16:    4 ->    1 exceptionCatch
  17:    4 ->    2 trueControlDependence
  18:    4 ->    7 trueControlDependence
  19:    4 -> * trueControlDependence
  20:    4 -> * trueControlDependence
  21:    7 ->    8 trueControlDependence
  22:    7 ->   10 falseControlDependence
  23:    7 ->   11 falseControlDependence
  24:    7 ->   12 falseControlDependence
  25:    7 ->   13 falseControlDependence
  26:    7 -> * falseControlDependence
  27:    8 ->   10 fallThroughControlDependence
  28:    8 ->   11 fallThroughControlDependence
  29:    8 ->   12 fallThroughControlDependence
  30:    8 ->   13 fallThroughControlDependence
  31:    8 ->   41 loopIndependentDefUseDependence $_
  32:    8 ->   41 trueControlDependence
  33:    8 -> * fallThroughControlDependence
  34:   10 ->   16 trueControlDependence
  35:   10 ->   17 trueControlDependence
  36:   10 ->   21 falseControlDependence
  37:   10 ->   22 falseControlDependence
  38:   10 ->   23 falseControlDependence
  39:   10 ->   24 falseControlDependence
  40:   10 ->   26 falseControlDependence
  41:   10 ->   27 falseControlDependence
  42:   10 ->   28 falseControlDependence
  43:   10 ->   29 falseControlDependence
  44:   10 ->   30 falseControlDependence
  45:   10 ->   31 falseControlDependence
  46:   10 ->   32 falseControlDependence
  47:   10 ->   33 falseControlDependence
  48:   10 ->   35 falseControlDependence
  49:   10 ->   36 falseControlDependence
  50:   10 ->   37 falseControlDependence
  51:   10 ->   38 falseControlDependence
  52:   10 ->   39 falseControlDependence
  53:   10 -> * falseControlDependence
  54:   10 -> * falseControlDependence
  55:   10 -> * falseControlDependence
  56:   10 -> * falseControlDependence
  57:   10 -> * falseControlDependence
  58:   10 -> * falseControlDependence
  59:   10 -> * falseControlDependence
  60:   10 -> * falseControlDependence
  61:   10 -> * falseControlDependence
  62:   10 -> * falseControlDependence
  63:   10 -> * falseControlDependence
  64:   10 -> * falseControlDependence
  65:   10 -> * falseControlDependence
  66:   17 ->    1 exceptionCatch
  67:   17 ->   15 trueControlDependence
  68:   17 ->   18 trueControlDependence
  69:   17 ->   19 trueControlDependence
  70:   17 ->   41 trueControlDependence
  71:   18 ->   15 loopIndependentDefUseDependence this.!showMessageDialog( java.awt.Component java.lang.Object )
  72:   19 ->   21 fallThroughControlDependence
  73:   19 ->   22 fallThroughControlDependence
  74:   19 ->   23 fallThroughControlDependence
  75:   19 ->   24 fallThroughControlDependence
  76:   19 ->   26 fallThroughControlDependence
  77:   19 ->   27 fallThroughControlDependence
  78:   19 ->   28 fallThroughControlDependence
  79:   19 ->   29 fallThroughControlDependence
  80:   19 ->   30 fallThroughControlDependence
  81:   19 ->   31 fallThroughControlDependence
  82:   19 ->   32 fallThroughControlDependence
  83:   19 ->   33 fallThroughControlDependence
  84:   19 ->   35 fallThroughControlDependence
  85:   19 ->   36 fallThroughControlDependence
  86:   19 ->   37 fallThroughControlDependence
  87:   19 ->   38 fallThroughControlDependence
  88:   19 ->   39 fallThroughControlDependence
  89:   19 ->   41 loopIndependentDefUseDependence $_
  90:   19 -> * fallThroughControlDependence
  91:   19 -> * fallThroughControlDependence
  92:   19 -> * fallThroughControlDependence
  93:   19 -> * fallThroughControlDependence
  94:   19 -> * fallThroughControlDependence
  95:   19 -> * fallThroughControlDependence
  96:   19 -> * fallThroughControlDependence
  97:   19 -> * fallThroughControlDependence
  98:   19 -> * fallThroughControlDependence
  99:   19 -> * fallThroughControlDependence
 100:   19 -> * fallThroughControlDependence
 101:   19 -> * fallThroughControlDependence
 102:   19 -> * fallThroughControlDependence
 103:   21 ->   36 declaration
 104:   21 ->   36 loopIndependentDefUseDependence canvas$1
 105:   30 ->   26 loopIndependentDefUseDependence this.!addRecentFile( java.lang.String )
 106:   38 ->   35 loopIndependentDefUseDependence canvas$1.!repaint( )
 107:   39 ->   41 loopIndependentDefUseDependence $_
 108: * ->    2 loopIndependentDefUseDependence this.!getFileName( boolean )
 109: * ->   10 loopIndependentDefUseDependence this.!fileExists( java.lang.String )
 110: * ->   21 loopIndependentDefUseDependence this.tabbedCanvas.!openTab( java.lang.String )
 111: * ->   31 loopIndependentDefUseDependence this.tool.!setTitle( java.lang.String )
 112: * -> * loopIndependentDefUseDependence this.directory
 113: * -> * outputDependence this.tabbedCanvas.!openTab( java.lang.String ).figureManager
 114: * -> * outputDependence this.tabbedCanvas.!openTab( java.lang.String ).figures
 115: * -> * outputDependence this.tabbedCanvas.!openTab( java.lang.String ).filename
--
   0: windowListener
   1:    0 ->    1 trueControlDependence
--
   0: saveAsFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1:    0 ->    2 trueControlDependence
   2:    0 ->    4 trueControlDependence
   3:    0 ->    5 trueControlDependence
   4:    0 ->    6 trueControlDependence
   5:    2 ->   14 loopIndependentDefUseDependence canvas$0
   6:    2 ->   20 loopIndependentDefUseDependence canvas$0
   7:    3 ->    8 declaration
   8:    3 ->    8 loopIndependentDefUseDependence filename$1
   9:    3 ->   15 declaration
  10:    3 ->   15 loopIndependentDefUseDependence filename$1
  11:    3 ->   25 declaration
  12:    3 ->   25 loopIndependentDefUseDependence filename$1
  13:    3 ->   29 declaration
  14:    3 ->   29 loopIndependentDefUseDependence filename$1
  15:    5 ->    1 exceptionCatch
  16:    5 ->    3 trueControlDependence
  17:    5 ->    8 trueControlDependence
  18:    5 -> * trueControlDependence
  19:    5 -> * trueControlDependence
  20:    8 ->    9 trueControlDependence
  21:    8 ->   12 falseControlDependence
  22:    8 ->   13 falseControlDependence
  23:    8 ->   14 falseControlDependence
  24:    8 ->   15 falseControlDependence
  25:    9 ->   12 fallThroughControlDependence
  26:    9 ->   13 fallThroughControlDependence
  27:    9 ->   14 fallThroughControlDependence
  28:    9 ->   15 fallThroughControlDependence
  29:    9 ->   35 loopIndependentDefUseDependence $_
  30:    9 ->   35 trueControlDependence
  31:   11 ->   17 trueControlDependence
  32:   11 ->   18 trueControlDependence
  33:   11 ->   19 trueControlDependence
  34:   11 ->   20 trueControlDependence
  35:   11 ->   22 trueControlDependence
  36:   11 ->   23 trueControlDependence
  37:   11 ->   24 trueControlDependence
  38:   11 ->   25 trueControlDependence
  39:   11 ->   26 trueControlDependence
  40:   11 ->   27 trueControlDependence
  41:   11 ->   28 trueControlDependence
  42:   11 ->   29 trueControlDependence
  43:   11 ->   31 trueControlDependence
  44:   11 ->   33 falseControlDependence
  45:   11 -> * trueControlDependence
  46:   11 -> * trueControlDependence
  47:   13 ->    1 exceptionCatch
  48:   13 ->   11 trueControlDependence
  49:   13 ->   35 trueControlDependence
  50:   13 -> * trueControlDependence
  51:   26 ->   22 loopIndependentDefUseDependence this.!addRecentFile( java.lang.String )
  52:   31 ->   33 fallThroughControlDependence
  53:   31 ->   35 loopIndependentDefUseDependence $_
  54:   33 ->   35 loopIndependentDefUseDependence $_
  55: * ->    3 loopIndependentDefUseDependence this.!getFileName( boolean )
  56: * ->   11 loopIndependentDefUseDependence this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String )
  57: * ->   17 loopIndependentDefUseDependence this.tabbedCanvas.!updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
  58: * ->   27 loopIndependentDefUseDependence this.tool.!setTitle( java.lang.String )
  59: * -> * loopIndependentDefUseDependence this.directory
--
   0: menuBar
   1:    0 ->    1 trueControlDependence
--
   0: getToolBar( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    1 ->    3 loopIndependentDefUseDependence $_
--
   0: closeAllFiles( )
   1:    0 ->    3 trueControlDependence
   2:    0 ->    4 trueControlDependence
   3:    0 ->    5 trueControlDependence
   4:    2 ->    2 defOrderDependence canvas$0
   5:    2 ->    7 trueControlDependence
   6:    2 ->    8 trueControlDependence
   7:    2 ->    9 loopIndependentDefUseDependence canvas$0
   8:    2 ->    9 trueControlDependence
   9:    5 ->    2 loopIndependentDefUseDependence this.tabbedCanvas.!getAllCanvases( )
  10:    6 ->    2 falseControlDependence
  11:    6 ->   11 trueControlDependence
  12:    8 ->    1 exceptionCatch
  13:    8 ->    6 trueControlDependence
  14:    8 -> * trueControlDependence
  15:    8 -> * trueControlDependence
  16:   11 ->    2 fallThroughControlDependence
  17:   11 ->   14 trueControlDependence
  18: * ->    6 loopIndependentDefUseDependence this.!closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
  19: * ->    8 loopIndependentDefUseDependence this.!javax.swing.JTabbedPane.visComp
  20: * ->    8 loopIndependentDefUseDependence this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out
  21: * ->    8 loopIndependentDefUseDependence this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count
  22: * -> * defOrderDependence this.!closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
  23: * -> * defOrderDependence this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble
  24: * -> * defOrderDependence this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb
  25: * -> * defOrderDependence this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars
  26: * -> * defOrderDependence this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar
  27: * -> * defOrderDependence this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out
  28: * -> * defOrderDependence this.canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se
  29: * -> * defOrderDependence this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush
  30: * -> * defOrderDependence this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out
  31: * -> * defOrderDependence this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut
  32: * -> * defOrderDependence this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble
  33: * -> * defOrderDependence this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder
  34: * -> * defOrderDependence this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value
  35: * -> * defOrderDependence this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble
  36: * -> * loopIndependentDefUseDependence this.!javax.swing.JTabbedPane.visComp
  37: * -> * loopIndependentDefUseDependence this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out
  38: * -> * loopIndependentDefUseDependence this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count
  39: * -> * outputDependence this.selectedTab
--
   0: redoAction
   1:    0 ->    1 trueControlDependence
--
   0: getMenuBar( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    1 ->    3 loopIndependentDefUseDependence $_
--
   0: openFile( )
   1:    0 ->    4 trueControlDependence
   2:    0 ->    5 trueControlDependence
   3:    0 ->    6 trueControlDependence
   4:    3 ->    8 declaration
   5:    3 ->    8 loopIndependentDefUseDependence filename$0
   6:    3 ->   14 declaration
   7:    3 ->   14 loopIndependentDefUseDependence filename$0
   8:    5 ->    1 exceptionCatch
   9:    5 ->    3 trueControlDependence
  10:    5 ->    8 trueControlDependence
  11:    5 -> * trueControlDependence
  12:    5 -> * trueControlDependence
  13:    8 ->    9 trueControlDependence
  14:    8 ->   12 falseControlDependence
  15:    8 ->   13 falseControlDependence
  16:    8 ->   14 falseControlDependence
  17:    9 ->   12 fallThroughControlDependence
  18:    9 ->   13 fallThroughControlDependence
  19:    9 ->   14 fallThroughControlDependence
  20:    9 ->   17 loopIndependentDefUseDependence $_
  21:    9 ->   17 trueControlDependence
  22:   11 ->   17 loopIndependentDefUseDependence $_
  23:   13 ->    1 exceptionCatch
  24:   13 ->    2 exceptionCatch
  25:   13 ->   11 trueControlDependence
  26:   13 ->   17 trueControlDependence
  27:   13 -> * trueControlDependence
  28:   13 -> * trueControlDependence
  29:   13 -> * trueControlDependence
  30:   13 -> * trueControlDependence
  31:   13 -> * trueControlDependence
  32:   13 -> * trueControlDependence
  33:   13 -> * trueControlDependence
  34:   13 -> * trueControlDependence
  35:   13 -> * trueControlDependence
  36:   13 -> * trueControlDependence
  37:   13 -> * trueControlDependence
  38:   13 -> * trueControlDependence
  39:   13 -> * trueControlDependence
  40:   13 -> * trueControlDependence
  41:   13 -> * trueControlDependence
  42:   13 -> * trueControlDependence
  43: * ->    3 loopIndependentDefUseDependence this.!getFileName( boolean )
  44: * ->   11 loopIndependentDefUseDependence this.!openFile( java.lang.String )
  45: * -> * loopIndependentDefUseDependence this.directory
  46: * -> * outputDependence $_.figureManager
  47: * -> * outputDependence $_.figures
  48: * -> * outputDependence $_.filename
--
   0: fileExists( java.lang.String )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    0 ->    7 trueControlDependence
   7:    0 ->    8 trueControlDependence
   8:    0 ->   11 trueControlDependence
   9:    0 -> * trueControlDependence
  10:    0 -> * trueControlDependence
  11:    1 ->    4 loopIndependentDefUseDependence name$0
  12:    2 ->    7 declaration
  13:    2 ->    7 loopIndependentDefUseDependence file$1
  14:    6 ->   11 loopIndependentDefUseDependence $_
  15: * ->    2 loopIndependentDefUseDependence java.io.File.!File( java.lang.String )
  16: * ->    6 loopIndependentDefUseDependence file$1.!exists( )
--
   0: initToolBar( javax.swing.JToolBar )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    0 ->    7 trueControlDependence
   7:    0 ->    8 trueControlDependence
   8:    0 ->   10 trueControlDependence
   9:    0 ->   11 trueControlDependence
  10:    0 ->   12 trueControlDependence
  11:    0 ->   14 trueControlDependence
  12:    0 ->   15 trueControlDependence
  13:    0 ->   16 trueControlDependence
  14:    0 ->   18 trueControlDependence
  15:    0 ->   19 trueControlDependence
  16:    0 ->   20 trueControlDependence
  17:    0 ->   22 trueControlDependence
  18:    0 ->   23 trueControlDependence
  19:    0 ->   24 trueControlDependence
  20:    0 ->   26 trueControlDependence
  21:    0 ->   27 trueControlDependence
  22:    0 ->   28 trueControlDependence
  23:    0 ->   29 trueControlDependence
  24:    0 ->   30 trueControlDependence
  25:    0 ->   31 trueControlDependence
  26:    0 ->   32 trueControlDependence
  27:    0 ->   34 trueControlDependence
  28:    0 ->   35 trueControlDependence
  29:    0 ->   36 trueControlDependence
  30:    0 ->   38 trueControlDependence
  31:    0 ->   39 trueControlDependence
  32:    0 ->   40 trueControlDependence
  33:    0 ->   42 trueControlDependence
  34:    0 ->   43 trueControlDependence
  35:    0 ->   44 trueControlDependence
  36:    0 ->   46 trueControlDependence
  37:    0 ->   47 trueControlDependence
  38:    0 ->   48 trueControlDependence
  39:    0 ->   50 trueControlDependence
  40:    0 ->   51 trueControlDependence
  41:    0 ->   52 trueControlDependence
  42:    0 ->   54 trueControlDependence
  43:    0 ->   55 trueControlDependence
  44:    0 ->   56 trueControlDependence
  45:    0 ->   57 trueControlDependence
  46:    0 ->   58 trueControlDependence
  47:    0 ->   59 trueControlDependence
  48:    0 ->   60 trueControlDependence
  49:    0 ->   62 trueControlDependence
  50:    0 ->   63 trueControlDependence
  51:    0 ->   64 trueControlDependence
  52:    0 ->   66 trueControlDependence
  53:    0 ->   67 trueControlDependence
  54:    0 ->   68 trueControlDependence
  55:    0 ->   69 trueControlDependence
  56:    0 ->   70 trueControlDependence
  57:    0 ->   71 trueControlDependence
  58:    0 ->   72 trueControlDependence
  59:    0 ->   74 trueControlDependence
  60:    0 ->   75 trueControlDependence
  61:    0 ->   76 trueControlDependence
  62:    0 ->   78 trueControlDependence
  63:    0 ->   79 trueControlDependence
  64:    0 ->   80 trueControlDependence
  65:    0 ->   81 trueControlDependence
  66:    0 ->   83 trueControlDependence
  67:    0 -> * trueControlDependence
  68:    0 -> * trueControlDependence
  69:    0 -> * trueControlDependence
  70:    0 -> * trueControlDependence
  71:    0 -> * trueControlDependence
  72:    0 -> * trueControlDependence
  73:    0 -> * trueControlDependence
  74:    0 -> * trueControlDependence
  75:    0 -> * trueControlDependence
  76:    0 -> * trueControlDependence
  77:    0 -> * trueControlDependence
  78:    0 -> * trueControlDependence
  79:    0 -> * trueControlDependence
  80:    0 -> * trueControlDependence
  81:    0 -> * trueControlDependence
  82:    0 -> * trueControlDependence
  83:    1 ->    3 loopIndependentDefUseDependence toolBar$0
  84:    1 ->   11 loopIndependentDefUseDependence toolBar$0
  85:    1 ->   19 loopIndependentDefUseDependence toolBar$0
  86:    1 ->   27 loopIndependentDefUseDependence toolBar$0
  87:    1 ->   31 loopIndependentDefUseDependence toolBar$0
  88:    1 ->   39 loopIndependentDefUseDependence toolBar$0
  89:    1 ->   47 loopIndependentDefUseDependence toolBar$0
  90:    1 ->   55 loopIndependentDefUseDependence toolBar$0
  91:    1 ->   59 loopIndependentDefUseDependence toolBar$0
  92:    1 ->   71 loopIndependentDefUseDependence toolBar$0
  93:    2 ->    7 declaration
  94:    2 ->    7 loopIndependentDefUseDependence newButton$1
  95:   10 ->   15 declaration
  96:   10 ->   15 loopIndependentDefUseDependence openButton$2
  97:   18 ->   23 declaration
  98:   18 ->   23 loopIndependentDefUseDependence saveButton$3
  99:   29 ->   26 loopIndependentDefUseDependence toolBar$0.!addSeparator( )
 100:   29 ->   57 outputDependence toolBar$0.!addSeparator( )
 101:   30 ->   35 declaration
 102:   30 ->   35 loopIndependentDefUseDependence cutButton$4
 103:   38 ->   43 declaration
 104:   38 ->   43 loopIndependentDefUseDependence copyButton$5
 105:   46 ->   51 declaration
 106:   46 ->   51 loopIndependentDefUseDependence pasteButton$6
 107:   57 ->   54 loopIndependentDefUseDependence toolBar$0.!addSeparator( )
 108:   58 ->   63 declaration
 109:   58 ->   63 loopIndependentDefUseDependence undoButton$7
 110:   69 ->   66 loopIndependentDefUseDependence this.undoAction.!setEnabled( boolean )
 111:   70 ->   75 declaration
 112:   70 ->   75 loopIndependentDefUseDependence redoButton$8
 113:   70 ->   79 declaration
 114:   70 ->   79 loopIndependentDefUseDependence redoButton$8
 115:   81 ->   78 loopIndependentDefUseDependence redoButton$8.!setEnabled( boolean )
 116: * ->    2 loopIndependentDefUseDependence toolBar$0.!add( javax.swing.Action )
 117: * ->    6 loopIndependentDefUseDependence newButton$1.!setToolTipText( java.lang.String )
 118: * ->   10 loopIndependentDefUseDependence toolBar$0.!add( javax.swing.Action )
 119: * ->   12 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 120: * ->   12 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 121: * ->   14 loopIndependentDefUseDependence openButton$2.!setToolTipText( java.lang.String )
 122: * ->   18 loopIndependentDefUseDependence toolBar$0.!add( javax.swing.Action )
 123: * ->   20 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 124: * ->   20 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 125: * ->   22 loopIndependentDefUseDependence saveButton$3.!setToolTipText( java.lang.String )
 126: * ->   30 loopIndependentDefUseDependence toolBar$0.!add( javax.swing.Action )
 127: * ->   32 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 128: * ->   32 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 129: * ->   34 loopIndependentDefUseDependence cutButton$4.!setToolTipText( java.lang.String )
 130: * ->   38 loopIndependentDefUseDependence toolBar$0.!add( javax.swing.Action )
 131: * ->   40 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 132: * ->   40 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 133: * ->   42 loopIndependentDefUseDependence copyButton$5.!setToolTipText( java.lang.String )
 134: * ->   46 loopIndependentDefUseDependence toolBar$0.!add( javax.swing.Action )
 135: * ->   48 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 136: * ->   48 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 137: * ->   50 loopIndependentDefUseDependence pasteButton$6.!setToolTipText( java.lang.String )
 138: * ->   58 loopIndependentDefUseDependence toolBar$0.!add( javax.swing.Action )
 139: * ->   60 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 140: * ->   60 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 141: * ->   62 loopIndependentDefUseDependence undoButton$7.!setToolTipText( java.lang.String )
 142: * ->   70 loopIndependentDefUseDependence toolBar$0.!add( javax.swing.Action )
 143: * ->   72 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 144: * ->   72 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 145: * ->   74 loopIndependentDefUseDependence redoButton$8.!setToolTipText( java.lang.String )
 146: * -> * loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 147: * -> * loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 148: * -> * loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 149: * -> * loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 150: * -> * loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 151: * -> * loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 152: * -> * loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 153: * -> * loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 154: * -> * loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 155: * -> * loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 156: * -> * loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 157: * -> * loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 158: * -> * loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 159: * -> * loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 160: * -> * outputDependence toolBar$0.!add( javax.swing.Action )
 161: * -> * outputDependence toolBar$0.!add( javax.swing.Action )
 162: * -> * outputDependence toolBar$0.!add( javax.swing.Action )
 163: * -> * outputDependence toolBar$0.!add( javax.swing.Action )
 164: * -> * outputDependence toolBar$0.!add( javax.swing.Action )
 165: * -> * outputDependence toolBar$0.!add( javax.swing.Action )
 166: * -> * outputDependence toolBar$0.!add( javax.swing.Action )
--
   0: RECENT_FILES
   1:    0 ->    1 trueControlDependence
--
   0: addRecentFile( java.lang.String )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->   30 trueControlDependence
   8:    1 ->    4 loopIndependentDefUseDependence filename$0
   9:    1 ->    9 loopIndependentDefUseDependence filename$0
  10:    1 ->   26 loopIndependentDefUseDependence filename$0
  11:    2 ->    6 declaration
  12:    2 ->    6 loopIndependentDefUseDependence offset$1
  13:    2 ->   22 declaration
  14:    2 ->   22 loopIndependentDefUseDependence offset$1
  15:    5 ->    2 loopIndependentDefUseDependence this.recentFiles.!indexOf( java.lang.Object )
  16:    6 ->    7 trueControlDependence
  17:    6 ->    8 trueControlDependence
  18:    6 ->    9 trueControlDependence
  19:    6 ->   10 trueControlDependence
  20:    6 ->   11 trueControlDependence
  21:    6 ->   12 trueControlDependence
  22:    6 ->   13 trueControlDependence
  23:    6 ->   14 trueControlDependence
  24:    6 ->   20 falseControlDependence
  25:    6 ->   21 falseControlDependence
  26:    6 ->   22 falseControlDependence
  27:    6 ->   23 falseControlDependence
  28:    6 ->   24 falseControlDependence
  29:    6 ->   25 falseControlDependence
  30:    6 ->   26 falseControlDependence
  31:    6 ->   27 falseControlDependence
  32:   10 ->    7 loopIndependentDefUseDependence this.recentFiles.!add( int java.lang.Object )
  33:   11 ->   15 trueControlDependence
  34:   11 ->   16 trueControlDependence
  35:   11 ->   17 trueControlDependence
  36:   11 ->   18 trueControlDependence
  37:   14 ->   11 loopIndependentDefUseDependence this.recentFiles.!size( )
  38:   18 ->   15 loopIndependentDefUseDependence this.recentFiles.!remove( int )
  39:   23 ->   20 loopIndependentDefUseDependence this.recentFiles.!remove( int )
  40:   27 ->   24 loopIndependentDefUseDependence this.recentFiles.!add( int java.lang.Object )
--
   0: fileListMenu
   1:    0 ->    1 trueControlDependence
--
   0: saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String )
   1:    0 ->    2 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    0 ->    5 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    0 ->    7 trueControlDependence
   7:    0 ->    8 trueControlDependence
   8:    0 ->    9 trueControlDependence
   9:    0 ->   10 trueControlDependence
  10:    0 ->   12 trueControlDependence
  11:    0 -> * trueControlDependence
  12:    2 ->    6 loopIndependentDefUseDependence canvas$0
  13:    2 ->   20 loopIndependentDefUseDependence canvas$0
  14:    3 ->   10 loopIndependentDefUseDependence filename$1
  15:    3 ->   15 loopIndependentDefUseDependence filename$1
  16:    4 ->   12 declaration
  17:    4 ->   12 loopIndependentDefUseDependence result$2
  18:    8 ->    5 loopIndependentDefUseDependence canvas$0.!getFigureManager( )
  19:   12 ->   14 trueControlDependence
  20:   12 ->   15 trueControlDependence
  21:   12 ->   19 falseControlDependence
  22:   12 ->   20 falseControlDependence
  23:   12 ->   21 falseControlDependence
  24:   12 ->   22 falseControlDependence
  25:   12 ->   23 falseControlDependence
  26:   12 ->   24 falseControlDependence
  27:   15 ->    1 exceptionCatch
  28:   15 ->   13 trueControlDependence
  29:   15 ->   16 trueControlDependence
  30:   15 ->   17 trueControlDependence
  31:   15 ->   26 trueControlDependence
  32:   16 ->   13 loopIndependentDefUseDependence this.!showMessageDialog( java.awt.Component java.lang.Object )
  33:   17 ->   19 fallThroughControlDependence
  34:   17 ->   20 fallThroughControlDependence
  35:   17 ->   21 fallThroughControlDependence
  36:   17 ->   22 fallThroughControlDependence
  37:   17 ->   23 fallThroughControlDependence
  38:   17 ->   24 fallThroughControlDependence
  39:   17 ->   26 loopIndependentDefUseDependence $_
  40:   23 ->   19 loopIndependentDefUseDependence canvas$0.!setChanged( boolean )
  41:   24 ->   26 loopIndependentDefUseDependence $_
  42: * ->    4 loopIndependentDefUseDependence canvas$0.!getFigureManager( ).!store( java.lang.String )
--
   0: clipboard
   1:    0 ->    1 trueControlDependence
--
   0: initEditActions( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   16 trueControlDependence
  15:    0 ->   17 trueControlDependence
  16:    0 ->   18 trueControlDependence
  17:    0 ->   19 trueControlDependence
  18:    0 ->   20 trueControlDependence
  19:    0 ->   21 trueControlDependence
  20:    0 ->   22 trueControlDependence
  21:    0 ->   23 trueControlDependence
  22:    0 ->   24 trueControlDependence
  23:    0 ->   25 trueControlDependence
  24:    0 ->   26 trueControlDependence
  25:    0 ->   27 trueControlDependence
  26:    0 ->   28 trueControlDependence
  27:    0 ->   31 trueControlDependence
  28:    0 ->   32 trueControlDependence
  29:    0 ->   33 trueControlDependence
  30:    0 ->   34 trueControlDependence
  31:    0 ->   35 trueControlDependence
  32:    0 ->   36 trueControlDependence
  33:    0 ->   37 trueControlDependence
  34:    0 ->   38 trueControlDependence
  35:    0 ->   39 trueControlDependence
  36:    0 ->   40 trueControlDependence
  37:    0 ->   41 trueControlDependence
  38:    0 ->   42 trueControlDependence
  39:    0 ->   43 trueControlDependence
  40:    0 ->   46 trueControlDependence
  41:    0 ->   47 trueControlDependence
  42:    0 ->   48 trueControlDependence
  43:    0 ->   49 trueControlDependence
  44:    0 ->   50 trueControlDependence
  45:    0 ->   51 trueControlDependence
  46:    0 ->   52 trueControlDependence
  47:    0 ->   53 trueControlDependence
  48:    0 ->   54 trueControlDependence
  49:    0 ->   55 trueControlDependence
  50:    0 ->   56 trueControlDependence
  51:    0 ->   57 trueControlDependence
  52:    0 ->   58 trueControlDependence
  53:    0 ->   61 trueControlDependence
  54:    0 ->   62 trueControlDependence
  55:    0 ->   63 trueControlDependence
  56:    0 ->   64 trueControlDependence
  57:    0 ->   65 trueControlDependence
  58:    0 ->   66 trueControlDependence
  59:    0 ->   67 trueControlDependence
  60:    0 ->   68 trueControlDependence
  61:    0 ->   69 trueControlDependence
  62:    0 ->   70 trueControlDependence
  63:    0 ->   71 trueControlDependence
  64:    0 ->   72 trueControlDependence
  65:    0 ->   73 trueControlDependence
  66:    0 ->   76 trueControlDependence
  67:    0 ->   77 trueControlDependence
  68:    0 ->   78 trueControlDependence
  69:    0 ->   79 trueControlDependence
  70:    0 ->   82 trueControlDependence
  71:    0 -> * trueControlDependence
  72:    0 -> * trueControlDependence
  73:    0 -> * trueControlDependence
  74:    0 -> * trueControlDependence
  75:    0 -> * trueControlDependence
  76:    0 -> * trueControlDependence
  77:    0 -> * trueControlDependence
  78:    0 -> * trueControlDependence
  79:    0 -> * trueControlDependence
  80:    0 -> * trueControlDependence
  81:    0 -> * trueControlDependence
  82:   11 ->    8 loopIndependentDefUseDependence this.!getClass( )
  83:   11 ->   26 outputDependence this.!getClass( )
  84:   13 ->    7 loopIndependentDefUseDependence this.!getClass( ).!getResource( java.lang.String )
  85:   13 ->   28 outputDependence this.!getClass( ).!getResource( java.lang.String )
  86:   26 ->   23 loopIndependentDefUseDependence this.!getClass( )
  87:   26 ->   41 outputDependence this.!getClass( )
  88:   28 ->   22 loopIndependentDefUseDependence this.!getClass( ).!getResource( java.lang.String )
  89:   28 ->   43 outputDependence this.!getClass( ).!getResource( java.lang.String )
  90:   41 ->   38 loopIndependentDefUseDependence this.!getClass( )
  91:   41 ->   56 outputDependence this.!getClass( )
  92:   43 ->   37 loopIndependentDefUseDependence this.!getClass( ).!getResource( java.lang.String )
  93:   43 ->   58 outputDependence this.!getClass( ).!getResource( java.lang.String )
  94:   56 ->   53 loopIndependentDefUseDependence this.!getClass( )
  95:   56 ->   71 outputDependence this.!getClass( )
  96:   58 ->   52 loopIndependentDefUseDependence this.!getClass( ).!getResource( java.lang.String )
  97:   58 ->   73 outputDependence this.!getClass( ).!getResource( java.lang.String )
  98:   71 ->   68 loopIndependentDefUseDependence this.!getClass( )
  99:   73 ->   67 loopIndependentDefUseDependence this.!getClass( ).!getResource( java.lang.String )
 100: * ->    1 loopIndependentDefUseDependence .!AbstractAction( java.lang.String javax.swing.Icon )
 101: * ->    5 loopIndependentDefUseDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
 102: * ->   16 loopIndependentDefUseDependence .!AbstractAction( java.lang.String javax.swing.Icon )
 103: * ->   18 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
 104: * ->   18 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
 105: * ->   20 loopIndependentDefUseDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
 106: * ->   22 loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
 107: * ->   31 loopIndependentDefUseDependence .!AbstractAction( java.lang.String javax.swing.Icon )
 108: * ->   33 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
 109: * ->   33 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
 110: * ->   35 loopIndependentDefUseDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
 111: * ->   37 loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
 112: * ->   46 loopIndependentDefUseDependence .!AbstractAction( java.lang.String javax.swing.Icon )
 113: * ->   48 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
 114: * ->   48 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
 115: * ->   50 loopIndependentDefUseDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
 116: * ->   52 loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
 117: * ->   61 loopIndependentDefUseDependence .!AbstractAction( java.lang.String javax.swing.Icon )
 118: * ->   63 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
 119: * ->   63 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
 120: * ->   65 loopIndependentDefUseDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
 121: * ->   67 loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
 122: * ->   76 loopIndependentDefUseDependence .!AbstractAction( java.lang.String )
 123: * ->   78 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
 124: * ->   78 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
 125: * -> * loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
 126: * -> * loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
 127: * -> * loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
 128: * -> * loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
 129: * -> * loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
 130: * -> * loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
 131: * -> * loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
 132: * -> * loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
 133: * -> * loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
 134: * -> * loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
 135: * -> * loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
 136: * -> * loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
 137: * -> * loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
 138: * -> * loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
 139: * -> * outputDependence .!AbstractAction( java.lang.String javax.swing.Icon )
 140: * -> * outputDependence .!AbstractAction( java.lang.String javax.swing.Icon )
 141: * -> * outputDependence .!AbstractAction( java.lang.String javax.swing.Icon )
 142: * -> * outputDependence .!AbstractAction( java.lang.String javax.swing.Icon )
 143: * -> * outputDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
 144: * -> * outputDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
 145: * -> * outputDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
 146: * -> * outputDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
 147: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext
 148: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext
 149: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext
 150: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext
 151: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.description
 152: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.description
 153: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.description
 154: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.description
 155: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.height
 156: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.height
 157: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.height
 158: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.height
 159: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus
 160: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus
 161: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus
 162: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus
 163: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.location
 164: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.location
 165: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.location
 166: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.location
 167: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.width
 168: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.width
 169: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.width
 170: * -> * outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.width
--
   0: updateRedoState( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->   26 trueControlDependence
   7:    1 ->    5 declaration
   8:    1 ->    5 loopIndependentDefUseDependence canvas$0
   9:    1 ->    9 declaration
  10:    1 ->    9 loopIndependentDefUseDependence canvas$0
  11:    4 ->    1 loopIndependentDefUseDependence this.tabbedCanvas.!getCurrentCanvas( )
  12:    5 ->    6 trueControlDependence
  13:    5 ->    8 falseControlDependence
  14:    5 ->    9 falseControlDependence
  15:    5 ->   10 falseControlDependence
  16:    5 ->   11 falseControlDependence
  17:    5 ->   12 falseControlDependence
  18:    5 ->   13 falseControlDependence
  19:    5 ->   14 falseControlDependence
  20:    5 ->   15 falseControlDependence
  21:    6 ->    8 fallThroughControlDependence
  22:    6 ->    9 fallThroughControlDependence
  23:    6 ->   10 fallThroughControlDependence
  24:    6 ->   11 fallThroughControlDependence
  25:    6 ->   12 fallThroughControlDependence
  26:    6 ->   13 fallThroughControlDependence
  27:    6 ->   14 fallThroughControlDependence
  28:    6 ->   15 fallThroughControlDependence
  29:    8 ->   12 declaration
  30:    8 ->   12 loopIndependentDefUseDependence undoManager$1
  31:    8 ->   13 declaration
  32:    8 ->   13 loopIndependentDefUseDependence undoManager$1
  33:   11 ->    8 loopIndependentDefUseDependence canvas$0.!getUndoManager( )
  34:   12 ->   16 trueControlDependence
  35:   12 ->   17 trueControlDependence
  36:   12 ->   18 trueControlDependence
  37:   12 ->   19 trueControlDependence
  38:   12 ->   20 falseControlDependence
  39:   12 ->   21 falseControlDependence
  40:   12 ->   22 falseControlDependence
  41:   12 ->   23 falseControlDependence
  42:   15 ->   12 loopIndependentDefUseDependence undoManager$1.!canRedo( )
  43:   19 ->   16 loopIndependentDefUseDependence this.redoAction.!setEnabled( boolean )
  44:   23 ->   20 loopIndependentDefUseDependence this.redoAction.!setEnabled( boolean )
--
   0: directory
   1:    0 ->    1 trueControlDependence
--
   0: tabbedCanvas
   1:    0 ->    1 trueControlDependence
--
   0: fileListener
   1:    0 ->    1 trueControlDependence
--
   0: autoSave
   1:    0 ->    1 trueControlDependence
--
   0: saveAction
   1:    0 ->    1 trueControlDependence
--
   0: initMenuBar( javax.swing.JMenuBar )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    0 ->    7 trueControlDependence
   7:    0 ->    8 trueControlDependence
   8:    0 ->    9 trueControlDependence
   9:    0 ->   10 trueControlDependence
  10:    0 ->   11 trueControlDependence
  11:    0 ->   12 trueControlDependence
  12:    0 ->   13 trueControlDependence
  13:    0 ->   14 trueControlDependence
  14:    0 ->   15 trueControlDependence
  15:    0 ->   16 trueControlDependence
  16:    0 ->   18 trueControlDependence
  17:    0 ->   19 trueControlDependence
  18:    0 ->   20 trueControlDependence
  19:    0 ->   21 trueControlDependence
  20:    0 ->   23 trueControlDependence
  21:    0 ->   24 trueControlDependence
  22:    0 ->   25 trueControlDependence
  23:    0 ->   27 trueControlDependence
  24:    0 ->   28 trueControlDependence
  25:    0 ->   29 trueControlDependence
  26:    0 ->   30 trueControlDependence
  27:    0 ->   31 trueControlDependence
  28:    0 ->   32 trueControlDependence
  29:    0 ->   33 trueControlDependence
  30:    0 ->   34 trueControlDependence
  31:    0 ->   35 trueControlDependence
  32:    0 ->   36 trueControlDependence
  33:    0 ->   37 trueControlDependence
  34:    0 ->   39 trueControlDependence
  35:    0 ->   40 trueControlDependence
  36:    0 ->   41 trueControlDependence
  37:    0 ->   42 trueControlDependence
  38:    0 ->   44 trueControlDependence
  39:    0 ->   45 trueControlDependence
  40:    0 ->   46 trueControlDependence
  41:    0 ->   48 trueControlDependence
  42:    0 ->   49 trueControlDependence
  43:    0 ->   50 trueControlDependence
  44:    0 ->   51 trueControlDependence
  45:    0 ->   52 trueControlDependence
  46:    0 ->   53 trueControlDependence
  47:    0 ->   54 trueControlDependence
  48:    0 ->   55 trueControlDependence
  49:    0 ->   56 trueControlDependence
  50:    0 ->   57 trueControlDependence
  51:    0 ->   58 trueControlDependence
  52:    0 ->   59 trueControlDependence
  53:    0 ->   60 trueControlDependence
  54:    0 ->   61 trueControlDependence
  55:    0 ->   62 trueControlDependence
  56:    0 ->   63 trueControlDependence
  57:    0 ->   64 trueControlDependence
  58:    0 ->   65 trueControlDependence
  59:    0 ->   68 trueControlDependence
  60:    0 -> * trueControlDependence
  61:    0 -> * trueControlDependence
  62:    0 -> * trueControlDependence
  63:    0 -> * trueControlDependence
  64:    0 -> * trueControlDependence
  65:    0 -> * trueControlDependence
  66:    0 -> * trueControlDependence
  67:    0 -> * trueControlDependence
  68:    0 -> * trueControlDependence
  69:    0 -> * trueControlDependence
  70:    0 -> * trueControlDependence
  71:    0 -> * trueControlDependence
  72:    0 -> * trueControlDependence
  73:    0 -> * trueControlDependence
  74:    0 -> * trueControlDependence
  75:    0 -> * trueControlDependence
  76:    0 -> * trueControlDependence
  77:    0 -> * trueControlDependence
  78:    0 -> * trueControlDependence
  79:    1 ->   11 loopIndependentDefUseDependence menuBar$0
  80:    1 ->   32 loopIndependentDefUseDependence menuBar$0
  81:    1 ->   53 loopIndependentDefUseDependence menuBar$0
  82:    2 ->    7 declaration
  83:    2 ->    7 loopIndependentDefUseDependence fileMenu$1
  84:    2 ->   12 declaration
  85:    2 ->   12 loopIndependentDefUseDependence fileMenu$1
  86:    2 ->   21 declaration
  87:    2 ->   21 loopIndependentDefUseDependence fileMenu$1
  88:    9 ->    6 loopIndependentDefUseDependence fileMenu$1.!setMnemonic( char )
  89:   13 ->   10 loopIndependentDefUseDependence menuBar$0.!add( javax.swing.JMenu )
  90:   13 ->   34 outputDependence menuBar$0.!add( javax.swing.JMenu )
  91:   23 ->   28 declaration
  92:   23 ->   28 loopIndependentDefUseDependence editMenu$2
  93:   23 ->   33 declaration
  94:   23 ->   33 loopIndependentDefUseDependence editMenu$2
  95:   23 ->   42 declaration
  96:   23 ->   42 loopIndependentDefUseDependence editMenu$2
  97:   30 ->   27 loopIndependentDefUseDependence editMenu$2.!setMnemonic( char )
  98:   34 ->   31 loopIndependentDefUseDependence menuBar$0.!add( javax.swing.JMenu )
  99:   34 ->   55 outputDependence menuBar$0.!add( javax.swing.JMenu )
 100:   44 ->   49 declaration
 101:   44 ->   49 loopIndependentDefUseDependence windowMenu$3
 102:   44 ->   54 declaration
 103:   44 ->   54 loopIndependentDefUseDependence windowMenu$3
 104:   44 ->   61 declaration
 105:   44 ->   61 loopIndependentDefUseDependence windowMenu$3
 106:   51 ->   48 loopIndependentDefUseDependence windowMenu$3.!setMnemonic( char )
 107:   55 ->   52 loopIndependentDefUseDependence menuBar$0.!add( javax.swing.JMenu )
 108:   59 ->   56 loopIndependentDefUseDependence .!ActionListener( )
 109:   65 ->   62 loopIndependentDefUseDependence .!MenuListener( )
 110: * ->    2 loopIndependentDefUseDependence javax.swing.JMenu.!JMenu( java.lang.String )
 111: * ->   14 loopIndependentDefUseDependence this.!initFileActions( )
 112: * ->   18 loopIndependentDefUseDependence this.!initFileMenu( javax.swing.JMenu )
 113: * ->   20 loopIndependentDefUseDependence this.newAction
 114: * ->   20 loopIndependentDefUseDependence this.openAction
 115: * ->   20 loopIndependentDefUseDependence this.saveAction
 116: * ->   23 loopIndependentDefUseDependence javax.swing.JMenu.!JMenu( java.lang.String )
 117: * ->   35 loopIndependentDefUseDependence this.!initEditActions( )
 118: * ->   37 loopIndependentDefUseDependence this..!javax.swing.AbstractAction.arrayTable
 119: * ->   37 loopIndependentDefUseDependence this..!javax.swing.AbstractAction.enabled
 120: * ->   37 loopIndependentDefUseDependence this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image
 121: * ->   39 loopIndependentDefUseDependence this.!initEditMenu( javax.swing.JMenu )
 122: * ->   41 loopIndependentDefUseDependence this.copyAction
 123: * ->   41 loopIndependentDefUseDependence this.cutAction
 124: * ->   41 loopIndependentDefUseDependence this.deleteAction
 125: * ->   41 loopIndependentDefUseDependence this.menu$0.!javax.swing.AbstractButton.action
 126: * ->   41 loopIndependentDefUseDependence this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 127: * ->   41 loopIndependentDefUseDependence this.menu$0.!javax.swing.JMenu.popupMenu
 128: * ->   41 loopIndependentDefUseDependence this.pasteAction
 129: * ->   41 loopIndependentDefUseDependence this.redoAction
 130: * ->   41 loopIndependentDefUseDependence this.undoAction
 131: * ->   44 loopIndependentDefUseDependence javax.swing.JMenu.!JMenu( java.lang.String )
 132: * ->   60 loopIndependentDefUseDependence windowMenu$3.!addMenuListener( javax.swing.event.MenuListener )
 133: * -> * loopIndependentDefUseDependence this..!javax.swing.AbstractAction.arrayTable
 134: * -> * loopIndependentDefUseDependence this..!javax.swing.AbstractAction.enabled
 135: * -> * loopIndependentDefUseDependence this.copyAction
 136: * -> * loopIndependentDefUseDependence this.cutAction
 137: * -> * loopIndependentDefUseDependence this.deleteAction
 138: * -> * loopIndependentDefUseDependence this.fileListMenu
 139: * -> * loopIndependentDefUseDependence this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image
 140: * -> * loopIndependentDefUseDependence this.menu$0.!javax.swing.AbstractButton.action
 141: * -> * loopIndependentDefUseDependence this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 142: * -> * loopIndependentDefUseDependence this.menu$0.!javax.swing.JMenu.popupMenu
 143: * -> * loopIndependentDefUseDependence this.newAction
 144: * -> * loopIndependentDefUseDependence this.openAction
 145: * -> * loopIndependentDefUseDependence this.pasteAction
 146: * -> * loopIndependentDefUseDependence this.redoAction
 147: * -> * loopIndependentDefUseDependence this.saveAction
 148: * -> * loopIndependentDefUseDependence this.undoAction
 149: * -> * outputDependence javax.swing.JMenu.!JMenu( java.lang.String )
 150: * -> * outputDependence javax.swing.JMenu.!JMenu( java.lang.String )
 151: * -> * outputDependence javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation
 152: * -> * outputDependence javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation
 153: * -> * outputDependence javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener
 154: * -> * outputDependence javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener
 155: * -> * outputDependence javax.swing.JMenu.!javax.swing.JMenu.menuEvent
 156: * -> * outputDependence javax.swing.JMenu.!javax.swing.JMenu.menuEvent
 157: * -> * outputDependence this.javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext
 158: * -> * outputDependence this.javax.swing.ImageIcon.!javax.swing.ImageIcon.description
 159: * -> * outputDependence this.javax.swing.ImageIcon.!javax.swing.ImageIcon.height
 160: * -> * outputDependence this.javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus
 161: * -> * outputDependence this.javax.swing.ImageIcon.!javax.swing.ImageIcon.location
 162: * -> * outputDependence this.javax.swing.ImageIcon.!javax.swing.ImageIcon.width
 163: * -> * outputDependence this.menu$0.!javax.swing.JMenu.popupListener
--
   0: pasteAction
   1:    0 ->    1 trueControlDependence
--
   0: initFileMenu( javax.swing.JMenu )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    0 ->    7 trueControlDependence
   7:    0 ->    8 trueControlDependence
   8:    0 ->    9 trueControlDependence
   9:    0 ->   10 trueControlDependence
  10:    0 ->   11 trueControlDependence
  11:    0 ->   12 trueControlDependence
  12:    0 ->   14 trueControlDependence
  13:    0 ->   15 trueControlDependence
  14:    0 ->   16 trueControlDependence
  15:    0 ->   17 trueControlDependence
  16:    0 ->   18 trueControlDependence
  17:    0 ->   19 trueControlDependence
  18:    0 ->   21 trueControlDependence
  19:    0 ->   22 trueControlDependence
  20:    0 ->   23 trueControlDependence
  21:    0 ->   25 trueControlDependence
  22:    0 ->   26 trueControlDependence
  23:    0 ->   27 trueControlDependence
  24:    0 ->   28 trueControlDependence
  25:    0 ->   29 trueControlDependence
  26:    0 ->   30 trueControlDependence
  27:    0 ->   31 trueControlDependence
  28:    0 ->   33 trueControlDependence
  29:    0 ->   34 trueControlDependence
  30:    0 ->   35 trueControlDependence
  31:    0 ->   36 trueControlDependence
  32:    0 ->   37 trueControlDependence
  33:    0 ->   38 trueControlDependence
  34:    0 ->   40 trueControlDependence
  35:    0 ->   41 trueControlDependence
  36:    0 ->   42 trueControlDependence
  37:    0 ->   44 trueControlDependence
  38:    0 ->   45 trueControlDependence
  39:    0 ->   46 trueControlDependence
  40:    0 ->   47 trueControlDependence
  41:    0 ->   48 trueControlDependence
  42:    0 ->   49 trueControlDependence
  43:    0 ->   50 trueControlDependence
  44:    0 ->   52 trueControlDependence
  45:    0 ->   53 trueControlDependence
  46:    0 ->   54 trueControlDependence
  47:    0 ->   55 trueControlDependence
  48:    0 ->   56 trueControlDependence
  49:    0 ->   57 trueControlDependence
  50:    0 ->   59 trueControlDependence
  51:    0 ->   60 trueControlDependence
  52:    0 ->   61 trueControlDependence
  53:    0 ->   63 trueControlDependence
  54:    0 ->   64 trueControlDependence
  55:    0 ->   65 trueControlDependence
  56:    0 ->   67 trueControlDependence
  57:    0 ->   68 trueControlDependence
  58:    0 ->   69 trueControlDependence
  59:    0 ->   70 trueControlDependence
  60:    0 ->   71 trueControlDependence
  61:    0 ->   72 trueControlDependence
  62:    0 ->   73 trueControlDependence
  63:    0 ->   75 trueControlDependence
  64:    0 ->   76 trueControlDependence
  65:    0 ->   77 trueControlDependence
  66:    0 ->   78 trueControlDependence
  67:    0 ->   79 trueControlDependence
  68:    0 ->   80 trueControlDependence
  69:    0 ->   82 trueControlDependence
  70:    0 ->   83 trueControlDependence
  71:    0 ->   84 trueControlDependence
  72:    0 ->   86 trueControlDependence
  73:    0 ->   87 trueControlDependence
  74:    0 ->   88 trueControlDependence
  75:    0 ->   89 trueControlDependence
  76:    0 ->   90 trueControlDependence
  77:    0 ->   91 trueControlDependence
  78:    0 ->   92 trueControlDependence
  79:    0 ->   94 trueControlDependence
  80:    0 ->   95 trueControlDependence
  81:    0 ->   96 trueControlDependence
  82:    0 ->   97 trueControlDependence
  83:    0 ->   98 trueControlDependence
  84:    0 ->   99 trueControlDependence
  85:    0 ->  101 trueControlDependence
  86:    0 ->  102 trueControlDependence
  87:    0 ->  103 trueControlDependence
  88:    0 ->  105 trueControlDependence
  89:    0 ->  106 trueControlDependence
  90:    0 ->  107 trueControlDependence
  91:    0 ->  109 trueControlDependence
  92:    0 ->  110 trueControlDependence
  93:    0 ->  111 trueControlDependence
  94:    0 ->  112 trueControlDependence
  95:    0 ->  113 trueControlDependence
  96:    0 ->  114 trueControlDependence
  97:    0 ->  115 trueControlDependence
  98:    0 ->  117 trueControlDependence
  99:    0 ->  118 trueControlDependence
 100:    0 ->  119 trueControlDependence
 101:    0 ->  121 trueControlDependence
 102:    0 ->  122 trueControlDependence
 103:    0 ->  123 trueControlDependence
 104:    0 ->  124 trueControlDependence
 105:    0 ->  125 trueControlDependence
 106:    0 ->  126 trueControlDependence
 107:    0 ->  127 trueControlDependence
 108:    0 ->  129 trueControlDependence
 109:    0 ->  130 trueControlDependence
 110:    0 ->  131 trueControlDependence
 111:    0 ->  132 trueControlDependence
 112:    0 ->  133 trueControlDependence
 113:    0 ->  134 trueControlDependence
 114:    0 ->  135 trueControlDependence
 115:    0 ->  137 trueControlDependence
 116:    0 ->  138 trueControlDependence
 117:    0 ->  139 trueControlDependence
 118:    0 ->  141 trueControlDependence
 119:    0 ->  142 trueControlDependence
 120:    0 ->  143 trueControlDependence
 121:    0 ->  144 trueControlDependence
 122:    0 ->  145 trueControlDependence
 123:    0 ->  146 trueControlDependence
 124:    0 ->  147 trueControlDependence
 125:    0 ->  149 trueControlDependence
 126:    0 ->  150 trueControlDependence
 127:    0 ->  151 trueControlDependence
 128:    0 ->  152 trueControlDependence
 129:    0 ->  153 trueControlDependence
 130:    0 ->  154 trueControlDependence
 131:    0 ->  157 trueControlDependence
 132:    0 -> * trueControlDependence
 133:    0 -> * trueControlDependence
 134:    0 -> * trueControlDependence
 135:    0 -> * trueControlDependence
 136:    0 -> * trueControlDependence
 137:    0 -> * trueControlDependence
 138:    0 -> * trueControlDependence
 139:    0 -> * trueControlDependence
 140:    0 -> * trueControlDependence
 141:    0 -> * trueControlDependence
 142:    0 -> * trueControlDependence
 143:    0 -> * trueControlDependence
 144:    0 -> * trueControlDependence
 145:    0 -> * trueControlDependence
 146:    0 -> * trueControlDependence
 147:    0 -> * trueControlDependence
 148:    0 -> * trueControlDependence
 149:    0 -> * trueControlDependence
 150:    0 -> * trueControlDependence
 151:    0 -> * trueControlDependence
 152:    0 -> * trueControlDependence
 153:    0 -> * trueControlDependence
 154:    0 -> * trueControlDependence
 155:    0 -> * trueControlDependence
 156:    0 -> * trueControlDependence
 157:    1 ->    3 loopIndependentDefUseDependence menu$0
 158:    1 ->   22 loopIndependentDefUseDependence menu$0
 159:    1 ->   49 loopIndependentDefUseDependence menu$0
 160:    1 ->   60 loopIndependentDefUseDependence menu$0
 161:    1 ->   64 loopIndependentDefUseDependence menu$0
 162:    1 ->   91 loopIndependentDefUseDependence menu$0
 163:    1 ->  102 loopIndependentDefUseDependence menu$0
 164:    1 ->  114 loopIndependentDefUseDependence menu$0
 165:    1 ->  134 loopIndependentDefUseDependence menu$0
 166:    1 ->  146 loopIndependentDefUseDependence menu$0
 167:    2 ->    7 declaration
 168:    2 ->    7 loopIndependentDefUseDependence newItem$1
 169:    2 ->   11 declaration
 170:    2 ->   11 loopIndependentDefUseDependence newItem$1
 171:    2 ->   15 declaration
 172:    2 ->   15 loopIndependentDefUseDependence newItem$1
 173:    9 ->    6 loopIndependentDefUseDependence newItem$1.!setMnemonic( char )
 174:   19 ->   16 loopIndependentDefUseDependence this.!getKeyStroke( int int boolean )
 175:   19 ->   38 outputDependence this.!getKeyStroke( int int boolean )
 176:   21 ->   26 declaration
 177:   21 ->   26 loopIndependentDefUseDependence openItem$2
 178:   21 ->   30 declaration
 179:   21 ->   30 loopIndependentDefUseDependence openItem$2
 180:   21 ->   34 declaration
 181:   21 ->   34 loopIndependentDefUseDependence openItem$2
 182:   28 ->   25 loopIndependentDefUseDependence openItem$2.!setMnemonic( char )
 183:   38 ->   35 loopIndependentDefUseDependence this.!getKeyStroke( int int boolean )
 184:   38 ->   80 outputDependence this.!getKeyStroke( int int boolean )
 185:   40 ->   45 declaration
 186:   40 ->   45 loopIndependentDefUseDependence closeItem$3
 187:   40 ->   50 declaration
 188:   40 ->   50 loopIndependentDefUseDependence closeItem$3
 189:   40 ->   53 declaration
 190:   40 ->   53 loopIndependentDefUseDependence closeItem$3
 191:   47 ->   44 loopIndependentDefUseDependence closeItem$3.!setMnemonic( char )
 192:   57 ->   54 loopIndependentDefUseDependence .!ActionListener( )
 193:   57 ->   99 outputDependence .!ActionListener( )
 194:   63 ->   68 declaration
 195:   63 ->   68 loopIndependentDefUseDependence saveItem$5
 196:   63 ->   72 declaration
 197:   63 ->   72 loopIndependentDefUseDependence saveItem$5
 198:   63 ->   76 declaration
 199:   63 ->   76 loopIndependentDefUseDependence saveItem$5
 200:   70 ->   67 loopIndependentDefUseDependence saveItem$5.!setMnemonic( char )
 201:   80 ->   77 loopIndependentDefUseDependence this.!getKeyStroke( int int boolean )
 202:   82 ->   87 declaration
 203:   82 ->   87 loopIndependentDefUseDependence saveAsItem$6
 204:   82 ->   92 declaration
 205:   82 ->   92 loopIndependentDefUseDependence saveAsItem$6
 206:   82 ->   95 declaration
 207:   82 ->   95 loopIndependentDefUseDependence saveAsItem$6
 208:   89 ->   86 loopIndependentDefUseDependence saveAsItem$6.!setMnemonic( char )
 209:   99 ->   96 loopIndependentDefUseDependence .!ActionListener( )
 210:   99 ->  132 outputDependence .!ActionListener( )
 211:  105 ->  110 loopIndependentDefUseDependence this.fileListMenu
 212:  105 ->  115 loopIndependentDefUseDependence this.fileListMenu
 213:  105 ->  126 loopIndependentDefUseDependence this.fileListMenu
 214:  112 ->  109 loopIndependentDefUseDependence this.fileListMenu.!setMnemonic( char )
 215:  117 ->  122 declaration
 216:  117 ->  122 loopIndependentDefUseDependence emptyListItem$9
 217:  117 ->  127 declaration
 218:  117 ->  127 loopIndependentDefUseDependence emptyListItem$9
 219:  124 ->  121 loopIndependentDefUseDependence emptyListItem$9.!setEnabled( boolean )
 220:  132 ->  129 loopIndependentDefUseDependence .!ActionListener( )
 221:  132 ->  154 outputDependence .!ActionListener( )
 222:  137 ->  142 declaration
 223:  137 ->  142 loopIndependentDefUseDependence exitItem$13
 224:  137 ->  147 declaration
 225:  137 ->  147 loopIndependentDefUseDependence exitItem$13
 226:  137 ->  150 declaration
 227:  137 ->  150 loopIndependentDefUseDependence exitItem$13
 228:  144 ->  141 loopIndependentDefUseDependence exitItem$13.!setMnemonic( char )
 229:  154 ->  151 loopIndependentDefUseDependence .!ActionListener( )
 230: * ->    2 loopIndependentDefUseDependence menu$0.!add( javax.swing.Action )
 231: * ->   10 loopIndependentDefUseDependence newItem$1.!setIcon( javax.swing.Icon )
 232: * ->   14 loopIndependentDefUseDependence newItem$1.!setAccelerator( javax.swing.KeyStroke )
 233: * ->   21 loopIndependentDefUseDependence menu$0.!add( javax.swing.Action )
 234: * ->   23 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 235: * ->   23 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 236: * ->   29 loopIndependentDefUseDependence openItem$2.!setIcon( javax.swing.Icon )
 237: * ->   33 loopIndependentDefUseDependence openItem$2.!setAccelerator( javax.swing.KeyStroke )
 238: * ->   40 loopIndependentDefUseDependence javax.swing.JMenuItem.!JMenuItem( java.lang.String )
 239: * ->   48 loopIndependentDefUseDependence menu$0.!add( javax.swing.JMenuItem )
 240: * ->   52 loopIndependentDefUseDependence closeItem$3.!addActionListener( java.awt.event.ActionListener )
 241: * ->   59 loopIndependentDefUseDependence menu$0.!addSeparator( )
 242: * ->   61 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 243: * ->   63 loopIndependentDefUseDependence menu$0.!add( javax.swing.Action )
 244: * ->   65 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 245: * ->   65 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 246: * ->   65 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 247: * ->   71 loopIndependentDefUseDependence saveItem$5.!setIcon( javax.swing.Icon )
 248: * ->   75 loopIndependentDefUseDependence saveItem$5.!setAccelerator( javax.swing.KeyStroke )
 249: * ->   82 loopIndependentDefUseDependence javax.swing.JMenuItem.!JMenuItem( java.lang.String )
 250: * ->   90 loopIndependentDefUseDependence menu$0.!add( javax.swing.JMenuItem )
 251: * ->   92 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 252: * ->   94 loopIndependentDefUseDependence saveAsItem$6.!addActionListener( java.awt.event.ActionListener )
 253: * ->  101 loopIndependentDefUseDependence menu$0.!addSeparator( )
 254: * ->  103 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 255: * ->  105 loopIndependentDefUseDependence javax.swing.JMenu.!JMenu( java.lang.String )
 256: * ->  113 loopIndependentDefUseDependence menu$0.!add( javax.swing.JMenuItem )
 257: * ->  115 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 258: * ->  117 loopIndependentDefUseDependence javax.swing.JMenuItem.!JMenuItem( java.lang.String )
 259: * ->  125 loopIndependentDefUseDependence this.fileListMenu.!add( javax.swing.JMenuItem )
 260: * ->  133 loopIndependentDefUseDependence menu$0.!addSeparator( )
 261: * ->  135 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 262: * ->  137 loopIndependentDefUseDependence javax.swing.JMenuItem.!JMenuItem( java.lang.String )
 263: * ->  145 loopIndependentDefUseDependence menu$0.!add( javax.swing.JMenuItem )
 264: * ->  147 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 265: * ->  149 loopIndependentDefUseDependence exitItem$13.!addActionListener( java.awt.event.ActionListener )
 266: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 267: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 268: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 269: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 270: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 271: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 272: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 273: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 274: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 275: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 276: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 277: * -> * outputDependence javax.swing.JMenuItem.!JMenuItem( java.lang.String )
 278: * -> * outputDependence javax.swing.JMenuItem.!JMenuItem( java.lang.String )
 279: * -> * outputDependence javax.swing.JMenuItem.!JMenuItem( java.lang.String )
 280: * -> * outputDependence javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged
 281: * -> * outputDependence javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged
 282: * -> * outputDependence javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged
 283: * -> * outputDependence menu$0.!add( javax.swing.Action )
 284: * -> * outputDependence menu$0.!add( javax.swing.Action )
 285: * -> * outputDependence menu$0.!add( javax.swing.JMenuItem )
 286: * -> * outputDependence menu$0.!add( javax.swing.JMenuItem )
 287: * -> * outputDependence menu$0.!add( javax.swing.JMenuItem )
 288: * -> * outputDependence menu$0.!addSeparator( )
 289: * -> * outputDependence menu$0.!addSeparator( )
 290: * -> * outputDependence menu$0.!javax.swing.JMenu.popupListener
 291: * -> * outputDependence menu$0.!javax.swing.JMenu.popupListener
 292: * -> * outputDependence menu$0.!javax.swing.JMenu.popupListener
 293: * -> * outputDependence menu$0.!javax.swing.JMenu.popupListener
 294: * -> * outputDependence menu$0.!javax.swing.JMenu.popupListener
 295: * -> * outputDependence menu$0.!javax.swing.JMenu.popupListener
--
   0: updateUndoState( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->   26 trueControlDependence
   7:    1 ->    5 declaration
   8:    1 ->    5 loopIndependentDefUseDependence canvas$0
   9:    1 ->    9 declaration
  10:    1 ->    9 loopIndependentDefUseDependence canvas$0
  11:    4 ->    1 loopIndependentDefUseDependence this.tabbedCanvas.!getCurrentCanvas( )
  12:    5 ->    6 trueControlDependence
  13:    5 ->    8 falseControlDependence
  14:    5 ->    9 falseControlDependence
  15:    5 ->   10 falseControlDependence
  16:    5 ->   11 falseControlDependence
  17:    5 ->   12 falseControlDependence
  18:    5 ->   13 falseControlDependence
  19:    5 ->   14 falseControlDependence
  20:    5 ->   15 falseControlDependence
  21:    6 ->    8 fallThroughControlDependence
  22:    6 ->    9 fallThroughControlDependence
  23:    6 ->   10 fallThroughControlDependence
  24:    6 ->   11 fallThroughControlDependence
  25:    6 ->   12 fallThroughControlDependence
  26:    6 ->   13 fallThroughControlDependence
  27:    6 ->   14 fallThroughControlDependence
  28:    6 ->   15 fallThroughControlDependence
  29:    8 ->   12 declaration
  30:    8 ->   12 loopIndependentDefUseDependence undoManager$1
  31:    8 ->   13 declaration
  32:    8 ->   13 loopIndependentDefUseDependence undoManager$1
  33:   11 ->    8 loopIndependentDefUseDependence canvas$0.!getUndoManager( )
  34:   12 ->   16 trueControlDependence
  35:   12 ->   17 trueControlDependence
  36:   12 ->   18 trueControlDependence
  37:   12 ->   19 trueControlDependence
  38:   12 ->   20 falseControlDependence
  39:   12 ->   21 falseControlDependence
  40:   12 ->   22 falseControlDependence
  41:   12 ->   23 falseControlDependence
  42:   15 ->   12 loopIndependentDefUseDependence undoManager$1.!canUndo( )
  43:   19 ->   16 loopIndependentDefUseDependence this.undoAction.!setEnabled( boolean )
  44:   23 ->   20 loopIndependentDefUseDependence this.undoAction.!setEnabled( boolean )
--
   0: saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1:    0 ->    2 trueControlDependence
   2:    0 ->    4 trueControlDependence
   3:    0 ->    5 trueControlDependence
   4:    0 ->    6 trueControlDependence
   5:    0 ->    7 trueControlDependence
   6:    0 ->    8 trueControlDependence
   7:    0 ->    9 trueControlDependence
   8:    0 ->   10 trueControlDependence
   9:    0 ->   11 trueControlDependence
  10:    0 ->   12 trueControlDependence
  11:    0 ->   13 trueControlDependence
  12:    2 ->    6 loopIndependentDefUseDependence canvas$0
  13:    2 ->    9 loopIndependentDefUseDependence canvas$0
  14:    3 ->   16 loopIndependentDefUseDependence $_
  15:    5 ->    1 exceptionCatch
  16:    5 ->    3 trueControlDependence
  17:    5 ->   16 trueControlDependence
  18:    5 -> * trueControlDependence
  19:   11 ->    8 loopIndependentDefUseDependence canvas$0.!getFigureManager( )
  20:   13 ->    7 loopIndependentDefUseDependence canvas$0.!getFigureManager( ).!getFilename( )
  21: * ->    3 loopIndependentDefUseDependence this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String )
--
   0: buildRecentFileMenu( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    5 trueControlDependence
   5:    0 ->   19 trueControlDependence
   6:    0 -> * trueControlDependence
   7:    5 ->    5 defOrderDependence filename$0
   8:    5 ->    6 trueControlDependence
   9:    5 ->    7 trueControlDependence
  10:    5 ->    8 loopIndependentDefUseDependence filename$0
  11:    5 ->    8 trueControlDependence
  12:    5 ->   10 trueControlDependence
  13:    5 ->   11 trueControlDependence
  14:    5 ->   12 trueControlDependence
  15:    5 ->   14 trueControlDependence
  16:    5 ->   15 trueControlDependence
  17:    5 ->   16 trueControlDependence
  18:    5 -> * trueControlDependence
  19:    5 -> * trueControlDependence
  20:    5 -> * trueControlDependence
  21:    6 ->    6 defOrderDependence fileItem$2
  22:    6 ->   12 declaration
  23:    6 ->   12 loopIndependentDefUseDependence fileItem$2
  24:    6 ->   15 declaration
  25:    6 ->   15 loopIndependentDefUseDependence fileItem$2
  26: * ->    1 loopIndependentDefUseDependence this.fileListMenu.!removeAll( )
  27: * ->    6 loopIndependentDefUseDependence javax.swing.JMenuItem.!JMenuItem( java.lang.String )
  28: * ->   10 loopIndependentDefUseDependence this.fileListMenu.!add( javax.swing.JMenuItem )
  29: * ->   12 loopIndependentDefUseDependence this.fileListMenu.!javax.swing.JMenu.popupMenu
  30: * ->   14 loopIndependentDefUseDependence fileItem$2.!addActionListener( java.awt.event.ActionListener )
  31: * ->   16 loopIndependentDefUseDependence fileItem$2.!javax.swing.event.EventListenerList.listenerList
  32: * -> * defOrderDependence fileItem$2.!addActionListener( java.awt.event.ActionListener )
  33: * -> * defOrderDependence javax.swing.JMenuItem.!JMenuItem( java.lang.String )
  34: * -> * defOrderDependence javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged
  35: * -> * defOrderDependence this.fileListMenu.!add( javax.swing.JMenuItem )
  36: * -> * defOrderDependence this.fileListMenu.!javax.swing.JMenu.popupListener
  37: * -> * loopIndependentDefUseDependence fileItem$2.!javax.swing.event.EventListenerList.listenerList
  38: * -> * loopIndependentDefUseDependence this.fileListMenu.!javax.swing.JMenu.popupMenu
--
   0: openFile( java.lang.String )
   1:    0 ->    3 trueControlDependence
   2:    0 ->    4 trueControlDependence
   3:    0 ->    5 trueControlDependence
   4:    0 ->    6 trueControlDependence
   5:    0 ->    7 trueControlDependence
   6:    0 ->    8 trueControlDependence
   7:    0 ->    9 trueControlDependence
   8:    0 ->   10 trueControlDependence
   9:    0 ->   11 trueControlDependence
  10:    0 ->   12 trueControlDependence
  11:    0 ->   13 trueControlDependence
  12:    3 ->    7 loopIndependentDefUseDependence filename$0
  13:    3 ->   12 loopIndependentDefUseDependence filename$0
  14:    3 ->   20 loopIndependentDefUseDependence filename$0
  15:    3 ->   34 loopIndependentDefUseDependence filename$0
  16:    3 ->   43 loopIndependentDefUseDependence filename$0
  17:    3 ->   48 loopIndependentDefUseDependence filename$0
  18:    3 ->   59 loopIndependentDefUseDependence filename$0
  19:    4 ->   15 declaration
  20:    4 ->   15 loopIndependentDefUseDependence canvas$1
  21:    4 ->   31 declaration
  22:    4 ->   31 outputDependence canvas$1
  23:    4 ->   39 declaration
  24:    4 ->   39 loopIndependentDefUseDependence canvas$1
  25:    4 ->   53 declaration
  26:    4 ->   53 loopIndependentDefUseDependence canvas$1
  27:    4 ->   62 declaration
  28:    4 ->   62 loopIndependentDefUseDependence canvas$1
  29:    8 ->    4 loopIndependentDefUseDependence this.tabbedCanvas.!getCanvas( java.lang.String )
  30:    8 ->   13 outputDependence this.tabbedCanvas.!getCanvas( java.lang.String )
  31:    9 ->   14 trueControlDependence
  32:    9 ->   15 trueControlDependence
  33:    9 ->   16 trueControlDependence
  34:    9 ->   17 trueControlDependence
  35:    9 ->   31 falseControlDependence
  36:    9 ->   32 falseControlDependence
  37:    9 ->   33 falseControlDependence
  38:    9 ->   34 falseControlDependence
  39:    9 -> * falseControlDependence
  40:    9 -> * falseControlDependence
  41:    9 -> * falseControlDependence
  42:    9 -> * falseControlDependence
  43:    9 -> * falseControlDependence
  44:    9 -> * falseControlDependence
  45:    9 -> * falseControlDependence
  46:    9 -> * falseControlDependence
  47:    9 -> * falseControlDependence
  48:    9 -> * falseControlDependence
  49:    9 -> * falseControlDependence
  50:    9 -> * falseControlDependence
  51:   13 ->    9 loopIndependentDefUseDependence this.tabbedCanvas.!getCanvas( java.lang.String )
  52:   14 ->   19 trueControlDependence
  53:   14 ->   20 trueControlDependence
  54:   14 ->   24 falseControlDependence
  55:   14 ->   25 falseControlDependence
  56:   17 ->   14 loopIndependentDefUseDependence canvas$1.!hasChanged( )
  57:   20 ->    1 exceptionCatch
  58:   20 ->   18 trueControlDependence
  59:   20 ->   21 trueControlDependence
  60:   20 ->   22 trueControlDependence
  61:   21 ->   18 loopIndependentDefUseDependence this.!showMessageDialog( java.awt.Component java.lang.Object )
  62:   21 ->   49 outputDependence this.!showMessageDialog( java.awt.Component java.lang.Object )
  63:   22 ->   24 fallThroughControlDependence
  64:   22 ->   25 fallThroughControlDependence
  65:   22 ->   38 trueControlDependence
  66:   22 ->   39 trueControlDependence
  67:   22 ->   40 trueControlDependence
  68:   22 ->   41 trueControlDependence
  69:   22 ->   42 trueControlDependence
  70:   22 ->   43 trueControlDependence
  71:   22 ->   50 outputDependence $_
  72:   22 ->   65 outputDependence $_
  73:   23 ->   27 declaration
  74:   23 ->   27 loopIndependentDefUseDependence confirm$2
  75:   25 ->    1 exceptionCatch
  76:   25 ->   23 trueControlDependence
  77:   25 ->   26 trueControlDependence
  78:   25 ->   27 trueControlDependence
  79:   26 ->   23 loopIndependentDefUseDependence this.!showConfirmDialog( java.awt.Component java.lang.Object java.lang.String int )
  80:   27 ->   28 trueControlDependence
  81:   27 ->   38 falseControlDependence
  82:   27 ->   39 falseControlDependence
  83:   27 ->   40 falseControlDependence
  84:   27 ->   41 falseControlDependence
  85:   27 ->   42 falseControlDependence
  86:   27 ->   43 falseControlDependence
  87:   28 ->   38 fallThroughControlDependence
  88:   28 ->   39 fallThroughControlDependence
  89:   28 ->   40 fallThroughControlDependence
  90:   28 ->   41 fallThroughControlDependence
  91:   28 ->   42 fallThroughControlDependence
  92:   28 ->   43 fallThroughControlDependence
  93:   28 ->   67 loopIndependentDefUseDependence $_
  94:   28 ->   67 trueControlDependence
  95:   31 ->   39 loopIndependentDefUseDependence canvas$1
  96:   31 ->   53 loopIndependentDefUseDependence canvas$1
  97:   31 ->   62 loopIndependentDefUseDependence canvas$1
  98:   37 ->   45 declaration
  99:   37 ->   45 loopIndependentDefUseDependence result$3
 100:   41 ->   38 loopIndependentDefUseDependence canvas$1.!getFigureManager( )
 101:   42 ->    2 exceptionCatch
 102:   42 ->   37 trueControlDependence
 103:   42 ->   45 trueControlDependence
 104:   42 -> * trueControlDependence
 105:   42 -> * trueControlDependence
 106:   42 -> * trueControlDependence
 107:   42 -> * trueControlDependence
 108:   42 -> * trueControlDependence
 109:   45 ->   47 trueControlDependence
 110:   45 ->   48 trueControlDependence
 111:   45 ->   52 falseControlDependence
 112:   45 ->   53 falseControlDependence
 113:   45 ->   54 falseControlDependence
 114:   45 ->   55 falseControlDependence
 115:   45 ->   56 falseControlDependence
 116:   45 ->   57 falseControlDependence
 117:   45 ->   58 falseControlDependence
 118:   45 ->   59 falseControlDependence
 119:   45 ->   61 falseControlDependence
 120:   45 ->   62 falseControlDependence
 121:   45 ->   63 falseControlDependence
 122:   45 ->   64 falseControlDependence
 123:   45 ->   65 falseControlDependence
 124:   45 -> * falseControlDependence
 125:   45 -> * falseControlDependence
 126:   48 ->    1 exceptionCatch
 127:   48 ->   46 trueControlDependence
 128:   48 ->   49 trueControlDependence
 129:   48 ->   50 trueControlDependence
 130:   48 ->   67 trueControlDependence
 131:   49 ->   46 loopIndependentDefUseDependence this.!showMessageDialog( java.awt.Component java.lang.Object )
 132:   50 ->   52 fallThroughControlDependence
 133:   50 ->   53 fallThroughControlDependence
 134:   50 ->   54 fallThroughControlDependence
 135:   50 ->   55 fallThroughControlDependence
 136:   50 ->   56 fallThroughControlDependence
 137:   50 ->   57 fallThroughControlDependence
 138:   50 ->   58 fallThroughControlDependence
 139:   50 ->   59 fallThroughControlDependence
 140:   50 ->   61 fallThroughControlDependence
 141:   50 ->   62 fallThroughControlDependence
 142:   50 ->   63 fallThroughControlDependence
 143:   50 ->   64 fallThroughControlDependence
 144:   50 ->   65 fallThroughControlDependence
 145:   50 ->   67 loopIndependentDefUseDependence $_
 146:   50 -> * fallThroughControlDependence
 147:   50 -> * fallThroughControlDependence
 148:   56 ->   52 loopIndependentDefUseDependence canvas$1.!setChanged( boolean )
 149:   64 ->   61 loopIndependentDefUseDependence canvas$1.!repaint( )
 150:   65 ->   67 loopIndependentDefUseDependence $_
 151: * ->   31 loopIndependentDefUseDependence this.tabbedCanvas.!openTab( java.lang.String )
 152: * ->   37 loopIndependentDefUseDependence canvas$1.!getFigureManager( ).!load( java.lang.String )
 153: * ->   40 loopIndependentDefUseDependence this.tabbedCanvas.!openTab( java.lang.String ).figureManager
 154: * ->   41 loopIndependentDefUseDependence this.tabbedCanvas.!openTab( java.lang.String ).figureManager
 155: * ->   57 loopIndependentDefUseDependence this.tool.!setTitle( java.lang.String )
 156: * -> * outputDependence this.tabbedCanvas.!openTab( java.lang.String ).figureManager
 157: * -> * outputDependence this.tabbedCanvas.!openTab( java.lang.String ).figures
 158: * -> * outputDependence this.tabbedCanvas.!openTab( java.lang.String ).filename
--
   0: openAction
   1:    0 ->    1 trueControlDependence
--
   0: closeFile( )
   1:    0 ->    2 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    0 ->    5 trueControlDependence
   5:    0 ->    7 trueControlDependence
   6:    0 ->    8 trueControlDependence
   7:    0 ->    9 trueControlDependence
   8:    2 ->    9 declaration
   9:    2 ->    9 loopIndependentDefUseDependence canvas$0
  10:    5 ->    2 loopIndependentDefUseDependence this.tabbedCanvas.!getCurrentCanvas( )
  11:    8 ->    1 exceptionCatch
  12:    8 ->    6 trueControlDependence
  13:    8 ->   12 trueControlDependence
  14:    8 -> * trueControlDependence
  15:    8 -> * trueControlDependence
  16: * ->    6 loopIndependentDefUseDependence this.!closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
--
   0: initEditMenu( javax.swing.JMenu )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    0 ->    7 trueControlDependence
   7:    0 ->    8 trueControlDependence
   8:    0 ->    9 trueControlDependence
   9:    0 ->   10 trueControlDependence
  10:    0 ->   11 trueControlDependence
  11:    0 ->   12 trueControlDependence
  12:    0 ->   14 trueControlDependence
  13:    0 ->   15 trueControlDependence
  14:    0 ->   16 trueControlDependence
  15:    0 ->   17 trueControlDependence
  16:    0 ->   18 trueControlDependence
  17:    0 ->   19 trueControlDependence
  18:    0 ->   21 trueControlDependence
  19:    0 ->   22 trueControlDependence
  20:    0 ->   23 trueControlDependence
  21:    0 ->   24 trueControlDependence
  22:    0 ->   25 trueControlDependence
  23:    0 ->   26 trueControlDependence
  24:    0 ->   27 trueControlDependence
  25:    0 ->   29 trueControlDependence
  26:    0 ->   30 trueControlDependence
  27:    0 ->   31 trueControlDependence
  28:    0 ->   32 trueControlDependence
  29:    0 ->   33 trueControlDependence
  30:    0 ->   34 trueControlDependence
  31:    0 ->   35 trueControlDependence
  32:    0 ->   37 trueControlDependence
  33:    0 ->   38 trueControlDependence
  34:    0 ->   39 trueControlDependence
  35:    0 ->   40 trueControlDependence
  36:    0 ->   41 trueControlDependence
  37:    0 ->   42 trueControlDependence
  38:    0 ->   44 trueControlDependence
  39:    0 ->   45 trueControlDependence
  40:    0 ->   46 trueControlDependence
  41:    0 ->   47 trueControlDependence
  42:    0 ->   48 trueControlDependence
  43:    0 ->   49 trueControlDependence
  44:    0 ->   50 trueControlDependence
  45:    0 ->   52 trueControlDependence
  46:    0 ->   53 trueControlDependence
  47:    0 ->   54 trueControlDependence
  48:    0 ->   56 trueControlDependence
  49:    0 ->   57 trueControlDependence
  50:    0 ->   58 trueControlDependence
  51:    0 ->   59 trueControlDependence
  52:    0 ->   60 trueControlDependence
  53:    0 ->   61 trueControlDependence
  54:    0 ->   62 trueControlDependence
  55:    0 ->   64 trueControlDependence
  56:    0 ->   65 trueControlDependence
  57:    0 ->   66 trueControlDependence
  58:    0 ->   67 trueControlDependence
  59:    0 ->   68 trueControlDependence
  60:    0 ->   69 trueControlDependence
  61:    0 ->   71 trueControlDependence
  62:    0 ->   72 trueControlDependence
  63:    0 ->   73 trueControlDependence
  64:    0 ->   74 trueControlDependence
  65:    0 ->   75 trueControlDependence
  66:    0 ->   76 trueControlDependence
  67:    0 ->   77 trueControlDependence
  68:    0 ->   79 trueControlDependence
  69:    0 ->   80 trueControlDependence
  70:    0 ->   81 trueControlDependence
  71:    0 ->   82 trueControlDependence
  72:    0 ->   83 trueControlDependence
  73:    0 ->   84 trueControlDependence
  74:    0 ->   85 trueControlDependence
  75:    0 ->   87 trueControlDependence
  76:    0 ->   88 trueControlDependence
  77:    0 ->   89 trueControlDependence
  78:    0 ->   90 trueControlDependence
  79:    0 ->   91 trueControlDependence
  80:    0 ->   92 trueControlDependence
  81:    0 ->   94 trueControlDependence
  82:    0 ->   95 trueControlDependence
  83:    0 ->   96 trueControlDependence
  84:    0 ->   97 trueControlDependence
  85:    0 ->   98 trueControlDependence
  86:    0 ->   99 trueControlDependence
  87:    0 ->  100 trueControlDependence
  88:    0 ->  102 trueControlDependence
  89:    0 ->  103 trueControlDependence
  90:    0 ->  104 trueControlDependence
  91:    0 ->  105 trueControlDependence
  92:    0 ->  106 trueControlDependence
  93:    0 ->  107 trueControlDependence
  94:    0 ->  108 trueControlDependence
  95:    0 ->  110 trueControlDependence
  96:    0 ->  111 trueControlDependence
  97:    0 ->  112 trueControlDependence
  98:    0 ->  113 trueControlDependence
  99:    0 ->  114 trueControlDependence
 100:    0 ->  115 trueControlDependence
 101:    0 ->  117 trueControlDependence
 102:    0 ->  118 trueControlDependence
 103:    0 ->  119 trueControlDependence
 104:    0 ->  120 trueControlDependence
 105:    0 ->  121 trueControlDependence
 106:    0 ->  122 trueControlDependence
 107:    0 ->  123 trueControlDependence
 108:    0 ->  125 trueControlDependence
 109:    0 ->  126 trueControlDependence
 110:    0 ->  127 trueControlDependence
 111:    0 ->  129 trueControlDependence
 112:    0 ->  130 trueControlDependence
 113:    0 ->  131 trueControlDependence
 114:    0 ->  132 trueControlDependence
 115:    0 ->  133 trueControlDependence
 116:    0 ->  134 trueControlDependence
 117:    0 ->  135 trueControlDependence
 118:    0 ->  137 trueControlDependence
 119:    0 ->  138 trueControlDependence
 120:    0 ->  139 trueControlDependence
 121:    0 ->  140 trueControlDependence
 122:    0 ->  141 trueControlDependence
 123:    0 ->  142 trueControlDependence
 124:    0 ->  144 trueControlDependence
 125:    0 ->  145 trueControlDependence
 126:    0 ->  146 trueControlDependence
 127:    0 ->  147 trueControlDependence
 128:    0 ->  149 trueControlDependence
 129:    0 -> * trueControlDependence
 130:    0 -> * trueControlDependence
 131:    0 -> * trueControlDependence
 132:    0 -> * trueControlDependence
 133:    0 -> * trueControlDependence
 134:    0 -> * trueControlDependence
 135:    0 -> * trueControlDependence
 136:    0 -> * trueControlDependence
 137:    0 -> * trueControlDependence
 138:    0 -> * trueControlDependence
 139:    0 -> * trueControlDependence
 140:    0 -> * trueControlDependence
 141:    0 -> * trueControlDependence
 142:    0 -> * trueControlDependence
 143:    0 -> * trueControlDependence
 144:    0 -> * trueControlDependence
 145:    0 -> * trueControlDependence
 146:    0 -> * trueControlDependence
 147:    0 -> * trueControlDependence
 148:    0 -> * trueControlDependence
 149:    1 ->    3 loopIndependentDefUseDependence menu$0
 150:    1 ->   26 loopIndependentDefUseDependence menu$0
 151:    1 ->   49 loopIndependentDefUseDependence menu$0
 152:    1 ->   53 loopIndependentDefUseDependence menu$0
 153:    1 ->   76 loopIndependentDefUseDependence menu$0
 154:    1 ->   99 loopIndependentDefUseDependence menu$0
 155:    1 ->  122 loopIndependentDefUseDependence menu$0
 156:    1 ->  126 loopIndependentDefUseDependence menu$0
 157:    2 ->    7 declaration
 158:    2 ->    7 loopIndependentDefUseDependence undoItem$1
 159:    2 ->   11 declaration
 160:    2 ->   11 loopIndependentDefUseDependence undoItem$1
 161:    2 ->   15 declaration
 162:    2 ->   15 loopIndependentDefUseDependence undoItem$1
 163:    9 ->    6 loopIndependentDefUseDependence undoItem$1.!setMnemonic( char )
 164:   19 ->   16 loopIndependentDefUseDependence this.!getKeyStroke( int int boolean )
 165:   19 ->   42 outputDependence this.!getKeyStroke( int int boolean )
 166:   24 ->   21 loopIndependentDefUseDependence this.undoAction.!setEnabled( boolean )
 167:   25 ->   30 declaration
 168:   25 ->   30 loopIndependentDefUseDependence redoItem$2
 169:   25 ->   34 declaration
 170:   25 ->   34 loopIndependentDefUseDependence redoItem$2
 171:   25 ->   38 declaration
 172:   25 ->   38 loopIndependentDefUseDependence redoItem$2
 173:   32 ->   29 loopIndependentDefUseDependence redoItem$2.!setMnemonic( char )
 174:   42 ->   39 loopIndependentDefUseDependence this.!getKeyStroke( int int boolean )
 175:   42 ->   69 outputDependence this.!getKeyStroke( int int boolean )
 176:   47 ->   44 loopIndependentDefUseDependence this.redoAction.!setEnabled( boolean )
 177:   52 ->   57 declaration
 178:   52 ->   57 loopIndependentDefUseDependence cutItem$3
 179:   52 ->   61 declaration
 180:   52 ->   61 loopIndependentDefUseDependence cutItem$3
 181:   52 ->   65 declaration
 182:   52 ->   65 loopIndependentDefUseDependence cutItem$3
 183:   52 ->   72 declaration
 184:   52 ->   72 loopIndependentDefUseDependence cutItem$3
 185:   59 ->   56 loopIndependentDefUseDependence cutItem$3.!setMnemonic( char )
 186:   69 ->   66 loopIndependentDefUseDependence this.!getKeyStroke( int int boolean )
 187:   69 ->   92 outputDependence this.!getKeyStroke( int int boolean )
 188:   74 ->   71 loopIndependentDefUseDependence cutItem$3.!setEnabled( boolean )
 189:   75 ->   80 declaration
 190:   75 ->   80 loopIndependentDefUseDependence copyItem$4
 191:   75 ->   84 declaration
 192:   75 ->   84 loopIndependentDefUseDependence copyItem$4
 193:   75 ->   88 declaration
 194:   75 ->   88 loopIndependentDefUseDependence copyItem$4
 195:   75 ->   95 declaration
 196:   75 ->   95 loopIndependentDefUseDependence copyItem$4
 197:   82 ->   79 loopIndependentDefUseDependence copyItem$4.!setMnemonic( char )
 198:   92 ->   89 loopIndependentDefUseDependence this.!getKeyStroke( int int boolean )
 199:   92 ->  115 outputDependence this.!getKeyStroke( int int boolean )
 200:   97 ->   94 loopIndependentDefUseDependence copyItem$4.!setEnabled( boolean )
 201:   98 ->  103 declaration
 202:   98 ->  103 loopIndependentDefUseDependence pasteItem$5
 203:   98 ->  107 declaration
 204:   98 ->  107 loopIndependentDefUseDependence pasteItem$5
 205:   98 ->  111 declaration
 206:   98 ->  111 loopIndependentDefUseDependence pasteItem$5
 207:   98 ->  118 declaration
 208:   98 ->  118 loopIndependentDefUseDependence pasteItem$5
 209:  105 ->  102 loopIndependentDefUseDependence pasteItem$5.!setMnemonic( char )
 210:  115 ->  112 loopIndependentDefUseDependence this.!getKeyStroke( int int boolean )
 211:  115 ->  142 outputDependence this.!getKeyStroke( int int boolean )
 212:  120 ->  117 loopIndependentDefUseDependence pasteItem$5.!setEnabled( boolean )
 213:  125 ->  130 declaration
 214:  125 ->  130 loopIndependentDefUseDependence deleteItem$6
 215:  125 ->  134 declaration
 216:  125 ->  134 loopIndependentDefUseDependence deleteItem$6
 217:  125 ->  138 declaration
 218:  125 ->  138 loopIndependentDefUseDependence deleteItem$6
 219:  125 ->  145 declaration
 220:  125 ->  145 loopIndependentDefUseDependence deleteItem$6
 221:  132 ->  129 loopIndependentDefUseDependence deleteItem$6.!setMnemonic( char )
 222:  142 ->  139 loopIndependentDefUseDependence this.!getKeyStroke( int int boolean )
 223:  147 ->  144 loopIndependentDefUseDependence deleteItem$6.!setEnabled( boolean )
 224: * ->    2 loopIndependentDefUseDependence menu$0.!add( javax.swing.Action )
 225: * ->   10 loopIndependentDefUseDependence undoItem$1.!setIcon( javax.swing.Icon )
 226: * ->   14 loopIndependentDefUseDependence undoItem$1.!setAccelerator( javax.swing.KeyStroke )
 227: * ->   25 loopIndependentDefUseDependence menu$0.!add( javax.swing.Action )
 228: * ->   27 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 229: * ->   27 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 230: * ->   33 loopIndependentDefUseDependence redoItem$2.!setIcon( javax.swing.Icon )
 231: * ->   37 loopIndependentDefUseDependence redoItem$2.!setAccelerator( javax.swing.KeyStroke )
 232: * ->   48 loopIndependentDefUseDependence menu$0.!addSeparator( )
 233: * ->   52 loopIndependentDefUseDependence menu$0.!add( javax.swing.Action )
 234: * ->   54 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 235: * ->   54 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 236: * ->   54 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 237: * ->   60 loopIndependentDefUseDependence cutItem$3.!setIcon( javax.swing.Icon )
 238: * ->   64 loopIndependentDefUseDependence cutItem$3.!setAccelerator( javax.swing.KeyStroke )
 239: * ->   75 loopIndependentDefUseDependence menu$0.!add( javax.swing.Action )
 240: * ->   77 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 241: * ->   77 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 242: * ->   77 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 243: * ->   83 loopIndependentDefUseDependence copyItem$4.!setIcon( javax.swing.Icon )
 244: * ->   87 loopIndependentDefUseDependence copyItem$4.!setAccelerator( javax.swing.KeyStroke )
 245: * ->   98 loopIndependentDefUseDependence menu$0.!add( javax.swing.Action )
 246: * ->  100 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 247: * ->  100 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 248: * ->  100 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 249: * ->  106 loopIndependentDefUseDependence pasteItem$5.!setIcon( javax.swing.Icon )
 250: * ->  110 loopIndependentDefUseDependence pasteItem$5.!setAccelerator( javax.swing.KeyStroke )
 251: * ->  121 loopIndependentDefUseDependence menu$0.!addSeparator( )
 252: * ->  123 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 253: * ->  125 loopIndependentDefUseDependence menu$0.!add( javax.swing.Action )
 254: * ->  127 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 255: * ->  127 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 256: * ->  127 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 257: * ->  133 loopIndependentDefUseDependence deleteItem$6.!setIcon( javax.swing.Icon )
 258: * ->  137 loopIndependentDefUseDependence deleteItem$6.!setAccelerator( javax.swing.KeyStroke )
 259: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 260: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 261: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 262: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 263: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 264: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 265: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 266: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 267: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 268: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 269: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 270: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 271: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 272: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 273: * -> * loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 274: * -> * outputDependence menu$0.!add( javax.swing.Action )
 275: * -> * outputDependence menu$0.!add( javax.swing.Action )
 276: * -> * outputDependence menu$0.!add( javax.swing.Action )
 277: * -> * outputDependence menu$0.!add( javax.swing.Action )
 278: * -> * outputDependence menu$0.!add( javax.swing.Action )
 279: * -> * outputDependence menu$0.!addSeparator( )
 280: * -> * outputDependence menu$0.!javax.swing.JMenu.popupListener
--
----- ClDG (to here) -----

