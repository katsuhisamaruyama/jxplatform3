----- ClDG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.DrawMenu
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.DrawMenu.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.DrawMenu.serialVersionUID }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#toolBar ]
   1 fieldDeclaration D = { this.toolBar } U = { this.toolBar }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#copyAction ]
   1 fieldDeclaration D = { this.copyAction } U = { this.copyAction }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#initFileActions( ) ]
   1 assignment D = { this.newAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
   6 receiver D = {  } U = {  }
   7 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
   8 receiver D = {  } U = { this.!getClass( ) }
   9 receiver D = {  } U = {  }
  10 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  11 actualOut D = { this.!getClass( ) } U = {  }
  12 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  13 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
  14 actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  15 actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  16 assignment D = { this.openAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
  17 receiver D = {  } U = {  }
  18 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  19 actualIn D = {  } U = { $java.lang.String }
  20 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
  21 receiver D = {  } U = {  }
  22 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  23 receiver D = {  } U = { this.!getClass( ) }
  24 receiver D = {  } U = {  }
  25 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  26 actualOut D = { this.!getClass( ) } U = {  }
  27 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  28 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
  29 actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  30 actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  31 assignment D = { this.saveAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
  32 receiver D = {  } U = {  }
  33 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  34 actualIn D = {  } U = { $java.lang.String }
  35 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
  36 receiver D = {  } U = {  }
  37 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  38 receiver D = {  } U = { this.!getClass( ) }
  39 receiver D = {  } U = {  }
  40 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  41 actualOut D = { this.!getClass( ) } U = {  }
  42 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  43 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
  44 actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  45 actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  47 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#createPopup( javax.swing.JPopupMenu ) ]
   1 formalIn D = { popup$0 } U = {  }
   2 localDeclaration D = { undoMenuItem$1 } U = { popup$0.!add( javax.swing.Action ) }
   3 receiver D = {  } U = { popup$0 }
   4 methodCall D = {  } U = { popup$0.!javax.swing.AbstractButton.action, popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.undoAction } TO = javax.swing.JPopupMenu#add( javax.swing.Action )
   5 actualOut D = { popup$0.!add( javax.swing.Action ), popup$0.!javax.swing.AbstractButton.action, popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { popup$0.!javax.swing.AbstractButton.action, popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
   6 assignment D = {  } U = { undoMenuItem$1.!setIcon( javax.swing.Icon ) }
   7 receiver D = {  } U = { undoMenuItem$1 }
   8 methodCall D = {  } U = { popup$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, popup$0.!add( javax.swing.Action ).!java.awt.Component.height, popup$0.!add( javax.swing.Action ).!java.awt.Component.width, popup$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, popup$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, undoMenuItem$1.!java.awt.Component.changeSupport, undoMenuItem$1.!java.awt.Component.height, undoMenuItem$1.!java.awt.Component.width, undoMenuItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, undoMenuItem$1.!javax.swing.AbstractButton.accessibleContext, undoMenuItem$1.!javax.swing.AbstractButton.defaultIcon, undoMenuItem$1.!javax.swing.AbstractButton.disabledIcon, undoMenuItem$1.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
   9 actualOut D = { undoMenuItem$1.!javax.swing.AbstractButton.defaultIcon, undoMenuItem$1.!javax.swing.AbstractButton.disabledIcon, undoMenuItem$1.!setIcon( javax.swing.Icon ) } U = { popup$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, popup$0.!add( javax.swing.Action ).!java.awt.Component.height, popup$0.!add( javax.swing.Action ).!java.awt.Component.width, popup$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, popup$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, undoMenuItem$1.!java.awt.Component.changeSupport, undoMenuItem$1.!java.awt.Component.height, undoMenuItem$1.!java.awt.Component.width, undoMenuItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, undoMenuItem$1.!javax.swing.AbstractButton.accessibleContext, undoMenuItem$1.!javax.swing.AbstractButton.defaultIcon, undoMenuItem$1.!javax.swing.AbstractButton.disabledIcon, undoMenuItem$1.!javax.swing.JComponent.revalidateRunnableScheduled }
  10 assignment D = {  } U = { popup$0.!add( javax.swing.JMenuItem ) }
  11 receiver D = {  } U = { popup$0 }
  12 methodCall D = {  } U = { undoMenuItem$1 } TO = javax.swing.JPopupMenu#add( javax.swing.JMenuItem )
  13 actualOut D = { popup$0.!add( javax.swing.JMenuItem ) } U = {  }
  14 localDeclaration D = { redoMenuItem$2 } U = { popup$0.!add( javax.swing.Action ) }
  15 receiver D = {  } U = { popup$0 }
  16 methodCall D = {  } U = { popup$0.!javax.swing.AbstractButton.action, popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.redoAction } TO = javax.swing.JPopupMenu#add( javax.swing.Action )
  17 actualOut D = { popup$0.!add( javax.swing.Action ), popup$0.!javax.swing.AbstractButton.action, popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { popup$0.!javax.swing.AbstractButton.action, popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  18 assignment D = {  } U = { redoMenuItem$2.!setIcon( javax.swing.Icon ) }
  19 receiver D = {  } U = { redoMenuItem$2 }
  20 methodCall D = {  } U = { popup$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, popup$0.!add( javax.swing.Action ).!java.awt.Component.height, popup$0.!add( javax.swing.Action ).!java.awt.Component.width, popup$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, popup$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, redoMenuItem$2.!java.awt.Component.changeSupport, redoMenuItem$2.!java.awt.Component.height, redoMenuItem$2.!java.awt.Component.width, redoMenuItem$2.!javax.accessibility.AccessibleContext.accessibleChangeSupport, redoMenuItem$2.!javax.swing.AbstractButton.accessibleContext, redoMenuItem$2.!javax.swing.AbstractButton.defaultIcon, redoMenuItem$2.!javax.swing.AbstractButton.disabledIcon, redoMenuItem$2.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  21 actualOut D = { redoMenuItem$2.!javax.swing.AbstractButton.defaultIcon, redoMenuItem$2.!javax.swing.AbstractButton.disabledIcon, redoMenuItem$2.!setIcon( javax.swing.Icon ) } U = { popup$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, popup$0.!add( javax.swing.Action ).!java.awt.Component.height, popup$0.!add( javax.swing.Action ).!java.awt.Component.width, popup$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, popup$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, redoMenuItem$2.!java.awt.Component.changeSupport, redoMenuItem$2.!java.awt.Component.height, redoMenuItem$2.!java.awt.Component.width, redoMenuItem$2.!javax.accessibility.AccessibleContext.accessibleChangeSupport, redoMenuItem$2.!javax.swing.AbstractButton.accessibleContext, redoMenuItem$2.!javax.swing.AbstractButton.defaultIcon, redoMenuItem$2.!javax.swing.AbstractButton.disabledIcon, redoMenuItem$2.!javax.swing.JComponent.revalidateRunnableScheduled }
  22 assignment D = {  } U = { popup$0.!add( javax.swing.JMenuItem ) }
  23 receiver D = {  } U = { popup$0 }
  24 methodCall D = {  } U = { redoMenuItem$2 } TO = javax.swing.JPopupMenu#add( javax.swing.JMenuItem )
  25 actualOut D = { popup$0.!add( javax.swing.JMenuItem ) } U = {  }
  27 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#getFileName( boolean ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { open$0 } U = {  }
   3 localDeclaration D = { chooser$1 } U = { javax.swing.JFileChooser.!JFileChooser( ) }
   4 receiver D = {  } U = {  }
   5 constructorCall D = {  } U = {  } TO = javax.swing.JFileChooser#JFileChooser( )
   6 actualOut D = { javax.swing.JFileChooser.!JFileChooser( ), javax.swing.JFileChooser.!javax.swing.JFileChooser.accessibleContext, javax.swing.JFileChooser.!javax.swing.JFileChooser.accessory, javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonMnemonic, javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonText, javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonToolTipText, javax.swing.JFileChooser.!javax.swing.JFileChooser.controlsShown, javax.swing.JFileChooser.!javax.swing.JFileChooser.currentDirectory, javax.swing.JFileChooser.!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogTitle, javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogType, javax.swing.JFileChooser.!javax.swing.JFileChooser.dragEnabled, javax.swing.JFileChooser.!javax.swing.JFileChooser.fileFilter, javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSelectionMode, javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSystemView, javax.swing.JFileChooser.!javax.swing.JFileChooser.fileView, javax.swing.JFileChooser.!javax.swing.JFileChooser.filters, javax.swing.JFileChooser.!javax.swing.JFileChooser.multiSelectionEnabled, javax.swing.JFileChooser.!javax.swing.JFileChooser.returnValue, javax.swing.JFileChooser.!javax.swing.JFileChooser.selectedFile, javax.swing.JFileChooser.!javax.swing.JFileChooser.showFilesListener, javax.swing.JFileChooser.!javax.swing.JFileChooser.useAcceptAllFileFilter, javax.swing.JFileChooser.!javax.swing.JFileChooser.useFileHiding } U = {  }
   7 assignment D = {  } U = { chooser$1.!setDialogTitle( java.lang.String ) }
   8 receiver D = {  } U = { chooser$1 }
   9 methodCall D = {  } U = { $java.lang.String, chooser$1.!java.awt.Component.changeSupport, chooser$1.!java.awt.Dialog.peer, chooser$1.!java.awt.Dialog.title, chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogTitle, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Component.changeSupport, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Dialog.peer, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Dialog.title, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialogTitle } TO = javax.swing.JFileChooser#setDialogTitle( java.lang.String )
  10 actualOut D = { chooser$1.!java.awt.Dialog.title, chooser$1.!javax.swing.JFileChooser.dialogTitle, chooser$1.!setDialogTitle( java.lang.String ) } U = { chooser$1.!java.awt.Component.changeSupport, chooser$1.!java.awt.Dialog.peer, chooser$1.!java.awt.Dialog.title, chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogTitle, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Component.changeSupport, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Dialog.peer, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Dialog.title, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialogTitle }
  11 assignment D = {  } U = { chooser$1.!setCurrentDirectory( java.io.File ) }
  12 receiver D = {  } U = { chooser$1 }
  13 methodCall D = {  } U = { chooser$1.!java.awt.Component.changeSupport, chooser$1.!java.io.File.fs, chooser$1.!java.io.File.path, chooser$1.!javax.swing.JFileChooser.currentDirectory, chooser$1.!javax.swing.JFileChooser.fileSystemView, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Component.changeSupport, javax.swing.JFileChooser.!JFileChooser( ).!java.io.File.fs, javax.swing.JFileChooser.!JFileChooser( ).!java.io.File.path, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.currentDirectory, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.fileSystemView, this.directory } TO = javax.swing.JFileChooser#setCurrentDirectory( java.io.File )
  14 actualOut D = { chooser$1.!javax.swing.JFileChooser.currentDirectory, chooser$1.!setCurrentDirectory( java.io.File ) } U = { chooser$1.!java.awt.Component.changeSupport, chooser$1.!java.io.File.fs, chooser$1.!java.io.File.path, chooser$1.!javax.swing.JFileChooser.currentDirectory, chooser$1.!javax.swing.JFileChooser.fileSystemView, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Component.changeSupport, javax.swing.JFileChooser.!JFileChooser( ).!java.io.File.fs, javax.swing.JFileChooser.!JFileChooser( ).!java.io.File.path, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.currentDirectory, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.fileSystemView }
  15 localDeclaration D = { result$2 } U = {  }
  16 ifSt D = {  } U = { open$0 }
  17 assignment D = { result$2 } U = { chooser$1.!showOpenDialog( java.awt.Component ) }
  18 receiver D = {  } U = { chooser$1 }
  19 methodCall D = {  } U = { chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogType, chooser$1.!javax.swing.JFileChooser.returnValue, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialogType, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.returnValue, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JFileChooser#showOpenDialog( java.awt.Component )
  20 actualOut D = { chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogType, chooser$1.!javax.swing.JFileChooser.returnValue, chooser$1.!showOpenDialog( java.awt.Component ) } U = { chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogType, chooser$1.!javax.swing.JFileChooser.returnValue, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialogType, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.returnValue }
  21 assignment D = { result$2 } U = { chooser$1.!showSaveDialog( java.awt.Component ) }
  22 receiver D = {  } U = { chooser$1 }
  23 methodCall D = {  } U = { chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogType, chooser$1.!javax.swing.JFileChooser.returnValue, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialogType, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.returnValue, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JFileChooser#showSaveDialog( java.awt.Component )
  24 actualOut D = { chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogType, chooser$1.!javax.swing.JFileChooser.returnValue, chooser$1.!showSaveDialog( java.awt.Component ) } U = { chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogType, chooser$1.!javax.swing.JFileChooser.returnValue, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialogType, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.returnValue }
  26 localDeclaration D = { file$3 } U = { chooser$1.!getSelectedFile( ) }
  27 receiver D = {  } U = { chooser$1 }
  28 methodCall D = {  } U = { chooser$1.!javax.swing.JFileChooser.selectedFile, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.selectedFile } TO = javax.swing.JFileChooser#getSelectedFile( )
  29 actualOut D = { chooser$1.!getSelectedFile( ) } U = { chooser$1.!javax.swing.JFileChooser.selectedFile, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.selectedFile }
  30 ifSt D = {  } U = { file$3, result$2, result$2.APPROVE_OPTION }
  31 assignment D = { this.directory } U = { chooser$1.!getCurrentDirectory( ) }
  32 receiver D = {  } U = { chooser$1 }
  33 methodCall D = {  } U = { chooser$1.!javax.swing.JFileChooser.currentDirectory, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.currentDirectory } TO = javax.swing.JFileChooser#getCurrentDirectory( )
  34 actualOut D = { chooser$1.!getCurrentDirectory( ) } U = { chooser$1.!javax.swing.JFileChooser.currentDirectory, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.currentDirectory }
  35 returnSt D = { $_ } U = { file$3.!getPath( ) }
  36 receiver D = {  } U = { file$3 }
  37 methodCall D = {  } U = { chooser$1.!getSelectedFile( ).!java.io.File.path, file$3.!java.io.File.path } TO = java.io.File#getPath( )
  38 actualOut D = { file$3.!getPath( ) } U = { chooser$1.!getSelectedFile( ).!java.io.File.path, file$3.!java.io.File.path }
  40 returnSt D = { $_ } U = {  }
  42 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ) ]
   1 formalIn D = { tool$0 } U = {  }
   2 formalIn D = { tabbedCanvas$1 } U = {  }
   3 assignment D = { this.tool } U = { tool$0, tool$0.menu, tool$0.selector, tool$0.tabbedCanvas }
   4 assignment D = { this.tabbedCanvas } U = { tabbedCanvas$1, tabbedCanvas$1.canvases, tabbedCanvas$1.menu, tabbedCanvas$1.selectedTab, tabbedCanvas$1.selector }
   5 assignment D = { this.menuBar } U = { javax.swing.JMenuBar.!JMenuBar( ) }
   6 receiver D = {  } U = {  }
   7 constructorCall D = {  } U = { javax.swing.JMenuBar.!java.awt.Component.focusTraversalKeysEnabled, javax.swing.JMenuBar.!javax.swing.JMenuBar.selectionModel } TO = javax.swing.JMenuBar#JMenuBar( )
   8 actualOut D = { javax.swing.JMenuBar.!JMenuBar( ), javax.swing.JMenuBar.!java.awt.Component.focusTraversalKeysEnabled, javax.swing.JMenuBar.!javax.swing.DefaultSingleSelectionModel.changeEvent, javax.swing.JMenuBar.!javax.swing.DefaultSingleSelectionModel.index, javax.swing.JMenuBar.!javax.swing.DefaultSingleSelectionModel.listenerList, javax.swing.JMenuBar.!javax.swing.JComponent.inputVerifier, javax.swing.JMenuBar.!javax.swing.JComponent.listenerList, javax.swing.JMenuBar.!javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JMenuBar.!javax.swing.JComponent.verifyInputWhenFocusTarget, javax.swing.JMenuBar.!javax.swing.JMenuBar.margin, javax.swing.JMenuBar.!javax.swing.JMenuBar.paintBorder, javax.swing.JMenuBar.!javax.swing.JMenuBar.selectionModel } U = { javax.swing.JMenuBar.!java.awt.Component.focusTraversalKeysEnabled, javax.swing.JMenuBar.!javax.swing.JMenuBar.selectionModel }
   9 assignment D = {  } U = { this.!initMenuBar( javax.swing.JMenuBar ) }
  10 receiver D = {  } U = {  }
  11 methodCall D = {  } U = { KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK, KeyEvent.VK_DELETE, KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK, KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK, KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK, KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK, KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK, KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK, KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.closeItem$3.!javax.swing.AbstractButton.listenerList, this.closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.copyAction, this.copyItem$4.!javax.swing.AbstractButton.accessibleContext, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutAction, this.cutItem$3.!javax.swing.AbstractButton.accessibleContext, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteAction, this.deleteItem$6.!javax.swing.AbstractButton.accessibleContext, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.emptyListItem$9.!javax.swing.AbstractButton.model, this.exitItem$13.!javax.swing.AbstractButton.listenerList, this.fileListMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.fileMenu$1.!javax.swing.AbstractButton.model, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newAction, this.newItem$1.!java.awt.Component.changeSupport, this.newItem$1.!java.awt.Component.height, this.newItem$1.!java.awt.Component.width, this.newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.newItem$1.!javax.swing.AbstractButton.accessibleContext, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openAction, this.openItem$2.!javax.swing.AbstractButton.accessibleContext, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.pasteAction, this.pasteItem$5.!javax.swing.AbstractButton.accessibleContext, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoAction, this.redoItem$2.!javax.swing.AbstractButton.accessibleContext, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.saveAction, this.saveAsItem$6.!javax.swing.AbstractButton.listenerList, this.saveItem$5.!javax.swing.AbstractButton.accessibleContext, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator, this.undoAction, this.undoItem$1.!javax.swing.AbstractButton.accessibleContext, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.JMenuItem.accelerator, this.windowMenu$3.!javax.swing.JMenu.listenerList } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initMenuBar( javax.swing.JMenuBar )
  12 actualIn D = {  } U = { this.menuBar }
  13 actualOut D = { this.!initMenuBar( javax.swing.JMenuBar ), this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.description, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.height, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.location, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.width, this.javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, this.javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, this.javax.swing.JMenu.!javax.swing.JMenu.menuEvent, this.javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.JMenuItem.accelerator } U = { KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK, KeyEvent.VK_DELETE, KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK, KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK, KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK, KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK, KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK, KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK, KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.closeItem$3.!javax.swing.AbstractButton.listenerList, this.closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.copyAction, this.copyItem$4.!javax.swing.AbstractButton.accessibleContext, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutAction, this.cutItem$3.!javax.swing.AbstractButton.accessibleContext, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteAction, this.deleteItem$6.!javax.swing.AbstractButton.accessibleContext, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.emptyListItem$9.!javax.swing.AbstractButton.model, this.exitItem$13.!javax.swing.AbstractButton.listenerList, this.fileListMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.fileMenu$1.!javax.swing.AbstractButton.model, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newAction, this.newItem$1.!java.awt.Component.changeSupport, this.newItem$1.!java.awt.Component.height, this.newItem$1.!java.awt.Component.width, this.newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.newItem$1.!javax.swing.AbstractButton.accessibleContext, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openAction, this.openItem$2.!javax.swing.AbstractButton.accessibleContext, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.pasteAction, this.pasteItem$5.!javax.swing.AbstractButton.accessibleContext, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoAction, this.redoItem$2.!javax.swing.AbstractButton.accessibleContext, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.saveAction, this.saveAsItem$6.!javax.swing.AbstractButton.listenerList, this.saveItem$5.!javax.swing.AbstractButton.accessibleContext, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator, this.undoAction, this.undoItem$1.!javax.swing.AbstractButton.accessibleContext, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.JMenuItem.accelerator, this.windowMenu$3.!javax.swing.JMenu.listenerList }
  14 assignment D = { this.toolBar } U = { javax.swing.JToolBar.!JToolBar( ) }
  15 receiver D = {  } U = {  }
  16 constructorCall D = {  } U = {  } TO = javax.swing.JToolBar#JToolBar( )
  17 actualOut D = { javax.swing.JToolBar.!JToolBar( ) } U = {  }
  18 assignment D = {  } U = { this.toolBar.!setFloatable( boolean ) }
  19 receiver D = {  } U = { this.toolBar }
  20 methodCall D = {  } U = { javax.swing.JToolBar.!JToolBar( ).!java.awt.Component.height, javax.swing.JToolBar.!JToolBar( ).!java.awt.Component.width, javax.swing.JToolBar.!JToolBar( ).!javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JToolBar.!JToolBar( ).!javax.swing.JToolBar.floatable, this.toolBar.!java.awt.Component.height, this.toolBar.!java.awt.Component.width, this.toolBar.!javax.swing.JComponent.revalidateRunnableScheduled, this.toolBar.!javax.swing.JToolBar.floatable } TO = javax.swing.JToolBar#setFloatable( boolean )
  21 actualOut D = { this.toolBar.!javax.swing.JToolBar.floatable, this.toolBar.!setFloatable( boolean ) } U = { javax.swing.JToolBar.!JToolBar( ).!java.awt.Component.height, javax.swing.JToolBar.!JToolBar( ).!java.awt.Component.width, javax.swing.JToolBar.!JToolBar( ).!javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JToolBar.!JToolBar( ).!javax.swing.JToolBar.floatable, this.toolBar.!java.awt.Component.height, this.toolBar.!java.awt.Component.width, this.toolBar.!javax.swing.JComponent.revalidateRunnableScheduled, this.toolBar.!javax.swing.JToolBar.floatable }
  22 assignment D = {  } U = { this.!initToolBar( javax.swing.JToolBar ) }
  23 receiver D = {  } U = {  }
  24 methodCall D = {  } U = { this.copyAction, this.cutAction, this.newAction, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, this.newButton$1.!javax.swing.JComponent.clientProperties, this.newButton$1.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.newButton$1.!javax.swing.ToolTipManager.accessibilityKeyListener, this.newButton$1.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.openAction, this.pasteAction, this.redoAction, this.redoButton$8.!javax.swing.AbstractButton.model, this.saveAction, this.toolBar$0.!javax.swing.AbstractButton.action, this.toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.undoAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initToolBar( javax.swing.JToolBar )
  25 actualIn D = {  } U = { this.toolBar }
  26 actualOut D = { this.!initToolBar( javax.swing.JToolBar ), this.newButton$1.!javax.swing.JComponent.aaHint, this.newButton$1.!javax.swing.JComponent.lcdRenderingHint, this.toolBar$0.!javax.swing.AbstractButton.action, this.toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { this.copyAction, this.cutAction, this.newAction, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, this.newButton$1.!javax.swing.JComponent.clientProperties, this.newButton$1.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.newButton$1.!javax.swing.ToolTipManager.accessibilityKeyListener, this.newButton$1.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.openAction, this.pasteAction, this.redoAction, this.redoButton$8.!javax.swing.AbstractButton.model, this.saveAction, this.toolBar$0.!javax.swing.AbstractButton.action, this.toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.undoAction }
  27 assignment D = { this.directory } U = { java.io.File.!File( java.lang.String ) }
  28 receiver D = {  } U = {  }
  29 constructorCall D = {  } U = { $java.lang.String, java.io.File.!java.io.File.fs, java.io.File.!java.io.File.path } TO = java.io.File#File( java.lang.String )
  30 actualOut D = { java.io.File.!File( java.lang.String ), java.io.File.!java.io.File.path, java.io.File.!java.io.File.prefixLength, java.io.File.!java.io.File.status } U = { java.io.File.!java.io.File.fs, java.io.File.!java.io.File.path }
  31 assignment D = { this.recentFiles } U = { java.util.ArrayList.!ArrayList( ) }
  32 receiver D = {  } U = {  }
  33 constructorCall D = {  } U = { java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA } TO = java.util.ArrayList#ArrayList( )
  34 actualOut D = { java.util.ArrayList.!ArrayList( ), java.util.ArrayList.!java.util.AbstractList.modCount, java.util.ArrayList.!java.util.ArrayList.elementData } U = { java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA }
  35 assignment D = { this.clipboard } U = {  }
  36 assignment D = { this.autoSave } U = { jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ) }
  37 receiver D = {  } U = {  }
  38 constructorCall D = {  } U = { tabbedCanvas$0.canvases, tabbedCanvas$0.menu, tabbedCanvas$0.selectedTab, tabbedCanvas$0.selector } TO = jp.ac.ritsumei.cs.draw.AutoSave#AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas )
  39 actualIn D = {  } U = { tabbedCanvas$1, tabbedCanvas$1.canvases, tabbedCanvas$1.menu, tabbedCanvas$1.selectedTab, tabbedCanvas$1.selector, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.menu, this.tabbedCanvas.selectedTab, this.tabbedCanvas.selector }
  40 actualOut D = { jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ) } U = { tabbedCanvas$0.canvases, tabbedCanvas$0.menu, tabbedCanvas$0.selectedTab, tabbedCanvas$0.selector }
  41 assignment D = {  } U = { this.autoSave.!start( ) }
  42 receiver D = {  } U = { this.autoSave }
  43 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.Thread.group, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.Thread.threadStatus, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.destroyed, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.nUnstartedThreads, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.nthreads, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.threads, this.autoSave.!java.lang.Thread.group, this.autoSave.!java.lang.Thread.threadStatus, this.autoSave.!java.lang.ThreadGroup.destroyed, this.autoSave.!java.lang.ThreadGroup.nUnstartedThreads, this.autoSave.!java.lang.ThreadGroup.nthreads, this.autoSave.!java.lang.ThreadGroup.threads } TO = java.lang.Thread#start( )
  44 actualOut D = { this.autoSave.!java.lang.ThreadGroup.nUnstartedThreads, this.autoSave.!java.lang.ThreadGroup.nthreads, this.autoSave.!java.lang.ThreadGroup.threads, this.autoSave.!start( ) } U = { jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.Thread.group, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.Thread.threadStatus, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.destroyed, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.nUnstartedThreads, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.nthreads, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.threads, this.autoSave.!java.lang.Thread.group, this.autoSave.!java.lang.Thread.threadStatus, this.autoSave.!java.lang.ThreadGroup.destroyed, this.autoSave.!java.lang.ThreadGroup.nUnstartedThreads, this.autoSave.!java.lang.ThreadGroup.nthreads, this.autoSave.!java.lang.ThreadGroup.threads }
  46 formalOut D = {  } U = { $_ }
  11+ actualOutByFieldAccess D = { this.copyAction } U = {  }
  11+ actualOutByFieldAccess D = { this.cutAction } U = {  }
  11+ actualOutByFieldAccess D = { this.deleteAction } U = {  }
  11+ actualOutByFieldAccess D = { this.fileListMenu } U = {  }
  11+ actualOutByFieldAccess D = { this.fileListener } U = {  }
  11+ actualOutByFieldAccess D = { this.newAction } U = {  }
  11+ actualOutByFieldAccess D = { this.openAction } U = {  }
  11+ actualOutByFieldAccess D = { this.pasteAction } U = {  }
  11+ actualOutByFieldAccess D = { this.redoAction } U = {  }
  11+ actualOutByFieldAccess D = { this.saveAction } U = {  }
  11+ actualOutByFieldAccess D = { this.undoAction } U = {  }
  11+ actualOutByFieldAccess D = { this.windowListener } U = {  }
  38+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).tabbedCanvas } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#tool ]
   1 fieldDeclaration D = { this.tool } U = { this.tool }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#updateEditState( boolean ) ]
   1 formalIn D = { grabbed$0 } U = {  }
   2 assignment D = {  } U = { this.cutAction.!setEnabled( boolean ) }
   3 receiver D = {  } U = { this.cutAction }
   4 methodCall D = {  } U = { grabbed$0 } TO = javax.swing.Action#setEnabled( boolean )
   5 actualOut D = { this.cutAction.!setEnabled( boolean ) } U = {  }
   6 assignment D = {  } U = { this.copyAction.!setEnabled( boolean ) }
   7 receiver D = {  } U = { this.copyAction }
   8 methodCall D = {  } U = { grabbed$0 } TO = javax.swing.Action#setEnabled( boolean )
   9 actualOut D = { this.copyAction.!setEnabled( boolean ) } U = {  }
  10 ifSt D = {  } U = { this.clipboard, this.clipboard.color, this.clipboard.endX, this.clipboard.endY, this.clipboard.outlineWidth, this.clipboard.startX, this.clipboard.startY }
  11 assignment D = {  } U = { this.pasteAction.!setEnabled( boolean ) }
  12 receiver D = {  } U = { this.pasteAction }
  13 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  14 actualOut D = { this.pasteAction.!setEnabled( boolean ) } U = {  }
  15 assignment D = {  } U = { this.pasteAction.!setEnabled( boolean ) }
  16 receiver D = {  } U = { this.pasteAction }
  17 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  18 actualOut D = { this.pasteAction.!setEnabled( boolean ) } U = {  }
  20 assignment D = {  } U = { this.deleteAction.!setEnabled( boolean ) }
  21 receiver D = {  } U = { this.deleteAction }
  22 methodCall D = {  } U = { grabbed$0 } TO = javax.swing.Action#setEnabled( boolean )
  23 actualOut D = { this.deleteAction.!setEnabled( boolean ) } U = {  }
  25 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#recentFiles ]
   1 fieldDeclaration D = { this.recentFiles } U = { this.recentFiles }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#cutAction ]
   1 fieldDeclaration D = { this.cutAction } U = { this.cutAction }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#undoAction ]
   1 fieldDeclaration D = { this.undoAction } U = { this.undoAction }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#saveTempFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 formalIn D = { canvas$0 } U = {  }
   2 localDeclaration D = { tempName$1 } U = { $java.lang.String, canvas$0.!getFigureManager( ).!getFilename( ) }
   3 receiver D = {  } U = { canvas$0.!getFigureManager( ) }
   4 receiver D = {  } U = { canvas$0 }
   5 methodCall D = {  } U = { canvas$0.figureManager, this.figureManager.figures, this.figureManager.filename } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
   6 actualOut D = { canvas$0.!getFigureManager( ) } U = { canvas$0.figureManager, this.figureManager.figures, this.figureManager.filename }
   7 methodCall D = {  } U = { canvas$0.!getFigureManager( ).filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
   8 actualOut D = { canvas$0.!getFigureManager( ).!getFilename( ) } U = { canvas$0.!getFigureManager( ).filename }
   9 returnSt D = { $_ } U = { canvas$0.!getFigureManager( ).!store( java.lang.String ) }
  10 receiver D = {  } U = { canvas$0.!getFigureManager( ) }
  11 receiver D = {  } U = { canvas$0 }
  12 methodCall D = {  } U = { canvas$0.figureManager, this.figureManager.figures, this.figureManager.filename } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  13 actualOut D = { canvas$0.!getFigureManager( ) } U = { canvas$0.figureManager, this.figureManager.figures, this.figureManager.filename }
  14 methodCall D = {  } U = { System.err, canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, canvas$0.!getFigureManager( ).figures, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY } TO = jp.ac.ritsumei.cs.draw.FigureManager#store( java.lang.String )
  15 actualIn D = {  } U = { tempName$1 }
  16 actualOut D = { canvas$0.!getFigureManager( ).!store( java.lang.String ), canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count } U = { System.err, canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, canvas$0.!getFigureManager( ).figures, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY }
  18 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#deleteAction ]
   1 fieldDeclaration D = { this.deleteAction } U = { this.deleteAction }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { canvas$0 } U = {  }
   3 ifSt D = {  } U = { canvas$0.!hasChanged( ) }
   4 receiver D = {  } U = { canvas$0 }
   5 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#hasChanged( )
   6 actualOut D = { canvas$0.!hasChanged( ) } U = {  }
   7 localDeclaration D = { result$1 } U = { this.!showConfirmDialog( java.awt.Component java.lang.Object ) }
   8 receiver D = {  } U = {  }
   9 methodCall D = {  } U = { $java.lang.String, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showConfirmDialog( java.awt.Component java.lang.Object )
  10 actualOut D = { this.!showConfirmDialog( java.awt.Component java.lang.Object ) } U = {  }
  11 ifSt D = {  } U = { result$1, result$1.CANCEL_OPTION }
  12 returnSt D = { $_ } U = {  }
  13 ifSt D = {  } U = { result$1, result$1.YES_OPTION }
  14 ifSt D = {  } U = { this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
  15 receiver D = {  } U = {  }
  16 methodCall D = {  } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
  17 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
  18 actualOut D = { this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas ), this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, this.canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  19 localDeclaration D = { result2$2 } U = { this.!showConfirmDialog( java.awt.Component java.lang.Object ) }
  20 receiver D = {  } U = {  }
  21 methodCall D = {  } U = { $java.lang.String, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showConfirmDialog( java.awt.Component java.lang.Object )
  22 actualOut D = { this.!showConfirmDialog( java.awt.Component java.lang.Object ) } U = {  }
  23 ifSt D = {  } U = { result2$2, result2$2.CANCEL_OPTION }
  24 returnSt D = { $_ } U = {  }
  30 assignment D = {  } U = { this.tabbedCanvas.!closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
  31 receiver D = {  } U = { this.tabbedCanvas }
  32 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.tabbedCanvas.!javax.accessibility.AccessibleState.SELECTED, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.!javax.swing.JTabbedPane.visComp, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
  33 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
  34 actualOut D = { this.tabbedCanvas.!closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas ), this.tabbedCanvas.!javax.swing.JTabbedPane.visComp } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.tabbedCanvas.!javax.accessibility.AccessibleState.SELECTED, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.!javax.swing.JTabbedPane.visComp, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
  35 ifSt D = {  } U = { this.tabbedCanvas.!getOpenFileNum( ) }
  36 receiver D = {  } U = { this.tabbedCanvas }
  37 methodCall D = {  } U = { this.tabbedCanvas.canvases } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getOpenFileNum( )
  38 actualOut D = { this.tabbedCanvas.!getOpenFileNum( ) } U = { this.tabbedCanvas.canvases }
  39 assignment D = {  } U = { this.tool.!terminate( ) }
  40 receiver D = {  } U = { this.tool }
  41 methodCall D = {  } U = { this.tool.!java.lang.Runtime.currentRuntime } TO = jp.ac.ritsumei.cs.draw.DrawTool#terminate( )
  42 actualOut D = { this.tool.!terminate( ) } U = { this.tool.!java.lang.Runtime.currentRuntime }
  44 returnSt D = { $_ } U = {  }
  46 formalOut D = {  } U = { $_ }
  32+ actualOutByFieldAccess D = { this.tabbedCanvas.selectedTab } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#newAction ]
   1 fieldDeclaration D = { this.newAction } U = { this.newAction }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#newFile( ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 localDeclaration D = { filename$0 } U = { this.!getFileName( boolean ) }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { result$2.APPROVE_OPTION, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#getFileName( boolean )
   5 actualIn D = {  } U = {  }
   6 actualOut D = { this.!getFileName( boolean ), this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessibleContext, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonMnemonic, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonToolTipText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.controlsShown, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.currentDirectory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialog, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogTitle, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogType, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dragEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSelectionMode, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSystemView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.filters, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.multiSelectionEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.selectedFile, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.showFilesListener, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useAcceptAllFileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useFileHiding } U = { result$2.APPROVE_OPTION, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
   7 ifSt D = {  } U = { filename$0 }
   8 returnSt D = { $_ } U = {  }
  10 ifSt D = {  } U = { this.!fileExists( java.lang.String ) }
  11 receiver D = {  } U = {  }
  12 methodCall D = {  } U = { this.file$1.!java.io.File$PathStatus.CHECKED, this.file$1.!java.io.File$PathStatus.INVALID, this.file$1.!java.io.File.fs, this.file$1.!java.io.File.path, this.file$1.!java.io.File.status, this.file$1.!java.lang.System.security, this.java.io.File.!java.io.File.fs, this.java.io.File.!java.io.File.path } TO = jp.ac.ritsumei.cs.draw.DrawMenu#fileExists( java.lang.String )
  13 actualIn D = {  } U = { filename$0 }
  14 actualOut D = { this.!fileExists( java.lang.String ), this.file$1.!java.io.File.status, this.java.io.File.!java.io.File.path, this.java.io.File.!java.io.File.prefixLength, this.java.io.File.!java.io.File.status } U = { this.file$1.!java.io.File$PathStatus.CHECKED, this.file$1.!java.io.File$PathStatus.INVALID, this.file$1.!java.io.File.fs, this.file$1.!java.io.File.path, this.file$1.!java.io.File.status, this.file$1.!java.lang.System.security, this.java.io.File.!java.io.File.fs, this.java.io.File.!java.io.File.path }
  15 assignment D = {  } U = { this.!showMessageDialog( java.awt.Component java.lang.Object ) }
  16 receiver D = {  } U = {  }
  17 methodCall D = {  } U = { $java.lang.String, filename$0, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showMessageDialog( java.awt.Component java.lang.Object )
  18 actualOut D = { this.!showMessageDialog( java.awt.Component java.lang.Object ) } U = {  }
  19 returnSt D = { $_ } U = {  }
  21 localDeclaration D = { canvas$1 } U = { this.tabbedCanvas.!openTab( java.lang.String ) }
  22 receiver D = {  } U = { this.tabbedCanvas }
  23 methodCall D = {  } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.figureManager.figures, this.figureManager.filename, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvas$1.support, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementCount, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementData, this.tabbedCanvas.canvas$1.support.!java.util.Vector.modCount, this.tabbedCanvas.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.tabbedCanvas.canvases, this.tabbedCanvas.fmanager$3.filename, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.coder, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.value, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.height, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.peer, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.width, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.dispatcher, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.peer, this.tabbedCanvas.menu, this.tabbedCanvas.selector } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#openTab( java.lang.String )
  24 actualIn D = {  } U = { filename$0 }
  25 actualOut D = { this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!openTab( java.lang.String ), this.tabbedCanvas.canvas$1.support.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.edits, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.inProgress, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.indexOfNextAdd, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.newEventsOnly, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.height, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.width, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.jp.ac.ritsumei.cs.draw.FigureManager.java.util.LinkedList.!java.util.LinkedList.size } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.figureManager.figures, this.figureManager.filename, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvas$1.support, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementCount, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementData, this.tabbedCanvas.canvas$1.support.!java.util.Vector.modCount, this.tabbedCanvas.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.tabbedCanvas.canvases, this.tabbedCanvas.fmanager$3.filename, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.coder, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.value, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.height, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.peer, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.width, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.dispatcher, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.peer, this.tabbedCanvas.menu, this.tabbedCanvas.selector }
  26 assignment D = {  } U = { this.!addRecentFile( java.lang.String ) }
  27 receiver D = {  } U = {  }
  28 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES, this.recentFiles } TO = jp.ac.ritsumei.cs.draw.DrawMenu#addRecentFile( java.lang.String )
  29 actualIn D = {  } U = { filename$0 }
  30 actualOut D = { this.!addRecentFile( java.lang.String ) } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES, this.recentFiles }
  31 assignment D = {  } U = { this.tool.!setTitle( java.lang.String ) }
  32 receiver D = {  } U = { this.tool }
  33 methodCall D = {  } U = { filename$0, this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title } TO = java.awt.Frame#setTitle( java.lang.String )
  34 actualOut D = { this.tool.!java.awt.Frame.title, this.tool.!setTitle( java.lang.String ) } U = { this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title }
  35 assignment D = {  } U = { canvas$1.!repaint( ) }
  36 receiver D = {  } U = { canvas$1 }
  37 methodCall D = {  } U = { canvas$1.!java.awt.Component.height, canvas$1.!java.awt.Component.parent, canvas$1.!java.awt.Component.peer, canvas$1.!java.awt.Component.width, canvas$1.!java.awt.Component.x, canvas$1.!java.awt.Component.y, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.height, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.parent, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.peer, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.width, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.x, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.y } TO = java.awt.Component#repaint( )
  38 actualOut D = { canvas$1.!repaint( ) } U = { canvas$1.!java.awt.Component.height, canvas$1.!java.awt.Component.parent, canvas$1.!java.awt.Component.peer, canvas$1.!java.awt.Component.width, canvas$1.!java.awt.Component.x, canvas$1.!java.awt.Component.y, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.height, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.parent, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.peer, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.width, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.x, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.y }
  39 returnSt D = { $_ } U = {  }
  41 formalOut D = {  } U = { $_ }
   4+ actualOutByFieldAccess D = { this.directory } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.changed } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).figureManager } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).figureManager } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).menu } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).selector } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.canvas$1.undoManager } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).figures } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).figures } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).filename } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).filename } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.selectedTab } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#windowListener ]
   1 fieldDeclaration D = { this.windowListener } U = { this.windowListener }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#saveAsFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { canvas$0 } U = {  }
   3 localDeclaration D = { filename$1 } U = { this.!getFileName( boolean ) }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = { result$2.APPROVE_OPTION, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#getFileName( boolean )
   6 actualIn D = {  } U = {  }
   7 actualOut D = { this.!getFileName( boolean ), this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessibleContext, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonMnemonic, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonToolTipText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.controlsShown, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.currentDirectory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialog, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogTitle, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogType, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dragEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSelectionMode, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSystemView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.filters, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.multiSelectionEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.selectedFile, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.showFilesListener, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useAcceptAllFileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useFileHiding } U = { result$2.APPROVE_OPTION, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
   8 ifSt D = {  } U = { filename$1 }
   9 returnSt D = { $_ } U = {  }
  11 ifSt D = {  } U = { this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String ) }
  12 receiver D = {  } U = {  }
  13 methodCall D = {  } U = { System.err, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String )
  14 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
  15 actualIn D = {  } U = { filename$1 }
  16 actualOut D = { this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String ), this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, this.canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count } U = { System.err, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  17 assignment D = {  } U = { this.tabbedCanvas.!updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
  18 receiver D = {  } U = { this.tabbedCanvas }
  19 methodCall D = {  } U = { File.separator, this.tabbedCanvas.!java.awt.Component.height, this.tabbedCanvas.!java.awt.Component.width, this.tabbedCanvas.!java.lang.String.value, this.tabbedCanvas.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.tabbedCanvas.!javax.swing.JComponent.revalidateRunnableScheduled, this.tabbedCanvas.!javax.swing.JTabbedPane$Page.tip, this.tabbedCanvas.!javax.swing.JTabbedPane$Page.title, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.tabbedCanvas.!javax.swing.ToolTipManager.accessibilityKeyListener, this.tabbedCanvas.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.coder, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.value, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
  20 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
  21 actualOut D = { this.tabbedCanvas.!javax.swing.JTabbedPane$Page.tip, this.tabbedCanvas.!javax.swing.JTabbedPane$Page.title, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) } U = { File.separator, this.tabbedCanvas.!java.awt.Component.height, this.tabbedCanvas.!java.awt.Component.width, this.tabbedCanvas.!java.lang.String.value, this.tabbedCanvas.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.tabbedCanvas.!javax.swing.JComponent.revalidateRunnableScheduled, this.tabbedCanvas.!javax.swing.JTabbedPane$Page.tip, this.tabbedCanvas.!javax.swing.JTabbedPane$Page.title, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.tabbedCanvas.!javax.swing.ToolTipManager.accessibilityKeyListener, this.tabbedCanvas.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.coder, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.value, this.tabbedCanvas.selectedTab }
  22 assignment D = {  } U = { this.!addRecentFile( java.lang.String ) }
  23 receiver D = {  } U = {  }
  24 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES, this.recentFiles } TO = jp.ac.ritsumei.cs.draw.DrawMenu#addRecentFile( java.lang.String )
  25 actualIn D = {  } U = { filename$1 }
  26 actualOut D = { this.!addRecentFile( java.lang.String ) } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES, this.recentFiles }
  27 assignment D = {  } U = { this.tool.!setTitle( java.lang.String ) }
  28 receiver D = {  } U = { this.tool }
  29 methodCall D = {  } U = { filename$1, this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title } TO = java.awt.Frame#setTitle( java.lang.String )
  30 actualOut D = { this.tool.!java.awt.Frame.title, this.tool.!setTitle( java.lang.String ) } U = { this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title }
  31 returnSt D = { $_ } U = {  }
  33 returnSt D = { $_ } U = {  }
  35 formalOut D = {  } U = { $_ }
   5+ actualOutByFieldAccess D = { this.directory } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#menuBar ]
   1 fieldDeclaration D = { this.menuBar } U = { this.menuBar }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#getToolBar( ) ]
   1 returnSt D = { $_ } U = { this.toolBar }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#closeAllFiles( ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 enhancedForSt D = { canvas$0 } U = { this.tabbedCanvas.!getAllCanvases( ) }
   3 receiver D = {  } U = { this.tabbedCanvas }
   4 methodCall D = {  } U = { this.tabbedCanvas.canvases } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getAllCanvases( )
   5 actualOut D = { this.tabbedCanvas.!getAllCanvases( ) } U = { this.tabbedCanvas.canvases }
   6 ifSt D = {  } U = { this.!closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, result$1.CANCEL_OPTION, result$1.YES_OPTION, result2$2.CANCEL_OPTION, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tabbedCanvas, this.tabbedCanvas.!javax.accessibility.AccessibleState.SELECTED, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.!javax.swing.JTabbedPane.visComp, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.tool, this.tool.!java.lang.Runtime.currentRuntime, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   9 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
  10 actualOut D = { this.!closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas ), this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, this.canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.tabbedCanvas.!javax.swing.JTabbedPane.visComp } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, result$1.CANCEL_OPTION, result$1.YES_OPTION, result2$2.CANCEL_OPTION, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tabbedCanvas, this.tabbedCanvas.!javax.accessibility.AccessibleState.SELECTED, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.!javax.swing.JTabbedPane.visComp, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.tool, this.tool.!java.lang.Runtime.currentRuntime, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  11 returnSt D = {  } U = {  }
  14 formalOut D = {  } U = { $_ }
   8+ actualOutByFieldAccess D = { this.tabbedCanvas.selectedTab } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#redoAction ]
   1 fieldDeclaration D = { this.redoAction } U = { this.redoAction }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#getMenuBar( ) ]
   1 returnSt D = { $_ } U = { this.menuBar }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#openFile( ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 throwsClause D = {  } U = { $java.lang.NumberFormatException }
   3 localDeclaration D = { filename$0 } U = { this.!getFileName( boolean ) }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = { result$2.APPROVE_OPTION, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#getFileName( boolean )
   6 actualIn D = {  } U = {  }
   7 actualOut D = { this.!getFileName( boolean ), this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessibleContext, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonMnemonic, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonToolTipText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.controlsShown, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.currentDirectory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialog, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogTitle, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogType, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dragEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSelectionMode, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSystemView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.filters, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.multiSelectionEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.selectedFile, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.showFilesListener, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useAcceptAllFileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useFileHiding } U = { result$2.APPROVE_OPTION, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
   8 ifSt D = {  } U = { filename$0 }
   9 returnSt D = { $_ } U = {  }
  11 returnSt D = { $_ } U = { this.!openFile( java.lang.String ) }
  12 receiver D = {  } U = {  }
  13 methodCall D = {  } U = { Color.white, File.separator, FilledOval.name, FilledRect.name, Line.name, Oval.name, Rect.name, System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, confirm$2.NO_OPTION, figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY, figure$17.color, figure$17.endX, figure$17.endY, figure$17.outlineWidth, figure$17.startX, figure$17.startY, figure$7.color, figure$7.endX, figure$7.endY, figure$7.outlineWidth, figure$7.startX, figure$7.startY, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.lock, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).figures, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, this.canvas$1.!getFigureManager( ).kind$0.!java.lang.String.value, this.canvas$1.!getFigureManager( ).st$6.!java.lang.String.value, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.str, this.canvas$1.!java.awt.Component.height, this.canvas$1.!java.awt.Component.parent, this.canvas$1.!java.awt.Component.peer, this.canvas$1.!java.awt.Component.width, this.canvas$1.!java.awt.Component.x, this.canvas$1.!java.awt.Component.y, this.canvas$1.changed, this.figureManager.figures, this.figureManager.filename, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.tabbedCanvas, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvas$1.support, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementCount, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementData, this.tabbedCanvas.canvas$1.support.!java.util.Vector.modCount, this.tabbedCanvas.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.tabbedCanvas.canvases, this.tabbedCanvas.fmanager$3.filename, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.value, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.height, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.peer, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.width, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.dispatcher, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.peer, this.tabbedCanvas.menu, this.tabbedCanvas.selector, this.tool, this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title, this.tool.YES_NO_OPTION, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#openFile( java.lang.String )
  14 actualIn D = {  } U = { filename$0 }
  15 actualOut D = { this.!openFile( java.lang.String ), this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.cs, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.falpha, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.frgbvalue, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.fvalue, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.value, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.markedChar, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.markedSkipLF, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.nChars, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.readAheadLimit, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).java.io.FileReader.!java.io.InputStreamReader.sd, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.delimiters, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.hasSurrogates, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.maxPosition, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.newPosition, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.retDelims, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.str, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.canvas$1.support.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.edits, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.inProgress, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.indexOfNextAdd, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.newEventsOnly, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.height, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.width, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.jp.ac.ritsumei.cs.draw.FigureManager.java.util.LinkedList.!java.util.LinkedList.size, this.tool.!java.awt.Frame.title } U = { Color.white, File.separator, FilledOval.name, FilledRect.name, Line.name, Oval.name, Rect.name, System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, confirm$2.NO_OPTION, figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY, figure$17.color, figure$17.endX, figure$17.endY, figure$17.outlineWidth, figure$17.startX, figure$17.startY, figure$7.color, figure$7.endX, figure$7.endY, figure$7.outlineWidth, figure$7.startX, figure$7.startY, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.lock, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).figures, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, this.canvas$1.!getFigureManager( ).kind$0.!java.lang.String.value, this.canvas$1.!getFigureManager( ).st$6.!java.lang.String.value, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.str, this.canvas$1.!java.awt.Component.height, this.canvas$1.!java.awt.Component.parent, this.canvas$1.!java.awt.Component.peer, this.canvas$1.!java.awt.Component.width, this.canvas$1.!java.awt.Component.x, this.canvas$1.!java.awt.Component.y, this.canvas$1.changed, this.figureManager.figures, this.figureManager.filename, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.tabbedCanvas, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvas$1.support, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementCount, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementData, this.tabbedCanvas.canvas$1.support.!java.util.Vector.modCount, this.tabbedCanvas.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.tabbedCanvas.canvases, this.tabbedCanvas.fmanager$3.filename, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.value, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.height, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.peer, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.width, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.dispatcher, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.peer, this.tabbedCanvas.menu, this.tabbedCanvas.selector, this.tool, this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title, this.tool.YES_NO_OPTION, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  17 formalOut D = {  } U = { $_ }
   5+ actualOutByFieldAccess D = { this.directory } U = {  }
  13+ actualOutByFieldAccess D = { this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.changed } U = {  }
  13+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).figureManager } U = {  }
  13+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).figureManager } U = {  }
  13+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).menu } U = {  }
  13+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).selector } U = {  }
  13+ actualOutByFieldAccess D = { this.tabbedCanvas.canvas$1.undoManager } U = {  }
  13+ actualOutByFieldAccess D = { this.canvas$1.!getFigureManager( ).figure$7.endX } U = {  }
  13+ actualOutByFieldAccess D = { this.canvas$1.!getFigureManager( ).figure$7.endY } U = {  }
  13+ actualOutByFieldAccess D = { this.canvas$1.!getFigureManager( ).figure$7.startX } U = {  }
  13+ actualOutByFieldAccess D = { this.canvas$1.!getFigureManager( ).figure$7.startY } U = {  }
  13+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).figures } U = {  }
  13+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).figures } U = {  }
  13+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).filename } U = {  }
  13+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).filename } U = {  }
  13+ actualOutByFieldAccess D = { this.tabbedCanvas.selectedTab } U = {  }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#fileExists( java.lang.String ) ]
   1 formalIn D = { name$0 } U = {  }
   2 localDeclaration D = { file$1 } U = { java.io.File.!File( java.lang.String ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = { java.io.File.!java.io.File.fs, java.io.File.!java.io.File.path, name$0 } TO = java.io.File#File( java.lang.String )
   5 actualOut D = { java.io.File.!File( java.lang.String ), java.io.File.!java.io.File.path, java.io.File.!java.io.File.prefixLength, java.io.File.!java.io.File.status } U = { java.io.File.!java.io.File.fs, java.io.File.!java.io.File.path }
   6 returnSt D = { $_ } U = { file$1.!exists( ) }
   7 receiver D = {  } U = { file$1 }
   8 methodCall D = {  } U = { file$1.!java.io.File$PathStatus.CHECKED, file$1.!java.io.File$PathStatus.INVALID, file$1.!java.io.File.fs, file$1.!java.io.File.path, file$1.!java.io.File.status, file$1.!java.lang.System.security, java.io.File.!File( java.lang.String ).!java.io.File$PathStatus.CHECKED, java.io.File.!File( java.lang.String ).!java.io.File$PathStatus.INVALID, java.io.File.!File( java.lang.String ).!java.io.File.fs, java.io.File.!File( java.lang.String ).!java.io.File.path, java.io.File.!File( java.lang.String ).!java.io.File.status, java.io.File.!File( java.lang.String ).!java.lang.System.security } TO = java.io.File#exists( )
   9 actualOut D = { file$1.!exists( ), file$1.!java.io.File.status } U = { file$1.!java.io.File$PathStatus.CHECKED, file$1.!java.io.File$PathStatus.INVALID, file$1.!java.io.File.fs, file$1.!java.io.File.path, file$1.!java.io.File.status, file$1.!java.lang.System.security, java.io.File.!File( java.lang.String ).!java.io.File$PathStatus.CHECKED, java.io.File.!File( java.lang.String ).!java.io.File$PathStatus.INVALID, java.io.File.!File( java.lang.String ).!java.io.File.fs, java.io.File.!File( java.lang.String ).!java.io.File.path, java.io.File.!File( java.lang.String ).!java.io.File.status, java.io.File.!File( java.lang.String ).!java.lang.System.security }
  11 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#initToolBar( javax.swing.JToolBar ) ]
   1 formalIn D = { toolBar$0 } U = {  }
   2 localDeclaration D = { newButton$1 } U = { toolBar$0.!add( javax.swing.Action ) }
   3 receiver D = {  } U = { toolBar$0 }
   4 methodCall D = {  } U = { this.newAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
   5 actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
   6 assignment D = {  } U = { newButton$1.!setToolTipText( java.lang.String ) }
   7 receiver D = {  } U = { newButton$1 }
   8 methodCall D = {  } U = { $java.lang.String, newButton$1.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, newButton$1.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, newButton$1.!javax.swing.JComponent.clientProperties, newButton$1.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, newButton$1.!javax.swing.ToolTipManager.accessibilityKeyListener, newButton$1.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
   9 actualOut D = { newButton$1.!javax.swing.JComponent.aaHint, newButton$1.!javax.swing.JComponent.lcdRenderingHint, newButton$1.!setToolTipText( java.lang.String ) } U = { newButton$1.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, newButton$1.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, newButton$1.!javax.swing.JComponent.clientProperties, newButton$1.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, newButton$1.!javax.swing.ToolTipManager.accessibilityKeyListener, newButton$1.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  10 localDeclaration D = { openButton$2 } U = { toolBar$0.!add( javax.swing.Action ) }
  11 receiver D = {  } U = { toolBar$0 }
  12 methodCall D = {  } U = { this.openAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
  13 actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  14 assignment D = {  } U = { openButton$2.!setToolTipText( java.lang.String ) }
  15 receiver D = {  } U = { openButton$2 }
  16 methodCall D = {  } U = { $java.lang.String, openButton$2.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, openButton$2.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, openButton$2.!javax.swing.JComponent.clientProperties, openButton$2.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, openButton$2.!javax.swing.ToolTipManager.accessibilityKeyListener, openButton$2.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  17 actualOut D = { openButton$2.!javax.swing.JComponent.aaHint, openButton$2.!javax.swing.JComponent.lcdRenderingHint, openButton$2.!setToolTipText( java.lang.String ) } U = { openButton$2.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, openButton$2.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, openButton$2.!javax.swing.JComponent.clientProperties, openButton$2.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, openButton$2.!javax.swing.ToolTipManager.accessibilityKeyListener, openButton$2.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  18 localDeclaration D = { saveButton$3 } U = { toolBar$0.!add( javax.swing.Action ) }
  19 receiver D = {  } U = { toolBar$0 }
  20 methodCall D = {  } U = { this.saveAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
  21 actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  22 assignment D = {  } U = { saveButton$3.!setToolTipText( java.lang.String ) }
  23 receiver D = {  } U = { saveButton$3 }
  24 methodCall D = {  } U = { $java.lang.String, saveButton$3.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, saveButton$3.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, saveButton$3.!javax.swing.JComponent.clientProperties, saveButton$3.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, saveButton$3.!javax.swing.ToolTipManager.accessibilityKeyListener, saveButton$3.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  25 actualOut D = { saveButton$3.!javax.swing.JComponent.aaHint, saveButton$3.!javax.swing.JComponent.lcdRenderingHint, saveButton$3.!setToolTipText( java.lang.String ) } U = { saveButton$3.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, saveButton$3.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, saveButton$3.!javax.swing.JComponent.clientProperties, saveButton$3.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, saveButton$3.!javax.swing.ToolTipManager.accessibilityKeyListener, saveButton$3.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  26 assignment D = {  } U = { toolBar$0.!addSeparator( ) }
  27 receiver D = {  } U = { toolBar$0 }
  28 methodCall D = {  } U = {  } TO = javax.swing.JToolBar#addSeparator( )
  29 actualOut D = { toolBar$0.!addSeparator( ) } U = {  }
  30 localDeclaration D = { cutButton$4 } U = { toolBar$0.!add( javax.swing.Action ) }
  31 receiver D = {  } U = { toolBar$0 }
  32 methodCall D = {  } U = { this.cutAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
  33 actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  34 assignment D = {  } U = { cutButton$4.!setToolTipText( java.lang.String ) }
  35 receiver D = {  } U = { cutButton$4 }
  36 methodCall D = {  } U = { $java.lang.String, cutButton$4.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, cutButton$4.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, cutButton$4.!javax.swing.JComponent.clientProperties, cutButton$4.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, cutButton$4.!javax.swing.ToolTipManager.accessibilityKeyListener, cutButton$4.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  37 actualOut D = { cutButton$4.!javax.swing.JComponent.aaHint, cutButton$4.!javax.swing.JComponent.lcdRenderingHint, cutButton$4.!setToolTipText( java.lang.String ) } U = { cutButton$4.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, cutButton$4.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, cutButton$4.!javax.swing.JComponent.clientProperties, cutButton$4.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, cutButton$4.!javax.swing.ToolTipManager.accessibilityKeyListener, cutButton$4.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  38 localDeclaration D = { copyButton$5 } U = { toolBar$0.!add( javax.swing.Action ) }
  39 receiver D = {  } U = { toolBar$0 }
  40 methodCall D = {  } U = { this.copyAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
  41 actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  42 assignment D = {  } U = { copyButton$5.!setToolTipText( java.lang.String ) }
  43 receiver D = {  } U = { copyButton$5 }
  44 methodCall D = {  } U = { $java.lang.String, copyButton$5.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, copyButton$5.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, copyButton$5.!javax.swing.JComponent.clientProperties, copyButton$5.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, copyButton$5.!javax.swing.ToolTipManager.accessibilityKeyListener, copyButton$5.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  45 actualOut D = { copyButton$5.!javax.swing.JComponent.aaHint, copyButton$5.!javax.swing.JComponent.lcdRenderingHint, copyButton$5.!setToolTipText( java.lang.String ) } U = { copyButton$5.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, copyButton$5.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, copyButton$5.!javax.swing.JComponent.clientProperties, copyButton$5.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, copyButton$5.!javax.swing.ToolTipManager.accessibilityKeyListener, copyButton$5.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  46 localDeclaration D = { pasteButton$6 } U = { toolBar$0.!add( javax.swing.Action ) }
  47 receiver D = {  } U = { toolBar$0 }
  48 methodCall D = {  } U = { this.pasteAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
  49 actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  50 assignment D = {  } U = { pasteButton$6.!setToolTipText( java.lang.String ) }
  51 receiver D = {  } U = { pasteButton$6 }
  52 methodCall D = {  } U = { $java.lang.String, pasteButton$6.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, pasteButton$6.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, pasteButton$6.!javax.swing.JComponent.clientProperties, pasteButton$6.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, pasteButton$6.!javax.swing.ToolTipManager.accessibilityKeyListener, pasteButton$6.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  53 actualOut D = { pasteButton$6.!javax.swing.JComponent.aaHint, pasteButton$6.!javax.swing.JComponent.lcdRenderingHint, pasteButton$6.!setToolTipText( java.lang.String ) } U = { pasteButton$6.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, pasteButton$6.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, pasteButton$6.!javax.swing.JComponent.clientProperties, pasteButton$6.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, pasteButton$6.!javax.swing.ToolTipManager.accessibilityKeyListener, pasteButton$6.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  54 assignment D = {  } U = { toolBar$0.!addSeparator( ) }
  55 receiver D = {  } U = { toolBar$0 }
  56 methodCall D = {  } U = {  } TO = javax.swing.JToolBar#addSeparator( )
  57 actualOut D = { toolBar$0.!addSeparator( ) } U = {  }
  58 localDeclaration D = { undoButton$7 } U = { toolBar$0.!add( javax.swing.Action ) }
  59 receiver D = {  } U = { toolBar$0 }
  60 methodCall D = {  } U = { this.undoAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
  61 actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  62 assignment D = {  } U = { undoButton$7.!setToolTipText( java.lang.String ) }
  63 receiver D = {  } U = { undoButton$7 }
  64 methodCall D = {  } U = { $java.lang.String, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener, undoButton$7.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, undoButton$7.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, undoButton$7.!javax.swing.JComponent.clientProperties, undoButton$7.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, undoButton$7.!javax.swing.ToolTipManager.accessibilityKeyListener, undoButton$7.!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  65 actualOut D = { undoButton$7.!javax.swing.JComponent.aaHint, undoButton$7.!javax.swing.JComponent.lcdRenderingHint, undoButton$7.!setToolTipText( java.lang.String ) } U = { toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener, undoButton$7.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, undoButton$7.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, undoButton$7.!javax.swing.JComponent.clientProperties, undoButton$7.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, undoButton$7.!javax.swing.ToolTipManager.accessibilityKeyListener, undoButton$7.!javax.swing.ToolTipManager.moveBeforeEnterListener }
  66 assignment D = {  } U = { this.undoAction.!setEnabled( boolean ) }
  67 receiver D = {  } U = { this.undoAction }
  68 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  69 actualOut D = { this.undoAction.!setEnabled( boolean ) } U = {  }
  70 localDeclaration D = { redoButton$8 } U = { toolBar$0.!add( javax.swing.Action ) }
  71 receiver D = {  } U = { toolBar$0 }
  72 methodCall D = {  } U = { this.redoAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
  73 actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  74 assignment D = {  } U = { redoButton$8.!setToolTipText( java.lang.String ) }
  75 receiver D = {  } U = { redoButton$8 }
  76 methodCall D = {  } U = { $java.lang.String, redoButton$8.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, redoButton$8.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, redoButton$8.!javax.swing.JComponent.clientProperties, redoButton$8.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, redoButton$8.!javax.swing.ToolTipManager.accessibilityKeyListener, redoButton$8.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  77 actualOut D = { redoButton$8.!javax.swing.JComponent.aaHint, redoButton$8.!javax.swing.JComponent.lcdRenderingHint, redoButton$8.!setToolTipText( java.lang.String ) } U = { redoButton$8.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, redoButton$8.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, redoButton$8.!javax.swing.JComponent.clientProperties, redoButton$8.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, redoButton$8.!javax.swing.ToolTipManager.accessibilityKeyListener, redoButton$8.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  78 assignment D = {  } U = { redoButton$8.!setEnabled( boolean ) }
  79 receiver D = {  } U = { redoButton$8 }
  80 methodCall D = {  } U = { redoButton$8.!javax.swing.AbstractButton.model, toolBar$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setEnabled( boolean )
  81 actualOut D = { redoButton$8.!setEnabled( boolean ) } U = { redoButton$8.!javax.swing.AbstractButton.model, toolBar$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
  83 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#RECENT_FILES ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#addRecentFile( java.lang.String ) ]
   1 formalIn D = { filename$0 } U = {  }
   2 localDeclaration D = { offset$1 } U = { this.recentFiles.!indexOf( java.lang.Object ) }
   3 receiver D = {  } U = { this.recentFiles }
   4 methodCall D = {  } U = { filename$0 } TO = java.util.List#indexOf( java.lang.Object )
   5 actualOut D = { this.recentFiles.!indexOf( java.lang.Object ) } U = {  }
   6 ifSt D = {  } U = { offset$1 }
   7 assignment D = {  } U = { this.recentFiles.!add( int java.lang.Object ) }
   8 receiver D = {  } U = { this.recentFiles }
   9 methodCall D = {  } U = { filename$0 } TO = java.util.List#add( int java.lang.Object )
  10 actualOut D = { this.recentFiles.!add( int java.lang.Object ) } U = {  }
  11 ifSt D = {  } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES, this.recentFiles.!size( ) }
  12 receiver D = {  } U = { this.recentFiles }
  13 methodCall D = {  } U = {  } TO = java.util.List#size( )
  14 actualOut D = { this.recentFiles.!size( ) } U = {  }
  15 assignment D = {  } U = { this.recentFiles.!remove( int ) }
  16 receiver D = {  } U = { this.recentFiles }
  17 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES } TO = java.util.List#remove( int )
  18 actualOut D = { this.recentFiles.!remove( int ) } U = {  }
  20 assignment D = {  } U = { this.recentFiles.!remove( int ) }
  21 receiver D = {  } U = { this.recentFiles }
  22 methodCall D = {  } U = { offset$1 } TO = java.util.List#remove( int )
  23 actualOut D = { this.recentFiles.!remove( int ) } U = {  }
  24 assignment D = {  } U = { this.recentFiles.!add( int java.lang.Object ) }
  25 receiver D = {  } U = { this.recentFiles }
  26 methodCall D = {  } U = { filename$0 } TO = java.util.List#add( int java.lang.Object )
  27 actualOut D = { this.recentFiles.!add( int java.lang.Object ) } U = {  }
  30 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#fileListMenu ]
   1 fieldDeclaration D = { this.fileListMenu } U = { this.fileListMenu }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { canvas$0 } U = {  }
   3 formalIn D = { filename$1 } U = {  }
   4 localDeclaration D = { result$2 } U = { canvas$0.!getFigureManager( ).!store( java.lang.String ) }
   5 receiver D = {  } U = { canvas$0.!getFigureManager( ) }
   6 receiver D = {  } U = { canvas$0 }
   7 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
   8 actualOut D = { canvas$0.!getFigureManager( ) } U = {  }
   9 methodCall D = {  } U = { System.err, canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, canvas$0.!getFigureManager( ).figures, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY } TO = jp.ac.ritsumei.cs.draw.FigureManager#store( java.lang.String )
  10 actualIn D = {  } U = { filename$1 }
  11 actualOut D = { canvas$0.!getFigureManager( ).!store( java.lang.String ), canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count } U = { System.err, canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, canvas$0.!getFigureManager( ).figures, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY }
  12 ifSt D = {  } U = { result$2 }
  13 assignment D = {  } U = { this.!showMessageDialog( java.awt.Component java.lang.Object ) }
  14 receiver D = {  } U = {  }
  15 methodCall D = {  } U = { $java.lang.String, filename$1, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showMessageDialog( java.awt.Component java.lang.Object )
  16 actualOut D = { this.!showMessageDialog( java.awt.Component java.lang.Object ) } U = {  }
  17 returnSt D = { $_ } U = {  }
  19 assignment D = {  } U = { canvas$0.!setChanged( boolean ) }
  20 receiver D = {  } U = { canvas$0 }
  21 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setChanged( boolean )
  22 actualIn D = {  } U = {  }
  23 actualOut D = { canvas$0.!setChanged( boolean ) } U = {  }
  24 returnSt D = { $_ } U = {  }
  26 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#clipboard ]
   1 fieldDeclaration D = { this.clipboard } U = { this.clipboard }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#initEditActions( ) ]
   1 assignment D = { this.undoAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
   6 receiver D = {  } U = {  }
   7 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
   8 receiver D = {  } U = { this.!getClass( ) }
   9 receiver D = {  } U = {  }
  10 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  11 actualOut D = { this.!getClass( ) } U = {  }
  12 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  13 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
  14 actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  15 actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  16 assignment D = { this.redoAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
  17 receiver D = {  } U = {  }
  18 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  19 actualIn D = {  } U = { $java.lang.String }
  20 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
  21 receiver D = {  } U = {  }
  22 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  23 receiver D = {  } U = { this.!getClass( ) }
  24 receiver D = {  } U = {  }
  25 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  26 actualOut D = { this.!getClass( ) } U = {  }
  27 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  28 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
  29 actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  30 actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  31 assignment D = { this.cutAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
  32 receiver D = {  } U = {  }
  33 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  34 actualIn D = {  } U = { $java.lang.String }
  35 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
  36 receiver D = {  } U = {  }
  37 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  38 receiver D = {  } U = { this.!getClass( ) }
  39 receiver D = {  } U = {  }
  40 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  41 actualOut D = { this.!getClass( ) } U = {  }
  42 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  43 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
  44 actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  45 actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  46 assignment D = { this.copyAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
  47 receiver D = {  } U = {  }
  48 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  49 actualIn D = {  } U = { $java.lang.String }
  50 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
  51 receiver D = {  } U = {  }
  52 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  53 receiver D = {  } U = { this.!getClass( ) }
  54 receiver D = {  } U = {  }
  55 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  56 actualOut D = { this.!getClass( ) } U = {  }
  57 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  58 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
  59 actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  60 actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  61 assignment D = { this.pasteAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
  62 receiver D = {  } U = {  }
  63 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  64 actualIn D = {  } U = { $java.lang.String }
  65 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
  66 receiver D = {  } U = {  }
  67 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  68 receiver D = {  } U = { this.!getClass( ) }
  69 receiver D = {  } U = {  }
  70 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  71 actualOut D = { this.!getClass( ) } U = {  }
  72 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  73 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
  74 actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  75 actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  76 assignment D = { this.deleteAction } U = { .!AbstractAction( java.lang.String ) }
  77 receiver D = {  } U = {  }
  78 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String )
  79 actualIn D = {  } U = { $java.lang.String }
  80 actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  82 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#updateRedoState( ) ]
   1 localDeclaration D = { canvas$0 } U = { this.tabbedCanvas.!getCurrentCanvas( ) }
   2 receiver D = {  } U = { this.tabbedCanvas }
   3 methodCall D = {  } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCurrentCanvas( )
   4 actualOut D = { this.tabbedCanvas.!getCurrentCanvas( ) } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
   5 ifSt D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).changed, this.tabbedCanvas.!getCurrentCanvas( ).curX, this.tabbedCanvas.!getCurrentCanvas( ).curY, this.tabbedCanvas.!getCurrentCanvas( ).currentFigure, this.tabbedCanvas.!getCurrentCanvas( ).figureManager, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure, this.tabbedCanvas.!getCurrentCanvas( ).isGrabMode, this.tabbedCanvas.!getCurrentCanvas( ).menu, this.tabbedCanvas.!getCurrentCanvas( ).selector, this.tabbedCanvas.!getCurrentCanvas( ).support, this.tabbedCanvas.!getCurrentCanvas( ).undoManager }
   6 returnSt D = {  } U = {  }
   8 localDeclaration D = { undoManager$1 } U = { canvas$0.!getUndoManager( ) }
   9 receiver D = {  } U = { canvas$0 }
  10 methodCall D = {  } U = { canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).undoManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getUndoManager( )
  11 actualOut D = { canvas$0.!getUndoManager( ) } U = { canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).undoManager }
  12 ifSt D = {  } U = { undoManager$1, undoManager$1.!canRedo( ) }
  13 receiver D = {  } U = { undoManager$1 }
  14 methodCall D = {  } U = { canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.edits, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.inProgress, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.indexOfNextAdd, undoManager$1.!javax.swing.undo.UndoManager.edits, undoManager$1.!javax.swing.undo.UndoManager.inProgress, undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd } TO = javax.swing.undo.UndoManager#canRedo( )
  15 actualOut D = { undoManager$1.!canRedo( ) } U = { canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.edits, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.inProgress, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.indexOfNextAdd, undoManager$1.!javax.swing.undo.UndoManager.edits, undoManager$1.!javax.swing.undo.UndoManager.inProgress, undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd }
  16 assignment D = {  } U = { this.redoAction.!setEnabled( boolean ) }
  17 receiver D = {  } U = { this.redoAction }
  18 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  19 actualOut D = { this.redoAction.!setEnabled( boolean ) } U = {  }
  20 assignment D = {  } U = { this.redoAction.!setEnabled( boolean ) }
  21 receiver D = {  } U = { this.redoAction }
  22 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  23 actualOut D = { this.redoAction.!setEnabled( boolean ) } U = {  }
  26 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#directory ]
   1 fieldDeclaration D = { this.directory } U = { this.directory }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#tabbedCanvas ]
   1 fieldDeclaration D = { this.tabbedCanvas } U = { this.tabbedCanvas }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#fileListener ]
   1 fieldDeclaration D = { this.fileListener } U = { this.fileListener }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#autoSave ]
   1 fieldDeclaration D = { this.autoSave } U = { this.autoSave }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#saveAction ]
   1 fieldDeclaration D = { this.saveAction } U = { this.saveAction }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#initMenuBar( javax.swing.JMenuBar ) ]
   1 formalIn D = { menuBar$0 } U = {  }
   2 localDeclaration D = { fileMenu$1 } U = { javax.swing.JMenu.!JMenu( java.lang.String ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenu#JMenu( java.lang.String )
   5 actualOut D = { javax.swing.JMenu.!JMenu( java.lang.String ), javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, javax.swing.JMenu.!javax.swing.JMenu.menuEvent } U = {  }
   6 assignment D = {  } U = { fileMenu$1.!setMnemonic( char ) }
   7 receiver D = {  } U = { fileMenu$1 }
   8 methodCall D = {  } U = { fileMenu$1.!javax.swing.AbstractButton.model, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
   9 actualOut D = { fileMenu$1.!setMnemonic( char ) } U = { fileMenu$1.!javax.swing.AbstractButton.model, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model }
  10 assignment D = {  } U = { menuBar$0.!add( javax.swing.JMenu ) }
  11 receiver D = {  } U = { menuBar$0 }
  12 methodCall D = {  } U = { fileMenu$1 } TO = javax.swing.JMenuBar#add( javax.swing.JMenu )
  13 actualOut D = { menuBar$0.!add( javax.swing.JMenu ) } U = {  }
  14 assignment D = {  } U = { this.!initFileActions( ) }
  15 receiver D = {  } U = {  }
  16 methodCall D = {  } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initFileActions( )
  17 actualOut D = { this.!initFileActions( ), this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.description, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.height, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.location, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  18 assignment D = {  } U = { this.!initFileMenu( javax.swing.JMenu ) }
  19 receiver D = {  } U = {  }
  20 methodCall D = {  } U = { KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK, KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK, KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK, this.closeItem$3.!javax.swing.AbstractButton.listenerList, this.closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.emptyListItem$9.!javax.swing.AbstractButton.model, this.exitItem$13.!javax.swing.AbstractButton.listenerList, this.fileListMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newAction, this.newItem$1.!java.awt.Component.changeSupport, this.newItem$1.!java.awt.Component.height, this.newItem$1.!java.awt.Component.width, this.newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.newItem$1.!javax.swing.AbstractButton.accessibleContext, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.AbstractButton.model, this.newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openAction, this.openItem$2.!javax.swing.AbstractButton.accessibleContext, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.saveAction, this.saveAsItem$6.!javax.swing.AbstractButton.listenerList, this.saveItem$5.!javax.swing.AbstractButton.accessibleContext, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initFileMenu( javax.swing.JMenu )
  21 actualIn D = {  } U = { fileMenu$1 }
  22 actualOut D = { this.!initFileMenu( javax.swing.JMenu ), this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, this.javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, this.javax.swing.JMenu.!javax.swing.JMenu.menuEvent, this.javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator } U = { KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK, KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK, KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK, this.closeItem$3.!javax.swing.AbstractButton.listenerList, this.closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.emptyListItem$9.!javax.swing.AbstractButton.model, this.exitItem$13.!javax.swing.AbstractButton.listenerList, this.fileListMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newAction, this.newItem$1.!java.awt.Component.changeSupport, this.newItem$1.!java.awt.Component.height, this.newItem$1.!java.awt.Component.width, this.newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.newItem$1.!javax.swing.AbstractButton.accessibleContext, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.AbstractButton.model, this.newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openAction, this.openItem$2.!javax.swing.AbstractButton.accessibleContext, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.saveAction, this.saveAsItem$6.!javax.swing.AbstractButton.listenerList, this.saveItem$5.!javax.swing.AbstractButton.accessibleContext, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator }
  23 localDeclaration D = { editMenu$2 } U = { javax.swing.JMenu.!JMenu( java.lang.String ) }
  24 receiver D = {  } U = {  }
  25 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenu#JMenu( java.lang.String )
  26 actualOut D = { javax.swing.JMenu.!JMenu( java.lang.String ), javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, javax.swing.JMenu.!javax.swing.JMenu.menuEvent } U = {  }
  27 assignment D = {  } U = { editMenu$2.!setMnemonic( char ) }
  28 receiver D = {  } U = { editMenu$2 }
  29 methodCall D = {  } U = { editMenu$2.!javax.swing.AbstractButton.model, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  30 actualOut D = { editMenu$2.!setMnemonic( char ) } U = { editMenu$2.!javax.swing.AbstractButton.model, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model }
  31 assignment D = {  } U = { menuBar$0.!add( javax.swing.JMenu ) }
  32 receiver D = {  } U = { menuBar$0 }
  33 methodCall D = {  } U = { editMenu$2 } TO = javax.swing.JMenuBar#add( javax.swing.JMenu )
  34 actualOut D = { menuBar$0.!add( javax.swing.JMenu ) } U = {  }
  35 assignment D = {  } U = { this.!initEditActions( ) }
  36 receiver D = {  } U = {  }
  37 methodCall D = {  } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initEditActions( )
  38 actualOut D = { this.!initEditActions( ), this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.description, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.height, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.location, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  39 assignment D = {  } U = { this.!initEditMenu( javax.swing.JMenu ) }
  40 receiver D = {  } U = {  }
  41 methodCall D = {  } U = { KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK, KeyEvent.VK_DELETE, KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK, KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK, KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK, KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK, this.copyAction, this.copyItem$4.!javax.swing.AbstractButton.accessibleContext, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutAction, this.cutItem$3.!javax.swing.AbstractButton.accessibleContext, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.AbstractButton.model, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteAction, this.deleteItem$6.!javax.swing.AbstractButton.accessibleContext, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.pasteAction, this.pasteItem$5.!javax.swing.AbstractButton.accessibleContext, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoAction, this.redoItem$2.!javax.swing.AbstractButton.accessibleContext, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.undoAction, this.undoItem$1.!java.awt.Component.changeSupport, this.undoItem$1.!java.awt.Component.height, this.undoItem$1.!java.awt.Component.width, this.undoItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.undoItem$1.!javax.swing.AbstractButton.accessibleContext, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.AbstractButton.model, this.undoItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.undoItem$1.!javax.swing.JMenuItem.accelerator } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initEditMenu( javax.swing.JMenu )
  42 actualIn D = {  } U = { editMenu$2 }
  43 actualOut D = { this.!initEditMenu( javax.swing.JMenu ), this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.JMenuItem.accelerator } U = { KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK, KeyEvent.VK_DELETE, KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK, KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK, KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK, KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK, this.copyAction, this.copyItem$4.!javax.swing.AbstractButton.accessibleContext, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutAction, this.cutItem$3.!javax.swing.AbstractButton.accessibleContext, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.AbstractButton.model, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteAction, this.deleteItem$6.!javax.swing.AbstractButton.accessibleContext, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.pasteAction, this.pasteItem$5.!javax.swing.AbstractButton.accessibleContext, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoAction, this.redoItem$2.!javax.swing.AbstractButton.accessibleContext, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.undoAction, this.undoItem$1.!java.awt.Component.changeSupport, this.undoItem$1.!java.awt.Component.height, this.undoItem$1.!java.awt.Component.width, this.undoItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.undoItem$1.!javax.swing.AbstractButton.accessibleContext, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.AbstractButton.model, this.undoItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.undoItem$1.!javax.swing.JMenuItem.accelerator }
  44 localDeclaration D = { windowMenu$3 } U = { javax.swing.JMenu.!JMenu( java.lang.String ) }
  45 receiver D = {  } U = {  }
  46 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenu#JMenu( java.lang.String )
  47 actualOut D = { javax.swing.JMenu.!JMenu( java.lang.String ), javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, javax.swing.JMenu.!javax.swing.JMenu.menuEvent } U = {  }
  48 assignment D = {  } U = { windowMenu$3.!setMnemonic( char ) }
  49 receiver D = {  } U = { windowMenu$3 }
  50 methodCall D = {  } U = { javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model, windowMenu$3.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  51 actualOut D = { windowMenu$3.!setMnemonic( char ) } U = { javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model, windowMenu$3.!javax.swing.AbstractButton.model }
  52 assignment D = {  } U = { menuBar$0.!add( javax.swing.JMenu ) }
  53 receiver D = {  } U = { menuBar$0 }
  54 methodCall D = {  } U = { windowMenu$3 } TO = javax.swing.JMenuBar#add( javax.swing.JMenu )
  55 actualOut D = { menuBar$0.!add( javax.swing.JMenu ) } U = {  }
  56 assignment D = { this.windowListener } U = { .!ActionListener( ) }
  57 receiver D = {  } U = {  }
  58 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
  59 actualOut D = { .!ActionListener( ) } U = {  }
  60 assignment D = {  } U = { windowMenu$3.!addMenuListener( javax.swing.event.MenuListener ) }
  61 receiver D = {  } U = { windowMenu$3 }
  62 methodCall D = {  } U = { .!MenuListener( ), javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.JMenu.listenerList, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.event.EventListenerList.listenerList, windowMenu$3.!javax.swing.JMenu.listenerList, windowMenu$3.!javax.swing.event.EventListenerList.NULL_ARRAY, windowMenu$3.!javax.swing.event.EventListenerList.listenerList } TO = javax.swing.JMenu#addMenuListener( javax.swing.event.MenuListener )
  63 receiver D = {  } U = {  }
  64 constructorCall D = {  } U = {  } TO = javax.swing.event.MenuListener#MenuListener( )
  65 actualOut D = { .!MenuListener( ) } U = {  }
  66 actualOut D = { windowMenu$3.!addMenuListener( javax.swing.event.MenuListener ), windowMenu$3.!javax.swing.event.EventListenerList.listenerList } U = { javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.JMenu.listenerList, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.event.EventListenerList.listenerList, windowMenu$3.!javax.swing.JMenu.listenerList, windowMenu$3.!javax.swing.event.EventListenerList.NULL_ARRAY, windowMenu$3.!javax.swing.event.EventListenerList.listenerList }
  68 formalOut D = {  } U = { $_ }
  16+ actualOutByFieldAccess D = { this.newAction } U = {  }
  16+ actualOutByFieldAccess D = { this.openAction } U = {  }
  16+ actualOutByFieldAccess D = { this.saveAction } U = {  }
  20+ actualOutByFieldAccess D = { this.fileListMenu } U = {  }
  20+ actualOutByFieldAccess D = { this.fileListener } U = {  }
  37+ actualOutByFieldAccess D = { this.copyAction } U = {  }
  37+ actualOutByFieldAccess D = { this.cutAction } U = {  }
  37+ actualOutByFieldAccess D = { this.deleteAction } U = {  }
  37+ actualOutByFieldAccess D = { this.pasteAction } U = {  }
  37+ actualOutByFieldAccess D = { this.redoAction } U = {  }
  37+ actualOutByFieldAccess D = { this.undoAction } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#pasteAction ]
   1 fieldDeclaration D = { this.pasteAction } U = { this.pasteAction }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#initFileMenu( javax.swing.JMenu ) ]
   1 formalIn D = { menu$0 } U = {  }
   2 localDeclaration D = { newItem$1 } U = { menu$0.!add( javax.swing.Action ) }
   3 receiver D = {  } U = { menu$0 }
   4 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.newAction } TO = javax.swing.JMenu#add( javax.swing.Action )
   5 actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
   6 assignment D = {  } U = { newItem$1.!setMnemonic( char ) }
   7 receiver D = {  } U = { newItem$1 }
   8 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, newItem$1.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
   9 actualOut D = { newItem$1.!setMnemonic( char ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, newItem$1.!javax.swing.AbstractButton.model }
  10 assignment D = {  } U = { newItem$1.!setIcon( javax.swing.Icon ) }
  11 receiver D = {  } U = { newItem$1 }
  12 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, newItem$1.!java.awt.Component.changeSupport, newItem$1.!java.awt.Component.height, newItem$1.!java.awt.Component.width, newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, newItem$1.!javax.swing.AbstractButton.accessibleContext, newItem$1.!javax.swing.AbstractButton.defaultIcon, newItem$1.!javax.swing.AbstractButton.disabledIcon, newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  13 actualOut D = { newItem$1.!javax.swing.AbstractButton.defaultIcon, newItem$1.!javax.swing.AbstractButton.disabledIcon, newItem$1.!setIcon( javax.swing.Icon ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, newItem$1.!java.awt.Component.changeSupport, newItem$1.!java.awt.Component.height, newItem$1.!java.awt.Component.width, newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, newItem$1.!javax.swing.AbstractButton.accessibleContext, newItem$1.!javax.swing.AbstractButton.defaultIcon, newItem$1.!javax.swing.AbstractButton.disabledIcon, newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled }
  14 assignment D = {  } U = { newItem$1.!setAccelerator( javax.swing.KeyStroke ) }
  15 receiver D = {  } U = { newItem$1 }
  16 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, newItem$1.!java.awt.Component.changeSupport, newItem$1.!java.awt.Component.height, newItem$1.!java.awt.Component.width, newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, newItem$1.!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  19 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
  20 actualOut D = { newItem$1.!javax.swing.JMenuItem.accelerator, newItem$1.!setAccelerator( javax.swing.KeyStroke ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, newItem$1.!java.awt.Component.changeSupport, newItem$1.!java.awt.Component.height, newItem$1.!java.awt.Component.width, newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, newItem$1.!javax.swing.JMenuItem.accelerator }
  21 localDeclaration D = { openItem$2 } U = { menu$0.!add( javax.swing.Action ) }
  22 receiver D = {  } U = { menu$0 }
  23 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.openAction } TO = javax.swing.JMenu#add( javax.swing.Action )
  24 actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
  25 assignment D = {  } U = { openItem$2.!setMnemonic( char ) }
  26 receiver D = {  } U = { openItem$2 }
  27 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, openItem$2.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  28 actualOut D = { openItem$2.!setMnemonic( char ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, openItem$2.!javax.swing.AbstractButton.model }
  29 assignment D = {  } U = { openItem$2.!setIcon( javax.swing.Icon ) }
  30 receiver D = {  } U = { openItem$2 }
  31 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, openItem$2.!java.awt.Component.changeSupport, openItem$2.!java.awt.Component.height, openItem$2.!java.awt.Component.width, openItem$2.!javax.accessibility.AccessibleContext.accessibleChangeSupport, openItem$2.!javax.swing.AbstractButton.accessibleContext, openItem$2.!javax.swing.AbstractButton.defaultIcon, openItem$2.!javax.swing.AbstractButton.disabledIcon, openItem$2.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  32 actualOut D = { openItem$2.!javax.swing.AbstractButton.defaultIcon, openItem$2.!javax.swing.AbstractButton.disabledIcon, openItem$2.!setIcon( javax.swing.Icon ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, openItem$2.!java.awt.Component.changeSupport, openItem$2.!java.awt.Component.height, openItem$2.!java.awt.Component.width, openItem$2.!javax.accessibility.AccessibleContext.accessibleChangeSupport, openItem$2.!javax.swing.AbstractButton.accessibleContext, openItem$2.!javax.swing.AbstractButton.defaultIcon, openItem$2.!javax.swing.AbstractButton.disabledIcon, openItem$2.!javax.swing.JComponent.revalidateRunnableScheduled }
  33 assignment D = {  } U = { openItem$2.!setAccelerator( javax.swing.KeyStroke ) }
  34 receiver D = {  } U = { openItem$2 }
  35 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, openItem$2.!java.awt.Component.changeSupport, openItem$2.!java.awt.Component.height, openItem$2.!java.awt.Component.width, openItem$2.!javax.swing.JComponent.revalidateRunnableScheduled, openItem$2.!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  36 receiver D = {  } U = {  }
  37 methodCall D = {  } U = { KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  38 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
  39 actualOut D = { openItem$2.!javax.swing.JMenuItem.accelerator, openItem$2.!setAccelerator( javax.swing.KeyStroke ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, openItem$2.!java.awt.Component.changeSupport, openItem$2.!java.awt.Component.height, openItem$2.!java.awt.Component.width, openItem$2.!javax.swing.JComponent.revalidateRunnableScheduled, openItem$2.!javax.swing.JMenuItem.accelerator }
  40 localDeclaration D = { closeItem$3 } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ) }
  41 receiver D = {  } U = {  }
  42 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
  43 actualOut D = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ), javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged } U = {  }
  44 assignment D = {  } U = { closeItem$3.!setMnemonic( char ) }
  45 receiver D = {  } U = { closeItem$3 }
  46 methodCall D = {  } U = { closeItem$3.!javax.swing.AbstractButton.model, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  47 actualOut D = { closeItem$3.!setMnemonic( char ) } U = { closeItem$3.!javax.swing.AbstractButton.model, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model }
  48 assignment D = {  } U = { menu$0.!add( javax.swing.JMenuItem ) }
  49 receiver D = {  } U = { menu$0 }
  50 methodCall D = {  } U = { closeItem$3, menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
  51 actualOut D = { menu$0.!add( javax.swing.JMenuItem ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
  52 assignment D = {  } U = { closeItem$3.!addActionListener( java.awt.event.ActionListener ) }
  53 receiver D = {  } U = { closeItem$3 }
  54 methodCall D = {  } U = { .!ActionListener( ), closeItem$3.!javax.swing.AbstractButton.listenerList, closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, closeItem$3.!javax.swing.event.EventListenerList.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList } TO = javax.swing.AbstractButton#addActionListener( java.awt.event.ActionListener )
  55 receiver D = {  } U = {  }
  56 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
  57 actualOut D = { .!ActionListener( ) } U = {  }
  58 actualOut D = { closeItem$3.!addActionListener( java.awt.event.ActionListener ), closeItem$3.!javax.swing.event.EventListenerList.listenerList } U = { closeItem$3.!javax.swing.AbstractButton.listenerList, closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, closeItem$3.!javax.swing.event.EventListenerList.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList }
  59 assignment D = {  } U = { menu$0.!addSeparator( ) }
  60 receiver D = {  } U = { menu$0 }
  61 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#addSeparator( )
  62 actualOut D = { menu$0.!addSeparator( ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
  63 localDeclaration D = { saveItem$5 } U = { menu$0.!add( javax.swing.Action ) }
  64 receiver D = {  } U = { menu$0 }
  65 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.saveAction } TO = javax.swing.JMenu#add( javax.swing.Action )
  66 actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
  67 assignment D = {  } U = { saveItem$5.!setMnemonic( char ) }
  68 receiver D = {  } U = { saveItem$5 }
  69 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, saveItem$5.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  70 actualOut D = { saveItem$5.!setMnemonic( char ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, saveItem$5.!javax.swing.AbstractButton.model }
  71 assignment D = {  } U = { saveItem$5.!setIcon( javax.swing.Icon ) }
  72 receiver D = {  } U = { saveItem$5 }
  73 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, saveItem$5.!java.awt.Component.changeSupport, saveItem$5.!java.awt.Component.height, saveItem$5.!java.awt.Component.width, saveItem$5.!javax.accessibility.AccessibleContext.accessibleChangeSupport, saveItem$5.!javax.swing.AbstractButton.accessibleContext, saveItem$5.!javax.swing.AbstractButton.defaultIcon, saveItem$5.!javax.swing.AbstractButton.disabledIcon, saveItem$5.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  74 actualOut D = { saveItem$5.!javax.swing.AbstractButton.defaultIcon, saveItem$5.!javax.swing.AbstractButton.disabledIcon, saveItem$5.!setIcon( javax.swing.Icon ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, saveItem$5.!java.awt.Component.changeSupport, saveItem$5.!java.awt.Component.height, saveItem$5.!java.awt.Component.width, saveItem$5.!javax.accessibility.AccessibleContext.accessibleChangeSupport, saveItem$5.!javax.swing.AbstractButton.accessibleContext, saveItem$5.!javax.swing.AbstractButton.defaultIcon, saveItem$5.!javax.swing.AbstractButton.disabledIcon, saveItem$5.!javax.swing.JComponent.revalidateRunnableScheduled }
  75 assignment D = {  } U = { saveItem$5.!setAccelerator( javax.swing.KeyStroke ) }
  76 receiver D = {  } U = { saveItem$5 }
  77 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, saveItem$5.!java.awt.Component.changeSupport, saveItem$5.!java.awt.Component.height, saveItem$5.!java.awt.Component.width, saveItem$5.!javax.swing.JComponent.revalidateRunnableScheduled, saveItem$5.!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  78 receiver D = {  } U = {  }
  79 methodCall D = {  } U = { KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  80 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
  81 actualOut D = { saveItem$5.!javax.swing.JMenuItem.accelerator, saveItem$5.!setAccelerator( javax.swing.KeyStroke ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, saveItem$5.!java.awt.Component.changeSupport, saveItem$5.!java.awt.Component.height, saveItem$5.!java.awt.Component.width, saveItem$5.!javax.swing.JComponent.revalidateRunnableScheduled, saveItem$5.!javax.swing.JMenuItem.accelerator }
  82 localDeclaration D = { saveAsItem$6 } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ) }
  83 receiver D = {  } U = {  }
  84 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
  85 actualOut D = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ), javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged } U = {  }
  86 assignment D = {  } U = { saveAsItem$6.!setMnemonic( char ) }
  87 receiver D = {  } U = { saveAsItem$6 }
  88 methodCall D = {  } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model, saveAsItem$6.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  89 actualOut D = { saveAsItem$6.!setMnemonic( char ) } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model, saveAsItem$6.!javax.swing.AbstractButton.model }
  90 assignment D = {  } U = { menu$0.!add( javax.swing.JMenuItem ) }
  91 receiver D = {  } U = { menu$0 }
  92 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu, saveAsItem$6 } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
  93 actualOut D = { menu$0.!add( javax.swing.JMenuItem ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
  94 assignment D = {  } U = { saveAsItem$6.!addActionListener( java.awt.event.ActionListener ) }
  95 receiver D = {  } U = { saveAsItem$6 }
  96 methodCall D = {  } U = { .!ActionListener( ), javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList, saveAsItem$6.!javax.swing.AbstractButton.listenerList, saveAsItem$6.!javax.swing.event.EventListenerList.NULL_ARRAY, saveAsItem$6.!javax.swing.event.EventListenerList.listenerList } TO = javax.swing.AbstractButton#addActionListener( java.awt.event.ActionListener )
  97 receiver D = {  } U = {  }
  98 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
  99 actualOut D = { .!ActionListener( ) } U = {  }
 100 actualOut D = { saveAsItem$6.!addActionListener( java.awt.event.ActionListener ), saveAsItem$6.!javax.swing.event.EventListenerList.listenerList } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList, saveAsItem$6.!javax.swing.AbstractButton.listenerList, saveAsItem$6.!javax.swing.event.EventListenerList.NULL_ARRAY, saveAsItem$6.!javax.swing.event.EventListenerList.listenerList }
 101 assignment D = {  } U = { menu$0.!addSeparator( ) }
 102 receiver D = {  } U = { menu$0 }
 103 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#addSeparator( )
 104 actualOut D = { menu$0.!addSeparator( ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
 105 assignment D = { this.fileListMenu } U = { javax.swing.JMenu.!JMenu( java.lang.String ) }
 106 receiver D = {  } U = {  }
 107 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenu#JMenu( java.lang.String )
 108 actualOut D = { javax.swing.JMenu.!JMenu( java.lang.String ), javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, javax.swing.JMenu.!javax.swing.JMenu.menuEvent } U = {  }
 109 assignment D = {  } U = { this.fileListMenu.!setMnemonic( char ) }
 110 receiver D = {  } U = { this.fileListMenu }
 111 methodCall D = {  } U = { javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model, this.fileListMenu.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
 112 actualOut D = { this.fileListMenu.!setMnemonic( char ) } U = { javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model, this.fileListMenu.!javax.swing.AbstractButton.model }
 113 assignment D = {  } U = { menu$0.!add( javax.swing.JMenuItem ) }
 114 receiver D = {  } U = { menu$0 }
 115 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu, this.fileListMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
 116 actualOut D = { menu$0.!add( javax.swing.JMenuItem ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
 117 localDeclaration D = { emptyListItem$9 } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ) }
 118 receiver D = {  } U = {  }
 119 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
 120 actualOut D = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ), javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged } U = {  }
 121 assignment D = {  } U = { emptyListItem$9.!setEnabled( boolean ) }
 122 receiver D = {  } U = { emptyListItem$9 }
 123 methodCall D = {  } U = { emptyListItem$9.!javax.swing.AbstractButton.model, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model } TO = javax.swing.JMenuItem#setEnabled( boolean )
 124 actualOut D = { emptyListItem$9.!setEnabled( boolean ) } U = { emptyListItem$9.!javax.swing.AbstractButton.model, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model }
 125 assignment D = {  } U = { this.fileListMenu.!add( javax.swing.JMenuItem ) }
 126 receiver D = {  } U = { this.fileListMenu }
 127 methodCall D = {  } U = { emptyListItem$9, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.JMenu.popupMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
 128 actualOut D = { this.fileListMenu.!add( javax.swing.JMenuItem ), this.fileListMenu.!javax.swing.JMenu.popupListener, this.fileListMenu.!javax.swing.JMenu.popupMenu } U = { javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.JMenu.popupMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu }
 129 assignment D = { this.fileListener } U = { .!ActionListener( ) }
 130 receiver D = {  } U = {  }
 131 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
 132 actualOut D = { .!ActionListener( ) } U = {  }
 133 assignment D = {  } U = { menu$0.!addSeparator( ) }
 134 receiver D = {  } U = { menu$0 }
 135 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#addSeparator( )
 136 actualOut D = { menu$0.!addSeparator( ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
 137 localDeclaration D = { exitItem$13 } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ) }
 138 receiver D = {  } U = {  }
 139 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
 140 actualOut D = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ), javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged } U = {  }
 141 assignment D = {  } U = { exitItem$13.!setMnemonic( char ) }
 142 receiver D = {  } U = { exitItem$13 }
 143 methodCall D = {  } U = { exitItem$13.!javax.swing.AbstractButton.model, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
 144 actualOut D = { exitItem$13.!setMnemonic( char ) } U = { exitItem$13.!javax.swing.AbstractButton.model, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model }
 145 assignment D = {  } U = { menu$0.!add( javax.swing.JMenuItem ) }
 146 receiver D = {  } U = { menu$0 }
 147 methodCall D = {  } U = { exitItem$13, menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
 148 actualOut D = { menu$0.!add( javax.swing.JMenuItem ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
 149 assignment D = {  } U = { exitItem$13.!addActionListener( java.awt.event.ActionListener ) }
 150 receiver D = {  } U = { exitItem$13 }
 151 methodCall D = {  } U = { .!ActionListener( ), exitItem$13.!javax.swing.AbstractButton.listenerList, exitItem$13.!javax.swing.event.EventListenerList.NULL_ARRAY, exitItem$13.!javax.swing.event.EventListenerList.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList } TO = javax.swing.AbstractButton#addActionListener( java.awt.event.ActionListener )
 152 receiver D = {  } U = {  }
 153 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
 154 actualOut D = { .!ActionListener( ) } U = {  }
 155 actualOut D = { exitItem$13.!addActionListener( java.awt.event.ActionListener ), exitItem$13.!javax.swing.event.EventListenerList.listenerList } U = { exitItem$13.!javax.swing.AbstractButton.listenerList, exitItem$13.!javax.swing.event.EventListenerList.NULL_ARRAY, exitItem$13.!javax.swing.event.EventListenerList.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList }
 157 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#updateUndoState( ) ]
   1 localDeclaration D = { canvas$0 } U = { this.tabbedCanvas.!getCurrentCanvas( ) }
   2 receiver D = {  } U = { this.tabbedCanvas }
   3 methodCall D = {  } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCurrentCanvas( )
   4 actualOut D = { this.tabbedCanvas.!getCurrentCanvas( ) } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
   5 ifSt D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).changed, this.tabbedCanvas.!getCurrentCanvas( ).curX, this.tabbedCanvas.!getCurrentCanvas( ).curY, this.tabbedCanvas.!getCurrentCanvas( ).currentFigure, this.tabbedCanvas.!getCurrentCanvas( ).figureManager, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure, this.tabbedCanvas.!getCurrentCanvas( ).isGrabMode, this.tabbedCanvas.!getCurrentCanvas( ).menu, this.tabbedCanvas.!getCurrentCanvas( ).selector, this.tabbedCanvas.!getCurrentCanvas( ).support, this.tabbedCanvas.!getCurrentCanvas( ).undoManager }
   6 returnSt D = {  } U = {  }
   8 localDeclaration D = { undoManager$1 } U = { canvas$0.!getUndoManager( ) }
   9 receiver D = {  } U = { canvas$0 }
  10 methodCall D = {  } U = { canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).undoManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getUndoManager( )
  11 actualOut D = { canvas$0.!getUndoManager( ) } U = { canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).undoManager }
  12 ifSt D = {  } U = { undoManager$1, undoManager$1.!canUndo( ) }
  13 receiver D = {  } U = { undoManager$1 }
  14 methodCall D = {  } U = { canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.edits, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.inProgress, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.indexOfNextAdd, undoManager$1.!javax.swing.undo.UndoManager.edits, undoManager$1.!javax.swing.undo.UndoManager.inProgress, undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd } TO = javax.swing.undo.UndoManager#canUndo( )
  15 actualOut D = { undoManager$1.!canUndo( ) } U = { canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.edits, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.inProgress, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.indexOfNextAdd, undoManager$1.!javax.swing.undo.UndoManager.edits, undoManager$1.!javax.swing.undo.UndoManager.inProgress, undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd }
  16 assignment D = {  } U = { this.undoAction.!setEnabled( boolean ) }
  17 receiver D = {  } U = { this.undoAction }
  18 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  19 actualOut D = { this.undoAction.!setEnabled( boolean ) } U = {  }
  20 assignment D = {  } U = { this.undoAction.!setEnabled( boolean ) }
  21 receiver D = {  } U = { this.undoAction }
  22 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  23 actualOut D = { this.undoAction.!setEnabled( boolean ) } U = {  }
  26 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { canvas$0 } U = {  }
   3 returnSt D = { $_ } U = { this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String ) }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = { System.err, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String )
   6 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
   7 actualIn D = {  } U = { canvas$0.!getFigureManager( ).!getFilename( ) }
   8 receiver D = {  } U = { canvas$0.!getFigureManager( ) }
   9 receiver D = {  } U = { canvas$0 }
  10 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  11 actualOut D = { canvas$0.!getFigureManager( ) } U = {  }
  12 methodCall D = {  } U = { canvas$0.!getFigureManager( ).filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
  13 actualOut D = { canvas$0.!getFigureManager( ).!getFilename( ) } U = { canvas$0.!getFigureManager( ).filename }
  14 actualOut D = { this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String ), this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, this.canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count } U = { System.err, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  16 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#buildRecentFileMenu( ) ]
   1 assignment D = {  } U = { this.fileListMenu.!removeAll( ) }
   2 receiver D = {  } U = { this.fileListMenu }
   3 methodCall D = {  } U = { this.fileListMenu.!java.awt.Container.component, this.fileListMenu.!java.awt.Container.containerListener, this.fileListMenu.!java.awt.Container.descendantsCount, this.fileListMenu.!java.awt.Container.eventMask, this.fileListMenu.!java.awt.Container.layoutMgr, this.fileListMenu.!java.awt.Container.listeningBoundsChildren, this.fileListMenu.!java.awt.Container.listeningChildren, this.fileListMenu.!java.awt.Container.peer, this.fileListMenu.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#removeAll( )
   4 actualOut D = { this.fileListMenu.!java.awt.Component.parent, this.fileListMenu.!removeAll( ) } U = { this.fileListMenu.!java.awt.Container.component, this.fileListMenu.!java.awt.Container.containerListener, this.fileListMenu.!java.awt.Container.descendantsCount, this.fileListMenu.!java.awt.Container.eventMask, this.fileListMenu.!java.awt.Container.layoutMgr, this.fileListMenu.!java.awt.Container.listeningBoundsChildren, this.fileListMenu.!java.awt.Container.listeningChildren, this.fileListMenu.!java.awt.Container.peer, this.fileListMenu.!javax.swing.JMenu.popupMenu }
   5 enhancedForSt D = { filename$0 } U = { this.recentFiles }
   6 localDeclaration D = { fileItem$2 } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ) }
   7 receiver D = {  } U = {  }
   8 constructorCall D = {  } U = { filename$0 } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
   9 actualOut D = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ), javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged } U = {  }
  10 assignment D = {  } U = { this.fileListMenu.!add( javax.swing.JMenuItem ) }
  11 receiver D = {  } U = { this.fileListMenu }
  12 methodCall D = {  } U = { fileItem$2, this.fileListMenu.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
  13 actualOut D = { this.fileListMenu.!add( javax.swing.JMenuItem ), this.fileListMenu.!javax.swing.JMenu.popupListener, this.fileListMenu.!javax.swing.JMenu.popupMenu } U = { this.fileListMenu.!javax.swing.JMenu.popupMenu }
  14 assignment D = {  } U = { fileItem$2.!addActionListener( java.awt.event.ActionListener ) }
  15 receiver D = {  } U = { fileItem$2 }
  16 methodCall D = {  } U = { fileItem$2.!javax.swing.AbstractButton.listenerList, fileItem$2.!javax.swing.event.EventListenerList.NULL_ARRAY, fileItem$2.!javax.swing.event.EventListenerList.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList, this.fileListener } TO = javax.swing.AbstractButton#addActionListener( java.awt.event.ActionListener )
  17 actualOut D = { fileItem$2.!addActionListener( java.awt.event.ActionListener ), fileItem$2.!javax.swing.event.EventListenerList.listenerList } U = { fileItem$2.!javax.swing.AbstractButton.listenerList, fileItem$2.!javax.swing.event.EventListenerList.NULL_ARRAY, fileItem$2.!javax.swing.event.EventListenerList.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList }
  19 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#openFile( java.lang.String ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 throwsClause D = {  } U = { $java.lang.NumberFormatException }
   3 formalIn D = { filename$0 } U = {  }
   4 localDeclaration D = { canvas$1 } U = { this.tabbedCanvas.!getCanvas( java.lang.String ) }
   5 receiver D = {  } U = { this.tabbedCanvas }
   6 methodCall D = {  } U = { canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvases } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCanvas( java.lang.String )
   7 actualIn D = {  } U = { filename$0 }
   8 actualOut D = { this.tabbedCanvas.!getCanvas( java.lang.String ) } U = { canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvases }
   9 ifSt D = {  } U = { this.tabbedCanvas.!getCanvas( java.lang.String ) }
  10 receiver D = {  } U = { this.tabbedCanvas }
  11 methodCall D = {  } U = { canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.!getCanvas( java.lang.String ).changed, this.tabbedCanvas.!getCanvas( java.lang.String ).curX, this.tabbedCanvas.!getCanvas( java.lang.String ).curY, this.tabbedCanvas.!getCanvas( java.lang.String ).currentFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager, this.tabbedCanvas.!getCanvas( java.lang.String ).grabbedFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).isGrabMode, this.tabbedCanvas.!getCanvas( java.lang.String ).menu, this.tabbedCanvas.!getCanvas( java.lang.String ).selector, this.tabbedCanvas.!getCanvas( java.lang.String ).support, this.tabbedCanvas.!getCanvas( java.lang.String ).undoManager, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvases, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).filename, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCanvas( java.lang.String )
  12 actualIn D = {  } U = { filename$0 }
  13 actualOut D = { this.tabbedCanvas.!getCanvas( java.lang.String ) } U = { canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.!getCanvas( java.lang.String ).changed, this.tabbedCanvas.!getCanvas( java.lang.String ).curX, this.tabbedCanvas.!getCanvas( java.lang.String ).curY, this.tabbedCanvas.!getCanvas( java.lang.String ).currentFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager, this.tabbedCanvas.!getCanvas( java.lang.String ).grabbedFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).isGrabMode, this.tabbedCanvas.!getCanvas( java.lang.String ).menu, this.tabbedCanvas.!getCanvas( java.lang.String ).selector, this.tabbedCanvas.!getCanvas( java.lang.String ).support, this.tabbedCanvas.!getCanvas( java.lang.String ).undoManager, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvases, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).filename, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager }
  14 ifSt D = {  } U = { canvas$1.!hasChanged( ) }
  15 receiver D = {  } U = { canvas$1 }
  16 methodCall D = {  } U = { canvas$1.changed } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#hasChanged( )
  17 actualOut D = { canvas$1.!hasChanged( ) } U = { canvas$1.changed }
  18 assignment D = {  } U = { this.!showMessageDialog( java.awt.Component java.lang.Object ) }
  19 receiver D = {  } U = {  }
  20 methodCall D = {  } U = { $java.lang.String, filename$0, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showMessageDialog( java.awt.Component java.lang.Object )
  21 actualOut D = { this.!showMessageDialog( java.awt.Component java.lang.Object ) } U = {  }
  22 returnSt D = { $_ } U = {  }
  23 localDeclaration D = { confirm$2 } U = { this.!showConfirmDialog( java.awt.Component java.lang.Object java.lang.String int ) }
  24 receiver D = {  } U = {  }
  25 methodCall D = {  } U = { $java.lang.String, this.tool, this.tool.YES_NO_OPTION, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showConfirmDialog( java.awt.Component java.lang.Object java.lang.String int )
  26 actualOut D = { this.!showConfirmDialog( java.awt.Component java.lang.Object java.lang.String int ) } U = {  }
  27 ifSt D = {  } U = { confirm$2, confirm$2.NO_OPTION }
  28 returnSt D = { $_ } U = {  }
  31 assignment D = { canvas$1 } U = { this.tabbedCanvas.!openTab( java.lang.String ) }
  32 receiver D = {  } U = { this.tabbedCanvas }
  33 methodCall D = {  } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.figureManager.figures, this.figureManager.filename, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.tabbedCanvas.!getCanvas( java.lang.String ).changed, this.tabbedCanvas.!getCanvas( java.lang.String ).curX, this.tabbedCanvas.!getCanvas( java.lang.String ).curY, this.tabbedCanvas.!getCanvas( java.lang.String ).currentFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager, this.tabbedCanvas.!getCanvas( java.lang.String ).grabbedFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).isGrabMode, this.tabbedCanvas.!getCanvas( java.lang.String ).menu, this.tabbedCanvas.!getCanvas( java.lang.String ).selector, this.tabbedCanvas.!getCanvas( java.lang.String ).support, this.tabbedCanvas.!getCanvas( java.lang.String ).undoManager, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvas$1.support, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementCount, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementData, this.tabbedCanvas.canvas$1.support.!java.util.Vector.modCount, this.tabbedCanvas.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.tabbedCanvas.canvases, this.tabbedCanvas.fmanager$3.filename, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.coder, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.value, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.height, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.peer, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.width, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.dispatcher, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.peer, this.tabbedCanvas.menu, this.tabbedCanvas.selector, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!java.util.Vector.elementCount, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!java.util.Vector.elementData, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!java.util.Vector.modCount, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!javax.swing.undo.UndoableEditSupport.listeners } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#openTab( java.lang.String )
  34 actualIn D = {  } U = { filename$0 }
  35 actualOut D = { this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!openTab( java.lang.String ), this.tabbedCanvas.canvas$1.support.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.edits, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.inProgress, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.indexOfNextAdd, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.newEventsOnly, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.height, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.width, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.jp.ac.ritsumei.cs.draw.FigureManager.java.util.LinkedList.!java.util.LinkedList.size } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.figureManager.figures, this.figureManager.filename, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.tabbedCanvas.!getCanvas( java.lang.String ).changed, this.tabbedCanvas.!getCanvas( java.lang.String ).curX, this.tabbedCanvas.!getCanvas( java.lang.String ).curY, this.tabbedCanvas.!getCanvas( java.lang.String ).currentFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager, this.tabbedCanvas.!getCanvas( java.lang.String ).grabbedFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).isGrabMode, this.tabbedCanvas.!getCanvas( java.lang.String ).menu, this.tabbedCanvas.!getCanvas( java.lang.String ).selector, this.tabbedCanvas.!getCanvas( java.lang.String ).support, this.tabbedCanvas.!getCanvas( java.lang.String ).undoManager, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvas$1.support, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementCount, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementData, this.tabbedCanvas.canvas$1.support.!java.util.Vector.modCount, this.tabbedCanvas.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.tabbedCanvas.canvases, this.tabbedCanvas.fmanager$3.filename, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.coder, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.value, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.height, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.peer, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.width, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.dispatcher, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.peer, this.tabbedCanvas.menu, this.tabbedCanvas.selector, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!java.util.Vector.elementCount, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!java.util.Vector.elementData, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!java.util.Vector.modCount, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!javax.swing.undo.UndoableEditSupport.listeners }
  37 localDeclaration D = { result$3 } U = { canvas$1.!getFigureManager( ).!load( java.lang.String ) }
  38 receiver D = {  } U = { canvas$1.!getFigureManager( ) }
  39 receiver D = {  } U = { canvas$1 }
  40 methodCall D = {  } U = { canvas$1.figureManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.!openTab( java.lang.String ).figureManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  41 actualOut D = { canvas$1.!getFigureManager( ) } U = { canvas$1.figureManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.!openTab( java.lang.String ).figureManager }
  42 methodCall D = {  } U = { Color.black, FilledOval.name, FilledRect.name, Line.name, Oval.name, Rect.name, System.err, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.out, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.lock, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, canvas$1.!getFigureManager( ).figures, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, canvas$1.!getFigureManager( ).kind$0.!java.lang.String.COMPACT_STRINGS, canvas$1.!getFigureManager( ).kind$0.!java.lang.String.coder, canvas$1.!getFigureManager( ).kind$0.!java.lang.String.value, canvas$1.!getFigureManager( ).st$6.!java.lang.String.value, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.str, figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY, figure$17.color, figure$17.endX, figure$17.endY, figure$17.outlineWidth, figure$17.startX, figure$17.startY, figure$7.color, figure$7.endX, figure$7.endY, figure$7.outlineWidth, figure$7.startX, figure$7.startY, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.out, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.lock, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).figures, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).kind$0.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).kind$0.!java.lang.String.coder, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).kind$0.!java.lang.String.value, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.lang.String.value, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.str } TO = jp.ac.ritsumei.cs.draw.FigureManager#load( java.lang.String )
  43 actualIn D = {  } U = { filename$0 }
  44 actualOut D = { canvas$1.!getFigureManager( ).!load( java.lang.String ), canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.cs, canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.falpha, canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.frgbvalue, canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.fvalue, canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.value, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.cb, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.in, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.markedChar, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.markedSkipLF, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.nChars, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.nextChar, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.readAheadLimit, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.skipLF, canvas$1.!getFigureManager( ).java.io.FileReader.!java.io.InputStreamReader.sd, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.currentPosition, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.delimiters, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.delimsChanged, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.hasSurrogates, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.maxPosition, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.newPosition, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.retDelims, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.str, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition } U = { Color.black, FilledOval.name, FilledRect.name, Line.name, Oval.name, Rect.name, System.err, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.out, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.lock, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, canvas$1.!getFigureManager( ).figures, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, canvas$1.!getFigureManager( ).kind$0.!java.lang.String.COMPACT_STRINGS, canvas$1.!getFigureManager( ).kind$0.!java.lang.String.coder, canvas$1.!getFigureManager( ).kind$0.!java.lang.String.value, canvas$1.!getFigureManager( ).st$6.!java.lang.String.value, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.str, figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY, figure$17.color, figure$17.endX, figure$17.endY, figure$17.outlineWidth, figure$17.startX, figure$17.startY, figure$7.color, figure$7.endX, figure$7.endY, figure$7.outlineWidth, figure$7.startX, figure$7.startY, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.out, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.lock, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).figures, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).kind$0.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).kind$0.!java.lang.String.coder, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).kind$0.!java.lang.String.value, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.lang.String.value, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.str }
  45 ifSt D = {  } U = { result$3 }
  46 assignment D = {  } U = { this.!showMessageDialog( java.awt.Component java.lang.Object ) }
  47 receiver D = {  } U = {  }
  48 methodCall D = {  } U = { $java.lang.String, filename$0, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showMessageDialog( java.awt.Component java.lang.Object )
  49 actualOut D = { this.!showMessageDialog( java.awt.Component java.lang.Object ) } U = {  }
  50 returnSt D = { $_ } U = {  }
  52 assignment D = {  } U = { canvas$1.!setChanged( boolean ) }
  53 receiver D = {  } U = { canvas$1 }
  54 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setChanged( boolean )
  55 actualIn D = {  } U = {  }
  56 actualOut D = { canvas$1.!setChanged( boolean ) } U = {  }
  57 assignment D = {  } U = { this.tool.!setTitle( java.lang.String ) }
  58 receiver D = {  } U = { this.tool }
  59 methodCall D = {  } U = { filename$0, this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title } TO = java.awt.Frame#setTitle( java.lang.String )
  60 actualOut D = { this.tool.!java.awt.Frame.title, this.tool.!setTitle( java.lang.String ) } U = { this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title }
  61 assignment D = {  } U = { canvas$1.!repaint( ) }
  62 receiver D = {  } U = { canvas$1 }
  63 methodCall D = {  } U = { canvas$1.!java.awt.Component.height, canvas$1.!java.awt.Component.parent, canvas$1.!java.awt.Component.peer, canvas$1.!java.awt.Component.width, canvas$1.!java.awt.Component.x, canvas$1.!java.awt.Component.y, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.height, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.parent, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.peer, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.width, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.x, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.y } TO = java.awt.Component#repaint( )
  64 actualOut D = { canvas$1.!repaint( ) } U = { canvas$1.!java.awt.Component.height, canvas$1.!java.awt.Component.parent, canvas$1.!java.awt.Component.peer, canvas$1.!java.awt.Component.width, canvas$1.!java.awt.Component.x, canvas$1.!java.awt.Component.y, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.height, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.parent, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.peer, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.width, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.x, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.y }
  65 returnSt D = { $_ } U = {  }
  67 formalOut D = {  } U = { $_ }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.changed } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).figureManager } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).figureManager } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).menu } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).selector } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.canvas$1.undoManager } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).figures } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).figures } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).filename } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).filename } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.selectedTab } U = {  }
  42+ actualOutByFieldAccess D = { canvas$1.!getFigureManager( ).figure$7.endX } U = {  }
  42+ actualOutByFieldAccess D = { canvas$1.!getFigureManager( ).figure$7.endY } U = {  }
  42+ actualOutByFieldAccess D = { canvas$1.!getFigureManager( ).figure$7.startX } U = {  }
  42+ actualOutByFieldAccess D = { canvas$1.!getFigureManager( ).figure$7.startY } U = {  }
  54+ actualOutByFieldAccess D = { canvas$1.changed } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#openAction ]
   1 fieldDeclaration D = { this.openAction } U = { this.openAction }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#closeFile( ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 localDeclaration D = { canvas$0 } U = { this.tabbedCanvas.!getCurrentCanvas( ) }
   3 receiver D = {  } U = { this.tabbedCanvas }
   4 methodCall D = {  } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCurrentCanvas( )
   5 actualOut D = { this.tabbedCanvas.!getCurrentCanvas( ) } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
   6 assignment D = {  } U = { this.!closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, result$1.CANCEL_OPTION, result$1.YES_OPTION, result2$2.CANCEL_OPTION, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tabbedCanvas, this.tabbedCanvas.!getCurrentCanvas( ).changed, this.tabbedCanvas.!getCurrentCanvas( ).curX, this.tabbedCanvas.!getCurrentCanvas( ).curY, this.tabbedCanvas.!getCurrentCanvas( ).currentFigure, this.tabbedCanvas.!getCurrentCanvas( ).figureManager, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure, this.tabbedCanvas.!getCurrentCanvas( ).isGrabMode, this.tabbedCanvas.!getCurrentCanvas( ).menu, this.tabbedCanvas.!getCurrentCanvas( ).selector, this.tabbedCanvas.!getCurrentCanvas( ).support, this.tabbedCanvas.!getCurrentCanvas( ).undoManager, this.tabbedCanvas.!javax.accessibility.AccessibleState.SELECTED, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.!javax.swing.JTabbedPane.visComp, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.tabbedCanvas.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).figures, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.out, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).figures, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).filename, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.!java.lang.Runtime.currentRuntime, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   9 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).changed, this.tabbedCanvas.!getCurrentCanvas( ).curX, this.tabbedCanvas.!getCurrentCanvas( ).curY, this.tabbedCanvas.!getCurrentCanvas( ).currentFigure, this.tabbedCanvas.!getCurrentCanvas( ).figureManager, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure, this.tabbedCanvas.!getCurrentCanvas( ).isGrabMode, this.tabbedCanvas.!getCurrentCanvas( ).menu, this.tabbedCanvas.!getCurrentCanvas( ).selector, this.tabbedCanvas.!getCurrentCanvas( ).support, this.tabbedCanvas.!getCurrentCanvas( ).undoManager }
  10 actualOut D = { this.!closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas ), this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, this.canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.tabbedCanvas.!javax.swing.JTabbedPane.visComp } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, result$1.CANCEL_OPTION, result$1.YES_OPTION, result2$2.CANCEL_OPTION, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tabbedCanvas, this.tabbedCanvas.!getCurrentCanvas( ).changed, this.tabbedCanvas.!getCurrentCanvas( ).curX, this.tabbedCanvas.!getCurrentCanvas( ).curY, this.tabbedCanvas.!getCurrentCanvas( ).currentFigure, this.tabbedCanvas.!getCurrentCanvas( ).figureManager, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure, this.tabbedCanvas.!getCurrentCanvas( ).isGrabMode, this.tabbedCanvas.!getCurrentCanvas( ).menu, this.tabbedCanvas.!getCurrentCanvas( ).selector, this.tabbedCanvas.!getCurrentCanvas( ).support, this.tabbedCanvas.!getCurrentCanvas( ).undoManager, this.tabbedCanvas.!javax.accessibility.AccessibleState.SELECTED, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.!javax.swing.JTabbedPane.visComp, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.tabbedCanvas.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).figures, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.out, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).figures, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).filename, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.!java.lang.Runtime.currentRuntime, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  12 formalOut D = {  } U = { $_ }
   8+ actualOutByFieldAccess D = { this.tabbedCanvas.selectedTab } U = {  }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#initEditMenu( javax.swing.JMenu ) ]
   1 formalIn D = { menu$0 } U = {  }
   2 localDeclaration D = { undoItem$1 } U = { menu$0.!add( javax.swing.Action ) }
   3 receiver D = {  } U = { menu$0 }
   4 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.undoAction } TO = javax.swing.JMenu#add( javax.swing.Action )
   5 actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
   6 assignment D = {  } U = { undoItem$1.!setMnemonic( char ) }
   7 receiver D = {  } U = { undoItem$1 }
   8 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, undoItem$1.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
   9 actualOut D = { undoItem$1.!setMnemonic( char ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, undoItem$1.!javax.swing.AbstractButton.model }
  10 assignment D = {  } U = { undoItem$1.!setIcon( javax.swing.Icon ) }
  11 receiver D = {  } U = { undoItem$1 }
  12 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, undoItem$1.!java.awt.Component.changeSupport, undoItem$1.!java.awt.Component.height, undoItem$1.!java.awt.Component.width, undoItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, undoItem$1.!javax.swing.AbstractButton.accessibleContext, undoItem$1.!javax.swing.AbstractButton.defaultIcon, undoItem$1.!javax.swing.AbstractButton.disabledIcon, undoItem$1.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  13 actualOut D = { undoItem$1.!javax.swing.AbstractButton.defaultIcon, undoItem$1.!javax.swing.AbstractButton.disabledIcon, undoItem$1.!setIcon( javax.swing.Icon ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, undoItem$1.!java.awt.Component.changeSupport, undoItem$1.!java.awt.Component.height, undoItem$1.!java.awt.Component.width, undoItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, undoItem$1.!javax.swing.AbstractButton.accessibleContext, undoItem$1.!javax.swing.AbstractButton.defaultIcon, undoItem$1.!javax.swing.AbstractButton.disabledIcon, undoItem$1.!javax.swing.JComponent.revalidateRunnableScheduled }
  14 assignment D = {  } U = { undoItem$1.!setAccelerator( javax.swing.KeyStroke ) }
  15 receiver D = {  } U = { undoItem$1 }
  16 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ), undoItem$1.!java.awt.Component.changeSupport, undoItem$1.!java.awt.Component.height, undoItem$1.!java.awt.Component.width, undoItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, undoItem$1.!javax.swing.JMenuItem.accelerator } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  19 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
  20 actualOut D = { undoItem$1.!javax.swing.JMenuItem.accelerator, undoItem$1.!setAccelerator( javax.swing.KeyStroke ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, undoItem$1.!java.awt.Component.changeSupport, undoItem$1.!java.awt.Component.height, undoItem$1.!java.awt.Component.width, undoItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, undoItem$1.!javax.swing.JMenuItem.accelerator }
  21 assignment D = {  } U = { this.undoAction.!setEnabled( boolean ) }
  22 receiver D = {  } U = { this.undoAction }
  23 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  24 actualOut D = { this.undoAction.!setEnabled( boolean ) } U = {  }
  25 localDeclaration D = { redoItem$2 } U = { menu$0.!add( javax.swing.Action ) }
  26 receiver D = {  } U = { menu$0 }
  27 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.redoAction } TO = javax.swing.JMenu#add( javax.swing.Action )
  28 actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
  29 assignment D = {  } U = { redoItem$2.!setMnemonic( char ) }
  30 receiver D = {  } U = { redoItem$2 }
  31 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, redoItem$2.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  32 actualOut D = { redoItem$2.!setMnemonic( char ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, redoItem$2.!javax.swing.AbstractButton.model }
  33 assignment D = {  } U = { redoItem$2.!setIcon( javax.swing.Icon ) }
  34 receiver D = {  } U = { redoItem$2 }
  35 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, redoItem$2.!java.awt.Component.changeSupport, redoItem$2.!java.awt.Component.height, redoItem$2.!java.awt.Component.width, redoItem$2.!javax.accessibility.AccessibleContext.accessibleChangeSupport, redoItem$2.!javax.swing.AbstractButton.accessibleContext, redoItem$2.!javax.swing.AbstractButton.defaultIcon, redoItem$2.!javax.swing.AbstractButton.disabledIcon, redoItem$2.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  36 actualOut D = { redoItem$2.!javax.swing.AbstractButton.defaultIcon, redoItem$2.!javax.swing.AbstractButton.disabledIcon, redoItem$2.!setIcon( javax.swing.Icon ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, redoItem$2.!java.awt.Component.changeSupport, redoItem$2.!java.awt.Component.height, redoItem$2.!java.awt.Component.width, redoItem$2.!javax.accessibility.AccessibleContext.accessibleChangeSupport, redoItem$2.!javax.swing.AbstractButton.accessibleContext, redoItem$2.!javax.swing.AbstractButton.defaultIcon, redoItem$2.!javax.swing.AbstractButton.disabledIcon, redoItem$2.!javax.swing.JComponent.revalidateRunnableScheduled }
  37 assignment D = {  } U = { redoItem$2.!setAccelerator( javax.swing.KeyStroke ) }
  38 receiver D = {  } U = { redoItem$2 }
  39 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, redoItem$2.!java.awt.Component.changeSupport, redoItem$2.!java.awt.Component.height, redoItem$2.!java.awt.Component.width, redoItem$2.!javax.swing.JComponent.revalidateRunnableScheduled, redoItem$2.!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  40 receiver D = {  } U = {  }
  41 methodCall D = {  } U = { KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  42 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
  43 actualOut D = { redoItem$2.!javax.swing.JMenuItem.accelerator, redoItem$2.!setAccelerator( javax.swing.KeyStroke ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, redoItem$2.!java.awt.Component.changeSupport, redoItem$2.!java.awt.Component.height, redoItem$2.!java.awt.Component.width, redoItem$2.!javax.swing.JComponent.revalidateRunnableScheduled, redoItem$2.!javax.swing.JMenuItem.accelerator }
  44 assignment D = {  } U = { this.redoAction.!setEnabled( boolean ) }
  45 receiver D = {  } U = { this.redoAction }
  46 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  47 actualOut D = { this.redoAction.!setEnabled( boolean ) } U = {  }
  48 assignment D = {  } U = { menu$0.!addSeparator( ) }
  49 receiver D = {  } U = { menu$0 }
  50 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#addSeparator( )
  51 actualOut D = { menu$0.!addSeparator( ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
  52 localDeclaration D = { cutItem$3 } U = { menu$0.!add( javax.swing.Action ) }
  53 receiver D = {  } U = { menu$0 }
  54 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.cutAction } TO = javax.swing.JMenu#add( javax.swing.Action )
  55 actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
  56 assignment D = {  } U = { cutItem$3.!setMnemonic( char ) }
  57 receiver D = {  } U = { cutItem$3 }
  58 methodCall D = {  } U = { cutItem$3.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  59 actualOut D = { cutItem$3.!setMnemonic( char ) } U = { cutItem$3.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
  60 assignment D = {  } U = { cutItem$3.!setIcon( javax.swing.Icon ) }
  61 receiver D = {  } U = { cutItem$3 }
  62 methodCall D = {  } U = { cutItem$3.!java.awt.Component.changeSupport, cutItem$3.!java.awt.Component.height, cutItem$3.!java.awt.Component.width, cutItem$3.!javax.accessibility.AccessibleContext.accessibleChangeSupport, cutItem$3.!javax.swing.AbstractButton.accessibleContext, cutItem$3.!javax.swing.AbstractButton.defaultIcon, cutItem$3.!javax.swing.AbstractButton.disabledIcon, cutItem$3.!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  63 actualOut D = { cutItem$3.!javax.swing.AbstractButton.defaultIcon, cutItem$3.!javax.swing.AbstractButton.disabledIcon, cutItem$3.!setIcon( javax.swing.Icon ) } U = { cutItem$3.!java.awt.Component.changeSupport, cutItem$3.!java.awt.Component.height, cutItem$3.!java.awt.Component.width, cutItem$3.!javax.accessibility.AccessibleContext.accessibleChangeSupport, cutItem$3.!javax.swing.AbstractButton.accessibleContext, cutItem$3.!javax.swing.AbstractButton.defaultIcon, cutItem$3.!javax.swing.AbstractButton.disabledIcon, cutItem$3.!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled }
  64 assignment D = {  } U = { cutItem$3.!setAccelerator( javax.swing.KeyStroke ) }
  65 receiver D = {  } U = { cutItem$3 }
  66 methodCall D = {  } U = { cutItem$3.!java.awt.Component.changeSupport, cutItem$3.!java.awt.Component.height, cutItem$3.!java.awt.Component.width, cutItem$3.!javax.swing.JComponent.revalidateRunnableScheduled, cutItem$3.!javax.swing.JMenuItem.accelerator, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  67 receiver D = {  } U = {  }
  68 methodCall D = {  } U = { KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  69 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
  70 actualOut D = { cutItem$3.!javax.swing.JMenuItem.accelerator, cutItem$3.!setAccelerator( javax.swing.KeyStroke ) } U = { cutItem$3.!java.awt.Component.changeSupport, cutItem$3.!java.awt.Component.height, cutItem$3.!java.awt.Component.width, cutItem$3.!javax.swing.JComponent.revalidateRunnableScheduled, cutItem$3.!javax.swing.JMenuItem.accelerator, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator }
  71 assignment D = {  } U = { cutItem$3.!setEnabled( boolean ) }
  72 receiver D = {  } U = { cutItem$3 }
  73 methodCall D = {  } U = { cutItem$3.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.JMenuItem#setEnabled( boolean )
  74 actualOut D = { cutItem$3.!setEnabled( boolean ) } U = { cutItem$3.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
  75 localDeclaration D = { copyItem$4 } U = { menu$0.!add( javax.swing.Action ) }
  76 receiver D = {  } U = { menu$0 }
  77 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.copyAction } TO = javax.swing.JMenu#add( javax.swing.Action )
  78 actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
  79 assignment D = {  } U = { copyItem$4.!setMnemonic( char ) }
  80 receiver D = {  } U = { copyItem$4 }
  81 methodCall D = {  } U = { copyItem$4.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  82 actualOut D = { copyItem$4.!setMnemonic( char ) } U = { copyItem$4.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
  83 assignment D = {  } U = { copyItem$4.!setIcon( javax.swing.Icon ) }
  84 receiver D = {  } U = { copyItem$4 }
  85 methodCall D = {  } U = { copyItem$4.!java.awt.Component.changeSupport, copyItem$4.!java.awt.Component.height, copyItem$4.!java.awt.Component.width, copyItem$4.!javax.accessibility.AccessibleContext.accessibleChangeSupport, copyItem$4.!javax.swing.AbstractButton.accessibleContext, copyItem$4.!javax.swing.AbstractButton.defaultIcon, copyItem$4.!javax.swing.AbstractButton.disabledIcon, copyItem$4.!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  86 actualOut D = { copyItem$4.!javax.swing.AbstractButton.defaultIcon, copyItem$4.!javax.swing.AbstractButton.disabledIcon, copyItem$4.!setIcon( javax.swing.Icon ) } U = { copyItem$4.!java.awt.Component.changeSupport, copyItem$4.!java.awt.Component.height, copyItem$4.!java.awt.Component.width, copyItem$4.!javax.accessibility.AccessibleContext.accessibleChangeSupport, copyItem$4.!javax.swing.AbstractButton.accessibleContext, copyItem$4.!javax.swing.AbstractButton.defaultIcon, copyItem$4.!javax.swing.AbstractButton.disabledIcon, copyItem$4.!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled }
  87 assignment D = {  } U = { copyItem$4.!setAccelerator( javax.swing.KeyStroke ) }
  88 receiver D = {  } U = { copyItem$4 }
  89 methodCall D = {  } U = { copyItem$4.!java.awt.Component.changeSupport, copyItem$4.!java.awt.Component.height, copyItem$4.!java.awt.Component.width, copyItem$4.!javax.swing.JComponent.revalidateRunnableScheduled, copyItem$4.!javax.swing.JMenuItem.accelerator, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  90 receiver D = {  } U = {  }
  91 methodCall D = {  } U = { KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  92 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
  93 actualOut D = { copyItem$4.!javax.swing.JMenuItem.accelerator, copyItem$4.!setAccelerator( javax.swing.KeyStroke ) } U = { copyItem$4.!java.awt.Component.changeSupport, copyItem$4.!java.awt.Component.height, copyItem$4.!java.awt.Component.width, copyItem$4.!javax.swing.JComponent.revalidateRunnableScheduled, copyItem$4.!javax.swing.JMenuItem.accelerator, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator }
  94 assignment D = {  } U = { copyItem$4.!setEnabled( boolean ) }
  95 receiver D = {  } U = { copyItem$4 }
  96 methodCall D = {  } U = { copyItem$4.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.JMenuItem#setEnabled( boolean )
  97 actualOut D = { copyItem$4.!setEnabled( boolean ) } U = { copyItem$4.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
  98 localDeclaration D = { pasteItem$5 } U = { menu$0.!add( javax.swing.Action ) }
  99 receiver D = {  } U = { menu$0 }
 100 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.pasteAction } TO = javax.swing.JMenu#add( javax.swing.Action )
 101 actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
 102 assignment D = {  } U = { pasteItem$5.!setMnemonic( char ) }
 103 receiver D = {  } U = { pasteItem$5 }
 104 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, pasteItem$5.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
 105 actualOut D = { pasteItem$5.!setMnemonic( char ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, pasteItem$5.!javax.swing.AbstractButton.model }
 106 assignment D = {  } U = { pasteItem$5.!setIcon( javax.swing.Icon ) }
 107 receiver D = {  } U = { pasteItem$5 }
 108 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, pasteItem$5.!java.awt.Component.changeSupport, pasteItem$5.!java.awt.Component.height, pasteItem$5.!java.awt.Component.width, pasteItem$5.!javax.accessibility.AccessibleContext.accessibleChangeSupport, pasteItem$5.!javax.swing.AbstractButton.accessibleContext, pasteItem$5.!javax.swing.AbstractButton.defaultIcon, pasteItem$5.!javax.swing.AbstractButton.disabledIcon, pasteItem$5.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
 109 actualOut D = { pasteItem$5.!javax.swing.AbstractButton.defaultIcon, pasteItem$5.!javax.swing.AbstractButton.disabledIcon, pasteItem$5.!setIcon( javax.swing.Icon ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, pasteItem$5.!java.awt.Component.changeSupport, pasteItem$5.!java.awt.Component.height, pasteItem$5.!java.awt.Component.width, pasteItem$5.!javax.accessibility.AccessibleContext.accessibleChangeSupport, pasteItem$5.!javax.swing.AbstractButton.accessibleContext, pasteItem$5.!javax.swing.AbstractButton.defaultIcon, pasteItem$5.!javax.swing.AbstractButton.disabledIcon, pasteItem$5.!javax.swing.JComponent.revalidateRunnableScheduled }
 110 assignment D = {  } U = { pasteItem$5.!setAccelerator( javax.swing.KeyStroke ) }
 111 receiver D = {  } U = { pasteItem$5 }
 112 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, pasteItem$5.!java.awt.Component.changeSupport, pasteItem$5.!java.awt.Component.height, pasteItem$5.!java.awt.Component.width, pasteItem$5.!javax.swing.JComponent.revalidateRunnableScheduled, pasteItem$5.!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
 113 receiver D = {  } U = {  }
 114 methodCall D = {  } U = { KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
 115 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
 116 actualOut D = { pasteItem$5.!javax.swing.JMenuItem.accelerator, pasteItem$5.!setAccelerator( javax.swing.KeyStroke ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, pasteItem$5.!java.awt.Component.changeSupport, pasteItem$5.!java.awt.Component.height, pasteItem$5.!java.awt.Component.width, pasteItem$5.!javax.swing.JComponent.revalidateRunnableScheduled, pasteItem$5.!javax.swing.JMenuItem.accelerator }
 117 assignment D = {  } U = { pasteItem$5.!setEnabled( boolean ) }
 118 receiver D = {  } U = { pasteItem$5 }
 119 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, pasteItem$5.!javax.swing.AbstractButton.model } TO = javax.swing.JMenuItem#setEnabled( boolean )
 120 actualOut D = { pasteItem$5.!setEnabled( boolean ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, pasteItem$5.!javax.swing.AbstractButton.model }
 121 assignment D = {  } U = { menu$0.!addSeparator( ) }
 122 receiver D = {  } U = { menu$0 }
 123 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#addSeparator( )
 124 actualOut D = { menu$0.!addSeparator( ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
 125 localDeclaration D = { deleteItem$6 } U = { menu$0.!add( javax.swing.Action ) }
 126 receiver D = {  } U = { menu$0 }
 127 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.deleteAction } TO = javax.swing.JMenu#add( javax.swing.Action )
 128 actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
 129 assignment D = {  } U = { deleteItem$6.!setMnemonic( char ) }
 130 receiver D = {  } U = { deleteItem$6 }
 131 methodCall D = {  } U = { deleteItem$6.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
 132 actualOut D = { deleteItem$6.!setMnemonic( char ) } U = { deleteItem$6.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
 133 assignment D = {  } U = { deleteItem$6.!setIcon( javax.swing.Icon ) }
 134 receiver D = {  } U = { deleteItem$6 }
 135 methodCall D = {  } U = { deleteItem$6.!java.awt.Component.changeSupport, deleteItem$6.!java.awt.Component.height, deleteItem$6.!java.awt.Component.width, deleteItem$6.!javax.accessibility.AccessibleContext.accessibleChangeSupport, deleteItem$6.!javax.swing.AbstractButton.accessibleContext, deleteItem$6.!javax.swing.AbstractButton.defaultIcon, deleteItem$6.!javax.swing.AbstractButton.disabledIcon, deleteItem$6.!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
 136 actualOut D = { deleteItem$6.!javax.swing.AbstractButton.defaultIcon, deleteItem$6.!javax.swing.AbstractButton.disabledIcon, deleteItem$6.!setIcon( javax.swing.Icon ) } U = { deleteItem$6.!java.awt.Component.changeSupport, deleteItem$6.!java.awt.Component.height, deleteItem$6.!java.awt.Component.width, deleteItem$6.!javax.accessibility.AccessibleContext.accessibleChangeSupport, deleteItem$6.!javax.swing.AbstractButton.accessibleContext, deleteItem$6.!javax.swing.AbstractButton.defaultIcon, deleteItem$6.!javax.swing.AbstractButton.disabledIcon, deleteItem$6.!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled }
 137 assignment D = {  } U = { deleteItem$6.!setAccelerator( javax.swing.KeyStroke ) }
 138 receiver D = {  } U = { deleteItem$6 }
 139 methodCall D = {  } U = { deleteItem$6.!java.awt.Component.changeSupport, deleteItem$6.!java.awt.Component.height, deleteItem$6.!java.awt.Component.width, deleteItem$6.!javax.swing.JComponent.revalidateRunnableScheduled, deleteItem$6.!javax.swing.JMenuItem.accelerator, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
 140 receiver D = {  } U = {  }
 141 methodCall D = {  } U = { KeyEvent.VK_DELETE } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
 142 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
 143 actualOut D = { deleteItem$6.!javax.swing.JMenuItem.accelerator, deleteItem$6.!setAccelerator( javax.swing.KeyStroke ) } U = { deleteItem$6.!java.awt.Component.changeSupport, deleteItem$6.!java.awt.Component.height, deleteItem$6.!java.awt.Component.width, deleteItem$6.!javax.swing.JComponent.revalidateRunnableScheduled, deleteItem$6.!javax.swing.JMenuItem.accelerator, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator }
 144 assignment D = {  } U = { deleteItem$6.!setEnabled( boolean ) }
 145 receiver D = {  } U = { deleteItem$6 }
 146 methodCall D = {  } U = { deleteItem$6.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.JMenuItem#setEnabled( boolean )
 147 actualOut D = { deleteItem$6.!setEnabled( boolean ) } U = { deleteItem$6.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
 149 formalOut D = {  } U = { $_ }
--
   0: serialVersionUID
   1:    0 ->    1 trueControlDependence
--
   0: toolBar
   1:    0 ->    1 trueControlDependence
--
   0: copyAction
   1:    0 ->    1 trueControlDependence
--
   0: initFileActions( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   17 trueControlDependence
  18:    0 ->   18 trueControlDependence
  19:    0 ->   19 trueControlDependence
  20:    0 ->   20 trueControlDependence
  21:    0 ->   21 trueControlDependence
  22:    0 ->   22 trueControlDependence
  23:    0 ->   23 trueControlDependence
  24:    0 ->   24 trueControlDependence
  25:    0 ->   25 trueControlDependence
  26:    0 ->   26 trueControlDependence
  27:    0 ->   27 trueControlDependence
  28:    0 ->   28 trueControlDependence
  29:    0 ->   29 trueControlDependence
  30:    0 ->   30 trueControlDependence
  31:    0 ->   31 trueControlDependence
  32:    0 ->   32 trueControlDependence
  33:    0 ->   33 trueControlDependence
  34:    0 ->   34 trueControlDependence
  35:    0 ->   35 trueControlDependence
  36:    0 ->   36 trueControlDependence
  37:    0 ->   37 trueControlDependence
  38:    0 ->   38 trueControlDependence
  39:    0 ->   39 trueControlDependence
  40:    0 ->   40 trueControlDependence
  41:    0 ->   41 trueControlDependence
  42:    0 ->   42 trueControlDependence
  43:    0 ->   43 trueControlDependence
  44:    0 ->   44 trueControlDependence
  45:    0 ->   45 trueControlDependence
  46:    0 ->   47 trueControlDependence
  47:   11 ->    8 loopIndependentDefUseDependence this.!getClass( )
  48:   11 ->   26 outputDependence this.!getClass( )
  49:   13 ->    7 loopIndependentDefUseDependence this.!getClass( ).!getResource( java.lang.String )
  50:   13 ->   28 outputDependence this.!getClass( ).!getResource( java.lang.String )
  51:   14 ->    5 loopIndependentDefUseDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
  52:   14 ->   22 loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
  53:   14 ->   29 loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
  54:   14 ->   29 outputDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
  55:   14 ->   29 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext
  56:   14 ->   29 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.description
  57:   14 ->   29 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.height
  58:   14 ->   29 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus
  59:   14 ->   29 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.location
  60:   14 ->   29 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.width
  61:   15 ->    1 loopIndependentDefUseDependence .!AbstractAction( java.lang.String javax.swing.Icon )
  62:   15 ->   18 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
  63:   15 ->   18 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
  64:   15 ->   30 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
  65:   15 ->   30 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
  66:   15 ->   30 outputDependence .!AbstractAction( java.lang.String javax.swing.Icon )
  67:   26 ->   23 loopIndependentDefUseDependence this.!getClass( )
  68:   26 ->   41 outputDependence this.!getClass( )
  69:   28 ->   22 loopIndependentDefUseDependence this.!getClass( ).!getResource( java.lang.String )
  70:   28 ->   43 outputDependence this.!getClass( ).!getResource( java.lang.String )
  71:   29 ->   20 loopIndependentDefUseDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
  72:   29 ->   37 loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
  73:   29 ->   44 loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
  74:   29 ->   44 outputDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
  75:   29 ->   44 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext
  76:   29 ->   44 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.description
  77:   29 ->   44 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.height
  78:   29 ->   44 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus
  79:   29 ->   44 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.location
  80:   29 ->   44 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.width
  81:   30 ->   16 loopIndependentDefUseDependence .!AbstractAction( java.lang.String javax.swing.Icon )
  82:   30 ->   33 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
  83:   30 ->   33 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
  84:   30 ->   45 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
  85:   30 ->   45 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
  86:   30 ->   45 outputDependence .!AbstractAction( java.lang.String javax.swing.Icon )
  87:   41 ->   38 loopIndependentDefUseDependence this.!getClass( )
  88:   43 ->   37 loopIndependentDefUseDependence this.!getClass( ).!getResource( java.lang.String )
  89:   44 ->   35 loopIndependentDefUseDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
  90:   45 ->   31 loopIndependentDefUseDependence .!AbstractAction( java.lang.String javax.swing.Icon )
--
   0: createPopup( javax.swing.JPopupMenu )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   17 trueControlDependence
  18:    0 ->   18 trueControlDependence
  19:    0 ->   19 trueControlDependence
  20:    0 ->   20 trueControlDependence
  21:    0 ->   21 trueControlDependence
  22:    0 ->   22 trueControlDependence
  23:    0 ->   23 trueControlDependence
  24:    0 ->   24 trueControlDependence
  25:    0 ->   25 trueControlDependence
  26:    0 ->   27 trueControlDependence
  27:    1 ->    3 loopIndependentDefUseDependence popup$0
  28:    1 ->   11 loopIndependentDefUseDependence popup$0
  29:    1 ->   15 loopIndependentDefUseDependence popup$0
  30:    1 ->   23 loopIndependentDefUseDependence popup$0
  31:    2 ->    7 declaration
  32:    2 ->    7 loopIndependentDefUseDependence undoMenuItem$1
  33:    2 ->   12 declaration
  34:    2 ->   12 loopIndependentDefUseDependence undoMenuItem$1
  35:    5 ->    2 loopIndependentDefUseDependence popup$0.!add( javax.swing.Action )
  36:    5 ->   16 loopIndependentDefUseDependence popup$0.!javax.swing.AbstractButton.action
  37:    5 ->   16 loopIndependentDefUseDependence popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener
  38:    5 ->   17 loopIndependentDefUseDependence popup$0.!javax.swing.AbstractButton.action
  39:    5 ->   17 loopIndependentDefUseDependence popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener
  40:    5 ->   17 outputDependence popup$0.!add( javax.swing.Action )
  41:    9 ->    6 loopIndependentDefUseDependence undoMenuItem$1.!setIcon( javax.swing.Icon )
  42:   13 ->   10 loopIndependentDefUseDependence popup$0.!add( javax.swing.JMenuItem )
  43:   13 ->   25 outputDependence popup$0.!add( javax.swing.JMenuItem )
  44:   14 ->   19 declaration
  45:   14 ->   19 loopIndependentDefUseDependence redoMenuItem$2
  46:   14 ->   24 declaration
  47:   14 ->   24 loopIndependentDefUseDependence redoMenuItem$2
  48:   17 ->   14 loopIndependentDefUseDependence popup$0.!add( javax.swing.Action )
  49:   21 ->   18 loopIndependentDefUseDependence redoMenuItem$2.!setIcon( javax.swing.Icon )
  50:   25 ->   22 loopIndependentDefUseDependence popup$0.!add( javax.swing.JMenuItem )
--
   0: getFileName( boolean )
   1:    0 ->    2 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    0 ->    5 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    0 ->    7 trueControlDependence
   7:    0 ->    8 trueControlDependence
   8:    0 ->    9 trueControlDependence
   9:    0 ->   10 trueControlDependence
  10:    0 ->   11 trueControlDependence
  11:    0 ->   12 trueControlDependence
  12:    0 ->   13 trueControlDependence
  13:    0 ->   14 trueControlDependence
  14:    0 ->   15 trueControlDependence
  15:    0 ->   16 trueControlDependence
  16:    2 ->   16 loopIndependentDefUseDependence open$0
  17:    3 ->    8 declaration
  18:    3 ->    8 loopIndependentDefUseDependence chooser$1
  19:    3 ->   12 declaration
  20:    3 ->   12 loopIndependentDefUseDependence chooser$1
  21:    3 ->   18 declaration
  22:    3 ->   18 loopIndependentDefUseDependence chooser$1
  23:    3 ->   22 declaration
  24:    3 ->   22 loopIndependentDefUseDependence chooser$1
  25:    3 ->   27 declaration
  26:    3 ->   27 loopIndependentDefUseDependence chooser$1
  27:    3 ->   32 declaration
  28:    3 ->   32 loopIndependentDefUseDependence chooser$1
  29:    6 ->    3 loopIndependentDefUseDependence javax.swing.JFileChooser.!JFileChooser( )
  30:   10 ->    7 loopIndependentDefUseDependence chooser$1.!setDialogTitle( java.lang.String )
  31:   14 ->   11 loopIndependentDefUseDependence chooser$1.!setCurrentDirectory( java.io.File )
  32:   14 ->   33 loopIndependentDefUseDependence chooser$1.!javax.swing.JFileChooser.currentDirectory
  33:   14 ->   34 loopIndependentDefUseDependence chooser$1.!javax.swing.JFileChooser.currentDirectory
  34:   15 ->   17 declaration
  35:   15 ->   17 outputDependence result$2
  36:   15 ->   21 declaration
  37:   15 ->   21 outputDependence result$2
  38:   15 ->   30 declaration
  39:   16 ->   18 trueControlDependence
  40:   16 ->   19 trueControlDependence
  41:   16 ->   22 falseControlDependence
  42:   16 ->   23 falseControlDependence
  43:   17 ->   30 loopIndependentDefUseDependence result$2
  44:   19 ->    1 exceptionCatch
  45:   19 ->   17 trueControlDependence
  46:   19 ->   20 trueControlDependence
  47:   19 ->   26 trueControlDependence
  48:   19 ->   27 trueControlDependence
  49:   19 ->   28 trueControlDependence
  50:   19 ->   29 trueControlDependence
  51:   19 ->   30 trueControlDependence
  52:   19 ->   42 trueControlDependence
  53:   20 ->   17 loopIndependentDefUseDependence chooser$1.!showOpenDialog( java.awt.Component )
  54:   21 ->   30 loopIndependentDefUseDependence result$2
  55:   23 ->    1 exceptionCatch
  56:   23 ->   21 trueControlDependence
  57:   23 ->   24 trueControlDependence
  58:   23 ->   26 trueControlDependence
  59:   23 ->   27 trueControlDependence
  60:   23 ->   28 trueControlDependence
  61:   23 ->   29 trueControlDependence
  62:   23 ->   30 trueControlDependence
  63:   23 ->   42 trueControlDependence
  64:   24 ->   21 loopIndependentDefUseDependence chooser$1.!showSaveDialog( java.awt.Component )
  65:   26 ->   30 declaration
  66:   26 ->   30 loopIndependentDefUseDependence file$3
  67:   26 ->   36 declaration
  68:   26 ->   36 loopIndependentDefUseDependence file$3
  69:   29 ->   26 loopIndependentDefUseDependence chooser$1.!getSelectedFile( )
  70:   30 ->   31 trueControlDependence
  71:   30 ->   32 trueControlDependence
  72:   30 ->   33 trueControlDependence
  73:   30 ->   34 trueControlDependence
  74:   30 ->   35 trueControlDependence
  75:   30 ->   36 trueControlDependence
  76:   30 ->   37 trueControlDependence
  77:   30 ->   38 trueControlDependence
  78:   30 ->   40 falseControlDependence
  79:   34 ->   31 loopIndependentDefUseDependence chooser$1.!getCurrentDirectory( )
  80:   35 ->   40 fallThroughControlDependence
  81:   35 ->   42 loopIndependentDefUseDependence $_
  82:   38 ->   35 loopIndependentDefUseDependence file$3.!getPath( )
  83:   40 ->   42 loopIndependentDefUseDependence $_
--
   0: DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   11+ trueControlDependence
  13:    0 ->   11+ trueControlDependence
  14:    0 ->   11+ trueControlDependence
  15:    0 ->   11+ trueControlDependence
  16:    0 ->   11+ trueControlDependence
  17:    0 ->   11+ trueControlDependence
  18:    0 ->   11+ trueControlDependence
  19:    0 ->   11+ trueControlDependence
  20:    0 ->   11+ trueControlDependence
  21:    0 ->   11+ trueControlDependence
  22:    0 ->   11+ trueControlDependence
  23:    0 ->   11+ trueControlDependence
  24:    0 ->   12 trueControlDependence
  25:    0 ->   13 trueControlDependence
  26:    0 ->   14 trueControlDependence
  27:    0 ->   15 trueControlDependence
  28:    0 ->   16 trueControlDependence
  29:    0 ->   17 trueControlDependence
  30:    0 ->   18 trueControlDependence
  31:    0 ->   19 trueControlDependence
  32:    0 ->   20 trueControlDependence
  33:    0 ->   21 trueControlDependence
  34:    0 ->   22 trueControlDependence
  35:    0 ->   23 trueControlDependence
  36:    0 ->   24 trueControlDependence
  37:    0 ->   25 trueControlDependence
  38:    0 ->   26 trueControlDependence
  39:    0 ->   27 trueControlDependence
  40:    0 ->   28 trueControlDependence
  41:    0 ->   29 trueControlDependence
  42:    0 ->   30 trueControlDependence
  43:    0 ->   31 trueControlDependence
  44:    0 ->   32 trueControlDependence
  45:    0 ->   33 trueControlDependence
  46:    0 ->   34 trueControlDependence
  47:    0 ->   35 trueControlDependence
  48:    0 ->   36 trueControlDependence
  49:    0 ->   37 trueControlDependence
  50:    0 ->   38 trueControlDependence
  51:    0 ->   38+ trueControlDependence
  52:    0 ->   39 trueControlDependence
  53:    0 ->   40 trueControlDependence
  54:    0 ->   41 trueControlDependence
  55:    0 ->   42 trueControlDependence
  56:    0 ->   43 trueControlDependence
  57:    0 ->   44 trueControlDependence
  58:    0 ->   46 trueControlDependence
  59:    1 ->    3 loopIndependentDefUseDependence tool$0
  60:    2 ->    4 loopIndependentDefUseDependence tabbedCanvas$1
  61:    2 ->   39 loopIndependentDefUseDependence tabbedCanvas$1
  62:    4 ->   39 loopIndependentDefUseDependence this.tabbedCanvas
  63:    5 ->   12 loopIndependentDefUseDependence this.menuBar
  64:    8 ->    5 loopIndependentDefUseDependence javax.swing.JMenuBar.!JMenuBar( )
  65:   11+ ->   13 loopIndependentDefUseDependence this.copyAction
  66:   11+ ->   13 loopIndependentDefUseDependence this.cutAction
  67:   11+ ->   13 loopIndependentDefUseDependence this.deleteAction
  68:   11+ ->   13 loopIndependentDefUseDependence this.fileListMenu
  69:   11+ ->   13 loopIndependentDefUseDependence this.newAction
  70:   11+ ->   13 loopIndependentDefUseDependence this.openAction
  71:   11+ ->   13 loopIndependentDefUseDependence this.pasteAction
  72:   11+ ->   13 loopIndependentDefUseDependence this.redoAction
  73:   11+ ->   13 loopIndependentDefUseDependence this.saveAction
  74:   11+ ->   13 loopIndependentDefUseDependence this.undoAction
  75:   11+ ->   24 loopIndependentDefUseDependence this.copyAction
  76:   11+ ->   24 loopIndependentDefUseDependence this.cutAction
  77:   11+ ->   24 loopIndependentDefUseDependence this.newAction
  78:   11+ ->   24 loopIndependentDefUseDependence this.openAction
  79:   11+ ->   24 loopIndependentDefUseDependence this.pasteAction
  80:   11+ ->   24 loopIndependentDefUseDependence this.redoAction
  81:   11+ ->   24 loopIndependentDefUseDependence this.saveAction
  82:   11+ ->   24 loopIndependentDefUseDependence this.undoAction
  83:   11+ ->   26 loopIndependentDefUseDependence this.copyAction
  84:   11+ ->   26 loopIndependentDefUseDependence this.cutAction
  85:   11+ ->   26 loopIndependentDefUseDependence this.newAction
  86:   11+ ->   26 loopIndependentDefUseDependence this.openAction
  87:   11+ ->   26 loopIndependentDefUseDependence this.pasteAction
  88:   11+ ->   26 loopIndependentDefUseDependence this.redoAction
  89:   11+ ->   26 loopIndependentDefUseDependence this.saveAction
  90:   11+ ->   26 loopIndependentDefUseDependence this.undoAction
  91:   13 ->    9 loopIndependentDefUseDependence this.!initMenuBar( javax.swing.JMenuBar )
  92:   14 ->   19 loopIndependentDefUseDependence this.toolBar
  93:   14 ->   25 loopIndependentDefUseDependence this.toolBar
  94:   17 ->   14 loopIndependentDefUseDependence javax.swing.JToolBar.!JToolBar( )
  95:   21 ->   18 loopIndependentDefUseDependence this.toolBar.!setFloatable( boolean )
  96:   26 ->   22 loopIndependentDefUseDependence this.!initToolBar( javax.swing.JToolBar )
  97:   30 ->   27 loopIndependentDefUseDependence java.io.File.!File( java.lang.String )
  98:   34 ->   31 loopIndependentDefUseDependence java.util.ArrayList.!ArrayList( )
  99:   36 ->   42 loopIndependentDefUseDependence this.autoSave
 100:   40 ->   36 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas )
 101:   44 ->   41 loopIndependentDefUseDependence this.autoSave.!start( )
--
   0: tool
   1:    0 ->    1 trueControlDependence
--
   0: updateEditState( boolean )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   20 trueControlDependence
  12:    0 ->   21 trueControlDependence
  13:    0 ->   22 trueControlDependence
  14:    0 ->   23 trueControlDependence
  15:    0 ->   25 trueControlDependence
  16:    1 ->    4 loopIndependentDefUseDependence grabbed$0
  17:    1 ->    8 loopIndependentDefUseDependence grabbed$0
  18:    1 ->   22 loopIndependentDefUseDependence grabbed$0
  19:    5 ->    2 loopIndependentDefUseDependence this.cutAction.!setEnabled( boolean )
  20:    9 ->    6 loopIndependentDefUseDependence this.copyAction.!setEnabled( boolean )
  21:   10 ->   11 trueControlDependence
  22:   10 ->   12 trueControlDependence
  23:   10 ->   13 trueControlDependence
  24:   10 ->   14 trueControlDependence
  25:   10 ->   15 falseControlDependence
  26:   10 ->   16 falseControlDependence
  27:   10 ->   17 falseControlDependence
  28:   10 ->   18 falseControlDependence
  29:   14 ->   11 loopIndependentDefUseDependence this.pasteAction.!setEnabled( boolean )
  30:   18 ->   15 loopIndependentDefUseDependence this.pasteAction.!setEnabled( boolean )
  31:   23 ->   20 loopIndependentDefUseDependence this.deleteAction.!setEnabled( boolean )
--
   0: recentFiles
   1:    0 ->    1 trueControlDependence
--
   0: cutAction
   1:    0 ->    1 trueControlDependence
--
   0: undoAction
   1:    0 ->    1 trueControlDependence
--
   0: saveTempFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   18 trueControlDependence
  18:    1 ->    4 loopIndependentDefUseDependence canvas$0
  19:    1 ->   11 loopIndependentDefUseDependence canvas$0
  20:    2 ->   15 declaration
  21:    2 ->   15 loopIndependentDefUseDependence tempName$1
  22:    6 ->    3 loopIndependentDefUseDependence canvas$0.!getFigureManager( )
  23:    6 ->   13 outputDependence canvas$0.!getFigureManager( )
  24:    8 ->    2 loopIndependentDefUseDependence canvas$0.!getFigureManager( ).!getFilename( )
  25:    9 ->   18 loopIndependentDefUseDependence $_
  26:   13 ->   10 loopIndependentDefUseDependence canvas$0.!getFigureManager( )
  27:   16 ->    9 loopIndependentDefUseDependence canvas$0.!getFigureManager( ).!store( java.lang.String )
--
   0: deleteAction
   1:    0 ->    1 trueControlDependence
--
   0: closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1:    0 ->    2 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    0 ->    5 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    2 ->    4 loopIndependentDefUseDependence canvas$0
   7:    2 ->   17 loopIndependentDefUseDependence canvas$0
   8:    2 ->   33 loopIndependentDefUseDependence canvas$0
   9:    3 ->    8 trueControlDependence
  10:    3 ->    9 trueControlDependence
  11:    3 ->   30 falseControlDependence
  12:    3 ->   31 falseControlDependence
  13:    3 ->   32 falseControlDependence
  14:    3 ->   32+ falseControlDependence
  15:    3 ->   33 falseControlDependence
  16:    3 ->   34 falseControlDependence
  17:    3 ->   35 falseControlDependence
  18:    3 ->   36 falseControlDependence
  19:    3 ->   37 falseControlDependence
  20:    3 ->   38 falseControlDependence
  21:    3 ->   44 falseControlDependence
  22:    3 ->   46 falseControlDependence
  23:    6 ->    3 loopIndependentDefUseDependence canvas$0.!hasChanged( )
  24:    7 ->   11 declaration
  25:    7 ->   11 loopIndependentDefUseDependence result$1
  26:    7 ->   13 declaration
  27:    7 ->   13 loopIndependentDefUseDependence result$1
  28:    9 ->    1 exceptionCatch
  29:    9 ->    7 trueControlDependence
  30:    9 ->   10 trueControlDependence
  31:    9 ->   11 trueControlDependence
  32:   10 ->    7 loopIndependentDefUseDependence this.!showConfirmDialog( java.awt.Component java.lang.Object )
  33:   10 ->   22 outputDependence this.!showConfirmDialog( java.awt.Component java.lang.Object )
  34:   11 ->   12 trueControlDependence
  35:   11 ->   13 falseControlDependence
  36:   12 ->   13 fallThroughControlDependence
  37:   12 ->   30 trueControlDependence
  38:   12 ->   31 trueControlDependence
  39:   12 ->   32 trueControlDependence
  40:   12 ->   32+ trueControlDependence
  41:   12 ->   33 trueControlDependence
  42:   12 ->   34 trueControlDependence
  43:   12 ->   35 trueControlDependence
  44:   12 ->   36 trueControlDependence
  45:   12 ->   37 trueControlDependence
  46:   12 ->   38 trueControlDependence
  47:   12 ->   44 outputDependence $_
  48:   12 ->   44 trueControlDependence
  49:   12 ->   46 trueControlDependence
  50:   13 ->   15 trueControlDependence
  51:   13 ->   16 trueControlDependence
  52:   13 ->   17 trueControlDependence
  53:   13 ->   30 falseControlDependence
  54:   13 ->   31 falseControlDependence
  55:   13 ->   32 falseControlDependence
  56:   13 ->   32+ falseControlDependence
  57:   13 ->   33 falseControlDependence
  58:   13 ->   34 falseControlDependence
  59:   13 ->   35 falseControlDependence
  60:   13 ->   36 falseControlDependence
  61:   13 ->   37 falseControlDependence
  62:   13 ->   38 falseControlDependence
  63:   13 ->   44 falseControlDependence
  64:   13 ->   46 falseControlDependence
  65:   14 ->   20 trueControlDependence
  66:   14 ->   21 trueControlDependence
  67:   14 ->   30 falseControlDependence
  68:   14 ->   31 falseControlDependence
  69:   14 ->   32 falseControlDependence
  70:   14 ->   32+ falseControlDependence
  71:   14 ->   33 falseControlDependence
  72:   14 ->   34 falseControlDependence
  73:   14 ->   35 falseControlDependence
  74:   14 ->   36 falseControlDependence
  75:   14 ->   37 falseControlDependence
  76:   14 ->   38 falseControlDependence
  77:   14 ->   44 falseControlDependence
  78:   14 ->   46 falseControlDependence
  79:   16 ->    1 exceptionCatch
  80:   16 ->   14 trueControlDependence
  81:   16 ->   18 trueControlDependence
  82:   18 ->   14 loopIndependentDefUseDependence this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
  83:   19 ->   23 declaration
  84:   19 ->   23 loopIndependentDefUseDependence result2$2
  85:   21 ->    1 exceptionCatch
  86:   21 ->   19 trueControlDependence
  87:   21 ->   22 trueControlDependence
  88:   21 ->   23 trueControlDependence
  89:   21 ->   46 trueControlDependence
  90:   22 ->   19 loopIndependentDefUseDependence this.!showConfirmDialog( java.awt.Component java.lang.Object )
  91:   23 ->   24 trueControlDependence
  92:   23 ->   30 falseControlDependence
  93:   23 ->   31 falseControlDependence
  94:   23 ->   32 falseControlDependence
  95:   23 ->   32+ falseControlDependence
  96:   23 ->   33 falseControlDependence
  97:   23 ->   34 falseControlDependence
  98:   23 ->   35 falseControlDependence
  99:   23 ->   36 falseControlDependence
 100:   23 ->   37 falseControlDependence
 101:   23 ->   38 falseControlDependence
 102:   23 ->   44 falseControlDependence
 103:   24 ->   30 fallThroughControlDependence
 104:   24 ->   31 fallThroughControlDependence
 105:   24 ->   32 fallThroughControlDependence
 106:   24 ->   32+ fallThroughControlDependence
 107:   24 ->   33 fallThroughControlDependence
 108:   24 ->   34 fallThroughControlDependence
 109:   24 ->   35 fallThroughControlDependence
 110:   24 ->   36 fallThroughControlDependence
 111:   24 ->   37 fallThroughControlDependence
 112:   24 ->   38 fallThroughControlDependence
 113:   24 ->   44 fallThroughControlDependence
 114:   24 ->   46 loopIndependentDefUseDependence $_
 115:   32+ ->   34 loopIndependentDefUseDependence this.tabbedCanvas.selectedTab
 116:   34 ->   30 loopIndependentDefUseDependence this.tabbedCanvas.!closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
 117:   35 ->   39 trueControlDependence
 118:   35 ->   40 trueControlDependence
 119:   35 ->   41 trueControlDependence
 120:   35 ->   42 trueControlDependence
 121:   38 ->   35 loopIndependentDefUseDependence this.tabbedCanvas.!getOpenFileNum( )
 122:   42 ->   39 loopIndependentDefUseDependence this.tool.!terminate( )
 123:   44 ->   46 loopIndependentDefUseDependence $_
--
   0: newAction
   1:    0 ->    1 trueControlDependence
--
   0: newFile( )
   1:    0 ->    3 trueControlDependence
   2:    0 ->    4 trueControlDependence
   3:    0 ->    5 trueControlDependence
   4:    2 ->    7 declaration
   5:    2 ->    7 loopIndependentDefUseDependence filename$0
   6:    2 ->   13 declaration
   7:    2 ->   13 loopIndependentDefUseDependence filename$0
   8:    2 ->   17 declaration
   9:    2 ->   17 loopIndependentDefUseDependence filename$0
  10:    2 ->   24 declaration
  11:    2 ->   24 loopIndependentDefUseDependence filename$0
  12:    2 ->   29 declaration
  13:    2 ->   29 loopIndependentDefUseDependence filename$0
  14:    2 ->   33 declaration
  15:    2 ->   33 loopIndependentDefUseDependence filename$0
  16:    4 ->    1 exceptionCatch
  17:    4 ->    2 trueControlDependence
  18:    4 ->    4+ trueControlDependence
  19:    4 ->    6 trueControlDependence
  20:    4 ->    7 trueControlDependence
  21:    4+ ->    6 loopIndependentDefUseDependence this.directory
  22:    6 ->    2 loopIndependentDefUseDependence this.!getFileName( boolean )
  23:    7 ->    8 trueControlDependence
  24:    7 ->   10 falseControlDependence
  25:    7 ->   11 falseControlDependence
  26:    7 ->   12 falseControlDependence
  27:    7 ->   13 falseControlDependence
  28:    7 ->   14 falseControlDependence
  29:    8 ->   10 fallThroughControlDependence
  30:    8 ->   11 fallThroughControlDependence
  31:    8 ->   12 fallThroughControlDependence
  32:    8 ->   13 fallThroughControlDependence
  33:    8 ->   14 fallThroughControlDependence
  34:    8 ->   41 loopIndependentDefUseDependence $_
  35:    8 ->   41 trueControlDependence
  36:   10 ->   16 trueControlDependence
  37:   10 ->   17 trueControlDependence
  38:   10 ->   21 falseControlDependence
  39:   10 ->   22 falseControlDependence
  40:   10 ->   23 falseControlDependence
  41:   10 ->   23+ falseControlDependence
  42:   10 ->   23+ falseControlDependence
  43:   10 ->   23+ falseControlDependence
  44:   10 ->   23+ falseControlDependence
  45:   10 ->   23+ falseControlDependence
  46:   10 ->   23+ falseControlDependence
  47:   10 ->   23+ falseControlDependence
  48:   10 ->   23+ falseControlDependence
  49:   10 ->   23+ falseControlDependence
  50:   10 ->   23+ falseControlDependence
  51:   10 ->   23+ falseControlDependence
  52:   10 ->   24 falseControlDependence
  53:   10 ->   25 falseControlDependence
  54:   10 ->   26 falseControlDependence
  55:   10 ->   27 falseControlDependence
  56:   10 ->   28 falseControlDependence
  57:   10 ->   29 falseControlDependence
  58:   10 ->   30 falseControlDependence
  59:   10 ->   31 falseControlDependence
  60:   10 ->   32 falseControlDependence
  61:   10 ->   33 falseControlDependence
  62:   10 ->   34 falseControlDependence
  63:   10 ->   35 falseControlDependence
  64:   10 ->   36 falseControlDependence
  65:   10 ->   37 falseControlDependence
  66:   10 ->   38 falseControlDependence
  67:   10 ->   39 falseControlDependence
  68:   10 ->   41 falseControlDependence
  69:   14 ->   10 loopIndependentDefUseDependence this.!fileExists( java.lang.String )
  70:   17 ->    1 exceptionCatch
  71:   17 ->   15 trueControlDependence
  72:   17 ->   18 trueControlDependence
  73:   17 ->   19 trueControlDependence
  74:   17 ->   41 trueControlDependence
  75:   18 ->   15 loopIndependentDefUseDependence this.!showMessageDialog( java.awt.Component java.lang.Object )
  76:   19 ->   21 fallThroughControlDependence
  77:   19 ->   22 fallThroughControlDependence
  78:   19 ->   23 fallThroughControlDependence
  79:   19 ->   23+ fallThroughControlDependence
  80:   19 ->   23+ fallThroughControlDependence
  81:   19 ->   23+ fallThroughControlDependence
  82:   19 ->   23+ fallThroughControlDependence
  83:   19 ->   23+ fallThroughControlDependence
  84:   19 ->   23+ fallThroughControlDependence
  85:   19 ->   23+ fallThroughControlDependence
  86:   19 ->   23+ fallThroughControlDependence
  87:   19 ->   23+ fallThroughControlDependence
  88:   19 ->   23+ fallThroughControlDependence
  89:   19 ->   23+ fallThroughControlDependence
  90:   19 ->   24 fallThroughControlDependence
  91:   19 ->   25 fallThroughControlDependence
  92:   19 ->   26 fallThroughControlDependence
  93:   19 ->   27 fallThroughControlDependence
  94:   19 ->   28 fallThroughControlDependence
  95:   19 ->   29 fallThroughControlDependence
  96:   19 ->   30 fallThroughControlDependence
  97:   19 ->   31 fallThroughControlDependence
  98:   19 ->   32 fallThroughControlDependence
  99:   19 ->   33 fallThroughControlDependence
 100:   19 ->   34 fallThroughControlDependence
 101:   19 ->   35 fallThroughControlDependence
 102:   19 ->   36 fallThroughControlDependence
 103:   19 ->   37 fallThroughControlDependence
 104:   19 ->   38 fallThroughControlDependence
 105:   19 ->   39 fallThroughControlDependence
 106:   19 ->   41 loopIndependentDefUseDependence $_
 107:   21 ->   36 declaration
 108:   21 ->   36 loopIndependentDefUseDependence canvas$1
 109:   23+ ->   23+ outputDependence this.tabbedCanvas.!openTab( java.lang.String ).figureManager
 110:   23+ ->   23+ outputDependence this.tabbedCanvas.!openTab( java.lang.String ).figures
 111:   23+ ->   23+ outputDependence this.tabbedCanvas.!openTab( java.lang.String ).filename
 112:   25 ->   21 loopIndependentDefUseDependence this.tabbedCanvas.!openTab( java.lang.String )
 113:   30 ->   26 loopIndependentDefUseDependence this.!addRecentFile( java.lang.String )
 114:   34 ->   31 loopIndependentDefUseDependence this.tool.!setTitle( java.lang.String )
 115:   38 ->   35 loopIndependentDefUseDependence canvas$1.!repaint( )
 116:   39 ->   41 loopIndependentDefUseDependence $_
--
   0: windowListener
   1:    0 ->    1 trueControlDependence
--
   0: saveAsFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1:    0 ->    2 trueControlDependence
   2:    0 ->    4 trueControlDependence
   3:    0 ->    5 trueControlDependence
   4:    0 ->    6 trueControlDependence
   5:    2 ->   14 loopIndependentDefUseDependence canvas$0
   6:    2 ->   20 loopIndependentDefUseDependence canvas$0
   7:    3 ->    8 declaration
   8:    3 ->    8 loopIndependentDefUseDependence filename$1
   9:    3 ->   15 declaration
  10:    3 ->   15 loopIndependentDefUseDependence filename$1
  11:    3 ->   25 declaration
  12:    3 ->   25 loopIndependentDefUseDependence filename$1
  13:    3 ->   29 declaration
  14:    3 ->   29 loopIndependentDefUseDependence filename$1
  15:    5 ->    1 exceptionCatch
  16:    5 ->    3 trueControlDependence
  17:    5 ->    5+ trueControlDependence
  18:    5 ->    7 trueControlDependence
  19:    5 ->    8 trueControlDependence
  20:    5+ ->    7 loopIndependentDefUseDependence this.directory
  21:    7 ->    3 loopIndependentDefUseDependence this.!getFileName( boolean )
  22:    8 ->    9 trueControlDependence
  23:    8 ->   12 falseControlDependence
  24:    8 ->   13 falseControlDependence
  25:    8 ->   14 falseControlDependence
  26:    8 ->   15 falseControlDependence
  27:    9 ->   12 fallThroughControlDependence
  28:    9 ->   13 fallThroughControlDependence
  29:    9 ->   14 fallThroughControlDependence
  30:    9 ->   15 fallThroughControlDependence
  31:    9 ->   35 loopIndependentDefUseDependence $_
  32:    9 ->   35 trueControlDependence
  33:   11 ->   17 trueControlDependence
  34:   11 ->   18 trueControlDependence
  35:   11 ->   19 trueControlDependence
  36:   11 ->   20 trueControlDependence
  37:   11 ->   21 trueControlDependence
  38:   11 ->   22 trueControlDependence
  39:   11 ->   23 trueControlDependence
  40:   11 ->   24 trueControlDependence
  41:   11 ->   25 trueControlDependence
  42:   11 ->   26 trueControlDependence
  43:   11 ->   27 trueControlDependence
  44:   11 ->   28 trueControlDependence
  45:   11 ->   29 trueControlDependence
  46:   11 ->   30 trueControlDependence
  47:   11 ->   31 trueControlDependence
  48:   11 ->   33 falseControlDependence
  49:   13 ->    1 exceptionCatch
  50:   13 ->   11 trueControlDependence
  51:   13 ->   16 trueControlDependence
  52:   13 ->   35 trueControlDependence
  53:   16 ->   11 loopIndependentDefUseDependence this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String )
  54:   21 ->   17 loopIndependentDefUseDependence this.tabbedCanvas.!updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
  55:   26 ->   22 loopIndependentDefUseDependence this.!addRecentFile( java.lang.String )
  56:   30 ->   27 loopIndependentDefUseDependence this.tool.!setTitle( java.lang.String )
  57:   31 ->   33 fallThroughControlDependence
  58:   31 ->   35 loopIndependentDefUseDependence $_
  59:   33 ->   35 loopIndependentDefUseDependence $_
--
   0: menuBar
   1:    0 ->    1 trueControlDependence
--
   0: getToolBar( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    1 ->    3 loopIndependentDefUseDependence $_
--
   0: closeAllFiles( )
   1:    2 ->    2 defOrderDependence canvas$0
   2:    2 ->    7 trueControlDependence
   3:    2 ->    8 trueControlDependence
   4:    2 ->    9 loopIndependentDefUseDependence canvas$0
   5:    2 ->    9 trueControlDependence
   6:    2 ->   14 falseControlDependence
   7:    5 ->    2 loopCarriedDefUseDependence this.tabbedCanvas.!getAllCanvases( ) (LC = 2)
   8:    5 ->    5 defOrderDependence this.tabbedCanvas.!getAllCanvases( )
   9:    6 ->    2 falseControlDependence
  10:    6 ->    3 falseControlDependence
  11:    6 ->    4 falseControlDependence
  12:    6 ->    5 falseControlDependence
  13:    6 ->   11 trueControlDependence
  14:    8 ->    1 exceptionCatch
  15:    8 ->    6 trueControlDependence
  16:    8 ->    8+ trueControlDependence
  17:    8 ->   10 trueControlDependence
  18:    8+ ->    8 loopCarriedDefUseDependence this.tabbedCanvas.selectedTab (LC = 2)
  19:    8+ ->    8+ defOrderDependence this.tabbedCanvas.selectedTab
  20:    8+ ->   10 loopIndependentDefUseDependence this.tabbedCanvas.selectedTab
  21:   10 ->    6 loopIndependentDefUseDependence this.!closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
  22:   10 ->    8 loopCarriedDefUseDependence this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out (LC = 2)
  23:   10 ->    8 loopCarriedDefUseDependence this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count (LC = 2)
  24:   10 ->    8 loopCarriedDefUseDependence this.tabbedCanvas.!javax.swing.JTabbedPane.visComp (LC = 2)
  25:   10 ->   10 defOrderDependence this.!closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
  26:   10 ->   10 defOrderDependence this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble
  27:   10 ->   10 defOrderDependence this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb
  28:   10 ->   10 defOrderDependence this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars
  29:   10 ->   10 defOrderDependence this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar
  30:   10 ->   10 defOrderDependence this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out
  31:   10 ->   10 defOrderDependence this.canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se
  32:   10 ->   10 defOrderDependence this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush
  33:   10 ->   10 defOrderDependence this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out
  34:   10 ->   10 defOrderDependence this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut
  35:   10 ->   10 defOrderDependence this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble
  36:   10 ->   10 defOrderDependence this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder
  37:   10 ->   10 defOrderDependence this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value
  38:   10 ->   10 defOrderDependence this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble
  39:   10 ->   10 loopCarriedDefUseDependence this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out (LC = 2)
  40:   10 ->   10 loopCarriedDefUseDependence this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count (LC = 2)
  41:   10 ->   10 loopCarriedDefUseDependence this.tabbedCanvas.!javax.swing.JTabbedPane.visComp (LC = 2)
  42:   11 ->    2 fallThroughControlDependence
  43:   11 ->    3 fallThroughControlDependence
  44:   11 ->    4 fallThroughControlDependence
  45:   11 ->    5 fallThroughControlDependence
  46:   11 ->   14 trueControlDependence
--
   0: redoAction
   1:    0 ->    1 trueControlDependence
--
   0: getMenuBar( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    1 ->    3 loopIndependentDefUseDependence $_
--
   0: openFile( )
   1:    0 ->    4 trueControlDependence
   2:    0 ->    5 trueControlDependence
   3:    0 ->    6 trueControlDependence
   4:    3 ->    8 declaration
   5:    3 ->    8 loopIndependentDefUseDependence filename$0
   6:    3 ->   14 declaration
   7:    3 ->   14 loopIndependentDefUseDependence filename$0
   8:    5 ->    1 exceptionCatch
   9:    5 ->    3 trueControlDependence
  10:    5 ->    5+ trueControlDependence
  11:    5 ->    7 trueControlDependence
  12:    5 ->    8 trueControlDependence
  13:    5+ ->    7 loopIndependentDefUseDependence this.directory
  14:    7 ->    3 loopIndependentDefUseDependence this.!getFileName( boolean )
  15:    8 ->    9 trueControlDependence
  16:    8 ->   12 falseControlDependence
  17:    8 ->   13 falseControlDependence
  18:    8 ->   14 falseControlDependence
  19:    9 ->   12 fallThroughControlDependence
  20:    9 ->   13 fallThroughControlDependence
  21:    9 ->   14 fallThroughControlDependence
  22:    9 ->   17 loopIndependentDefUseDependence $_
  23:    9 ->   17 trueControlDependence
  24:   11 ->   17 loopIndependentDefUseDependence $_
  25:   13 ->    1 exceptionCatch
  26:   13 ->    2 exceptionCatch
  27:   13 ->   11 trueControlDependence
  28:   13 ->   13+ trueControlDependence
  29:   13 ->   13+ trueControlDependence
  30:   13 ->   13+ trueControlDependence
  31:   13 ->   13+ trueControlDependence
  32:   13 ->   13+ trueControlDependence
  33:   13 ->   13+ trueControlDependence
  34:   13 ->   13+ trueControlDependence
  35:   13 ->   13+ trueControlDependence
  36:   13 ->   13+ trueControlDependence
  37:   13 ->   13+ trueControlDependence
  38:   13 ->   13+ trueControlDependence
  39:   13 ->   13+ trueControlDependence
  40:   13 ->   13+ trueControlDependence
  41:   13 ->   13+ trueControlDependence
  42:   13 ->   13+ trueControlDependence
  43:   13 ->   15 trueControlDependence
  44:   13 ->   17 trueControlDependence
  45:   13+ ->   13+ outputDependence this.!openFile( java.lang.String ).figureManager
  46:   13+ ->   13+ outputDependence this.!openFile( java.lang.String ).figures
  47:   13+ ->   13+ outputDependence this.!openFile( java.lang.String ).filename
  48:   15 ->   11 loopIndependentDefUseDependence this.!openFile( java.lang.String )
--
   0: fileExists( java.lang.String )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   11 trueControlDependence
  11:    1 ->    4 loopIndependentDefUseDependence name$0
  12:    2 ->    7 declaration
  13:    2 ->    7 loopIndependentDefUseDependence file$1
  14:    5 ->    2 loopIndependentDefUseDependence java.io.File.!File( java.lang.String )
  15:    6 ->   11 loopIndependentDefUseDependence $_
  16:    9 ->    6 loopIndependentDefUseDependence file$1.!exists( )
--
   0: initToolBar( javax.swing.JToolBar )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   17 trueControlDependence
  18:    0 ->   18 trueControlDependence
  19:    0 ->   19 trueControlDependence
  20:    0 ->   20 trueControlDependence
  21:    0 ->   21 trueControlDependence
  22:    0 ->   22 trueControlDependence
  23:    0 ->   23 trueControlDependence
  24:    0 ->   24 trueControlDependence
  25:    0 ->   25 trueControlDependence
  26:    0 ->   26 trueControlDependence
  27:    0 ->   27 trueControlDependence
  28:    0 ->   28 trueControlDependence
  29:    0 ->   29 trueControlDependence
  30:    0 ->   30 trueControlDependence
  31:    0 ->   31 trueControlDependence
  32:    0 ->   32 trueControlDependence
  33:    0 ->   33 trueControlDependence
  34:    0 ->   34 trueControlDependence
  35:    0 ->   35 trueControlDependence
  36:    0 ->   36 trueControlDependence
  37:    0 ->   37 trueControlDependence
  38:    0 ->   38 trueControlDependence
  39:    0 ->   39 trueControlDependence
  40:    0 ->   40 trueControlDependence
  41:    0 ->   41 trueControlDependence
  42:    0 ->   42 trueControlDependence
  43:    0 ->   43 trueControlDependence
  44:    0 ->   44 trueControlDependence
  45:    0 ->   45 trueControlDependence
  46:    0 ->   46 trueControlDependence
  47:    0 ->   47 trueControlDependence
  48:    0 ->   48 trueControlDependence
  49:    0 ->   49 trueControlDependence
  50:    0 ->   50 trueControlDependence
  51:    0 ->   51 trueControlDependence
  52:    0 ->   52 trueControlDependence
  53:    0 ->   53 trueControlDependence
  54:    0 ->   54 trueControlDependence
  55:    0 ->   55 trueControlDependence
  56:    0 ->   56 trueControlDependence
  57:    0 ->   57 trueControlDependence
  58:    0 ->   58 trueControlDependence
  59:    0 ->   59 trueControlDependence
  60:    0 ->   60 trueControlDependence
  61:    0 ->   61 trueControlDependence
  62:    0 ->   62 trueControlDependence
  63:    0 ->   63 trueControlDependence
  64:    0 ->   64 trueControlDependence
  65:    0 ->   65 trueControlDependence
  66:    0 ->   66 trueControlDependence
  67:    0 ->   67 trueControlDependence
  68:    0 ->   68 trueControlDependence
  69:    0 ->   69 trueControlDependence
  70:    0 ->   70 trueControlDependence
  71:    0 ->   71 trueControlDependence
  72:    0 ->   72 trueControlDependence
  73:    0 ->   73 trueControlDependence
  74:    0 ->   74 trueControlDependence
  75:    0 ->   75 trueControlDependence
  76:    0 ->   76 trueControlDependence
  77:    0 ->   77 trueControlDependence
  78:    0 ->   78 trueControlDependence
  79:    0 ->   79 trueControlDependence
  80:    0 ->   80 trueControlDependence
  81:    0 ->   81 trueControlDependence
  82:    0 ->   83 trueControlDependence
  83:    1 ->    3 loopIndependentDefUseDependence toolBar$0
  84:    1 ->   11 loopIndependentDefUseDependence toolBar$0
  85:    1 ->   19 loopIndependentDefUseDependence toolBar$0
  86:    1 ->   27 loopIndependentDefUseDependence toolBar$0
  87:    1 ->   31 loopIndependentDefUseDependence toolBar$0
  88:    1 ->   39 loopIndependentDefUseDependence toolBar$0
  89:    1 ->   47 loopIndependentDefUseDependence toolBar$0
  90:    1 ->   55 loopIndependentDefUseDependence toolBar$0
  91:    1 ->   59 loopIndependentDefUseDependence toolBar$0
  92:    1 ->   71 loopIndependentDefUseDependence toolBar$0
  93:    2 ->    7 declaration
  94:    2 ->    7 loopIndependentDefUseDependence newButton$1
  95:    5 ->    2 loopIndependentDefUseDependence toolBar$0.!add( javax.swing.Action )
  96:    5 ->   12 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
  97:    5 ->   12 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
  98:    5 ->   13 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
  99:    5 ->   13 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 100:    5 ->   13 outputDependence toolBar$0.!add( javax.swing.Action )
 101:    9 ->    6 loopIndependentDefUseDependence newButton$1.!setToolTipText( java.lang.String )
 102:   10 ->   15 declaration
 103:   10 ->   15 loopIndependentDefUseDependence openButton$2
 104:   13 ->   10 loopIndependentDefUseDependence toolBar$0.!add( javax.swing.Action )
 105:   13 ->   20 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 106:   13 ->   20 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 107:   13 ->   21 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 108:   13 ->   21 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 109:   13 ->   21 outputDependence toolBar$0.!add( javax.swing.Action )
 110:   17 ->   14 loopIndependentDefUseDependence openButton$2.!setToolTipText( java.lang.String )
 111:   18 ->   23 declaration
 112:   18 ->   23 loopIndependentDefUseDependence saveButton$3
 113:   21 ->   18 loopIndependentDefUseDependence toolBar$0.!add( javax.swing.Action )
 114:   21 ->   32 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 115:   21 ->   32 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 116:   21 ->   33 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 117:   21 ->   33 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 118:   21 ->   33 outputDependence toolBar$0.!add( javax.swing.Action )
 119:   25 ->   22 loopIndependentDefUseDependence saveButton$3.!setToolTipText( java.lang.String )
 120:   29 ->   26 loopIndependentDefUseDependence toolBar$0.!addSeparator( )
 121:   29 ->   57 outputDependence toolBar$0.!addSeparator( )
 122:   30 ->   35 declaration
 123:   30 ->   35 loopIndependentDefUseDependence cutButton$4
 124:   33 ->   30 loopIndependentDefUseDependence toolBar$0.!add( javax.swing.Action )
 125:   33 ->   40 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 126:   33 ->   40 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 127:   33 ->   41 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 128:   33 ->   41 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 129:   33 ->   41 outputDependence toolBar$0.!add( javax.swing.Action )
 130:   37 ->   34 loopIndependentDefUseDependence cutButton$4.!setToolTipText( java.lang.String )
 131:   38 ->   43 declaration
 132:   38 ->   43 loopIndependentDefUseDependence copyButton$5
 133:   41 ->   38 loopIndependentDefUseDependence toolBar$0.!add( javax.swing.Action )
 134:   41 ->   48 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 135:   41 ->   48 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 136:   41 ->   49 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 137:   41 ->   49 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 138:   41 ->   49 outputDependence toolBar$0.!add( javax.swing.Action )
 139:   45 ->   42 loopIndependentDefUseDependence copyButton$5.!setToolTipText( java.lang.String )
 140:   46 ->   51 declaration
 141:   46 ->   51 loopIndependentDefUseDependence pasteButton$6
 142:   49 ->   46 loopIndependentDefUseDependence toolBar$0.!add( javax.swing.Action )
 143:   49 ->   60 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 144:   49 ->   60 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 145:   49 ->   61 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 146:   49 ->   61 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 147:   49 ->   61 outputDependence toolBar$0.!add( javax.swing.Action )
 148:   53 ->   50 loopIndependentDefUseDependence pasteButton$6.!setToolTipText( java.lang.String )
 149:   57 ->   54 loopIndependentDefUseDependence toolBar$0.!addSeparator( )
 150:   58 ->   63 declaration
 151:   58 ->   63 loopIndependentDefUseDependence undoButton$7
 152:   61 ->   58 loopIndependentDefUseDependence toolBar$0.!add( javax.swing.Action )
 153:   61 ->   72 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 154:   61 ->   72 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 155:   61 ->   73 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.action
 156:   61 ->   73 loopIndependentDefUseDependence toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 157:   61 ->   73 outputDependence toolBar$0.!add( javax.swing.Action )
 158:   65 ->   62 loopIndependentDefUseDependence undoButton$7.!setToolTipText( java.lang.String )
 159:   69 ->   66 loopIndependentDefUseDependence this.undoAction.!setEnabled( boolean )
 160:   70 ->   75 declaration
 161:   70 ->   75 loopIndependentDefUseDependence redoButton$8
 162:   70 ->   79 declaration
 163:   70 ->   79 loopIndependentDefUseDependence redoButton$8
 164:   73 ->   70 loopIndependentDefUseDependence toolBar$0.!add( javax.swing.Action )
 165:   77 ->   74 loopIndependentDefUseDependence redoButton$8.!setToolTipText( java.lang.String )
 166:   81 ->   78 loopIndependentDefUseDependence redoButton$8.!setEnabled( boolean )
--
   0: RECENT_FILES
   1:    0 ->    1 trueControlDependence
--
   0: addRecentFile( java.lang.String )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->   30 trueControlDependence
   8:    1 ->    4 loopIndependentDefUseDependence filename$0
   9:    1 ->    9 loopIndependentDefUseDependence filename$0
  10:    1 ->   26 loopIndependentDefUseDependence filename$0
  11:    2 ->    6 declaration
  12:    2 ->    6 loopIndependentDefUseDependence offset$1
  13:    2 ->   22 declaration
  14:    2 ->   22 loopIndependentDefUseDependence offset$1
  15:    5 ->    2 loopIndependentDefUseDependence this.recentFiles.!indexOf( java.lang.Object )
  16:    6 ->    7 trueControlDependence
  17:    6 ->    8 trueControlDependence
  18:    6 ->    9 trueControlDependence
  19:    6 ->   10 trueControlDependence
  20:    6 ->   11 trueControlDependence
  21:    6 ->   12 trueControlDependence
  22:    6 ->   13 trueControlDependence
  23:    6 ->   14 trueControlDependence
  24:    6 ->   20 falseControlDependence
  25:    6 ->   21 falseControlDependence
  26:    6 ->   22 falseControlDependence
  27:    6 ->   23 falseControlDependence
  28:    6 ->   24 falseControlDependence
  29:    6 ->   25 falseControlDependence
  30:    6 ->   26 falseControlDependence
  31:    6 ->   27 falseControlDependence
  32:   10 ->    7 loopIndependentDefUseDependence this.recentFiles.!add( int java.lang.Object )
  33:   11 ->   15 trueControlDependence
  34:   11 ->   16 trueControlDependence
  35:   11 ->   17 trueControlDependence
  36:   11 ->   18 trueControlDependence
  37:   14 ->   11 loopIndependentDefUseDependence this.recentFiles.!size( )
  38:   18 ->   15 loopIndependentDefUseDependence this.recentFiles.!remove( int )
  39:   23 ->   20 loopIndependentDefUseDependence this.recentFiles.!remove( int )
  40:   27 ->   24 loopIndependentDefUseDependence this.recentFiles.!add( int java.lang.Object )
--
   0: fileListMenu
   1:    0 ->    1 trueControlDependence
--
   0: saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String )
   1:    0 ->    2 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    0 ->    5 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    0 ->    7 trueControlDependence
   7:    0 ->    8 trueControlDependence
   8:    0 ->    9 trueControlDependence
   9:    0 ->   10 trueControlDependence
  10:    0 ->   11 trueControlDependence
  11:    0 ->   12 trueControlDependence
  12:    2 ->    6 loopIndependentDefUseDependence canvas$0
  13:    2 ->   20 loopIndependentDefUseDependence canvas$0
  14:    3 ->   10 loopIndependentDefUseDependence filename$1
  15:    3 ->   15 loopIndependentDefUseDependence filename$1
  16:    4 ->   12 declaration
  17:    4 ->   12 loopIndependentDefUseDependence result$2
  18:    8 ->    5 loopIndependentDefUseDependence canvas$0.!getFigureManager( )
  19:   11 ->    4 loopIndependentDefUseDependence canvas$0.!getFigureManager( ).!store( java.lang.String )
  20:   12 ->   14 trueControlDependence
  21:   12 ->   15 trueControlDependence
  22:   12 ->   19 falseControlDependence
  23:   12 ->   20 falseControlDependence
  24:   12 ->   21 falseControlDependence
  25:   12 ->   22 falseControlDependence
  26:   12 ->   23 falseControlDependence
  27:   12 ->   24 falseControlDependence
  28:   12 ->   26 falseControlDependence
  29:   15 ->    1 exceptionCatch
  30:   15 ->   13 trueControlDependence
  31:   15 ->   16 trueControlDependence
  32:   15 ->   17 trueControlDependence
  33:   15 ->   26 trueControlDependence
  34:   16 ->   13 loopIndependentDefUseDependence this.!showMessageDialog( java.awt.Component java.lang.Object )
  35:   17 ->   19 fallThroughControlDependence
  36:   17 ->   20 fallThroughControlDependence
  37:   17 ->   21 fallThroughControlDependence
  38:   17 ->   22 fallThroughControlDependence
  39:   17 ->   23 fallThroughControlDependence
  40:   17 ->   24 fallThroughControlDependence
  41:   17 ->   26 loopIndependentDefUseDependence $_
  42:   23 ->   19 loopIndependentDefUseDependence canvas$0.!setChanged( boolean )
  43:   24 ->   26 loopIndependentDefUseDependence $_
--
   0: clipboard
   1:    0 ->    1 trueControlDependence
--
   0: initEditActions( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   17 trueControlDependence
  18:    0 ->   18 trueControlDependence
  19:    0 ->   19 trueControlDependence
  20:    0 ->   20 trueControlDependence
  21:    0 ->   21 trueControlDependence
  22:    0 ->   22 trueControlDependence
  23:    0 ->   23 trueControlDependence
  24:    0 ->   24 trueControlDependence
  25:    0 ->   25 trueControlDependence
  26:    0 ->   26 trueControlDependence
  27:    0 ->   27 trueControlDependence
  28:    0 ->   28 trueControlDependence
  29:    0 ->   29 trueControlDependence
  30:    0 ->   30 trueControlDependence
  31:    0 ->   31 trueControlDependence
  32:    0 ->   32 trueControlDependence
  33:    0 ->   33 trueControlDependence
  34:    0 ->   34 trueControlDependence
  35:    0 ->   35 trueControlDependence
  36:    0 ->   36 trueControlDependence
  37:    0 ->   37 trueControlDependence
  38:    0 ->   38 trueControlDependence
  39:    0 ->   39 trueControlDependence
  40:    0 ->   40 trueControlDependence
  41:    0 ->   41 trueControlDependence
  42:    0 ->   42 trueControlDependence
  43:    0 ->   43 trueControlDependence
  44:    0 ->   44 trueControlDependence
  45:    0 ->   45 trueControlDependence
  46:    0 ->   46 trueControlDependence
  47:    0 ->   47 trueControlDependence
  48:    0 ->   48 trueControlDependence
  49:    0 ->   49 trueControlDependence
  50:    0 ->   50 trueControlDependence
  51:    0 ->   51 trueControlDependence
  52:    0 ->   52 trueControlDependence
  53:    0 ->   53 trueControlDependence
  54:    0 ->   54 trueControlDependence
  55:    0 ->   55 trueControlDependence
  56:    0 ->   56 trueControlDependence
  57:    0 ->   57 trueControlDependence
  58:    0 ->   58 trueControlDependence
  59:    0 ->   59 trueControlDependence
  60:    0 ->   60 trueControlDependence
  61:    0 ->   61 trueControlDependence
  62:    0 ->   62 trueControlDependence
  63:    0 ->   63 trueControlDependence
  64:    0 ->   64 trueControlDependence
  65:    0 ->   65 trueControlDependence
  66:    0 ->   66 trueControlDependence
  67:    0 ->   67 trueControlDependence
  68:    0 ->   68 trueControlDependence
  69:    0 ->   69 trueControlDependence
  70:    0 ->   70 trueControlDependence
  71:    0 ->   71 trueControlDependence
  72:    0 ->   72 trueControlDependence
  73:    0 ->   73 trueControlDependence
  74:    0 ->   74 trueControlDependence
  75:    0 ->   75 trueControlDependence
  76:    0 ->   76 trueControlDependence
  77:    0 ->   77 trueControlDependence
  78:    0 ->   78 trueControlDependence
  79:    0 ->   79 trueControlDependence
  80:    0 ->   80 trueControlDependence
  81:    0 ->   82 trueControlDependence
  82:   11 ->    8 loopIndependentDefUseDependence this.!getClass( )
  83:   11 ->   26 outputDependence this.!getClass( )
  84:   13 ->    7 loopIndependentDefUseDependence this.!getClass( ).!getResource( java.lang.String )
  85:   13 ->   28 outputDependence this.!getClass( ).!getResource( java.lang.String )
  86:   14 ->    5 loopIndependentDefUseDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
  87:   14 ->   22 loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
  88:   14 ->   29 loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
  89:   14 ->   29 outputDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
  90:   14 ->   29 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext
  91:   14 ->   29 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.description
  92:   14 ->   29 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.height
  93:   14 ->   29 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus
  94:   14 ->   29 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.location
  95:   14 ->   29 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.width
  96:   15 ->    1 loopIndependentDefUseDependence .!AbstractAction( java.lang.String javax.swing.Icon )
  97:   15 ->   18 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
  98:   15 ->   18 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
  99:   15 ->   30 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
 100:   15 ->   30 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
 101:   15 ->   30 outputDependence .!AbstractAction( java.lang.String javax.swing.Icon )
 102:   26 ->   23 loopIndependentDefUseDependence this.!getClass( )
 103:   26 ->   41 outputDependence this.!getClass( )
 104:   28 ->   22 loopIndependentDefUseDependence this.!getClass( ).!getResource( java.lang.String )
 105:   28 ->   43 outputDependence this.!getClass( ).!getResource( java.lang.String )
 106:   29 ->   20 loopIndependentDefUseDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
 107:   29 ->   37 loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
 108:   29 ->   44 loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
 109:   29 ->   44 outputDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
 110:   29 ->   44 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext
 111:   29 ->   44 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.description
 112:   29 ->   44 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.height
 113:   29 ->   44 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus
 114:   29 ->   44 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.location
 115:   29 ->   44 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.width
 116:   30 ->   16 loopIndependentDefUseDependence .!AbstractAction( java.lang.String javax.swing.Icon )
 117:   30 ->   33 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
 118:   30 ->   33 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
 119:   30 ->   45 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
 120:   30 ->   45 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
 121:   30 ->   45 outputDependence .!AbstractAction( java.lang.String javax.swing.Icon )
 122:   41 ->   38 loopIndependentDefUseDependence this.!getClass( )
 123:   41 ->   56 outputDependence this.!getClass( )
 124:   43 ->   37 loopIndependentDefUseDependence this.!getClass( ).!getResource( java.lang.String )
 125:   43 ->   58 outputDependence this.!getClass( ).!getResource( java.lang.String )
 126:   44 ->   35 loopIndependentDefUseDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
 127:   44 ->   52 loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
 128:   44 ->   59 loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
 129:   44 ->   59 outputDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
 130:   44 ->   59 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext
 131:   44 ->   59 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.description
 132:   44 ->   59 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.height
 133:   44 ->   59 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus
 134:   44 ->   59 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.location
 135:   44 ->   59 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.width
 136:   45 ->   31 loopIndependentDefUseDependence .!AbstractAction( java.lang.String javax.swing.Icon )
 137:   45 ->   48 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
 138:   45 ->   48 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
 139:   45 ->   60 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
 140:   45 ->   60 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
 141:   45 ->   60 outputDependence .!AbstractAction( java.lang.String javax.swing.Icon )
 142:   56 ->   53 loopIndependentDefUseDependence this.!getClass( )
 143:   56 ->   71 outputDependence this.!getClass( )
 144:   58 ->   52 loopIndependentDefUseDependence this.!getClass( ).!getResource( java.lang.String )
 145:   58 ->   73 outputDependence this.!getClass( ).!getResource( java.lang.String )
 146:   59 ->   50 loopIndependentDefUseDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
 147:   59 ->   67 loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
 148:   59 ->   74 loopIndependentDefUseDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.image
 149:   59 ->   74 outputDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
 150:   59 ->   74 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext
 151:   59 ->   74 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.description
 152:   59 ->   74 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.height
 153:   59 ->   74 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus
 154:   59 ->   74 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.location
 155:   59 ->   74 outputDependence javax.swing.ImageIcon.!javax.swing.ImageIcon.width
 156:   60 ->   46 loopIndependentDefUseDependence .!AbstractAction( java.lang.String javax.swing.Icon )
 157:   60 ->   63 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
 158:   60 ->   63 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
 159:   60 ->   75 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
 160:   60 ->   75 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
 161:   60 ->   75 outputDependence .!AbstractAction( java.lang.String javax.swing.Icon )
 162:   71 ->   68 loopIndependentDefUseDependence this.!getClass( )
 163:   73 ->   67 loopIndependentDefUseDependence this.!getClass( ).!getResource( java.lang.String )
 164:   74 ->   65 loopIndependentDefUseDependence javax.swing.ImageIcon.!ImageIcon( java.net.URL )
 165:   75 ->   61 loopIndependentDefUseDependence .!AbstractAction( java.lang.String javax.swing.Icon )
 166:   75 ->   78 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
 167:   75 ->   78 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
 168:   75 ->   80 loopIndependentDefUseDependence !javax.swing.AbstractAction.arrayTable
 169:   75 ->   80 loopIndependentDefUseDependence !javax.swing.AbstractAction.enabled
 170:   80 ->   76 loopIndependentDefUseDependence .!AbstractAction( java.lang.String )
--
   0: updateRedoState( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->   26 trueControlDependence
   7:    1 ->    5 declaration
   8:    1 ->    5 loopIndependentDefUseDependence canvas$0
   9:    1 ->    9 declaration
  10:    1 ->    9 loopIndependentDefUseDependence canvas$0
  11:    4 ->    1 loopIndependentDefUseDependence this.tabbedCanvas.!getCurrentCanvas( )
  12:    5 ->    6 trueControlDependence
  13:    5 ->    8 falseControlDependence
  14:    5 ->    9 falseControlDependence
  15:    5 ->   10 falseControlDependence
  16:    5 ->   11 falseControlDependence
  17:    5 ->   12 falseControlDependence
  18:    5 ->   13 falseControlDependence
  19:    5 ->   14 falseControlDependence
  20:    5 ->   15 falseControlDependence
  21:    6 ->    8 fallThroughControlDependence
  22:    6 ->    9 fallThroughControlDependence
  23:    6 ->   10 fallThroughControlDependence
  24:    6 ->   11 fallThroughControlDependence
  25:    6 ->   12 fallThroughControlDependence
  26:    6 ->   13 fallThroughControlDependence
  27:    6 ->   14 fallThroughControlDependence
  28:    6 ->   15 fallThroughControlDependence
  29:    8 ->   12 declaration
  30:    8 ->   12 loopIndependentDefUseDependence undoManager$1
  31:    8 ->   13 declaration
  32:    8 ->   13 loopIndependentDefUseDependence undoManager$1
  33:   11 ->    8 loopIndependentDefUseDependence canvas$0.!getUndoManager( )
  34:   12 ->   16 trueControlDependence
  35:   12 ->   17 trueControlDependence
  36:   12 ->   18 trueControlDependence
  37:   12 ->   19 trueControlDependence
  38:   12 ->   20 falseControlDependence
  39:   12 ->   21 falseControlDependence
  40:   12 ->   22 falseControlDependence
  41:   12 ->   23 falseControlDependence
  42:   15 ->   12 loopIndependentDefUseDependence undoManager$1.!canRedo( )
  43:   19 ->   16 loopIndependentDefUseDependence this.redoAction.!setEnabled( boolean )
  44:   23 ->   20 loopIndependentDefUseDependence this.redoAction.!setEnabled( boolean )
--
   0: directory
   1:    0 ->    1 trueControlDependence
--
   0: tabbedCanvas
   1:    0 ->    1 trueControlDependence
--
   0: fileListener
   1:    0 ->    1 trueControlDependence
--
   0: autoSave
   1:    0 ->    1 trueControlDependence
--
   0: saveAction
   1:    0 ->    1 trueControlDependence
--
   0: initMenuBar( javax.swing.JMenuBar )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   16+ trueControlDependence
  18:    0 ->   16+ trueControlDependence
  19:    0 ->   16+ trueControlDependence
  20:    0 ->   17 trueControlDependence
  21:    0 ->   18 trueControlDependence
  22:    0 ->   19 trueControlDependence
  23:    0 ->   20 trueControlDependence
  24:    0 ->   20+ trueControlDependence
  25:    0 ->   20+ trueControlDependence
  26:    0 ->   21 trueControlDependence
  27:    0 ->   22 trueControlDependence
  28:    0 ->   23 trueControlDependence
  29:    0 ->   24 trueControlDependence
  30:    0 ->   25 trueControlDependence
  31:    0 ->   26 trueControlDependence
  32:    0 ->   27 trueControlDependence
  33:    0 ->   28 trueControlDependence
  34:    0 ->   29 trueControlDependence
  35:    0 ->   30 trueControlDependence
  36:    0 ->   31 trueControlDependence
  37:    0 ->   32 trueControlDependence
  38:    0 ->   33 trueControlDependence
  39:    0 ->   34 trueControlDependence
  40:    0 ->   35 trueControlDependence
  41:    0 ->   36 trueControlDependence
  42:    0 ->   37 trueControlDependence
  43:    0 ->   37+ trueControlDependence
  44:    0 ->   37+ trueControlDependence
  45:    0 ->   37+ trueControlDependence
  46:    0 ->   37+ trueControlDependence
  47:    0 ->   37+ trueControlDependence
  48:    0 ->   37+ trueControlDependence
  49:    0 ->   38 trueControlDependence
  50:    0 ->   39 trueControlDependence
  51:    0 ->   40 trueControlDependence
  52:    0 ->   41 trueControlDependence
  53:    0 ->   42 trueControlDependence
  54:    0 ->   43 trueControlDependence
  55:    0 ->   44 trueControlDependence
  56:    0 ->   45 trueControlDependence
  57:    0 ->   46 trueControlDependence
  58:    0 ->   47 trueControlDependence
  59:    0 ->   48 trueControlDependence
  60:    0 ->   49 trueControlDependence
  61:    0 ->   50 trueControlDependence
  62:    0 ->   51 trueControlDependence
  63:    0 ->   52 trueControlDependence
  64:    0 ->   53 trueControlDependence
  65:    0 ->   54 trueControlDependence
  66:    0 ->   55 trueControlDependence
  67:    0 ->   56 trueControlDependence
  68:    0 ->   57 trueControlDependence
  69:    0 ->   58 trueControlDependence
  70:    0 ->   59 trueControlDependence
  71:    0 ->   60 trueControlDependence
  72:    0 ->   61 trueControlDependence
  73:    0 ->   62 trueControlDependence
  74:    0 ->   63 trueControlDependence
  75:    0 ->   64 trueControlDependence
  76:    0 ->   65 trueControlDependence
  77:    0 ->   66 trueControlDependence
  78:    0 ->   68 trueControlDependence
  79:    1 ->   11 loopIndependentDefUseDependence menuBar$0
  80:    1 ->   32 loopIndependentDefUseDependence menuBar$0
  81:    1 ->   53 loopIndependentDefUseDependence menuBar$0
  82:    2 ->    7 declaration
  83:    2 ->    7 loopIndependentDefUseDependence fileMenu$1
  84:    2 ->   12 declaration
  85:    2 ->   12 loopIndependentDefUseDependence fileMenu$1
  86:    2 ->   21 declaration
  87:    2 ->   21 loopIndependentDefUseDependence fileMenu$1
  88:    5 ->    2 loopIndependentDefUseDependence javax.swing.JMenu.!JMenu( java.lang.String )
  89:    5 ->   26 outputDependence javax.swing.JMenu.!JMenu( java.lang.String )
  90:    5 ->   26 outputDependence javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation
  91:    5 ->   26 outputDependence javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener
  92:    5 ->   26 outputDependence javax.swing.JMenu.!javax.swing.JMenu.menuEvent
  93:    9 ->    6 loopIndependentDefUseDependence fileMenu$1.!setMnemonic( char )
  94:   13 ->   10 loopIndependentDefUseDependence menuBar$0.!add( javax.swing.JMenu )
  95:   13 ->   34 outputDependence menuBar$0.!add( javax.swing.JMenu )
  96:   16+ ->   20 loopIndependentDefUseDependence this.newAction
  97:   16+ ->   20 loopIndependentDefUseDependence this.openAction
  98:   16+ ->   20 loopIndependentDefUseDependence this.saveAction
  99:   16+ ->   22 loopIndependentDefUseDependence this.newAction
 100:   16+ ->   22 loopIndependentDefUseDependence this.openAction
 101:   16+ ->   22 loopIndependentDefUseDependence this.saveAction
 102:   17 ->   14 loopIndependentDefUseDependence this.!initFileActions( )
 103:   17 ->   37 loopIndependentDefUseDependence this..!javax.swing.AbstractAction.arrayTable
 104:   17 ->   37 loopIndependentDefUseDependence this..!javax.swing.AbstractAction.enabled
 105:   17 ->   37 loopIndependentDefUseDependence this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image
 106:   17 ->   38 loopIndependentDefUseDependence this..!javax.swing.AbstractAction.arrayTable
 107:   17 ->   38 loopIndependentDefUseDependence this..!javax.swing.AbstractAction.enabled
 108:   17 ->   38 loopIndependentDefUseDependence this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image
 109:   17 ->   38 outputDependence this.javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext
 110:   17 ->   38 outputDependence this.javax.swing.ImageIcon.!javax.swing.ImageIcon.description
 111:   17 ->   38 outputDependence this.javax.swing.ImageIcon.!javax.swing.ImageIcon.height
 112:   17 ->   38 outputDependence this.javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus
 113:   17 ->   38 outputDependence this.javax.swing.ImageIcon.!javax.swing.ImageIcon.location
 114:   17 ->   38 outputDependence this.javax.swing.ImageIcon.!javax.swing.ImageIcon.width
 115:   20+ ->   22 loopIndependentDefUseDependence this.fileListMenu
 116:   22 ->   18 loopIndependentDefUseDependence this.!initFileMenu( javax.swing.JMenu )
 117:   22 ->   41 loopIndependentDefUseDependence this.menu$0.!javax.swing.AbstractButton.action
 118:   22 ->   41 loopIndependentDefUseDependence this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 119:   22 ->   41 loopIndependentDefUseDependence this.menu$0.!javax.swing.JMenu.popupMenu
 120:   22 ->   43 loopIndependentDefUseDependence this.menu$0.!javax.swing.AbstractButton.action
 121:   22 ->   43 loopIndependentDefUseDependence this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 122:   22 ->   43 loopIndependentDefUseDependence this.menu$0.!javax.swing.JMenu.popupMenu
 123:   22 ->   43 outputDependence this.menu$0.!javax.swing.JMenu.popupListener
 124:   23 ->   28 declaration
 125:   23 ->   28 loopIndependentDefUseDependence editMenu$2
 126:   23 ->   33 declaration
 127:   23 ->   33 loopIndependentDefUseDependence editMenu$2
 128:   23 ->   42 declaration
 129:   23 ->   42 loopIndependentDefUseDependence editMenu$2
 130:   26 ->   23 loopIndependentDefUseDependence javax.swing.JMenu.!JMenu( java.lang.String )
 131:   26 ->   47 outputDependence javax.swing.JMenu.!JMenu( java.lang.String )
 132:   26 ->   47 outputDependence javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation
 133:   26 ->   47 outputDependence javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener
 134:   26 ->   47 outputDependence javax.swing.JMenu.!javax.swing.JMenu.menuEvent
 135:   30 ->   27 loopIndependentDefUseDependence editMenu$2.!setMnemonic( char )
 136:   34 ->   31 loopIndependentDefUseDependence menuBar$0.!add( javax.swing.JMenu )
 137:   34 ->   55 outputDependence menuBar$0.!add( javax.swing.JMenu )
 138:   37+ ->   41 loopIndependentDefUseDependence this.copyAction
 139:   37+ ->   41 loopIndependentDefUseDependence this.cutAction
 140:   37+ ->   41 loopIndependentDefUseDependence this.deleteAction
 141:   37+ ->   41 loopIndependentDefUseDependence this.pasteAction
 142:   37+ ->   41 loopIndependentDefUseDependence this.redoAction
 143:   37+ ->   41 loopIndependentDefUseDependence this.undoAction
 144:   37+ ->   43 loopIndependentDefUseDependence this.copyAction
 145:   37+ ->   43 loopIndependentDefUseDependence this.cutAction
 146:   37+ ->   43 loopIndependentDefUseDependence this.deleteAction
 147:   37+ ->   43 loopIndependentDefUseDependence this.pasteAction
 148:   37+ ->   43 loopIndependentDefUseDependence this.redoAction
 149:   37+ ->   43 loopIndependentDefUseDependence this.undoAction
 150:   38 ->   35 loopIndependentDefUseDependence this.!initEditActions( )
 151:   43 ->   39 loopIndependentDefUseDependence this.!initEditMenu( javax.swing.JMenu )
 152:   44 ->   49 declaration
 153:   44 ->   49 loopIndependentDefUseDependence windowMenu$3
 154:   44 ->   54 declaration
 155:   44 ->   54 loopIndependentDefUseDependence windowMenu$3
 156:   44 ->   61 declaration
 157:   44 ->   61 loopIndependentDefUseDependence windowMenu$3
 158:   47 ->   44 loopIndependentDefUseDependence javax.swing.JMenu.!JMenu( java.lang.String )
 159:   51 ->   48 loopIndependentDefUseDependence windowMenu$3.!setMnemonic( char )
 160:   55 ->   52 loopIndependentDefUseDependence menuBar$0.!add( javax.swing.JMenu )
 161:   59 ->   56 loopIndependentDefUseDependence .!ActionListener( )
 162:   65 ->   62 loopIndependentDefUseDependence .!MenuListener( )
 163:   66 ->   60 loopIndependentDefUseDependence windowMenu$3.!addMenuListener( javax.swing.event.MenuListener )
--
   0: pasteAction
   1:    0 ->    1 trueControlDependence
--
   0: initFileMenu( javax.swing.JMenu )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   17 trueControlDependence
  18:    0 ->   18 trueControlDependence
  19:    0 ->   19 trueControlDependence
  20:    0 ->   20 trueControlDependence
  21:    0 ->   21 trueControlDependence
  22:    0 ->   22 trueControlDependence
  23:    0 ->   23 trueControlDependence
  24:    0 ->   24 trueControlDependence
  25:    0 ->   25 trueControlDependence
  26:    0 ->   26 trueControlDependence
  27:    0 ->   27 trueControlDependence
  28:    0 ->   28 trueControlDependence
  29:    0 ->   29 trueControlDependence
  30:    0 ->   30 trueControlDependence
  31:    0 ->   31 trueControlDependence
  32:    0 ->   32 trueControlDependence
  33:    0 ->   33 trueControlDependence
  34:    0 ->   34 trueControlDependence
  35:    0 ->   35 trueControlDependence
  36:    0 ->   36 trueControlDependence
  37:    0 ->   37 trueControlDependence
  38:    0 ->   38 trueControlDependence
  39:    0 ->   39 trueControlDependence
  40:    0 ->   40 trueControlDependence
  41:    0 ->   41 trueControlDependence
  42:    0 ->   42 trueControlDependence
  43:    0 ->   43 trueControlDependence
  44:    0 ->   44 trueControlDependence
  45:    0 ->   45 trueControlDependence
  46:    0 ->   46 trueControlDependence
  47:    0 ->   47 trueControlDependence
  48:    0 ->   48 trueControlDependence
  49:    0 ->   49 trueControlDependence
  50:    0 ->   50 trueControlDependence
  51:    0 ->   51 trueControlDependence
  52:    0 ->   52 trueControlDependence
  53:    0 ->   53 trueControlDependence
  54:    0 ->   54 trueControlDependence
  55:    0 ->   55 trueControlDependence
  56:    0 ->   56 trueControlDependence
  57:    0 ->   57 trueControlDependence
  58:    0 ->   58 trueControlDependence
  59:    0 ->   59 trueControlDependence
  60:    0 ->   60 trueControlDependence
  61:    0 ->   61 trueControlDependence
  62:    0 ->   62 trueControlDependence
  63:    0 ->   63 trueControlDependence
  64:    0 ->   64 trueControlDependence
  65:    0 ->   65 trueControlDependence
  66:    0 ->   66 trueControlDependence
  67:    0 ->   67 trueControlDependence
  68:    0 ->   68 trueControlDependence
  69:    0 ->   69 trueControlDependence
  70:    0 ->   70 trueControlDependence
  71:    0 ->   71 trueControlDependence
  72:    0 ->   72 trueControlDependence
  73:    0 ->   73 trueControlDependence
  74:    0 ->   74 trueControlDependence
  75:    0 ->   75 trueControlDependence
  76:    0 ->   76 trueControlDependence
  77:    0 ->   77 trueControlDependence
  78:    0 ->   78 trueControlDependence
  79:    0 ->   79 trueControlDependence
  80:    0 ->   80 trueControlDependence
  81:    0 ->   81 trueControlDependence
  82:    0 ->   82 trueControlDependence
  83:    0 ->   83 trueControlDependence
  84:    0 ->   84 trueControlDependence
  85:    0 ->   85 trueControlDependence
  86:    0 ->   86 trueControlDependence
  87:    0 ->   87 trueControlDependence
  88:    0 ->   88 trueControlDependence
  89:    0 ->   89 trueControlDependence
  90:    0 ->   90 trueControlDependence
  91:    0 ->   91 trueControlDependence
  92:    0 ->   92 trueControlDependence
  93:    0 ->   93 trueControlDependence
  94:    0 ->   94 trueControlDependence
  95:    0 ->   95 trueControlDependence
  96:    0 ->   96 trueControlDependence
  97:    0 ->   97 trueControlDependence
  98:    0 ->   98 trueControlDependence
  99:    0 ->   99 trueControlDependence
 100:    0 ->  100 trueControlDependence
 101:    0 ->  101 trueControlDependence
 102:    0 ->  102 trueControlDependence
 103:    0 ->  103 trueControlDependence
 104:    0 ->  104 trueControlDependence
 105:    0 ->  105 trueControlDependence
 106:    0 ->  106 trueControlDependence
 107:    0 ->  107 trueControlDependence
 108:    0 ->  108 trueControlDependence
 109:    0 ->  109 trueControlDependence
 110:    0 ->  110 trueControlDependence
 111:    0 ->  111 trueControlDependence
 112:    0 ->  112 trueControlDependence
 113:    0 ->  113 trueControlDependence
 114:    0 ->  114 trueControlDependence
 115:    0 ->  115 trueControlDependence
 116:    0 ->  116 trueControlDependence
 117:    0 ->  117 trueControlDependence
 118:    0 ->  118 trueControlDependence
 119:    0 ->  119 trueControlDependence
 120:    0 ->  120 trueControlDependence
 121:    0 ->  121 trueControlDependence
 122:    0 ->  122 trueControlDependence
 123:    0 ->  123 trueControlDependence
 124:    0 ->  124 trueControlDependence
 125:    0 ->  125 trueControlDependence
 126:    0 ->  126 trueControlDependence
 127:    0 ->  127 trueControlDependence
 128:    0 ->  128 trueControlDependence
 129:    0 ->  129 trueControlDependence
 130:    0 ->  130 trueControlDependence
 131:    0 ->  131 trueControlDependence
 132:    0 ->  132 trueControlDependence
 133:    0 ->  133 trueControlDependence
 134:    0 ->  134 trueControlDependence
 135:    0 ->  135 trueControlDependence
 136:    0 ->  136 trueControlDependence
 137:    0 ->  137 trueControlDependence
 138:    0 ->  138 trueControlDependence
 139:    0 ->  139 trueControlDependence
 140:    0 ->  140 trueControlDependence
 141:    0 ->  141 trueControlDependence
 142:    0 ->  142 trueControlDependence
 143:    0 ->  143 trueControlDependence
 144:    0 ->  144 trueControlDependence
 145:    0 ->  145 trueControlDependence
 146:    0 ->  146 trueControlDependence
 147:    0 ->  147 trueControlDependence
 148:    0 ->  148 trueControlDependence
 149:    0 ->  149 trueControlDependence
 150:    0 ->  150 trueControlDependence
 151:    0 ->  151 trueControlDependence
 152:    0 ->  152 trueControlDependence
 153:    0 ->  153 trueControlDependence
 154:    0 ->  154 trueControlDependence
 155:    0 ->  155 trueControlDependence
 156:    0 ->  157 trueControlDependence
 157:    1 ->    3 loopIndependentDefUseDependence menu$0
 158:    1 ->   22 loopIndependentDefUseDependence menu$0
 159:    1 ->   49 loopIndependentDefUseDependence menu$0
 160:    1 ->   60 loopIndependentDefUseDependence menu$0
 161:    1 ->   64 loopIndependentDefUseDependence menu$0
 162:    1 ->   91 loopIndependentDefUseDependence menu$0
 163:    1 ->  102 loopIndependentDefUseDependence menu$0
 164:    1 ->  114 loopIndependentDefUseDependence menu$0
 165:    1 ->  134 loopIndependentDefUseDependence menu$0
 166:    1 ->  146 loopIndependentDefUseDependence menu$0
 167:    2 ->    7 declaration
 168:    2 ->    7 loopIndependentDefUseDependence newItem$1
 169:    2 ->   11 declaration
 170:    2 ->   11 loopIndependentDefUseDependence newItem$1
 171:    2 ->   15 declaration
 172:    2 ->   15 loopIndependentDefUseDependence newItem$1
 173:    5 ->    2 loopIndependentDefUseDependence menu$0.!add( javax.swing.Action )
 174:    5 ->   23 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 175:    5 ->   23 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 176:    5 ->   24 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 177:    5 ->   24 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 178:    5 ->   24 outputDependence menu$0.!add( javax.swing.Action )
 179:    9 ->    6 loopIndependentDefUseDependence newItem$1.!setMnemonic( char )
 180:   13 ->   10 loopIndependentDefUseDependence newItem$1.!setIcon( javax.swing.Icon )
 181:   19 ->   16 loopIndependentDefUseDependence this.!getKeyStroke( int int boolean )
 182:   19 ->   38 outputDependence this.!getKeyStroke( int int boolean )
 183:   20 ->   14 loopIndependentDefUseDependence newItem$1.!setAccelerator( javax.swing.KeyStroke )
 184:   21 ->   26 declaration
 185:   21 ->   26 loopIndependentDefUseDependence openItem$2
 186:   21 ->   30 declaration
 187:   21 ->   30 loopIndependentDefUseDependence openItem$2
 188:   21 ->   34 declaration
 189:   21 ->   34 loopIndependentDefUseDependence openItem$2
 190:   24 ->   21 loopIndependentDefUseDependence menu$0.!add( javax.swing.Action )
 191:   24 ->   65 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 192:   24 ->   65 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 193:   24 ->   66 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 194:   24 ->   66 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 195:   24 ->   66 outputDependence menu$0.!add( javax.swing.Action )
 196:   28 ->   25 loopIndependentDefUseDependence openItem$2.!setMnemonic( char )
 197:   32 ->   29 loopIndependentDefUseDependence openItem$2.!setIcon( javax.swing.Icon )
 198:   38 ->   35 loopIndependentDefUseDependence this.!getKeyStroke( int int boolean )
 199:   38 ->   80 outputDependence this.!getKeyStroke( int int boolean )
 200:   39 ->   33 loopIndependentDefUseDependence openItem$2.!setAccelerator( javax.swing.KeyStroke )
 201:   40 ->   45 declaration
 202:   40 ->   45 loopIndependentDefUseDependence closeItem$3
 203:   40 ->   50 declaration
 204:   40 ->   50 loopIndependentDefUseDependence closeItem$3
 205:   40 ->   53 declaration
 206:   40 ->   53 loopIndependentDefUseDependence closeItem$3
 207:   43 ->   40 loopIndependentDefUseDependence javax.swing.JMenuItem.!JMenuItem( java.lang.String )
 208:   43 ->   85 outputDependence javax.swing.JMenuItem.!JMenuItem( java.lang.String )
 209:   43 ->   85 outputDependence javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged
 210:   47 ->   44 loopIndependentDefUseDependence closeItem$3.!setMnemonic( char )
 211:   51 ->   48 loopIndependentDefUseDependence menu$0.!add( javax.swing.JMenuItem )
 212:   51 ->   61 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 213:   51 ->   62 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 214:   51 ->   62 outputDependence menu$0.!javax.swing.JMenu.popupListener
 215:   51 ->   93 outputDependence menu$0.!add( javax.swing.JMenuItem )
 216:   57 ->   54 loopIndependentDefUseDependence .!ActionListener( )
 217:   57 ->   99 outputDependence .!ActionListener( )
 218:   58 ->   52 loopIndependentDefUseDependence closeItem$3.!addActionListener( java.awt.event.ActionListener )
 219:   62 ->   59 loopIndependentDefUseDependence menu$0.!addSeparator( )
 220:   62 ->   65 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 221:   62 ->   66 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 222:   62 ->   92 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 223:   62 ->   93 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 224:   62 ->   93 outputDependence menu$0.!javax.swing.JMenu.popupListener
 225:   62 ->  104 outputDependence menu$0.!addSeparator( )
 226:   63 ->   68 declaration
 227:   63 ->   68 loopIndependentDefUseDependence saveItem$5
 228:   63 ->   72 declaration
 229:   63 ->   72 loopIndependentDefUseDependence saveItem$5
 230:   63 ->   76 declaration
 231:   63 ->   76 loopIndependentDefUseDependence saveItem$5
 232:   66 ->   63 loopIndependentDefUseDependence menu$0.!add( javax.swing.Action )
 233:   70 ->   67 loopIndependentDefUseDependence saveItem$5.!setMnemonic( char )
 234:   74 ->   71 loopIndependentDefUseDependence saveItem$5.!setIcon( javax.swing.Icon )
 235:   80 ->   77 loopIndependentDefUseDependence this.!getKeyStroke( int int boolean )
 236:   81 ->   75 loopIndependentDefUseDependence saveItem$5.!setAccelerator( javax.swing.KeyStroke )
 237:   82 ->   87 declaration
 238:   82 ->   87 loopIndependentDefUseDependence saveAsItem$6
 239:   82 ->   92 declaration
 240:   82 ->   92 loopIndependentDefUseDependence saveAsItem$6
 241:   82 ->   95 declaration
 242:   82 ->   95 loopIndependentDefUseDependence saveAsItem$6
 243:   85 ->   82 loopIndependentDefUseDependence javax.swing.JMenuItem.!JMenuItem( java.lang.String )
 244:   85 ->  120 outputDependence javax.swing.JMenuItem.!JMenuItem( java.lang.String )
 245:   85 ->  120 outputDependence javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged
 246:   89 ->   86 loopIndependentDefUseDependence saveAsItem$6.!setMnemonic( char )
 247:   93 ->   90 loopIndependentDefUseDependence menu$0.!add( javax.swing.JMenuItem )
 248:   93 ->  103 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 249:   93 ->  104 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 250:   93 ->  104 outputDependence menu$0.!javax.swing.JMenu.popupListener
 251:   93 ->  116 outputDependence menu$0.!add( javax.swing.JMenuItem )
 252:   99 ->   96 loopIndependentDefUseDependence .!ActionListener( )
 253:   99 ->  132 outputDependence .!ActionListener( )
 254:  100 ->   94 loopIndependentDefUseDependence saveAsItem$6.!addActionListener( java.awt.event.ActionListener )
 255:  104 ->  101 loopIndependentDefUseDependence menu$0.!addSeparator( )
 256:  104 ->  115 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 257:  104 ->  116 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 258:  104 ->  116 outputDependence menu$0.!javax.swing.JMenu.popupListener
 259:  104 ->  136 outputDependence menu$0.!addSeparator( )
 260:  105 ->  110 loopIndependentDefUseDependence this.fileListMenu
 261:  105 ->  115 loopIndependentDefUseDependence this.fileListMenu
 262:  105 ->  126 loopIndependentDefUseDependence this.fileListMenu
 263:  108 ->  105 loopIndependentDefUseDependence javax.swing.JMenu.!JMenu( java.lang.String )
 264:  112 ->  109 loopIndependentDefUseDependence this.fileListMenu.!setMnemonic( char )
 265:  116 ->  113 loopIndependentDefUseDependence menu$0.!add( javax.swing.JMenuItem )
 266:  116 ->  135 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 267:  116 ->  136 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 268:  116 ->  136 outputDependence menu$0.!javax.swing.JMenu.popupListener
 269:  116 ->  148 outputDependence menu$0.!add( javax.swing.JMenuItem )
 270:  117 ->  122 declaration
 271:  117 ->  122 loopIndependentDefUseDependence emptyListItem$9
 272:  117 ->  127 declaration
 273:  117 ->  127 loopIndependentDefUseDependence emptyListItem$9
 274:  120 ->  117 loopIndependentDefUseDependence javax.swing.JMenuItem.!JMenuItem( java.lang.String )
 275:  120 ->  140 outputDependence javax.swing.JMenuItem.!JMenuItem( java.lang.String )
 276:  120 ->  140 outputDependence javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged
 277:  124 ->  121 loopIndependentDefUseDependence emptyListItem$9.!setEnabled( boolean )
 278:  128 ->  125 loopIndependentDefUseDependence this.fileListMenu.!add( javax.swing.JMenuItem )
 279:  132 ->  129 loopIndependentDefUseDependence .!ActionListener( )
 280:  132 ->  154 outputDependence .!ActionListener( )
 281:  136 ->  133 loopIndependentDefUseDependence menu$0.!addSeparator( )
 282:  136 ->  147 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 283:  136 ->  148 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 284:  136 ->  148 outputDependence menu$0.!javax.swing.JMenu.popupListener
 285:  137 ->  142 declaration
 286:  137 ->  142 loopIndependentDefUseDependence exitItem$13
 287:  137 ->  147 declaration
 288:  137 ->  147 loopIndependentDefUseDependence exitItem$13
 289:  137 ->  150 declaration
 290:  137 ->  150 loopIndependentDefUseDependence exitItem$13
 291:  140 ->  137 loopIndependentDefUseDependence javax.swing.JMenuItem.!JMenuItem( java.lang.String )
 292:  144 ->  141 loopIndependentDefUseDependence exitItem$13.!setMnemonic( char )
 293:  148 ->  145 loopIndependentDefUseDependence menu$0.!add( javax.swing.JMenuItem )
 294:  154 ->  151 loopIndependentDefUseDependence .!ActionListener( )
 295:  155 ->  149 loopIndependentDefUseDependence exitItem$13.!addActionListener( java.awt.event.ActionListener )
--
   0: updateUndoState( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->   26 trueControlDependence
   7:    1 ->    5 declaration
   8:    1 ->    5 loopIndependentDefUseDependence canvas$0
   9:    1 ->    9 declaration
  10:    1 ->    9 loopIndependentDefUseDependence canvas$0
  11:    4 ->    1 loopIndependentDefUseDependence this.tabbedCanvas.!getCurrentCanvas( )
  12:    5 ->    6 trueControlDependence
  13:    5 ->    8 falseControlDependence
  14:    5 ->    9 falseControlDependence
  15:    5 ->   10 falseControlDependence
  16:    5 ->   11 falseControlDependence
  17:    5 ->   12 falseControlDependence
  18:    5 ->   13 falseControlDependence
  19:    5 ->   14 falseControlDependence
  20:    5 ->   15 falseControlDependence
  21:    6 ->    8 fallThroughControlDependence
  22:    6 ->    9 fallThroughControlDependence
  23:    6 ->   10 fallThroughControlDependence
  24:    6 ->   11 fallThroughControlDependence
  25:    6 ->   12 fallThroughControlDependence
  26:    6 ->   13 fallThroughControlDependence
  27:    6 ->   14 fallThroughControlDependence
  28:    6 ->   15 fallThroughControlDependence
  29:    8 ->   12 declaration
  30:    8 ->   12 loopIndependentDefUseDependence undoManager$1
  31:    8 ->   13 declaration
  32:    8 ->   13 loopIndependentDefUseDependence undoManager$1
  33:   11 ->    8 loopIndependentDefUseDependence canvas$0.!getUndoManager( )
  34:   12 ->   16 trueControlDependence
  35:   12 ->   17 trueControlDependence
  36:   12 ->   18 trueControlDependence
  37:   12 ->   19 trueControlDependence
  38:   12 ->   20 falseControlDependence
  39:   12 ->   21 falseControlDependence
  40:   12 ->   22 falseControlDependence
  41:   12 ->   23 falseControlDependence
  42:   15 ->   12 loopIndependentDefUseDependence undoManager$1.!canUndo( )
  43:   19 ->   16 loopIndependentDefUseDependence this.undoAction.!setEnabled( boolean )
  44:   23 ->   20 loopIndependentDefUseDependence this.undoAction.!setEnabled( boolean )
--
   0: saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1:    0 ->    2 trueControlDependence
   2:    0 ->    4 trueControlDependence
   3:    0 ->    5 trueControlDependence
   4:    0 ->    6 trueControlDependence
   5:    0 ->    7 trueControlDependence
   6:    0 ->    8 trueControlDependence
   7:    0 ->    9 trueControlDependence
   8:    0 ->   10 trueControlDependence
   9:    0 ->   11 trueControlDependence
  10:    0 ->   12 trueControlDependence
  11:    0 ->   13 trueControlDependence
  12:    2 ->    6 loopIndependentDefUseDependence canvas$0
  13:    2 ->    9 loopIndependentDefUseDependence canvas$0
  14:    3 ->   16 loopIndependentDefUseDependence $_
  15:    5 ->    1 exceptionCatch
  16:    5 ->    3 trueControlDependence
  17:    5 ->   14 trueControlDependence
  18:    5 ->   16 trueControlDependence
  19:   11 ->    8 loopIndependentDefUseDependence canvas$0.!getFigureManager( )
  20:   13 ->    7 loopIndependentDefUseDependence canvas$0.!getFigureManager( ).!getFilename( )
  21:   14 ->    3 loopIndependentDefUseDependence this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String )
--
   0: buildRecentFileMenu( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->   19 trueControlDependence
   7:    4 ->    1 loopIndependentDefUseDependence this.fileListMenu.!removeAll( )
   8:    5 ->    5 defOrderDependence filename$0
   9:    5 ->    6 trueControlDependence
  10:    5 ->    7 trueControlDependence
  11:    5 ->    8 loopIndependentDefUseDependence filename$0
  12:    5 ->    8 trueControlDependence
  13:    5 ->    9 trueControlDependence
  14:    5 ->   10 trueControlDependence
  15:    5 ->   11 trueControlDependence
  16:    5 ->   12 trueControlDependence
  17:    5 ->   13 trueControlDependence
  18:    5 ->   14 trueControlDependence
  19:    5 ->   15 trueControlDependence
  20:    5 ->   16 trueControlDependence
  21:    5 ->   17 trueControlDependence
  22:    6 ->    6 defOrderDependence fileItem$2
  23:    6 ->   12 declaration
  24:    6 ->   12 loopIndependentDefUseDependence fileItem$2
  25:    6 ->   15 declaration
  26:    6 ->   15 loopIndependentDefUseDependence fileItem$2
  27:    9 ->    6 loopIndependentDefUseDependence javax.swing.JMenuItem.!JMenuItem( java.lang.String )
  28:    9 ->    9 defOrderDependence javax.swing.JMenuItem.!JMenuItem( java.lang.String )
  29:    9 ->    9 defOrderDependence javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged
  30:   13 ->   10 loopIndependentDefUseDependence this.fileListMenu.!add( javax.swing.JMenuItem )
  31:   13 ->   12 loopCarriedDefUseDependence this.fileListMenu.!javax.swing.JMenu.popupMenu (LC = 5)
  32:   13 ->   13 defOrderDependence this.fileListMenu.!add( javax.swing.JMenuItem )
  33:   13 ->   13 defOrderDependence this.fileListMenu.!javax.swing.JMenu.popupListener
  34:   13 ->   13 loopCarriedDefUseDependence this.fileListMenu.!javax.swing.JMenu.popupMenu (LC = 5)
  35:   17 ->   14 loopIndependentDefUseDependence fileItem$2.!addActionListener( java.awt.event.ActionListener )
  36:   17 ->   16 loopCarriedDefUseDependence fileItem$2.!javax.swing.event.EventListenerList.listenerList (LC = 5)
  37:   17 ->   17 defOrderDependence fileItem$2.!addActionListener( java.awt.event.ActionListener )
  38:   17 ->   17 loopCarriedDefUseDependence fileItem$2.!javax.swing.event.EventListenerList.listenerList (LC = 5)
--
   0: openFile( java.lang.String )
   1:    0 ->    3 trueControlDependence
   2:    0 ->    4 trueControlDependence
   3:    0 ->    5 trueControlDependence
   4:    0 ->    6 trueControlDependence
   5:    0 ->    7 trueControlDependence
   6:    0 ->    8 trueControlDependence
   7:    0 ->    9 trueControlDependence
   8:    0 ->   10 trueControlDependence
   9:    0 ->   11 trueControlDependence
  10:    0 ->   12 trueControlDependence
  11:    0 ->   13 trueControlDependence
  12:    3 ->    7 loopIndependentDefUseDependence filename$0
  13:    3 ->   12 loopIndependentDefUseDependence filename$0
  14:    3 ->   20 loopIndependentDefUseDependence filename$0
  15:    3 ->   34 loopIndependentDefUseDependence filename$0
  16:    3 ->   43 loopIndependentDefUseDependence filename$0
  17:    3 ->   48 loopIndependentDefUseDependence filename$0
  18:    3 ->   59 loopIndependentDefUseDependence filename$0
  19:    4 ->   15 declaration
  20:    4 ->   15 loopIndependentDefUseDependence canvas$1
  21:    4 ->   31 declaration
  22:    4 ->   31 outputDependence canvas$1
  23:    4 ->   39 declaration
  24:    4 ->   39 loopIndependentDefUseDependence canvas$1
  25:    4 ->   53 declaration
  26:    4 ->   53 loopIndependentDefUseDependence canvas$1
  27:    4 ->   62 declaration
  28:    4 ->   62 loopIndependentDefUseDependence canvas$1
  29:    8 ->    4 loopIndependentDefUseDependence this.tabbedCanvas.!getCanvas( java.lang.String )
  30:    8 ->   13 outputDependence this.tabbedCanvas.!getCanvas( java.lang.String )
  31:    9 ->   14 trueControlDependence
  32:    9 ->   15 trueControlDependence
  33:    9 ->   16 trueControlDependence
  34:    9 ->   17 trueControlDependence
  35:    9 ->   31 falseControlDependence
  36:    9 ->   32 falseControlDependence
  37:    9 ->   33 falseControlDependence
  38:    9 ->   33+ falseControlDependence
  39:    9 ->   33+ falseControlDependence
  40:    9 ->   33+ falseControlDependence
  41:    9 ->   33+ falseControlDependence
  42:    9 ->   33+ falseControlDependence
  43:    9 ->   33+ falseControlDependence
  44:    9 ->   33+ falseControlDependence
  45:    9 ->   33+ falseControlDependence
  46:    9 ->   33+ falseControlDependence
  47:    9 ->   33+ falseControlDependence
  48:    9 ->   33+ falseControlDependence
  49:    9 ->   34 falseControlDependence
  50:    9 ->   35 falseControlDependence
  51:    9 ->   38 falseControlDependence
  52:    9 ->   39 falseControlDependence
  53:    9 ->   40 falseControlDependence
  54:    9 ->   41 falseControlDependence
  55:    9 ->   42 falseControlDependence
  56:    9 ->   43 falseControlDependence
  57:   13 ->    9 loopIndependentDefUseDependence this.tabbedCanvas.!getCanvas( java.lang.String )
  58:   14 ->   19 trueControlDependence
  59:   14 ->   20 trueControlDependence
  60:   14 ->   24 falseControlDependence
  61:   14 ->   25 falseControlDependence
  62:   17 ->   14 loopIndependentDefUseDependence canvas$1.!hasChanged( )
  63:   20 ->    1 exceptionCatch
  64:   20 ->   18 trueControlDependence
  65:   20 ->   21 trueControlDependence
  66:   20 ->   22 trueControlDependence
  67:   21 ->   18 loopIndependentDefUseDependence this.!showMessageDialog( java.awt.Component java.lang.Object )
  68:   21 ->   49 outputDependence this.!showMessageDialog( java.awt.Component java.lang.Object )
  69:   22 ->   24 fallThroughControlDependence
  70:   22 ->   25 fallThroughControlDependence
  71:   22 ->   38 trueControlDependence
  72:   22 ->   39 trueControlDependence
  73:   22 ->   40 trueControlDependence
  74:   22 ->   41 trueControlDependence
  75:   22 ->   42 trueControlDependence
  76:   22 ->   43 trueControlDependence
  77:   22 ->   50 outputDependence $_
  78:   22 ->   65 outputDependence $_
  79:   23 ->   27 declaration
  80:   23 ->   27 loopIndependentDefUseDependence confirm$2
  81:   25 ->    1 exceptionCatch
  82:   25 ->   23 trueControlDependence
  83:   25 ->   26 trueControlDependence
  84:   25 ->   27 trueControlDependence
  85:   26 ->   23 loopIndependentDefUseDependence this.!showConfirmDialog( java.awt.Component java.lang.Object java.lang.String int )
  86:   27 ->   28 trueControlDependence
  87:   27 ->   38 falseControlDependence
  88:   27 ->   39 falseControlDependence
  89:   27 ->   40 falseControlDependence
  90:   27 ->   41 falseControlDependence
  91:   27 ->   42 falseControlDependence
  92:   27 ->   43 falseControlDependence
  93:   28 ->   38 fallThroughControlDependence
  94:   28 ->   39 fallThroughControlDependence
  95:   28 ->   40 fallThroughControlDependence
  96:   28 ->   41 fallThroughControlDependence
  97:   28 ->   42 fallThroughControlDependence
  98:   28 ->   43 fallThroughControlDependence
  99:   28 ->   67 loopIndependentDefUseDependence $_
 100:   28 ->   67 trueControlDependence
 101:   31 ->   39 loopIndependentDefUseDependence canvas$1
 102:   31 ->   53 loopIndependentDefUseDependence canvas$1
 103:   31 ->   62 loopIndependentDefUseDependence canvas$1
 104:   33+ ->   33+ outputDependence this.tabbedCanvas.!openTab( java.lang.String ).figureManager
 105:   33+ ->   33+ outputDependence this.tabbedCanvas.!openTab( java.lang.String ).figures
 106:   33+ ->   33+ outputDependence this.tabbedCanvas.!openTab( java.lang.String ).filename
 107:   33+ ->   40 loopIndependentDefUseDependence this.tabbedCanvas.!openTab( java.lang.String ).figureManager
 108:   33+ ->   41 loopIndependentDefUseDependence this.tabbedCanvas.!openTab( java.lang.String ).figureManager
 109:   35 ->   31 loopIndependentDefUseDependence this.tabbedCanvas.!openTab( java.lang.String )
 110:   37 ->   45 declaration
 111:   37 ->   45 loopIndependentDefUseDependence result$3
 112:   41 ->   38 loopIndependentDefUseDependence canvas$1.!getFigureManager( )
 113:   42 ->    2 exceptionCatch
 114:   42 ->   37 trueControlDependence
 115:   42 ->   42+ trueControlDependence
 116:   42 ->   42+ trueControlDependence
 117:   42 ->   42+ trueControlDependence
 118:   42 ->   42+ trueControlDependence
 119:   42 ->   44 trueControlDependence
 120:   42 ->   45 trueControlDependence
 121:   44 ->   37 loopIndependentDefUseDependence canvas$1.!getFigureManager( ).!load( java.lang.String )
 122:   45 ->   47 trueControlDependence
 123:   45 ->   48 trueControlDependence
 124:   45 ->   52 falseControlDependence
 125:   45 ->   53 falseControlDependence
 126:   45 ->   54 falseControlDependence
 127:   45 ->   54+ falseControlDependence
 128:   45 ->   55 falseControlDependence
 129:   45 ->   56 falseControlDependence
 130:   45 ->   57 falseControlDependence
 131:   45 ->   58 falseControlDependence
 132:   45 ->   59 falseControlDependence
 133:   45 ->   60 falseControlDependence
 134:   45 ->   61 falseControlDependence
 135:   45 ->   62 falseControlDependence
 136:   45 ->   63 falseControlDependence
 137:   45 ->   64 falseControlDependence
 138:   45 ->   65 falseControlDependence
 139:   45 ->   67 falseControlDependence
 140:   48 ->    1 exceptionCatch
 141:   48 ->   46 trueControlDependence
 142:   48 ->   49 trueControlDependence
 143:   48 ->   50 trueControlDependence
 144:   48 ->   67 trueControlDependence
 145:   49 ->   46 loopIndependentDefUseDependence this.!showMessageDialog( java.awt.Component java.lang.Object )
 146:   50 ->   52 fallThroughControlDependence
 147:   50 ->   53 fallThroughControlDependence
 148:   50 ->   54 fallThroughControlDependence
 149:   50 ->   54+ fallThroughControlDependence
 150:   50 ->   55 fallThroughControlDependence
 151:   50 ->   56 fallThroughControlDependence
 152:   50 ->   57 fallThroughControlDependence
 153:   50 ->   58 fallThroughControlDependence
 154:   50 ->   59 fallThroughControlDependence
 155:   50 ->   60 fallThroughControlDependence
 156:   50 ->   61 fallThroughControlDependence
 157:   50 ->   62 fallThroughControlDependence
 158:   50 ->   63 fallThroughControlDependence
 159:   50 ->   64 fallThroughControlDependence
 160:   50 ->   65 fallThroughControlDependence
 161:   50 ->   67 loopIndependentDefUseDependence $_
 162:   56 ->   52 loopIndependentDefUseDependence canvas$1.!setChanged( boolean )
 163:   60 ->   57 loopIndependentDefUseDependence this.tool.!setTitle( java.lang.String )
 164:   64 ->   61 loopIndependentDefUseDependence canvas$1.!repaint( )
 165:   65 ->   67 loopIndependentDefUseDependence $_
--
   0: openAction
   1:    0 ->    1 trueControlDependence
--
   0: closeFile( )
   1:    0 ->    2 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    0 ->    5 trueControlDependence
   5:    0 ->    7 trueControlDependence
   6:    0 ->    8 trueControlDependence
   7:    0 ->    9 trueControlDependence
   8:    2 ->    9 declaration
   9:    2 ->    9 loopIndependentDefUseDependence canvas$0
  10:    5 ->    2 loopIndependentDefUseDependence this.tabbedCanvas.!getCurrentCanvas( )
  11:    8 ->    1 exceptionCatch
  12:    8 ->    6 trueControlDependence
  13:    8 ->    8+ trueControlDependence
  14:    8 ->   10 trueControlDependence
  15:    8 ->   12 trueControlDependence
  16:    8+ ->   10 loopIndependentDefUseDependence this.tabbedCanvas.selectedTab
  17:   10 ->    6 loopIndependentDefUseDependence this.!closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
--
   0: initEditMenu( javax.swing.JMenu )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   17 trueControlDependence
  18:    0 ->   18 trueControlDependence
  19:    0 ->   19 trueControlDependence
  20:    0 ->   20 trueControlDependence
  21:    0 ->   21 trueControlDependence
  22:    0 ->   22 trueControlDependence
  23:    0 ->   23 trueControlDependence
  24:    0 ->   24 trueControlDependence
  25:    0 ->   25 trueControlDependence
  26:    0 ->   26 trueControlDependence
  27:    0 ->   27 trueControlDependence
  28:    0 ->   28 trueControlDependence
  29:    0 ->   29 trueControlDependence
  30:    0 ->   30 trueControlDependence
  31:    0 ->   31 trueControlDependence
  32:    0 ->   32 trueControlDependence
  33:    0 ->   33 trueControlDependence
  34:    0 ->   34 trueControlDependence
  35:    0 ->   35 trueControlDependence
  36:    0 ->   36 trueControlDependence
  37:    0 ->   37 trueControlDependence
  38:    0 ->   38 trueControlDependence
  39:    0 ->   39 trueControlDependence
  40:    0 ->   40 trueControlDependence
  41:    0 ->   41 trueControlDependence
  42:    0 ->   42 trueControlDependence
  43:    0 ->   43 trueControlDependence
  44:    0 ->   44 trueControlDependence
  45:    0 ->   45 trueControlDependence
  46:    0 ->   46 trueControlDependence
  47:    0 ->   47 trueControlDependence
  48:    0 ->   48 trueControlDependence
  49:    0 ->   49 trueControlDependence
  50:    0 ->   50 trueControlDependence
  51:    0 ->   51 trueControlDependence
  52:    0 ->   52 trueControlDependence
  53:    0 ->   53 trueControlDependence
  54:    0 ->   54 trueControlDependence
  55:    0 ->   55 trueControlDependence
  56:    0 ->   56 trueControlDependence
  57:    0 ->   57 trueControlDependence
  58:    0 ->   58 trueControlDependence
  59:    0 ->   59 trueControlDependence
  60:    0 ->   60 trueControlDependence
  61:    0 ->   61 trueControlDependence
  62:    0 ->   62 trueControlDependence
  63:    0 ->   63 trueControlDependence
  64:    0 ->   64 trueControlDependence
  65:    0 ->   65 trueControlDependence
  66:    0 ->   66 trueControlDependence
  67:    0 ->   67 trueControlDependence
  68:    0 ->   68 trueControlDependence
  69:    0 ->   69 trueControlDependence
  70:    0 ->   70 trueControlDependence
  71:    0 ->   71 trueControlDependence
  72:    0 ->   72 trueControlDependence
  73:    0 ->   73 trueControlDependence
  74:    0 ->   74 trueControlDependence
  75:    0 ->   75 trueControlDependence
  76:    0 ->   76 trueControlDependence
  77:    0 ->   77 trueControlDependence
  78:    0 ->   78 trueControlDependence
  79:    0 ->   79 trueControlDependence
  80:    0 ->   80 trueControlDependence
  81:    0 ->   81 trueControlDependence
  82:    0 ->   82 trueControlDependence
  83:    0 ->   83 trueControlDependence
  84:    0 ->   84 trueControlDependence
  85:    0 ->   85 trueControlDependence
  86:    0 ->   86 trueControlDependence
  87:    0 ->   87 trueControlDependence
  88:    0 ->   88 trueControlDependence
  89:    0 ->   89 trueControlDependence
  90:    0 ->   90 trueControlDependence
  91:    0 ->   91 trueControlDependence
  92:    0 ->   92 trueControlDependence
  93:    0 ->   93 trueControlDependence
  94:    0 ->   94 trueControlDependence
  95:    0 ->   95 trueControlDependence
  96:    0 ->   96 trueControlDependence
  97:    0 ->   97 trueControlDependence
  98:    0 ->   98 trueControlDependence
  99:    0 ->   99 trueControlDependence
 100:    0 ->  100 trueControlDependence
 101:    0 ->  101 trueControlDependence
 102:    0 ->  102 trueControlDependence
 103:    0 ->  103 trueControlDependence
 104:    0 ->  104 trueControlDependence
 105:    0 ->  105 trueControlDependence
 106:    0 ->  106 trueControlDependence
 107:    0 ->  107 trueControlDependence
 108:    0 ->  108 trueControlDependence
 109:    0 ->  109 trueControlDependence
 110:    0 ->  110 trueControlDependence
 111:    0 ->  111 trueControlDependence
 112:    0 ->  112 trueControlDependence
 113:    0 ->  113 trueControlDependence
 114:    0 ->  114 trueControlDependence
 115:    0 ->  115 trueControlDependence
 116:    0 ->  116 trueControlDependence
 117:    0 ->  117 trueControlDependence
 118:    0 ->  118 trueControlDependence
 119:    0 ->  119 trueControlDependence
 120:    0 ->  120 trueControlDependence
 121:    0 ->  121 trueControlDependence
 122:    0 ->  122 trueControlDependence
 123:    0 ->  123 trueControlDependence
 124:    0 ->  124 trueControlDependence
 125:    0 ->  125 trueControlDependence
 126:    0 ->  126 trueControlDependence
 127:    0 ->  127 trueControlDependence
 128:    0 ->  128 trueControlDependence
 129:    0 ->  129 trueControlDependence
 130:    0 ->  130 trueControlDependence
 131:    0 ->  131 trueControlDependence
 132:    0 ->  132 trueControlDependence
 133:    0 ->  133 trueControlDependence
 134:    0 ->  134 trueControlDependence
 135:    0 ->  135 trueControlDependence
 136:    0 ->  136 trueControlDependence
 137:    0 ->  137 trueControlDependence
 138:    0 ->  138 trueControlDependence
 139:    0 ->  139 trueControlDependence
 140:    0 ->  140 trueControlDependence
 141:    0 ->  141 trueControlDependence
 142:    0 ->  142 trueControlDependence
 143:    0 ->  143 trueControlDependence
 144:    0 ->  144 trueControlDependence
 145:    0 ->  145 trueControlDependence
 146:    0 ->  146 trueControlDependence
 147:    0 ->  147 trueControlDependence
 148:    0 ->  149 trueControlDependence
 149:    1 ->    3 loopIndependentDefUseDependence menu$0
 150:    1 ->   26 loopIndependentDefUseDependence menu$0
 151:    1 ->   49 loopIndependentDefUseDependence menu$0
 152:    1 ->   53 loopIndependentDefUseDependence menu$0
 153:    1 ->   76 loopIndependentDefUseDependence menu$0
 154:    1 ->   99 loopIndependentDefUseDependence menu$0
 155:    1 ->  122 loopIndependentDefUseDependence menu$0
 156:    1 ->  126 loopIndependentDefUseDependence menu$0
 157:    2 ->    7 declaration
 158:    2 ->    7 loopIndependentDefUseDependence undoItem$1
 159:    2 ->   11 declaration
 160:    2 ->   11 loopIndependentDefUseDependence undoItem$1
 161:    2 ->   15 declaration
 162:    2 ->   15 loopIndependentDefUseDependence undoItem$1
 163:    5 ->    2 loopIndependentDefUseDependence menu$0.!add( javax.swing.Action )
 164:    5 ->   27 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 165:    5 ->   27 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 166:    5 ->   28 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 167:    5 ->   28 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 168:    5 ->   28 outputDependence menu$0.!add( javax.swing.Action )
 169:    9 ->    6 loopIndependentDefUseDependence undoItem$1.!setMnemonic( char )
 170:   13 ->   10 loopIndependentDefUseDependence undoItem$1.!setIcon( javax.swing.Icon )
 171:   19 ->   16 loopIndependentDefUseDependence this.!getKeyStroke( int int boolean )
 172:   19 ->   42 outputDependence this.!getKeyStroke( int int boolean )
 173:   20 ->   14 loopIndependentDefUseDependence undoItem$1.!setAccelerator( javax.swing.KeyStroke )
 174:   24 ->   21 loopIndependentDefUseDependence this.undoAction.!setEnabled( boolean )
 175:   25 ->   30 declaration
 176:   25 ->   30 loopIndependentDefUseDependence redoItem$2
 177:   25 ->   34 declaration
 178:   25 ->   34 loopIndependentDefUseDependence redoItem$2
 179:   25 ->   38 declaration
 180:   25 ->   38 loopIndependentDefUseDependence redoItem$2
 181:   28 ->   25 loopIndependentDefUseDependence menu$0.!add( javax.swing.Action )
 182:   28 ->   54 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 183:   28 ->   54 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 184:   28 ->   55 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 185:   28 ->   55 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 186:   28 ->   55 outputDependence menu$0.!add( javax.swing.Action )
 187:   32 ->   29 loopIndependentDefUseDependence redoItem$2.!setMnemonic( char )
 188:   36 ->   33 loopIndependentDefUseDependence redoItem$2.!setIcon( javax.swing.Icon )
 189:   42 ->   39 loopIndependentDefUseDependence this.!getKeyStroke( int int boolean )
 190:   42 ->   69 outputDependence this.!getKeyStroke( int int boolean )
 191:   43 ->   37 loopIndependentDefUseDependence redoItem$2.!setAccelerator( javax.swing.KeyStroke )
 192:   47 ->   44 loopIndependentDefUseDependence this.redoAction.!setEnabled( boolean )
 193:   51 ->   48 loopIndependentDefUseDependence menu$0.!addSeparator( )
 194:   51 ->   54 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 195:   51 ->   55 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 196:   51 ->   77 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 197:   51 ->   78 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 198:   51 ->  100 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 199:   51 ->  101 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 200:   51 ->  123 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 201:   51 ->  124 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 202:   51 ->  124 outputDependence menu$0.!addSeparator( )
 203:   51 ->  124 outputDependence menu$0.!javax.swing.JMenu.popupListener
 204:   52 ->   57 declaration
 205:   52 ->   57 loopIndependentDefUseDependence cutItem$3
 206:   52 ->   61 declaration
 207:   52 ->   61 loopIndependentDefUseDependence cutItem$3
 208:   52 ->   65 declaration
 209:   52 ->   65 loopIndependentDefUseDependence cutItem$3
 210:   52 ->   72 declaration
 211:   52 ->   72 loopIndependentDefUseDependence cutItem$3
 212:   55 ->   52 loopIndependentDefUseDependence menu$0.!add( javax.swing.Action )
 213:   55 ->   77 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 214:   55 ->   77 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 215:   55 ->   78 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 216:   55 ->   78 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 217:   55 ->   78 outputDependence menu$0.!add( javax.swing.Action )
 218:   59 ->   56 loopIndependentDefUseDependence cutItem$3.!setMnemonic( char )
 219:   63 ->   60 loopIndependentDefUseDependence cutItem$3.!setIcon( javax.swing.Icon )
 220:   69 ->   66 loopIndependentDefUseDependence this.!getKeyStroke( int int boolean )
 221:   69 ->   92 outputDependence this.!getKeyStroke( int int boolean )
 222:   70 ->   64 loopIndependentDefUseDependence cutItem$3.!setAccelerator( javax.swing.KeyStroke )
 223:   74 ->   71 loopIndependentDefUseDependence cutItem$3.!setEnabled( boolean )
 224:   75 ->   80 declaration
 225:   75 ->   80 loopIndependentDefUseDependence copyItem$4
 226:   75 ->   84 declaration
 227:   75 ->   84 loopIndependentDefUseDependence copyItem$4
 228:   75 ->   88 declaration
 229:   75 ->   88 loopIndependentDefUseDependence copyItem$4
 230:   75 ->   95 declaration
 231:   75 ->   95 loopIndependentDefUseDependence copyItem$4
 232:   78 ->   75 loopIndependentDefUseDependence menu$0.!add( javax.swing.Action )
 233:   78 ->  100 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 234:   78 ->  100 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 235:   78 ->  101 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 236:   78 ->  101 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 237:   78 ->  101 outputDependence menu$0.!add( javax.swing.Action )
 238:   82 ->   79 loopIndependentDefUseDependence copyItem$4.!setMnemonic( char )
 239:   86 ->   83 loopIndependentDefUseDependence copyItem$4.!setIcon( javax.swing.Icon )
 240:   92 ->   89 loopIndependentDefUseDependence this.!getKeyStroke( int int boolean )
 241:   92 ->  115 outputDependence this.!getKeyStroke( int int boolean )
 242:   93 ->   87 loopIndependentDefUseDependence copyItem$4.!setAccelerator( javax.swing.KeyStroke )
 243:   97 ->   94 loopIndependentDefUseDependence copyItem$4.!setEnabled( boolean )
 244:   98 ->  103 declaration
 245:   98 ->  103 loopIndependentDefUseDependence pasteItem$5
 246:   98 ->  107 declaration
 247:   98 ->  107 loopIndependentDefUseDependence pasteItem$5
 248:   98 ->  111 declaration
 249:   98 ->  111 loopIndependentDefUseDependence pasteItem$5
 250:   98 ->  118 declaration
 251:   98 ->  118 loopIndependentDefUseDependence pasteItem$5
 252:  101 ->   98 loopIndependentDefUseDependence menu$0.!add( javax.swing.Action )
 253:  101 ->  127 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 254:  101 ->  127 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 255:  101 ->  128 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.action
 256:  101 ->  128 loopIndependentDefUseDependence menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener
 257:  101 ->  128 outputDependence menu$0.!add( javax.swing.Action )
 258:  105 ->  102 loopIndependentDefUseDependence pasteItem$5.!setMnemonic( char )
 259:  109 ->  106 loopIndependentDefUseDependence pasteItem$5.!setIcon( javax.swing.Icon )
 260:  115 ->  112 loopIndependentDefUseDependence this.!getKeyStroke( int int boolean )
 261:  115 ->  142 outputDependence this.!getKeyStroke( int int boolean )
 262:  116 ->  110 loopIndependentDefUseDependence pasteItem$5.!setAccelerator( javax.swing.KeyStroke )
 263:  120 ->  117 loopIndependentDefUseDependence pasteItem$5.!setEnabled( boolean )
 264:  124 ->  121 loopIndependentDefUseDependence menu$0.!addSeparator( )
 265:  124 ->  127 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 266:  124 ->  128 loopIndependentDefUseDependence menu$0.!javax.swing.JMenu.popupMenu
 267:  125 ->  130 declaration
 268:  125 ->  130 loopIndependentDefUseDependence deleteItem$6
 269:  125 ->  134 declaration
 270:  125 ->  134 loopIndependentDefUseDependence deleteItem$6
 271:  125 ->  138 declaration
 272:  125 ->  138 loopIndependentDefUseDependence deleteItem$6
 273:  125 ->  145 declaration
 274:  125 ->  145 loopIndependentDefUseDependence deleteItem$6
 275:  128 ->  125 loopIndependentDefUseDependence menu$0.!add( javax.swing.Action )
 276:  132 ->  129 loopIndependentDefUseDependence deleteItem$6.!setMnemonic( char )
 277:  136 ->  133 loopIndependentDefUseDependence deleteItem$6.!setIcon( javax.swing.Icon )
 278:  142 ->  139 loopIndependentDefUseDependence this.!getKeyStroke( int int boolean )
 279:  143 ->  137 loopIndependentDefUseDependence deleteItem$6.!setAccelerator( javax.swing.KeyStroke )
 280:  147 ->  144 loopIndependentDefUseDependence deleteItem$6.!setEnabled( boolean )
--
----- ClDG (to here) -----

