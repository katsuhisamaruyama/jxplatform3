----- ClDG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.DrawMenu$14
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu$14#actionPerformed( java.awt.event.ActionEvent ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 throwsClause D = {  } U = { $java.lang.NumberFormatException }
   3 formalIn D = { evt$10 } U = {  }
   4 localDeclaration D = { fileItem$11 } U = { evt$10.!getSource( ) }
   5 receiver D = {  } U = { evt$10 }
   6 methodCall D = {  } U = { evt$10.!java.util.EventObject.source } TO = java.util.EventObject#getSource( )
   7 actualOut D = { evt$10.!getSource( ) } U = { evt$10.!java.util.EventObject.source }
   8 localDeclaration D = { filename$12 } U = { fileItem$11.!getActionCommand( ) }
   9 receiver D = {  } U = { fileItem$11 }
  10 methodCall D = {  } U = { fileItem$11.!javax.swing.AbstractButton.model, fileItem$11.!javax.swing.AbstractButton.text } TO = javax.swing.AbstractButton#getActionCommand( )
  11 actualOut D = { fileItem$11.!getActionCommand( ) } U = { fileItem$11.!javax.swing.AbstractButton.model, fileItem$11.!javax.swing.AbstractButton.text }
  12 ifSt D = {  } U = { this.!openFile( java.lang.String ) }
  13 receiver D = {  } U = {  }
  14 methodCall D = {  } U = { Color.white, File.separator, FilledOval.name, FilledRect.name, Line.name, Oval.name, Rect.name, System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, confirm$2.NO_OPTION, figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY, figure$17.color, figure$17.endX, figure$17.endY, figure$17.outlineWidth, figure$17.startX, figure$17.startY, figure$7.color, figure$7.endX, figure$7.endY, figure$7.outlineWidth, figure$7.startX, figure$7.startY, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!java.awt.Component.background, this.!java.awt.Component.height, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!java.awt.Component.width, this.!java.awt.Container.dispatcher, this.!java.awt.Container.parent, this.!java.awt.Container.peer, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.lock, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).figures, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, this.canvas$1.!getFigureManager( ).st$6.!java.lang.String.value, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.str, this.canvas$1.!java.awt.Component.height, this.canvas$1.!java.awt.Component.parent, this.canvas$1.!java.awt.Component.peer, this.canvas$1.!java.awt.Component.width, this.canvas$1.!java.awt.Component.x, this.canvas$1.!java.awt.Component.y, this.canvas$1.changed, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.figureManager.figures, this.figureManager.filename, this.figures, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.kind$0.!java.lang.String.value, this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.tabbedCanvas, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvases, this.tool, this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title, this.tool.YES_NO_OPTION, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#openFile( java.lang.String )
  15 actualIn D = {  } U = { filename$12 }
  16 actualOut D = { this.!java.awt.Component.background, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.newEventsOnly, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!javax.swing.JTabbedPane.haveRegistered, this.!openFile( java.lang.String ), this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.cs, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.falpha, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.frgbvalue, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.fvalue, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.value, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.markedChar, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.markedSkipLF, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.nChars, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.readAheadLimit, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).java.io.FileReader.!java.io.InputStreamReader.sd, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.delimiters, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.hasSurrogates, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.maxPosition, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.newPosition, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.retDelims, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.str, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.canvas$1.support.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.inProgress, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.indexOfNextAdd, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.height, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.width, this.jp.ac.ritsumei.cs.draw.DrawCanvas.jp.ac.ritsumei.cs.draw.FigureManager.java.util.LinkedList.!java.util.LinkedList.size, this.tool.!java.awt.Frame.title } U = { Color.white, File.separator, FilledOval.name, FilledRect.name, Line.name, Oval.name, Rect.name, System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, confirm$2.NO_OPTION, figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY, figure$17.color, figure$17.endX, figure$17.endY, figure$17.outlineWidth, figure$17.startX, figure$17.startY, figure$7.color, figure$7.endX, figure$7.endY, figure$7.outlineWidth, figure$7.startX, figure$7.startY, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!java.awt.Component.background, this.!java.awt.Component.height, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!java.awt.Component.width, this.!java.awt.Container.dispatcher, this.!java.awt.Container.parent, this.!java.awt.Container.peer, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.lock, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).figures, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, this.canvas$1.!getFigureManager( ).st$6.!java.lang.String.value, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.str, this.canvas$1.!java.awt.Component.height, this.canvas$1.!java.awt.Component.parent, this.canvas$1.!java.awt.Component.peer, this.canvas$1.!java.awt.Component.width, this.canvas$1.!java.awt.Component.x, this.canvas$1.!java.awt.Component.y, this.canvas$1.changed, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.figureManager.figures, this.figureManager.filename, this.figures, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.kind$0.!java.lang.String.value, this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.tabbedCanvas, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvases, this.tool, this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title, this.tool.YES_NO_OPTION, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  17 assignment D = {  } U = { this.!buildRecentFileMenu( ) }
  18 receiver D = {  } U = {  }
  19 methodCall D = {  } U = { this.fileItem$2.!javax.swing.AbstractButton.listenerList, this.fileItem$2.!javax.swing.event.EventListenerList.NULL_ARRAY, this.fileItem$2.!javax.swing.event.EventListenerList.listenerList, this.fileListMenu, this.fileListMenu.!java.awt.Container.component, this.fileListMenu.!java.awt.Container.containerListener, this.fileListMenu.!java.awt.Container.descendantsCount, this.fileListMenu.!java.awt.Container.eventMask, this.fileListMenu.!java.awt.Container.layoutMgr, this.fileListMenu.!java.awt.Container.listeningBoundsChildren, this.fileListMenu.!java.awt.Container.listeningChildren, this.fileListMenu.!java.awt.Container.peer, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.fileListener, this.recentFiles } TO = jp.ac.ritsumei.cs.draw.DrawMenu#buildRecentFileMenu( )
  20 actualOut D = { this.!buildRecentFileMenu( ), this.fileItem$2.!javax.swing.event.EventListenerList.listenerList, this.fileListMenu.!java.awt.Component.parent, this.fileListMenu.!javax.swing.JMenu.popupListener, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged } U = { this.fileItem$2.!javax.swing.AbstractButton.listenerList, this.fileItem$2.!javax.swing.event.EventListenerList.NULL_ARRAY, this.fileItem$2.!javax.swing.event.EventListenerList.listenerList, this.fileListMenu, this.fileListMenu.!java.awt.Container.component, this.fileListMenu.!java.awt.Container.containerListener, this.fileListMenu.!java.awt.Container.descendantsCount, this.fileListMenu.!java.awt.Container.eventMask, this.fileListMenu.!java.awt.Container.layoutMgr, this.fileListMenu.!java.awt.Container.listeningBoundsChildren, this.fileListMenu.!java.awt.Container.listeningChildren, this.fileListMenu.!java.awt.Container.peer, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.fileListener, this.recentFiles }
  21 assignment D = {  } U = { this.!updateUndoState( ) }
  22 receiver D = {  } U = {  }
  23 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoAction, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateUndoState( )
  24 actualOut D = { this.!updateUndoState( ) } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoAction, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd }
  25 assignment D = {  } U = { this.!updateRedoState( ) }
  26 receiver D = {  } U = {  }
  27 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.redoAction, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateRedoState( )
  28 actualOut D = { this.!updateRedoState( ) } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.redoAction, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd }
  31 formalOut D = {  } U = { $_ }
  14+ actualOutByFieldAccess D = { this.changed } U = {  }
  14+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).figureManager } U = {  }
  14+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).figureManager } U = {  }
  14+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).menu } U = {  }
  14+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).selector } U = {  }
  14+ actualOutByFieldAccess D = { this.canvas$1.undoManager } U = {  }
  14+ actualOutByFieldAccess D = { this.figure$7.endX } U = {  }
  14+ actualOutByFieldAccess D = { this.figure$7.endY } U = {  }
  14+ actualOutByFieldAccess D = { this.figure$7.startX } U = {  }
  14+ actualOutByFieldAccess D = { this.figure$7.startY } U = {  }
  14+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).figures } U = {  }
  14+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).figures } U = {  }
  14+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).filename } U = {  }
  14+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).filename } U = {  }
  14+ actualOutByFieldAccess D = { this.selectedTab } U = {  }
--
   0: actionPerformed( java.awt.event.ActionEvent )
   1:    0 ->    3 trueControlDependence
   2:    0 ->    4 trueControlDependence
   3:    0 ->    5 trueControlDependence
   4:    0 ->    6 trueControlDependence
   5:    0 ->    7 trueControlDependence
   6:    0 ->    8 trueControlDependence
   7:    0 ->    9 trueControlDependence
   8:    0 ->   10 trueControlDependence
   9:    0 ->   11 trueControlDependence
  10:    0 ->   13 trueControlDependence
  11:    0 ->   14 trueControlDependence
  12:    0 ->   15 trueControlDependence
  13:    3 ->    5 loopIndependentDefUseDependence evt$10
  14:    4 ->    9 declaration
  15:    4 ->    9 loopIndependentDefUseDependence fileItem$11
  16:    7 ->    4 loopIndependentDefUseDependence evt$10.!getSource( )
  17:    8 ->   15 declaration
  18:    8 ->   15 loopIndependentDefUseDependence filename$12
  19:   11 ->    8 loopIndependentDefUseDependence fileItem$11.!getActionCommand( )
  20:   12 ->   17 trueControlDependence
  21:   12 ->   18 trueControlDependence
  22:   12 ->   19 trueControlDependence
  23:   12 ->   20 trueControlDependence
  24:   12 ->   21 trueControlDependence
  25:   12 ->   22 trueControlDependence
  26:   12 ->   23 trueControlDependence
  27:   12 ->   24 trueControlDependence
  28:   12 ->   25 trueControlDependence
  29:   12 ->   26 trueControlDependence
  30:   12 ->   27 trueControlDependence
  31:   12 ->   28 trueControlDependence
  32:   14 ->    1 exceptionCatch
  33:   14 ->    2 exceptionCatch
  34:   14 ->   12 trueControlDependence
  35:   14 ->   14+ trueControlDependence
  36:   14 ->   14+ trueControlDependence
  37:   14 ->   14+ trueControlDependence
  38:   14 ->   14+ trueControlDependence
  39:   14 ->   14+ trueControlDependence
  40:   14 ->   14+ trueControlDependence
  41:   14 ->   14+ trueControlDependence
  42:   14 ->   14+ trueControlDependence
  43:   14 ->   14+ trueControlDependence
  44:   14 ->   14+ trueControlDependence
  45:   14 ->   14+ trueControlDependence
  46:   14 ->   14+ trueControlDependence
  47:   14 ->   14+ trueControlDependence
  48:   14 ->   14+ trueControlDependence
  49:   14 ->   14+ trueControlDependence
  50:   14 ->   16 trueControlDependence
  51:   14 ->   31 trueControlDependence
  52:   14+ ->   14+ outputDependence this.!openFile( java.lang.String ).figureManager
  53:   14+ ->   14+ outputDependence this.!openFile( java.lang.String ).figures
  54:   14+ ->   14+ outputDependence this.!openFile( java.lang.String ).filename
  55:   16 ->   12 loopIndependentDefUseDependence this.!openFile( java.lang.String )
  56:   20 ->   17 loopIndependentDefUseDependence this.!buildRecentFileMenu( )
  57:   24 ->   21 loopIndependentDefUseDependence this.!updateUndoState( )
  58:   28 ->   25 loopIndependentDefUseDependence this.!updateRedoState( )
--
----- ClDG (to here) -----

