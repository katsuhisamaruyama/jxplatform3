----- ClDG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.TabbedCanvas
   0 methodEntry [ closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 formalIn D = { canvas$0 } U = {  }
   2 assignment D = {  } U = { this.!selectTab }
   3 receiver D = {  } U = {  }
   4 methodCall D = { this.selectedTab } U = { this.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
   5 actualIn D = {  } U = { canvas$0 }
   6 actualOut D = { this.!selectTab, this.selectedTab } U = { this.selectedTab }
   7 assignment D = {  } U = { canvas$0.!getFigureManager.!clear }
   8 receiver D = {  } U = { canvas$0.!getFigureManager }
   9 receiver D = {  } U = { canvas$0 }
  10 methodCall D = {  } U = { canvas$0.figureManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  11 actualOut D = { canvas$0.!getFigureManager } U = { canvas$0.figureManager }
  12 methodCall D = {  } U = { canvas$0.!getFigureManager.figures } TO = jp.ac.ritsumei.cs.draw.FigureManager#clear( )
  13 actualOut D = { canvas$0.!getFigureManager.!clear } U = { canvas$0.!getFigureManager.figures }
  14 assignment D = {  } U = { this.canvases.!remove }
  15 receiver D = {  } U = { this.canvases }
  16 methodCall D = {  } U = { this.selectedTab } TO = java.util.List#remove( int )
  17 actualOut D = { this.canvases.!remove } U = {  }
  18 assignment D = {  } U = { this.!remove }
  19 receiver D = {  } U = {  }
  20 methodCall D = { this.visComp } U = { java.awt.Component.accessibleContext, javax.accessibility.AccessibleState.SELECTED, this.pages, this.selectedTab, this.visComp } TO = javax.swing.JTabbedPane#remove( int )
  21 actualOut D = { this.!remove, this.visComp } U = { java.awt.Component.accessibleContext, javax.accessibility.AccessibleState.SELECTED, this.pages, this.visComp }
  23 formalOut D = {  } U = { $_, this.selectedTab, this.visComp }
--
   0 fieldEntry [ serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.TabbedCanvas.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.TabbedCanvas.serialVersionUID }
--
   0 constructorEntry [ TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector ) ]
   1 formalIn D = { selector$0 } U = {  }
   2 assignment D = {  } U = {  }
   3 receiver D = {  } U = {  }
   4 constructorCall D = { super.changeEvent, super.changeListener, super.pages, super.tabPlacement, super.visComp } U = { JTabbedPane.TOP } TO = javax.swing.JTabbedPane#JTabbedPane( int )
   5 actualOut D = { , super.changeEvent, super.changeListener, super.pages, super.tabPlacement, super.visComp } U = {  }
   6 assignment D = { this.selector } U = { selector$0, this }
   7 assignment D = { this.canvases } U = { this.canvases.!ArrayList<DrawCanvas> }
   8 receiver D = {  } U = {  }
   9 constructorCall D = { java.util.AbstractList.modCount, this.canvases.elementData } U = { this.canvases.DEFAULTCAPACITY_EMPTY_ELEMENTDATA } TO = java.util.ArrayList#ArrayList( )
  10 actualOut D = { java.util.AbstractList.modCount, this.canvases.!ArrayList<DrawCanvas>, this.canvases.elementData } U = { this.canvases.DEFAULTCAPACITY_EMPTY_ELEMENTDATA }
  12 formalOut D = {  } U = { $_, java.util.AbstractList.modCount, super.changeEvent, super.changeListener, super.pages, super.tabPlacement, super.visComp, this.canvases, this.canvases.elementData, this.selector }
--
   0 methodEntry [ getAllCanvases( ) ]
   1 returnSt D = { $_ } U = { this.canvases }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ openTab( java.lang.String ) ]
   1 formalIn D = { filename$0 } U = {  }
   2 returnSt D = { $_ } U = { this.!newTab }
   3 receiver D = {  } U = {  }
   4 methodCall D = { this.selectedTab } U = { this.canvases, this.menu, this.selectedTab, this.selector } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#newTab( java.lang.String )
   5 actualIn D = {  } U = { filename$0 }
   6 actualOut D = { this.!newTab, this.selectedTab } U = { this.canvases, this.menu, this.selectedTab, this.selector }
   8 formalOut D = {  } U = { $_, this.selectedTab }
--
   0 methodEntry [ selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 formalIn D = { canvas$0 } U = {  }
   2 assignment D = {  } U = { this.!setSelectedComponent }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { canvas$0 } TO = javax.swing.JTabbedPane#setSelectedComponent( java.awt.Component )
   5 actualOut D = { this.!setSelectedComponent } U = {  }
   6 assignment D = { this.selectedTab } U = { this.!getSelectedIndex }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = { this.model } TO = javax.swing.JTabbedPane#getSelectedIndex( )
   9 actualOut D = { this.!getSelectedIndex } U = { this.model }
  11 formalOut D = {  } U = { $_, this.selectedTab }
--
   0 methodEntry [ init( ) ]
   1 assignment D = {  } U = { this.!newTab }
   2 receiver D = {  } U = {  }
   3 methodCall D = { this.selectedTab } U = { this.canvases, this.menu, this.selectedTab, this.selector } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#newTab( java.lang.String )
   4 actualIn D = {  } U = {  }
   5 actualOut D = { this.!newTab, this.selectedTab } U = { this.canvases, this.menu, this.selectedTab, this.selector }
   6 assignment D = {  } U = { this.!addChangeListener }
   7 receiver D = {  } U = {  }
   8 methodCall D = { javax.swing.event.EventListenerList.listenerList } U = { javax.swing.JComponent.listenerList, javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.event.EventListenerList.listenerList, this } TO = javax.swing.JTabbedPane#addChangeListener( javax.swing.event.ChangeListener )
   9 actualOut D = { javax.swing.event.EventListenerList.listenerList, this.!addChangeListener } U = { javax.swing.JComponent.listenerList, javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.event.EventListenerList.listenerList }
  11 formalOut D = {  } U = { $_, javax.swing.event.EventListenerList.listenerList, this.selectedTab }
--
   0 fieldEntry [ canvases ]
   1 fieldDeclaration D = { this.canvases } U = { this.canvases }
--
   0 methodEntry [ getCurrentCanvas( ) ]
   1 ifSt D = {  } U = { this.canvases.!size, this.selectedTab }
   2 receiver D = {  } U = { this.canvases }
   3 methodCall D = {  } U = {  } TO = java.util.List#size( )
   4 actualOut D = { this.canvases.!size } U = {  }
   5 receiver D = {  } U = { this.canvases }
   6 methodCall D = {  } U = {  } TO = java.util.List#size( )
   7 actualOut D = { this.canvases.!size } U = {  }
   8 returnSt D = { $_ } U = { this.canvases.!get }
   9 receiver D = {  } U = { this.canvases }
  10 methodCall D = {  } U = { this.selectedTab } TO = java.util.List#get( int )
  11 actualOut D = { this.canvases.!get } U = {  }
  13 returnSt D = { $_ } U = {  }
  15 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ setDrawMenu( jp.ac.ritsumei.cs.draw.DrawMenu ) ]
   1 formalIn D = { menu$0 } U = {  }
   2 assignment D = { this.menu } U = { menu$0, this }
   4 formalOut D = {  } U = { $_, this.menu }
--
   0 methodEntry [ stateChanged( javax.swing.event.ChangeEvent ) ]
   1 formalIn D = { evt$0 } U = {  }
   2 localDeclaration D = { src$1 } U = { evt$0.!getSource }
   3 receiver D = {  } U = { evt$0 }
   4 methodCall D = {  } U = { evt$0, evt$0.source } TO = java.util.EventObject#getSource( )
   5 actualOut D = { evt$0.!getSource } U = { evt$0.source }
   6 assignment D = { this.selectedTab } U = { src$1.!getSelectedIndex }
   7 receiver D = {  } U = { src$1 }
   8 methodCall D = {  } U = { src$1, src$1.model } TO = javax.swing.JTabbedPane#getSelectedIndex( )
   9 actualOut D = { src$1.!getSelectedIndex } U = { src$1.model }
  10 assignment D = {  } U = { this.menu.!updateUndoState }
  11 receiver D = {  } U = { this.menu }
  12 methodCall D = {  } U = { this.menu, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab, this.menu.undoAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateUndoState( )
  13 actualOut D = { this.menu.!updateUndoState } U = { this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab, this.menu.undoAction }
  15 formalOut D = {  } U = { $_, this.selectedTab }
--
   0 fieldEntry [ selectedTab ]
   1 fieldDeclaration D = { this.selectedTab } U = { this.selectedTab }
--
   0 fieldEntry [ selector ]
   1 fieldDeclaration D = { this.selector } U = { this.selector }
--
   0 methodEntry [ newTab( java.lang.String ) ]
   1 formalIn D = { filename$0 } U = {  }
   2 localDeclaration D = { canvas$1 } U = { canvas$1.!DrawCanvas }
   3 receiver D = {  } U = {  }
   4 constructorCall D = { canvas$1.changed, canvas$1.figureManager, canvas$1.figureManager.figures, canvas$1.figureManager.filename, canvas$1.menu, canvas$1.selector } U = { canvas$1.changed, canvas$1.figureManager, canvas$1.figureManager.figures, canvas$1.figureManager.filename, canvas$1.menu, canvas$1.selector } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String )
   5 actualIn D = {  } U = { this.menu }
   6 actualIn D = {  } U = { this.selector }
   7 actualIn D = {  } U = { filename$0 }
   8 actualOut D = { canvas$1.!DrawCanvas, canvas$1.changed, canvas$1.figureManager, canvas$1.figureManager.figures, canvas$1.figureManager.filename, canvas$1.menu, canvas$1.selector } U = { canvas$1.changed, canvas$1.figureManager, canvas$1.figureManager.figures, canvas$1.figureManager.filename, canvas$1.menu, canvas$1.selector }
   9 localDeclaration D = { undoManager$2 } U = { undoManager$2.!UndoManager }
  10 receiver D = {  } U = {  }
  11 constructorCall D = { java.util.AbstractList.modCount, javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, undoManager$2.indexOfNextAdd, undoManager$2.limit } U = { java.util.AbstractList.modCount, java.util.Vector.elementData, javax.swing.undo.CompoundEdit.edits, undoManager$2.limit } TO = javax.swing.undo.UndoManager#UndoManager( )
  12 actualOut D = { java.util.AbstractList.modCount, javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, undoManager$2.!UndoManager, undoManager$2.indexOfNextAdd, undoManager$2.limit } U = { java.util.AbstractList.modCount, java.util.Vector.elementData, javax.swing.undo.CompoundEdit.edits, undoManager$2.limit }
  13 assignment D = {  } U = { canvas$1.!addUndoableEditListener }
  14 receiver D = {  } U = { canvas$1 }
  15 methodCall D = { canvas$1.support } U = { canvas$1, canvas$1.support } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#addUndoableEditListener( javax.swing.event.UndoableEditListener )
  16 actualIn D = {  } U = { undoManager$2 }
  17 actualOut D = { canvas$1.!addUndoableEditListener, canvas$1.support } U = { canvas$1.support }
  18 assignment D = {  } U = { canvas$1.!setUndoManager }
  19 receiver D = {  } U = { canvas$1 }
  20 methodCall D = { canvas$1.undoManager } U = { canvas$1.undoManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setUndoManager( javax.swing.undo.UndoManager )
  21 actualIn D = {  } U = { undoManager$2 }
  22 actualOut D = { canvas$1.!setUndoManager, canvas$1.undoManager } U = { canvas$1.undoManager }
  23 localDeclaration D = { fmanager$3 } U = { canvas$1.!getFigureManager }
  24 receiver D = {  } U = { canvas$1 }
  25 methodCall D = {  } U = { canvas$1.figureManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  26 actualOut D = { canvas$1.!getFigureManager } U = { canvas$1.figureManager }
  27 assignment D = {  } U = { this.!addTab }
  28 receiver D = {  } U = {  }
  29 methodCall D = { this.haveRegistered } U = { canvas$1, canvas$1.!getFigureManager.!getFilename, canvas$1.!getFigureManager.!getTitle, fmanager$3.!getFilename, fmanager$3.!getTitle, java.awt.Component.accessibleContext, this.haveRegistered, this.pages } TO = javax.swing.JTabbedPane#addTab( java.lang.String javax.swing.Icon java.awt.Component java.lang.String )
  30 receiver D = {  } U = { canvas$1.!getFigureManager, fmanager$3 }
  31 methodCall D = {  } U = { canvas$1.!getFigureManager, canvas$1.!getFigureManager.filename, fmanager$3, fmanager$3.filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getTitle( )
  32 actualOut D = { fmanager$3.!getTitle } U = { canvas$1.!getFigureManager.filename, fmanager$3.filename }
  33 receiver D = {  } U = { canvas$1.!getFigureManager, fmanager$3 }
  34 methodCall D = {  } U = { canvas$1.!getFigureManager.filename, fmanager$3.filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
  35 actualOut D = { fmanager$3.!getFilename } U = { canvas$1.!getFigureManager.filename, fmanager$3.filename }
  36 actualOut D = { this.!addTab, this.haveRegistered } U = { java.awt.Component.accessibleContext, this.haveRegistered, this.pages }
  37 assignment D = {  } U = { this.canvases.!add }
  38 receiver D = {  } U = { this.canvases }
  39 methodCall D = {  } U = { canvas$1 } TO = java.util.List#add( java.lang.Object )
  40 actualOut D = { this.canvases.!add } U = {  }
  41 assignment D = {  } U = { this.!selectTab }
  42 receiver D = {  } U = {  }
  43 methodCall D = { this.selectedTab } U = { this.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
  44 actualIn D = {  } U = { canvas$1 }
  45 actualOut D = { this.!selectTab, this.selectedTab } U = { this.selectedTab }
  46 returnSt D = { $_ } U = { canvas$1 }
  48 formalOut D = {  } U = { $_, canvas$1.changed, canvas$1.figureManager, canvas$1.figureManager.figures, canvas$1.figureManager.filename, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, java.util.AbstractList.modCount, javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, this.haveRegistered, this.selectedTab, undoManager$2.indexOfNextAdd, undoManager$2.limit }
--
   0 methodEntry [ getOpenFileNum( ) ]
   1 returnSt D = { $_ } U = { this.canvases.!size }
   2 receiver D = {  } U = { this.canvases }
   3 methodCall D = {  } U = {  } TO = java.util.List#size( )
   4 actualOut D = { this.canvases.!size } U = {  }
   6 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 formalIn D = { canvas$0 } U = {  }
   2 assignment D = {  } U = { this.!setTitleAt }
   3 receiver D = {  } U = {  }
   4 methodCall D = { this$Page.title } U = { canvas$0.!getFigureManager.!getTitle, java.awt.Component.accessibleContext, java.awt.Component.height, java.awt.Component.width, java.lang.String.value, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, this$Page.title, this.pages, this.selectedTab } TO = javax.swing.JTabbedPane#setTitleAt( int java.lang.String )
   5 receiver D = {  } U = { canvas$0.!getFigureManager }
   6 receiver D = {  } U = { canvas$0 }
   7 methodCall D = {  } U = { canvas$0.figureManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
   8 actualOut D = { canvas$0.!getFigureManager } U = { canvas$0.figureManager }
   9 methodCall D = {  } U = { canvas$0.!getFigureManager, canvas$0.!getFigureManager.filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getTitle( )
  10 actualOut D = { canvas$0.!getFigureManager.!getTitle } U = { canvas$0.!getFigureManager.filename }
  11 actualOut D = { this$Page.title, this.!setTitleAt } U = { java.awt.Component.accessibleContext, java.awt.Component.height, java.awt.Component.width, java.lang.String.value, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, this$Page.title, this.pages }
  12 assignment D = {  } U = { this.!setToolTipTextAt }
  13 receiver D = {  } U = {  }
  14 methodCall D = { this$Page.tip, this.haveRegistered } U = { canvas$0.!getFigureManager.!getFilename, java.awt.Component.accessibleContext, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener, this$Page.tip, this.haveRegistered, this.pages, this.selectedTab } TO = javax.swing.JTabbedPane#setToolTipTextAt( int java.lang.String )
  15 receiver D = {  } U = { canvas$0.!getFigureManager }
  16 receiver D = {  } U = { canvas$0 }
  17 methodCall D = {  } U = { canvas$0.figureManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  18 actualOut D = { canvas$0.!getFigureManager } U = { canvas$0.figureManager }
  19 methodCall D = {  } U = { canvas$0.!getFigureManager.filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
  20 actualOut D = { canvas$0.!getFigureManager.!getFilename } U = { canvas$0.!getFigureManager.filename }
  21 actualOut D = { this$Page.tip, this.!setToolTipTextAt, this.haveRegistered } U = { java.awt.Component.accessibleContext, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener, this$Page.tip, this.haveRegistered, this.pages }
  23 formalOut D = {  } U = { $_, this$Page.tip, this$Page.title, this.haveRegistered }
--
   0 methodEntry [ getCanvas( java.lang.String ) ]
   1 formalIn D = { filename$0 } U = {  }
   2 forSt D = {  } U = { canvas$1, this.canvases }
   3 ifSt D = {  } U = { canvas$1.!getFigureManager.!getFilename.!equals }
   4 receiver D = {  } U = { canvas$1.!getFigureManager.!getFilename }
   5 receiver D = {  } U = { canvas$1.!getFigureManager }
   6 receiver D = {  } U = { canvas$1 }
   7 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
   8 actualOut D = { canvas$1.!getFigureManager } U = {  }
   9 methodCall D = {  } U = { canvas$1.!getFigureManager.filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
  10 actualOut D = { canvas$1.!getFigureManager.!getFilename } U = { canvas$1.!getFigureManager.filename }
  11 methodCall D = {  } U = { canvas$1.!getFigureManager.!getFilename, canvas$1.!getFigureManager.!getFilename.COMPACT_STRINGS, canvas$1.!getFigureManager.!getFilename.coder, canvas$1.!getFigureManager.!getFilename.value, filename$0 } TO = java.lang.String#equals( java.lang.Object )
  12 actualOut D = { canvas$1.!getFigureManager.!getFilename.!equals } U = { canvas$1.!getFigureManager.!getFilename.COMPACT_STRINGS, canvas$1.!getFigureManager.!getFilename.coder, canvas$1.!getFigureManager.!getFilename.value }
  13 returnSt D = { $_ } U = { canvas$1 }
  15 returnSt D = { $_ } U = {  }
  17 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ menu ]
   1 fieldDeclaration D = { this.menu } U = { this.menu }
--
   0: closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 23 trueControlDependence
  16: 0 -> 3 trueControlDependence
  17: 0 -> 4 trueControlDependence
  18: 0 -> 5 trueControlDependence
  19: 0 -> 6 trueControlDependence
  20: 0 -> 7 trueControlDependence
  21: 0 -> 8 trueControlDependence
  22: 0 -> 9 trueControlDependence
  23: 1 -> 5 loopIndependentDefUseDependence canvas$0
  24: 1 -> 9 loopIndependentDefUseDependence canvas$0
  25: 11 -> 8 loopIndependentDefUseDependence canvas$0.!getFigureManager
  26: 13 -> 7 loopIndependentDefUseDependence canvas$0.!getFigureManager.!clear
  27: 17 -> 14 loopIndependentDefUseDependence this.canvases.!remove
  28: 20 -> 21 loopIndependentDefUseDependence this.visComp
  29: 21 -> 18 loopIndependentDefUseDependence this.!remove
  30: 21 -> 23 loopIndependentDefUseDependence this.visComp
  31: 4 -> 6 loopIndependentDefUseDependence this.selectedTab
  32: 6 -> 16 loopIndependentDefUseDependence this.selectedTab
  33: 6 -> 2 loopIndependentDefUseDependence this.!selectTab
  34: 6 -> 20 loopIndependentDefUseDependence this.selectedTab
  35: 6 -> 23 loopIndependentDefUseDependence this.selectedTab
--
   0: serialVersionUID
   1: 0 -> 1 trueControlDependence
--
   0: TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 12 trueControlDependence
   4: 0 -> 2 trueControlDependence
   5: 0 -> 3 trueControlDependence
   6: 0 -> 4 trueControlDependence
   7: 0 -> 5 trueControlDependence
   8: 0 -> 6 trueControlDependence
   9: 0 -> 7 trueControlDependence
  10: 0 -> 8 trueControlDependence
  11: 0 -> 9 trueControlDependence
  12: 1 -> 6 loopIndependentDefUseDependence selector$0
  13: 10 -> 12 loopIndependentDefUseDependence java.util.AbstractList.modCount
  14: 10 -> 12 loopIndependentDefUseDependence this.canvases.elementData
  15: 10 -> 7 loopIndependentDefUseDependence this.canvases.!ArrayList<DrawCanvas>
  16: 4 -> 5 outputDependence super.changeEvent
  17: 4 -> 5 outputDependence super.changeListener
  18: 4 -> 5 outputDependence super.pages
  19: 4 -> 5 outputDependence super.tabPlacement
  20: 4 -> 5 outputDependence super.visComp
  21: 5 -> 12 loopIndependentDefUseDependence super.changeEvent
  22: 5 -> 12 loopIndependentDefUseDependence super.changeListener
  23: 5 -> 12 loopIndependentDefUseDependence super.pages
  24: 5 -> 12 loopIndependentDefUseDependence super.tabPlacement
  25: 5 -> 12 loopIndependentDefUseDependence super.visComp
  26: 5 -> 2 loopIndependentDefUseDependence 
  27: 6 -> 12 loopIndependentDefUseDependence this.selector
  28: 7 -> 12 loopIndependentDefUseDependence this.canvases
  29: 9 -> 10 outputDependence java.util.AbstractList.modCount
  30: 9 -> 10 outputDependence this.canvases.elementData
--
   0: getAllCanvases( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 3 trueControlDependence
   3: 1 -> 3 loopIndependentDefUseDependence $_
--
   0: openTab( java.lang.String )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 0 -> 4 trueControlDependence
   5: 0 -> 5 trueControlDependence
   6: 0 -> 6 trueControlDependence
   7: 0 -> 8 trueControlDependence
   8: 1 -> 5 loopIndependentDefUseDependence filename$0
   9: 2 -> 8 loopIndependentDefUseDependence $_
  10: 4 -> 6 loopIndependentDefUseDependence this.selectedTab
  11: 5 -> 6 summary
  12: 6 -> 2 loopIndependentDefUseDependence this.!newTab
  13: 6 -> 8 loopIndependentDefUseDependence this.selectedTab
--
   0: selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 11 trueControlDependence
   3: 0 -> 2 trueControlDependence
   4: 0 -> 3 trueControlDependence
   5: 0 -> 4 trueControlDependence
   6: 0 -> 5 trueControlDependence
   7: 0 -> 6 trueControlDependence
   8: 0 -> 7 trueControlDependence
   9: 0 -> 8 trueControlDependence
  10: 0 -> 9 trueControlDependence
  11: 1 -> 4 loopIndependentDefUseDependence canvas$0
  12: 5 -> 2 loopIndependentDefUseDependence this.!setSelectedComponent
  13: 6 -> 11 loopIndependentDefUseDependence this.selectedTab
  14: 9 -> 6 loopIndependentDefUseDependence this.!getSelectedIndex
--
   0: init( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 11 trueControlDependence
   3: 0 -> 2 trueControlDependence
   4: 0 -> 3 trueControlDependence
   5: 0 -> 4 trueControlDependence
   6: 0 -> 5 trueControlDependence
   7: 0 -> 6 trueControlDependence
   8: 0 -> 7 trueControlDependence
   9: 0 -> 8 trueControlDependence
  10: 0 -> 9 trueControlDependence
  11: 3 -> 5 loopIndependentDefUseDependence this.selectedTab
  12: 4 -> 5 summary
  13: 5 -> 1 loopIndependentDefUseDependence this.!newTab
  14: 5 -> 11 loopIndependentDefUseDependence this.selectedTab
  15: 8 -> 9 loopIndependentDefUseDependence javax.swing.event.EventListenerList.listenerList
  16: 9 -> 11 loopIndependentDefUseDependence javax.swing.event.EventListenerList.listenerList
  17: 9 -> 6 loopIndependentDefUseDependence this.!addChangeListener
--
   0: canvases
   1: 0 -> 1 trueControlDependence
--
   0: getCurrentCanvas( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 15 trueControlDependence
   3: 0 -> 2 trueControlDependence
   4: 0 -> 3 trueControlDependence
   5: 0 -> 4 trueControlDependence
   6: 0 -> 5 trueControlDependence
   7: 0 -> 6 trueControlDependence
   8: 0 -> 7 trueControlDependence
   9: 1 -> 10 trueControlDependence
  10: 1 -> 11 trueControlDependence
  11: 1 -> 13 falseControlDependence
  12: 1 -> 8 trueControlDependence
  13: 1 -> 9 trueControlDependence
  14: 11 -> 8 loopIndependentDefUseDependence this.canvases.!get
  15: 13 -> 15 loopIndependentDefUseDependence $_
  16: 4 -> 7 outputDependence this.canvases.!size
  17: 7 -> 1 loopIndependentDefUseDependence this.canvases.!size
  18: 8 -> 13 fallThroughControlDependence
  19: 8 -> 15 loopIndependentDefUseDependence $_
--
   0: setDrawMenu( jp.ac.ritsumei.cs.draw.DrawMenu )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 4 trueControlDependence
   4: 1 -> 2 loopIndependentDefUseDependence menu$0
   5: 2 -> 4 loopIndependentDefUseDependence this.menu
--
   0: stateChanged( javax.swing.event.ChangeEvent )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 15 trueControlDependence
   7: 0 -> 2 trueControlDependence
   8: 0 -> 3 trueControlDependence
   9: 0 -> 4 trueControlDependence
  10: 0 -> 5 trueControlDependence
  11: 0 -> 6 trueControlDependence
  12: 0 -> 7 trueControlDependence
  13: 0 -> 8 trueControlDependence
  14: 0 -> 9 trueControlDependence
  15: 1 -> 3 loopIndependentDefUseDependence evt$0
  16: 1 -> 4 loopIndependentDefUseDependence evt$0
  17: 13 -> 10 loopIndependentDefUseDependence this.menu.!updateUndoState
  18: 2 -> 7 declaration
  19: 2 -> 7 loopIndependentDefUseDependence src$1
  20: 2 -> 8 declaration
  21: 2 -> 8 loopIndependentDefUseDependence src$1
  22: 5 -> 2 loopIndependentDefUseDependence evt$0.!getSource
  23: 6 -> 15 loopIndependentDefUseDependence this.selectedTab
  24: 9 -> 6 loopIndependentDefUseDependence src$1.!getSelectedIndex
--
   0: selectedTab
   1: 0 -> 1 trueControlDependence
--
   0: selector
   1: 0 -> 1 trueControlDependence
--
   0: newTab( java.lang.String )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 23 trueControlDependence
  17: 0 -> 24 trueControlDependence
  18: 0 -> 25 trueControlDependence
  19: 0 -> 26 trueControlDependence
  20: 0 -> 27 trueControlDependence
  21: 0 -> 28 trueControlDependence
  22: 0 -> 29 trueControlDependence
  23: 0 -> 3 trueControlDependence
  24: 0 -> 30 trueControlDependence
  25: 0 -> 31 trueControlDependence
  26: 0 -> 32 trueControlDependence
  27: 0 -> 33 trueControlDependence
  28: 0 -> 34 trueControlDependence
  29: 0 -> 35 trueControlDependence
  30: 0 -> 36 trueControlDependence
  31: 0 -> 37 trueControlDependence
  32: 0 -> 38 trueControlDependence
  33: 0 -> 39 trueControlDependence
  34: 0 -> 4 trueControlDependence
  35: 0 -> 40 trueControlDependence
  36: 0 -> 41 trueControlDependence
  37: 0 -> 42 trueControlDependence
  38: 0 -> 43 trueControlDependence
  39: 0 -> 44 trueControlDependence
  40: 0 -> 45 trueControlDependence
  41: 0 -> 46 trueControlDependence
  42: 0 -> 48 trueControlDependence
  43: 0 -> 5 trueControlDependence
  44: 0 -> 6 trueControlDependence
  45: 0 -> 7 trueControlDependence
  46: 0 -> 8 trueControlDependence
  47: 0 -> 9 trueControlDependence
  48: 1 -> 7 loopIndependentDefUseDependence filename$0
  49: 11 -> 12 loopIndependentDefUseDependence java.util.AbstractList.modCount
  50: 11 -> 12 loopIndependentDefUseDependence javax.swing.undo.CompoundEdit.edits
  51: 11 -> 12 loopIndependentDefUseDependence undoManager$2.limit
  52: 11 -> 12 outputDependence javax.swing.undo.CompoundEdit.inProgress
  53: 11 -> 12 outputDependence undoManager$2.indexOfNextAdd
  54: 12 -> 48 loopIndependentDefUseDependence java.util.AbstractList.modCount
  55: 12 -> 48 loopIndependentDefUseDependence javax.swing.undo.CompoundEdit.edits
  56: 12 -> 48 loopIndependentDefUseDependence javax.swing.undo.CompoundEdit.inProgress
  57: 12 -> 48 loopIndependentDefUseDependence undoManager$2.indexOfNextAdd
  58: 12 -> 48 loopIndependentDefUseDependence undoManager$2.limit
  59: 12 -> 9 loopIndependentDefUseDependence undoManager$2.!UndoManager
  60: 15 -> 17 loopIndependentDefUseDependence canvas$1.support
  61: 16 -> 17 summary
  62: 17 -> 13 loopIndependentDefUseDependence canvas$1.!addUndoableEditListener
  63: 17 -> 48 loopIndependentDefUseDependence canvas$1.support
  64: 2 -> 14 declaration
  65: 2 -> 14 loopIndependentDefUseDependence canvas$1
  66: 2 -> 15 declaration
  67: 2 -> 15 loopIndependentDefUseDependence canvas$1
  68: 2 -> 19 declaration
  69: 2 -> 19 loopIndependentDefUseDependence canvas$1
  70: 2 -> 24 declaration
  71: 2 -> 24 loopIndependentDefUseDependence canvas$1
  72: 2 -> 29 declaration
  73: 2 -> 29 loopIndependentDefUseDependence canvas$1
  74: 2 -> 39 declaration
  75: 2 -> 39 loopIndependentDefUseDependence canvas$1
  76: 2 -> 44 declaration
  77: 2 -> 44 loopIndependentDefUseDependence canvas$1
  78: 2 -> 46 declaration
  79: 2 -> 46 loopIndependentDefUseDependence canvas$1
  80: 20 -> 22 loopIndependentDefUseDependence canvas$1.undoManager
  81: 21 -> 22 summary
  82: 22 -> 18 loopIndependentDefUseDependence canvas$1.!setUndoManager
  83: 22 -> 48 loopIndependentDefUseDependence canvas$1.undoManager
  84: 23 -> 30 declaration
  85: 23 -> 30 loopIndependentDefUseDependence fmanager$3
  86: 23 -> 31 declaration
  87: 23 -> 31 loopIndependentDefUseDependence fmanager$3
  88: 23 -> 33 declaration
  89: 23 -> 33 loopIndependentDefUseDependence fmanager$3
  90: 26 -> 23 loopIndependentDefUseDependence canvas$1.!getFigureManager
  91: 26 -> 30 loopIndependentDefUseDependence canvas$1.!getFigureManager
  92: 26 -> 31 loopIndependentDefUseDependence canvas$1.!getFigureManager
  93: 26 -> 33 loopIndependentDefUseDependence canvas$1.!getFigureManager
  94: 29 -> 36 loopIndependentDefUseDependence this.haveRegistered
  95: 32 -> 29 loopIndependentDefUseDependence fmanager$3.!getTitle
  96: 35 -> 29 loopIndependentDefUseDependence fmanager$3.!getFilename
  97: 36 -> 27 loopIndependentDefUseDependence this.!addTab
  98: 36 -> 48 loopIndependentDefUseDependence this.haveRegistered
  99: 4 -> 8 loopIndependentDefUseDependence canvas$1.changed
 100: 4 -> 8 loopIndependentDefUseDependence canvas$1.figureManager
 101: 4 -> 8 loopIndependentDefUseDependence canvas$1.figureManager.figures
 102: 4 -> 8 loopIndependentDefUseDependence canvas$1.figureManager.filename
 103: 4 -> 8 loopIndependentDefUseDependence canvas$1.menu
 104: 4 -> 8 loopIndependentDefUseDependence canvas$1.selector
 105: 40 -> 37 loopIndependentDefUseDependence this.canvases.!add
 106: 43 -> 45 loopIndependentDefUseDependence this.selectedTab
 107: 45 -> 41 loopIndependentDefUseDependence this.!selectTab
 108: 45 -> 48 loopIndependentDefUseDependence this.selectedTab
 109: 46 -> 48 loopIndependentDefUseDependence $_
 110: 5 -> 8 summary
 111: 6 -> 8 summary
 112: 7 -> 8 summary
 113: 8 -> 2 loopIndependentDefUseDependence canvas$1.!DrawCanvas
 114: 8 -> 25 loopIndependentDefUseDependence canvas$1.figureManager
 115: 8 -> 26 loopIndependentDefUseDependence canvas$1.figureManager
 116: 8 -> 48 loopIndependentDefUseDependence canvas$1.changed
 117: 8 -> 48 loopIndependentDefUseDependence canvas$1.figureManager
 118: 8 -> 48 loopIndependentDefUseDependence canvas$1.figureManager.figures
 119: 8 -> 48 loopIndependentDefUseDependence canvas$1.figureManager.filename
 120: 8 -> 48 loopIndependentDefUseDependence canvas$1.menu
 121: 8 -> 48 loopIndependentDefUseDependence canvas$1.selector
 122: 9 -> 16 declaration
 123: 9 -> 16 loopIndependentDefUseDependence undoManager$2
 124: 9 -> 21 declaration
 125: 9 -> 21 loopIndependentDefUseDependence undoManager$2
--
   0: getOpenFileNum( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 0 -> 4 trueControlDependence
   5: 0 -> 6 trueControlDependence
   6: 1 -> 6 loopIndependentDefUseDependence $_
   7: 4 -> 1 loopIndependentDefUseDependence this.canvases.!size
--
   0: updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 23 trueControlDependence
  16: 0 -> 3 trueControlDependence
  17: 0 -> 4 trueControlDependence
  18: 0 -> 5 trueControlDependence
  19: 0 -> 6 trueControlDependence
  20: 0 -> 7 trueControlDependence
  21: 0 -> 8 trueControlDependence
  22: 0 -> 9 trueControlDependence
  23: 1 -> 16 loopIndependentDefUseDependence canvas$0
  24: 1 -> 6 loopIndependentDefUseDependence canvas$0
  25: 10 -> 4 loopIndependentDefUseDependence canvas$0.!getFigureManager.!getTitle
  26: 11 -> 2 loopIndependentDefUseDependence this.!setTitleAt
  27: 11 -> 23 loopIndependentDefUseDependence this$Page.title
  28: 14 -> 21 loopIndependentDefUseDependence this$Page.tip
  29: 14 -> 21 loopIndependentDefUseDependence this.haveRegistered
  30: 18 -> 15 loopIndependentDefUseDependence canvas$0.!getFigureManager
  31: 20 -> 14 loopIndependentDefUseDependence canvas$0.!getFigureManager.!getFilename
  32: 21 -> 12 loopIndependentDefUseDependence this.!setToolTipTextAt
  33: 21 -> 23 loopIndependentDefUseDependence this$Page.tip
  34: 21 -> 23 loopIndependentDefUseDependence this.haveRegistered
  35: 4 -> 11 loopIndependentDefUseDependence this$Page.title
  36: 8 -> 18 outputDependence canvas$0.!getFigureManager
  37: 8 -> 5 loopIndependentDefUseDependence canvas$0.!getFigureManager
  38: 8 -> 9 loopIndependentDefUseDependence canvas$0.!getFigureManager
--
   0: getCanvas( java.lang.String )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 17 trueControlDependence
   3: 0 -> 2 trueControlDependence
   4: 1 -> 11 loopIndependentDefUseDependence filename$0
   5: 10 -> 10 defOrderDependence canvas$1.!getFigureManager.!getFilename
   6: 10 -> 11 loopIndependentDefUseDependence canvas$1.!getFigureManager.!getFilename
   7: 10 -> 4 loopIndependentDefUseDependence canvas$1.!getFigureManager.!getFilename
   8: 12 -> 12 defOrderDependence canvas$1.!getFigureManager.!getFilename.!equals
   9: 12 -> 3 loopIndependentDefUseDependence canvas$1.!getFigureManager.!getFilename.!equals
  10: 13 -> 17 loopIndependentDefUseDependence $_
  11: 13 -> 2 fallThroughControlDependence
  12: 15 -> 17 loopIndependentDefUseDependence $_
  13: 2 -> 10 trueControlDependence
  14: 2 -> 11 trueControlDependence
  15: 2 -> 12 trueControlDependence
  16: 2 -> 15 falseControlDependence
  17: 2 -> 3 trueControlDependence
  18: 2 -> 4 trueControlDependence
  19: 2 -> 5 trueControlDependence
  20: 2 -> 6 trueControlDependence
  21: 2 -> 7 trueControlDependence
  22: 2 -> 8 trueControlDependence
  23: 2 -> 9 trueControlDependence
  24: 3 -> 13 trueControlDependence
  25: 3 -> 2 falseControlDependence
  26: 8 -> 5 loopIndependentDefUseDependence canvas$1.!getFigureManager
  27: 8 -> 8 defOrderDependence canvas$1.!getFigureManager
--
   0: menu
   1: 0 -> 1 trueControlDependence
--
----- ClDG (to here) -----

