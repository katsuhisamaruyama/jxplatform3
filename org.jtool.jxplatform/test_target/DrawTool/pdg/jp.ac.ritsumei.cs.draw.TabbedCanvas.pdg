----- ClDG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.TabbedCanvas
   0 methodEntry [ jp.ac.ritsumei.cs.draw.TabbedCanvas#closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 formalIn D = { canvas$0 } U = {  }
   2 assignment D = {  } U = { this.!selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.!javax.swing.JTabbedPane.model } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
   5 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
   6 actualOut D = { this.!selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.!javax.swing.JTabbedPane.model }
   7 assignment D = {  } U = { canvas$0.!getFigureManager( ).!clear( ) }
   8 receiver D = {  } U = { canvas$0.!getFigureManager( ) }
   9 receiver D = {  } U = { canvas$0 }
  10 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  11 actualOut D = { canvas$0.!getFigureManager( ) } U = {  }
  12 methodCall D = {  } U = { canvas$0.!getFigureManager( ).figures } TO = jp.ac.ritsumei.cs.draw.FigureManager#clear( )
  13 actualOut D = { canvas$0.!getFigureManager( ).!clear( ) } U = { canvas$0.!getFigureManager( ).figures }
  14 assignment D = {  } U = { this.canvases.!remove( int ) }
  15 receiver D = {  } U = { this.canvases }
  16 methodCall D = {  } U = { this.selectedTab } TO = java.util.List#remove( int )
  17 actualOut D = { this.canvases.!remove( int ) } U = {  }
  18 assignment D = {  } U = { this.!remove( int ) }
  19 receiver D = {  } U = {  }
  20 methodCall D = {  } U = { this.!javax.accessibility.AccessibleState.SELECTED, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.JTabbedPane.visComp, this.selectedTab } TO = javax.swing.JTabbedPane#remove( int )
  21 actualOut D = { this.!javax.swing.JTabbedPane.visComp, this.!remove( int ) } U = { this.!javax.accessibility.AccessibleState.SELECTED, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.JTabbedPane.visComp }
  23 formalOut D = {  } U = { $_ }
   4+ actualOutByFieldAccess D = { this.selectedTab } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.TabbedCanvas#serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.TabbedCanvas.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.TabbedCanvas.serialVersionUID }
--
   0 constructorEntry [ jp.ac.ritsumei.cs.draw.TabbedCanvas#TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector ) ]
   1 formalIn D = { selector$0 } U = {  }
   2 assignment D = {  } U = { super.!JTabbedPane( int ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = { JTabbedPane.TOP } TO = javax.swing.JTabbedPane#JTabbedPane( int )
   5 actualOut D = { super.!JTabbedPane( int ), super.!javax.swing.JTabbedPane.changeEvent, super.!javax.swing.JTabbedPane.changeListener, super.!javax.swing.JTabbedPane.pages, super.!javax.swing.JTabbedPane.tabPlacement, super.!javax.swing.JTabbedPane.visComp } U = {  }
   6 assignment D = { this.selector } U = { selector$0, selector$0.colorCombo, selector$0.shapeCombo, selector$0.widthCombo }
   7 assignment D = { this.canvases } U = { java.util.ArrayList.!ArrayList( ) }
   8 receiver D = {  } U = {  }
   9 constructorCall D = {  } U = { java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA } TO = java.util.ArrayList#ArrayList( )
  10 actualOut D = { java.util.ArrayList.!ArrayList( ), java.util.ArrayList.!java.util.AbstractList.modCount, java.util.ArrayList.!java.util.ArrayList.elementData } U = { java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA }
  12 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.TabbedCanvas#getAllCanvases( ) ]
   1 returnSt D = { $_ } U = { this.canvases }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.TabbedCanvas#openTab( java.lang.String ) ]
   1 formalIn D = { filename$0 } U = {  }
   2 returnSt D = { $_ } U = { this.!newTab( java.lang.String ), this.!newTab( java.lang.String ).figureManager, this.!newTab( java.lang.String ).figures, this.!newTab( java.lang.String ).filename, this.!newTab( java.lang.String ).menu, this.!newTab( java.lang.String ).selector }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.canvas$1.figureManager, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.figureManager.figures, this.figureManager.filename, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.height, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.parent, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.peer, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.width, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.dispatcher, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.parent, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.peer, this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#newTab( java.lang.String )
   5 actualIn D = {  } U = { filename$0 }
   6 actualOut D = { this.!javax.swing.JTabbedPane.haveRegistered, this.!newTab( java.lang.String ), this.canvas$1.support.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.inProgress, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.indexOfNextAdd, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.newEventsOnly, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.height, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.width, this.jp.ac.ritsumei.cs.draw.DrawCanvas.jp.ac.ritsumei.cs.draw.FigureManager.java.util.LinkedList.!java.util.LinkedList.size } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.canvas$1.figureManager, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.figureManager.figures, this.figureManager.filename, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.height, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.parent, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.peer, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.width, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.dispatcher, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.parent, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.peer, this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo }
   8 formalOut D = {  } U = { $_ }
   4+ actualOutByFieldAccess D = { this.jp.ac.ritsumei.cs.draw.DrawCanvas.changed } U = {  }
   4+ actualOutByFieldAccess D = { this.!newTab( java.lang.String ).figureManager } U = {  }
   4+ actualOutByFieldAccess D = { this.!newTab( java.lang.String ).menu } U = {  }
   4+ actualOutByFieldAccess D = { this.!newTab( java.lang.String ).selector } U = {  }
   4+ actualOutByFieldAccess D = { this.canvas$1.undoManager } U = {  }
   4+ actualOutByFieldAccess D = { this.!newTab( java.lang.String ).figures } U = {  }
   4+ actualOutByFieldAccess D = { this.!newTab( java.lang.String ).filename } U = {  }
   4+ actualOutByFieldAccess D = { this.selectedTab } U = {  }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.TabbedCanvas#selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 formalIn D = { canvas$0 } U = {  }
   2 assignment D = {  } U = { this.!setSelectedComponent( java.awt.Component ) }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager } TO = javax.swing.JTabbedPane#setSelectedComponent( java.awt.Component )
   5 actualOut D = { this.!setSelectedComponent( java.awt.Component ) } U = {  }
   6 assignment D = { this.selectedTab } U = { this.!getSelectedIndex( ) }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = { this.!javax.swing.JTabbedPane.model } TO = javax.swing.JTabbedPane#getSelectedIndex( )
   9 actualOut D = { this.!getSelectedIndex( ) } U = { this.!javax.swing.JTabbedPane.model }
  11 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.TabbedCanvas#init( ) ]
   1 assignment D = {  } U = { this.!newTab( java.lang.String ) }
   2 receiver D = {  } U = {  }
   3 methodCall D = {  } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.canvas$1.figureManager, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.figureManager.figures, this.figureManager.filename, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.height, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.parent, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.peer, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.width, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.dispatcher, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.parent, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.peer, this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#newTab( java.lang.String )
   4 actualIn D = {  } U = {  }
   5 actualOut D = { this.!javax.swing.JTabbedPane.haveRegistered, this.!newTab( java.lang.String ), this.canvas$1.support.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.inProgress, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.indexOfNextAdd, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.newEventsOnly, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.height, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.width, this.jp.ac.ritsumei.cs.draw.DrawCanvas.jp.ac.ritsumei.cs.draw.FigureManager.java.util.LinkedList.!java.util.LinkedList.size } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.canvas$1.figureManager, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.figureManager.figures, this.figureManager.filename, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.height, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.parent, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.peer, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.width, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.dispatcher, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.parent, this.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.peer, this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo }
   6 assignment D = {  } U = { this.!addChangeListener( javax.swing.event.ChangeListener ) }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = { this, this.!javax.swing.JTabbedPane.listenerList, this.!javax.swing.event.EventListenerList.NULL_ARRAY, this.!javax.swing.event.EventListenerList.listenerList } TO = javax.swing.JTabbedPane#addChangeListener( javax.swing.event.ChangeListener )
   9 actualOut D = { this.!addChangeListener( javax.swing.event.ChangeListener ), this.!javax.swing.event.EventListenerList.listenerList } U = { this.!javax.swing.JTabbedPane.listenerList, this.!javax.swing.event.EventListenerList.NULL_ARRAY, this.!javax.swing.event.EventListenerList.listenerList }
  11 formalOut D = {  } U = { $_ }
   3+ actualOutByFieldAccess D = { this.jp.ac.ritsumei.cs.draw.DrawCanvas.changed } U = {  }
   3+ actualOutByFieldAccess D = { this.!newTab( java.lang.String ).figureManager } U = {  }
   3+ actualOutByFieldAccess D = { this.!newTab( java.lang.String ).menu } U = {  }
   3+ actualOutByFieldAccess D = { this.!newTab( java.lang.String ).selector } U = {  }
   3+ actualOutByFieldAccess D = { this.canvas$1.undoManager } U = {  }
   3+ actualOutByFieldAccess D = { this.!newTab( java.lang.String ).figures } U = {  }
   3+ actualOutByFieldAccess D = { this.!newTab( java.lang.String ).filename } U = {  }
   3+ actualOutByFieldAccess D = { this.selectedTab } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.TabbedCanvas#canvases ]
   1 fieldDeclaration D = { this.canvases } U = { this.canvases }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.TabbedCanvas#getCurrentCanvas( ) ]
   1 ifSt D = {  } U = { this.canvases.!size( ), this.selectedTab }
   2 receiver D = {  } U = { this.canvases }
   3 methodCall D = {  } U = {  } TO = java.util.List#size( )
   4 actualOut D = { this.canvases.!size( ) } U = {  }
   5 receiver D = {  } U = { this.canvases }
   6 methodCall D = {  } U = {  } TO = java.util.List#size( )
   7 actualOut D = { this.canvases.!size( ) } U = {  }
   8 returnSt D = { $_ } U = { this.canvases.!get( int ) }
   9 receiver D = {  } U = { this.canvases }
  10 methodCall D = {  } U = { this.selectedTab } TO = java.util.List#get( int )
  11 actualOut D = { this.canvases.!get( int ) } U = {  }
  13 returnSt D = { $_ } U = {  }
  15 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.TabbedCanvas#setDrawMenu( jp.ac.ritsumei.cs.draw.DrawMenu ) ]
   1 formalIn D = { menu$0 } U = {  }
   2 assignment D = { this.menu } U = { menu$0, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener }
   4 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.TabbedCanvas#stateChanged( javax.swing.event.ChangeEvent ) ]
   1 formalIn D = { evt$0 } U = {  }
   2 localDeclaration D = { src$1 } U = { evt$0.!getSource( ) }
   3 receiver D = {  } U = { evt$0 }
   4 methodCall D = {  } U = { evt$0.!java.util.EventObject.source } TO = java.util.EventObject#getSource( )
   5 actualOut D = { evt$0.!getSource( ) } U = { evt$0.!java.util.EventObject.source }
   6 assignment D = { this.selectedTab } U = { src$1.!getSelectedIndex( ) }
   7 receiver D = {  } U = { src$1 }
   8 methodCall D = {  } U = { src$1.!javax.swing.JTabbedPane.model } TO = javax.swing.JTabbedPane#getSelectedIndex( )
   9 actualOut D = { src$1.!getSelectedIndex( ) } U = { src$1.!javax.swing.JTabbedPane.model }
  10 assignment D = {  } U = { this.menu.!updateUndoState( ) }
  11 receiver D = {  } U = { this.menu }
  12 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.menu.canvas$0.undoManager, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab, this.menu.undoAction, this.menu.undoManager$1.!javax.swing.undo.UndoManager.edits, this.menu.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.menu.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateUndoState( )
  13 actualOut D = { this.menu.!updateUndoState( ) } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.menu.canvas$0.undoManager, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab, this.menu.undoAction, this.menu.undoManager$1.!javax.swing.undo.UndoManager.edits, this.menu.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.menu.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd }
  15 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.TabbedCanvas#selectedTab ]
   1 fieldDeclaration D = { this.selectedTab } U = { this.selectedTab }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.TabbedCanvas#selector ]
   1 fieldDeclaration D = { this.selector } U = { this.selector }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.TabbedCanvas#newTab( java.lang.String ) ]
   1 formalIn D = { filename$0 } U = {  }
   2 localDeclaration D = { canvas$1 } U = { jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = { Color.white, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.height, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.parent, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.peer, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.width, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.dispatcher, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.parent, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.peer, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String )
   5 actualIn D = {  } U = { this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener }
   6 actualIn D = {  } U = { this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo }
   7 actualIn D = {  } U = { filename$0 }
   8 actualOut D = { jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ), jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.newEventsOnly, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.height, jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.width, jp.ac.ritsumei.cs.draw.DrawCanvas.jp.ac.ritsumei.cs.draw.FigureManager.java.util.LinkedList.!java.util.LinkedList.size } U = { Color.white, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.height, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.parent, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.peer, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.width, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.dispatcher, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.parent, jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.peer, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this }
   9 localDeclaration D = { undoManager$2 } U = { javax.swing.undo.UndoManager.!UndoManager( ) }
  10 receiver D = {  } U = {  }
  11 constructorCall D = {  } U = { javax.swing.undo.UndoManager.!java.util.Vector.elementData, javax.swing.undo.UndoManager.!java.util.Vector.modCount, javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit } TO = javax.swing.undo.UndoManager#UndoManager( )
  12 actualOut D = { javax.swing.undo.UndoManager.!UndoManager( ), javax.swing.undo.UndoManager.!java.util.Vector.modCount, javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.edits, javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.inProgress, javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.indexOfNextAdd, javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit } U = { javax.swing.undo.UndoManager.!java.util.Vector.elementData, javax.swing.undo.UndoManager.!java.util.Vector.modCount, javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit }
  13 assignment D = {  } U = { canvas$1.!addUndoableEditListener( javax.swing.event.UndoableEditListener ) }
  14 receiver D = {  } U = { canvas$1 }
  15 methodCall D = {  } U = { canvas$1.support, canvas$1.support.!java.util.Vector.elementCount, canvas$1.support.!java.util.Vector.elementData, canvas$1.support.!java.util.Vector.modCount, canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support.!java.util.Vector.elementCount, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support.!java.util.Vector.elementData, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support.!java.util.Vector.modCount, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support.!javax.swing.undo.UndoableEditSupport.listeners } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#addUndoableEditListener( javax.swing.event.UndoableEditListener )
  16 actualIn D = {  } U = { undoManager$2 }
  17 actualOut D = { canvas$1.!addUndoableEditListener( javax.swing.event.UndoableEditListener ), canvas$1.support.!java.util.Vector.modCount } U = { canvas$1.support, canvas$1.support.!java.util.Vector.elementCount, canvas$1.support.!java.util.Vector.elementData, canvas$1.support.!java.util.Vector.modCount, canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support.!java.util.Vector.elementCount, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support.!java.util.Vector.elementData, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support.!java.util.Vector.modCount, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support.!javax.swing.undo.UndoableEditSupport.listeners }
  18 assignment D = {  } U = { canvas$1.!setUndoManager( javax.swing.undo.UndoManager ) }
  19 receiver D = {  } U = { canvas$1 }
  20 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setUndoManager( javax.swing.undo.UndoManager )
  21 actualIn D = {  } U = { undoManager$2 }
  22 actualOut D = { canvas$1.!setUndoManager( javax.swing.undo.UndoManager ) } U = {  }
  23 localDeclaration D = { fmanager$3 } U = { canvas$1.!getFigureManager( ) }
  24 receiver D = {  } U = { canvas$1 }
  25 methodCall D = {  } U = { canvas$1.figureManager, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager, this.figureManager.figures, this.figureManager.filename } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  26 actualOut D = { canvas$1.!getFigureManager( ) } U = { canvas$1.figureManager, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager, this.figureManager.figures, this.figureManager.filename }
  27 assignment D = {  } U = { this.!addTab( java.lang.String javax.swing.Icon java.awt.Component java.lang.String ) }
  28 receiver D = {  } U = {  }
  29 methodCall D = {  } U = { canvas$1, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, fmanager$3.!getFilename( ), fmanager$3.!getTitle( ), jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).changed, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).curX, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).curY, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).currentFigure, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).grabbedFigure, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).isGrabMode, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).menu, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).selector, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).undoManager, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.pages } TO = javax.swing.JTabbedPane#addTab( java.lang.String javax.swing.Icon java.awt.Component java.lang.String )
  30 receiver D = {  } U = { fmanager$3 }
  31 methodCall D = {  } U = { File.separator, canvas$1.!getFigureManager( ).filename, canvas$1.!getFigureManager( ).filename.!java.lang.String.value, fmanager$3.filename, fmanager$3.filename.!java.lang.String.value } TO = jp.ac.ritsumei.cs.draw.FigureManager#getTitle( )
  32 actualOut D = { fmanager$3.!getTitle( ) } U = { File.separator, canvas$1.!getFigureManager( ).filename, canvas$1.!getFigureManager( ).filename.!java.lang.String.value, fmanager$3.filename, fmanager$3.filename.!java.lang.String.value }
  33 receiver D = {  } U = { fmanager$3 }
  34 methodCall D = {  } U = { canvas$1.!getFigureManager( ).filename, fmanager$3.filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
  35 actualOut D = { fmanager$3.!getFilename( ) } U = { canvas$1.!getFigureManager( ).filename, fmanager$3.filename }
  36 actualOut D = { this.!addTab( java.lang.String javax.swing.Icon java.awt.Component java.lang.String ), this.!javax.swing.JTabbedPane.haveRegistered } U = { this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.pages }
  37 assignment D = {  } U = { this.canvases.!add( java.lang.Object ) }
  38 receiver D = {  } U = { this.canvases }
  39 methodCall D = {  } U = { canvas$1, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).changed, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).curX, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).curY, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).currentFigure, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).grabbedFigure, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).isGrabMode, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).menu, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).selector, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).undoManager } TO = java.util.List#add( java.lang.Object )
  40 actualOut D = { this.canvases.!add( java.lang.Object ) } U = {  }
  41 assignment D = {  } U = { this.!selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
  42 receiver D = {  } U = {  }
  43 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.!javax.swing.JTabbedPane.model } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
  44 actualIn D = {  } U = { canvas$1, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).changed, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).curX, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).curY, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).currentFigure, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).grabbedFigure, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).isGrabMode, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).menu, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).selector, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).undoManager }
  45 actualOut D = { this.!selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.!javax.swing.JTabbedPane.model }
  46 returnSt D = { $_ } U = { canvas$1, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.support.!java.util.Vector.modCount, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).changed, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).curX, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).curY, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).currentFigure, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).grabbedFigure, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).isGrabMode, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).menu, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).selector, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).undoManager }
  48 formalOut D = {  } U = { $_ }
   4+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.DrawCanvas.changed } U = {  }
   4+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager } U = {  }
   4+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).menu } U = {  }
   4+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).selector } U = {  }
   4+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figures } U = {  }
   4+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).filename } U = {  }
  20+ actualOutByFieldAccess D = { canvas$1.undoManager } U = {  }
  43+ actualOutByFieldAccess D = { this.selectedTab } U = {  }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.TabbedCanvas#getOpenFileNum( ) ]
   1 returnSt D = { $_ } U = { this.canvases.!size( ) }
   2 receiver D = {  } U = { this.canvases }
   3 methodCall D = {  } U = {  } TO = java.util.List#size( )
   4 actualOut D = { this.canvases.!size( ) } U = {  }
   6 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.TabbedCanvas#updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 formalIn D = { canvas$0 } U = {  }
   2 assignment D = {  } U = { this.!setTitleAt( int java.lang.String ) }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { canvas$0.!getFigureManager( ).!getTitle( ), this.!java.awt.Component.height, this.!java.awt.Component.width, this.!java.lang.String.COMPACT_STRINGS, this.!java.lang.String.coder, this.!java.lang.String.value, this.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.!javax.swing.JComponent.revalidateRunnableScheduled, this.!javax.swing.JTabbedPane$Page.title, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.pages, this.selectedTab } TO = javax.swing.JTabbedPane#setTitleAt( int java.lang.String )
   5 receiver D = {  } U = { canvas$0.!getFigureManager( ) }
   6 receiver D = {  } U = { canvas$0 }
   7 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
   8 actualOut D = { canvas$0.!getFigureManager( ) } U = {  }
   9 methodCall D = {  } U = { File.separator, canvas$0.!getFigureManager( ).filename, canvas$0.!getFigureManager( ).filename.!java.lang.String.value } TO = jp.ac.ritsumei.cs.draw.FigureManager#getTitle( )
  10 actualOut D = { canvas$0.!getFigureManager( ).!getTitle( ) } U = { File.separator, canvas$0.!getFigureManager( ).filename, canvas$0.!getFigureManager( ).filename.!java.lang.String.value }
  11 actualOut D = { this.!javax.swing.JTabbedPane$Page.title, this.!setTitleAt( int java.lang.String ) } U = { this.!java.awt.Component.height, this.!java.awt.Component.width, this.!java.lang.String.COMPACT_STRINGS, this.!java.lang.String.coder, this.!java.lang.String.value, this.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.!javax.swing.JComponent.revalidateRunnableScheduled, this.!javax.swing.JTabbedPane$Page.title, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.pages }
  12 assignment D = {  } U = { this.!setToolTipTextAt( int java.lang.String ) }
  13 receiver D = {  } U = {  }
  14 methodCall D = {  } U = { canvas$0.!getFigureManager( ).!getFilename( ), this.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.!javax.swing.JTabbedPane$Page.tip, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.!javax.swing.ToolTipManager.accessibilityKeyListener, this.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.selectedTab } TO = javax.swing.JTabbedPane#setToolTipTextAt( int java.lang.String )
  15 receiver D = {  } U = { canvas$0.!getFigureManager( ) }
  16 receiver D = {  } U = { canvas$0 }
  17 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  18 actualOut D = { canvas$0.!getFigureManager( ) } U = {  }
  19 methodCall D = {  } U = { canvas$0.!getFigureManager( ).filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
  20 actualOut D = { canvas$0.!getFigureManager( ).!getFilename( ) } U = { canvas$0.!getFigureManager( ).filename }
  21 actualOut D = { this.!javax.swing.JTabbedPane$Page.tip, this.!javax.swing.JTabbedPane.haveRegistered, this.!setToolTipTextAt( int java.lang.String ) } U = { this.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.!javax.swing.JTabbedPane$Page.tip, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.!javax.swing.ToolTipManager.accessibilityKeyListener, this.!javax.swing.ToolTipManager.moveBeforeEnterListener }
  23 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.TabbedCanvas#getCanvas( java.lang.String ) ]
   1 formalIn D = { filename$0 } U = {  }
   2 enhancedForSt D = { canvas$1 } U = { this.canvases }
   3 ifSt D = {  } U = { canvas$1.!getFigureManager( ).!getFilename( ).!equals( java.lang.Object ) }
   4 receiver D = {  } U = { canvas$1.!getFigureManager( ).!getFilename( ) }
   5 receiver D = {  } U = { canvas$1.!getFigureManager( ) }
   6 receiver D = {  } U = { canvas$1 }
   7 methodCall D = {  } U = { canvas$1.figureManager, this.figureManager.figures, this.figureManager.filename } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
   8 actualOut D = { canvas$1.!getFigureManager( ) } U = { canvas$1.figureManager, this.figureManager.figures, this.figureManager.filename }
   9 methodCall D = {  } U = { canvas$1.!getFigureManager( ).filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
  10 actualOut D = { canvas$1.!getFigureManager( ).!getFilename( ) } U = { canvas$1.!getFigureManager( ).filename }
  11 methodCall D = {  } U = { canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, filename$0 } TO = java.lang.String#equals( java.lang.Object )
  12 actualOut D = { canvas$1.!getFigureManager( ).!getFilename( ).!equals( java.lang.Object ) } U = { canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value }
  13 returnSt D = { $_ } U = { canvas$1, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager }
  15 returnSt D = { $_ } U = {  }
  17 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.TabbedCanvas#menu ]
   1 fieldDeclaration D = { this.menu } U = { this.menu }
--
   0: closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    4+ trueControlDependence
   6:    0 ->    5 trueControlDependence
   7:    0 ->    6 trueControlDependence
   8:    0 ->    7 trueControlDependence
   9:    0 ->    8 trueControlDependence
  10:    0 ->    9 trueControlDependence
  11:    0 ->   10 trueControlDependence
  12:    0 ->   11 trueControlDependence
  13:    0 ->   12 trueControlDependence
  14:    0 ->   13 trueControlDependence
  15:    0 ->   14 trueControlDependence
  16:    0 ->   15 trueControlDependence
  17:    0 ->   16 trueControlDependence
  18:    0 ->   17 trueControlDependence
  19:    0 ->   18 trueControlDependence
  20:    0 ->   19 trueControlDependence
  21:    0 ->   20 trueControlDependence
  22:    0 ->   21 trueControlDependence
  23:    0 ->   23 trueControlDependence
  24:    1 ->    5 loopIndependentDefUseDependence canvas$0
  25:    1 ->    9 loopIndependentDefUseDependence canvas$0
  26:    4+ ->   16 loopIndependentDefUseDependence this.selectedTab
  27:    4+ ->   20 loopIndependentDefUseDependence this.selectedTab
  28:    6 ->    2 loopIndependentDefUseDependence this.!selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
  29:   11 ->    8 loopIndependentDefUseDependence canvas$0.!getFigureManager( )
  30:   13 ->    7 loopIndependentDefUseDependence canvas$0.!getFigureManager( ).!clear( )
  31:   17 ->   14 loopIndependentDefUseDependence this.canvases.!remove( int )
  32:   21 ->   18 loopIndependentDefUseDependence this.!remove( int )
--
   0: serialVersionUID
   1:    0 ->    1 trueControlDependence
--
   0: TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   12 trueControlDependence
  12:    1 ->    6 loopIndependentDefUseDependence selector$0
  13:    5 ->    2 loopIndependentDefUseDependence super.!JTabbedPane( int )
  14:   10 ->    7 loopIndependentDefUseDependence java.util.ArrayList.!ArrayList( )
--
   0: getAllCanvases( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    1 ->    3 loopIndependentDefUseDependence $_
--
   0: openTab( java.lang.String )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    4+ trueControlDependence
   6:    0 ->    4+ trueControlDependence
   7:    0 ->    4+ trueControlDependence
   8:    0 ->    4+ trueControlDependence
   9:    0 ->    4+ trueControlDependence
  10:    0 ->    4+ trueControlDependence
  11:    0 ->    4+ trueControlDependence
  12:    0 ->    4+ trueControlDependence
  13:    0 ->    5 trueControlDependence
  14:    0 ->    6 trueControlDependence
  15:    0 ->    8 trueControlDependence
  16:    1 ->    5 loopIndependentDefUseDependence filename$0
  17:    2 ->    8 loopIndependentDefUseDependence $_
  18:    4+ ->    2 loopIndependentDefUseDependence this.!newTab( java.lang.String ).figureManager
  19:    4+ ->    2 loopIndependentDefUseDependence this.!newTab( java.lang.String ).figures
  20:    4+ ->    2 loopIndependentDefUseDependence this.!newTab( java.lang.String ).filename
  21:    4+ ->    2 loopIndependentDefUseDependence this.!newTab( java.lang.String ).menu
  22:    4+ ->    2 loopIndependentDefUseDependence this.!newTab( java.lang.String ).selector
  23:    6 ->    2 loopIndependentDefUseDependence this.!newTab( java.lang.String )
--
   0: selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   11 trueControlDependence
  11:    1 ->    4 loopIndependentDefUseDependence canvas$0
  12:    5 ->    2 loopIndependentDefUseDependence this.!setSelectedComponent( java.awt.Component )
  13:    9 ->    6 loopIndependentDefUseDependence this.!getSelectedIndex( )
--
   0: init( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    3+ trueControlDependence
   5:    0 ->    3+ trueControlDependence
   6:    0 ->    3+ trueControlDependence
   7:    0 ->    3+ trueControlDependence
   8:    0 ->    3+ trueControlDependence
   9:    0 ->    3+ trueControlDependence
  10:    0 ->    3+ trueControlDependence
  11:    0 ->    3+ trueControlDependence
  12:    0 ->    4 trueControlDependence
  13:    0 ->    5 trueControlDependence
  14:    0 ->    6 trueControlDependence
  15:    0 ->    7 trueControlDependence
  16:    0 ->    8 trueControlDependence
  17:    0 ->    9 trueControlDependence
  18:    0 ->   11 trueControlDependence
  19:    5 ->    1 loopIndependentDefUseDependence this.!newTab( java.lang.String )
  20:    9 ->    6 loopIndependentDefUseDependence this.!addChangeListener( javax.swing.event.ChangeListener )
--
   0: canvases
   1:    0 ->    1 trueControlDependence
--
   0: getCurrentCanvas( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->   15 trueControlDependence
   9:    1 ->    8 trueControlDependence
  10:    1 ->    9 trueControlDependence
  11:    1 ->   10 trueControlDependence
  12:    1 ->   11 trueControlDependence
  13:    1 ->   13 falseControlDependence
  14:    4 ->    7 outputDependence this.canvases.!size( )
  15:    7 ->    1 loopIndependentDefUseDependence this.canvases.!size( )
  16:    8 ->   13 fallThroughControlDependence
  17:    8 ->   15 loopIndependentDefUseDependence $_
  18:   11 ->    8 loopIndependentDefUseDependence this.canvases.!get( int )
  19:   13 ->   15 loopIndependentDefUseDependence $_
--
   0: setDrawMenu( jp.ac.ritsumei.cs.draw.DrawMenu )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    1 ->    2 loopIndependentDefUseDependence menu$0
--
   0: stateChanged( javax.swing.event.ChangeEvent )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   15 trueControlDependence
  15:    1 ->    3 loopIndependentDefUseDependence evt$0
  16:    2 ->    7 declaration
  17:    2 ->    7 loopIndependentDefUseDependence src$1
  18:    5 ->    2 loopIndependentDefUseDependence evt$0.!getSource( )
  19:    9 ->    6 loopIndependentDefUseDependence src$1.!getSelectedIndex( )
  20:   13 ->   10 loopIndependentDefUseDependence this.menu.!updateUndoState( )
--
   0: selectedTab
   1:    0 ->    1 trueControlDependence
--
   0: selector
   1:    0 ->    1 trueControlDependence
--
   0: newTab( java.lang.String )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    4+ trueControlDependence
   6:    0 ->    4+ trueControlDependence
   7:    0 ->    4+ trueControlDependence
   8:    0 ->    4+ trueControlDependence
   9:    0 ->    4+ trueControlDependence
  10:    0 ->    4+ trueControlDependence
  11:    0 ->    5 trueControlDependence
  12:    0 ->    6 trueControlDependence
  13:    0 ->    7 trueControlDependence
  14:    0 ->    8 trueControlDependence
  15:    0 ->    9 trueControlDependence
  16:    0 ->   10 trueControlDependence
  17:    0 ->   11 trueControlDependence
  18:    0 ->   12 trueControlDependence
  19:    0 ->   13 trueControlDependence
  20:    0 ->   14 trueControlDependence
  21:    0 ->   15 trueControlDependence
  22:    0 ->   16 trueControlDependence
  23:    0 ->   17 trueControlDependence
  24:    0 ->   18 trueControlDependence
  25:    0 ->   19 trueControlDependence
  26:    0 ->   20 trueControlDependence
  27:    0 ->   20+ trueControlDependence
  28:    0 ->   21 trueControlDependence
  29:    0 ->   22 trueControlDependence
  30:    0 ->   23 trueControlDependence
  31:    0 ->   24 trueControlDependence
  32:    0 ->   25 trueControlDependence
  33:    0 ->   26 trueControlDependence
  34:    0 ->   27 trueControlDependence
  35:    0 ->   28 trueControlDependence
  36:    0 ->   29 trueControlDependence
  37:    0 ->   30 trueControlDependence
  38:    0 ->   31 trueControlDependence
  39:    0 ->   32 trueControlDependence
  40:    0 ->   33 trueControlDependence
  41:    0 ->   34 trueControlDependence
  42:    0 ->   35 trueControlDependence
  43:    0 ->   36 trueControlDependence
  44:    0 ->   37 trueControlDependence
  45:    0 ->   38 trueControlDependence
  46:    0 ->   39 trueControlDependence
  47:    0 ->   40 trueControlDependence
  48:    0 ->   41 trueControlDependence
  49:    0 ->   42 trueControlDependence
  50:    0 ->   43 trueControlDependence
  51:    0 ->   43+ trueControlDependence
  52:    0 ->   44 trueControlDependence
  53:    0 ->   45 trueControlDependence
  54:    0 ->   46 trueControlDependence
  55:    0 ->   48 trueControlDependence
  56:    1 ->    7 loopIndependentDefUseDependence filename$0
  57:    2 ->   14 declaration
  58:    2 ->   14 loopIndependentDefUseDependence canvas$1
  59:    2 ->   19 declaration
  60:    2 ->   19 loopIndependentDefUseDependence canvas$1
  61:    2 ->   24 declaration
  62:    2 ->   24 loopIndependentDefUseDependence canvas$1
  63:    2 ->   29 declaration
  64:    2 ->   29 loopIndependentDefUseDependence canvas$1
  65:    2 ->   39 declaration
  66:    2 ->   39 loopIndependentDefUseDependence canvas$1
  67:    2 ->   44 declaration
  68:    2 ->   44 loopIndependentDefUseDependence canvas$1
  69:    2 ->   46 declaration
  70:    2 ->   46 loopIndependentDefUseDependence canvas$1
  71:    4+ ->   25 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager
  72:    4+ ->   26 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager
  73:    4+ ->   29 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager
  74:    4+ ->   29 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).menu
  75:    4+ ->   29 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).selector
  76:    4+ ->   39 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager
  77:    4+ ->   39 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).menu
  78:    4+ ->   39 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).selector
  79:    4+ ->   44 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager
  80:    4+ ->   44 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).menu
  81:    4+ ->   44 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).selector
  82:    4+ ->   46 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager
  83:    4+ ->   46 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).menu
  84:    4+ ->   46 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).selector
  85:    8 ->    2 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String )
  86:    9 ->   16 declaration
  87:    9 ->   16 loopIndependentDefUseDependence undoManager$2
  88:    9 ->   21 declaration
  89:    9 ->   21 loopIndependentDefUseDependence undoManager$2
  90:   12 ->    9 loopIndependentDefUseDependence javax.swing.undo.UndoManager.!UndoManager( )
  91:   17 ->   13 loopIndependentDefUseDependence canvas$1.!addUndoableEditListener( javax.swing.event.UndoableEditListener )
  92:   17 ->   46 loopIndependentDefUseDependence canvas$1.support.!java.util.Vector.modCount
  93:   20+ ->   29 loopIndependentDefUseDependence canvas$1.undoManager
  94:   20+ ->   39 loopIndependentDefUseDependence canvas$1.undoManager
  95:   20+ ->   44 loopIndependentDefUseDependence canvas$1.undoManager
  96:   20+ ->   46 loopIndependentDefUseDependence canvas$1.undoManager
  97:   22 ->   18 loopIndependentDefUseDependence canvas$1.!setUndoManager( javax.swing.undo.UndoManager )
  98:   23 ->   30 declaration
  99:   23 ->   30 loopIndependentDefUseDependence fmanager$3
 100:   23 ->   33 declaration
 101:   23 ->   33 loopIndependentDefUseDependence fmanager$3
 102:   26 ->   23 loopIndependentDefUseDependence canvas$1.!getFigureManager( )
 103:   32 ->   29 loopIndependentDefUseDependence fmanager$3.!getTitle( )
 104:   35 ->   29 loopIndependentDefUseDependence fmanager$3.!getFilename( )
 105:   36 ->   27 loopIndependentDefUseDependence this.!addTab( java.lang.String javax.swing.Icon java.awt.Component java.lang.String )
 106:   40 ->   37 loopIndependentDefUseDependence this.canvases.!add( java.lang.Object )
 107:   45 ->   41 loopIndependentDefUseDependence this.!selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
 108:   46 ->   48 loopIndependentDefUseDependence $_
--
   0: getOpenFileNum( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    1 ->    6 loopIndependentDefUseDependence $_
   7:    4 ->    1 loopIndependentDefUseDependence this.canvases.!size( )
--
   0: updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   17 trueControlDependence
  18:    0 ->   18 trueControlDependence
  19:    0 ->   19 trueControlDependence
  20:    0 ->   20 trueControlDependence
  21:    0 ->   21 trueControlDependence
  22:    0 ->   23 trueControlDependence
  23:    1 ->    6 loopIndependentDefUseDependence canvas$0
  24:    1 ->   16 loopIndependentDefUseDependence canvas$0
  25:    8 ->    5 loopIndependentDefUseDependence canvas$0.!getFigureManager( )
  26:    8 ->   18 outputDependence canvas$0.!getFigureManager( )
  27:   10 ->    4 loopIndependentDefUseDependence canvas$0.!getFigureManager( ).!getTitle( )
  28:   11 ->    2 loopIndependentDefUseDependence this.!setTitleAt( int java.lang.String )
  29:   18 ->   15 loopIndependentDefUseDependence canvas$0.!getFigureManager( )
  30:   20 ->   14 loopIndependentDefUseDependence canvas$0.!getFigureManager( ).!getFilename( )
  31:   21 ->   12 loopIndependentDefUseDependence this.!setToolTipTextAt( int java.lang.String )
--
   0: getCanvas( java.lang.String )
   1:    0 ->    1 trueControlDependence
   2:    0 ->   17 trueControlDependence
   3:    1 ->   11 loopIndependentDefUseDependence filename$0
   4:    2 ->    2 defOrderDependence canvas$1
   5:    2 ->    3 trueControlDependence
   6:    2 ->    4 trueControlDependence
   7:    2 ->    5 trueControlDependence
   8:    2 ->    6 loopIndependentDefUseDependence canvas$1
   9:    2 ->    6 trueControlDependence
  10:    2 ->    7 trueControlDependence
  11:    2 ->    8 trueControlDependence
  12:    2 ->    9 trueControlDependence
  13:    2 ->   10 trueControlDependence
  14:    2 ->   11 trueControlDependence
  15:    2 ->   12 trueControlDependence
  16:    2 ->   13 loopIndependentDefUseDependence canvas$1
  17:    2 ->   15 falseControlDependence
  18:    3 ->    2 falseControlDependence
  19:    3 ->   13 trueControlDependence
  20:    8 ->    5 loopIndependentDefUseDependence canvas$1.!getFigureManager( )
  21:    8 ->    8 defOrderDependence canvas$1.!getFigureManager( )
  22:   10 ->    4 loopIndependentDefUseDependence canvas$1.!getFigureManager( ).!getFilename( )
  23:   10 ->   10 defOrderDependence canvas$1.!getFigureManager( ).!getFilename( )
  24:   12 ->    3 loopIndependentDefUseDependence canvas$1.!getFigureManager( ).!getFilename( ).!equals( java.lang.Object )
  25:   12 ->   12 defOrderDependence canvas$1.!getFigureManager( ).!getFilename( ).!equals( java.lang.Object )
  26:   13 ->    2 fallThroughControlDependence
  27:   13 ->   17 loopIndependentDefUseDependence $_
  28:   15 ->   17 loopIndependentDefUseDependence $_
--
   0: menu
   1:    0 ->    1 trueControlDependence
--
----- ClDG (to here) -----


