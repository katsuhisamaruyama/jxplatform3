----- ClDG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.FigureSelector
   0 methodEntry [ jp.ac.ritsumei.cs.draw.FigureSelector#getColor( ) ]
   1 localDeclaration D = { icon$0 } U = { this.colorCombo.!getSelectedItem( ) }
   2 receiver D = {  } U = { this.colorCombo }
   3 methodCall D = {  } U = { this.colorCombo.!javax.swing.JComboBox.dataModel } TO = javax.swing.JComboBox#getSelectedItem( )
   4 actualOut D = { this.colorCombo.!getSelectedItem( ) } U = { this.colorCombo.!javax.swing.JComboBox.dataModel }
   5 returnSt D = { $_ } U = { icon$0.!getFigure( ).!getColor( ) }
   6 receiver D = {  } U = { icon$0.!getFigure( ) }
   7 receiver D = {  } U = { icon$0 }
   8 methodCall D = {  } U = { icon$0.figure, this.figure.color, this.figure.endX, this.figure.endY, this.figure.outlineWidth, this.figure.startX, this.figure.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#getFigure( )
   9 actualOut D = { icon$0.!getFigure( ) } U = { icon$0.figure, this.figure.color, this.figure.endX, this.figure.endY, this.figure.outlineWidth, this.figure.startX, this.figure.startY }
  10 methodCall D = {  } U = { icon$0.!getFigure( ).color } TO = jp.ac.ritsumei.cs.draw.Figure#getColor( )
  11 actualOut D = { icon$0.!getFigure( ).!getColor( ) } U = { icon$0.!getFigure( ).color }
  13 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.FigureSelector#shapeComboIcons ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.FigureSelector.shapeComboIcons } U = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ), jp.ac.ritsumei.cs.draw.FigureSelector.shapeComboIcons }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
   4 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Line.!Line( ) }
   5 receiver D = {  } U = {  }
   6 constructorCall D = {  } U = { Color.black } TO = jp.ac.ritsumei.cs.draw.Line#Line( )
   7 actualOut D = { jp.ac.ritsumei.cs.draw.Line.!Line( ) } U = { Color.black }
   8 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
   9 receiver D = {  } U = {  }
  10 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  11 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Rect.!Rect( ) }
  12 receiver D = {  } U = {  }
  13 constructorCall D = {  } U = { Color.black } TO = jp.ac.ritsumei.cs.draw.Rect#Rect( )
  14 actualOut D = { jp.ac.ritsumei.cs.draw.Rect.!Rect( ) } U = { Color.black }
  15 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
  16 receiver D = {  } U = {  }
  17 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  18 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.FilledRect.!FilledRect( ) }
  19 receiver D = {  } U = {  }
  20 constructorCall D = {  } U = { Color.black } TO = jp.ac.ritsumei.cs.draw.FilledRect#FilledRect( )
  21 actualOut D = { jp.ac.ritsumei.cs.draw.FilledRect.!FilledRect( ) } U = { Color.black }
  22 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
  23 receiver D = {  } U = {  }
  24 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  25 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Oval.!Oval( ) }
  26 receiver D = {  } U = {  }
  27 constructorCall D = {  } U = { Color.black } TO = jp.ac.ritsumei.cs.draw.Oval#Oval( )
  28 actualOut D = { jp.ac.ritsumei.cs.draw.Oval.!Oval( ) } U = { Color.black }
  29 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
  30 receiver D = {  } U = {  }
  31 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  32 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.FilledOval.!FilledOval( ) }
  33 receiver D = {  } U = {  }
  34 constructorCall D = {  } U = { Color.black } TO = jp.ac.ritsumei.cs.draw.FilledOval#FilledOval( )
  35 actualOut D = { jp.ac.ritsumei.cs.draw.FilledOval.!FilledOval( ) } U = { Color.black }
  36 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
   3+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
   6+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( ).color } U = {  }
   6+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( ).outlineWidth } U = {  }
  10+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
  13+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Rect.!Rect( ).color } U = {  }
  13+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Rect.!Rect( ).outlineWidth } U = {  }
  17+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
  20+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FilledRect.!FilledRect( ).color } U = {  }
  20+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FilledRect.!FilledRect( ).outlineWidth } U = {  }
  24+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
  27+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Oval.!Oval( ).color } U = {  }
  27+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Oval.!Oval( ).outlineWidth } U = {  }
  31+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
  34+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FilledOval.!FilledOval( ).color } U = {  }
  34+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FilledOval.!FilledOval( ).outlineWidth } U = {  }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.FigureSelector#createFigure( ) ]
   1 localDeclaration D = { shape$0 } U = { this.!getShape( ) }
   2 receiver D = {  } U = {  }
   3 methodCall D = {  } U = { this.figure.color, this.figure.endX, this.figure.endY, this.figure.outlineWidth, this.figure.startX, this.figure.startY, this.icon$0.figure, this.shapeCombo, this.shapeCombo.!javax.swing.JComboBox.dataModel } TO = jp.ac.ritsumei.cs.draw.FigureSelector#getShape( )
   4 actualOut D = { this.!getShape( ) } U = { this.figure.color, this.figure.endX, this.figure.endY, this.figure.outlineWidth, this.figure.startX, this.figure.startY, this.icon$0.figure, this.shapeCombo, this.shapeCombo.!javax.swing.JComboBox.dataModel }
   5 ifSt D = {  } U = { shape$0, shape$0.color, shape$0.endX, shape$0.endY, shape$0.outlineWidth, shape$0.startX, shape$0.startY, this.!getShape( ).color, this.!getShape( ).endX, this.!getShape( ).endY, this.!getShape( ).outlineWidth, this.!getShape( ).startX, this.!getShape( ).startY }
   6 returnSt D = { $_ } U = { shape$0.!create( java.awt.Color float ) }
   7 receiver D = {  } U = { shape$0 }
   8 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#create( java.awt.Color float )
   9 actualIn D = {  } U = { this.!getColor( ) }
  10 receiver D = {  } U = {  }
  11 methodCall D = {  } U = { this.colorCombo, this.colorCombo.!javax.swing.JComboBox.dataModel, this.figure.color, this.figure.endX, this.figure.endY, this.figure.outlineWidth, this.figure.startX, this.figure.startY, this.icon$0.!getFigure( ).color, this.icon$0.figure } TO = jp.ac.ritsumei.cs.draw.FigureSelector#getColor( )
  12 actualOut D = { this.!getColor( ) } U = { this.colorCombo, this.colorCombo.!javax.swing.JComboBox.dataModel, this.figure.color, this.figure.endX, this.figure.endY, this.figure.outlineWidth, this.figure.startX, this.figure.startY, this.icon$0.!getFigure( ).color, this.icon$0.figure }
  13 actualIn D = {  } U = { this.!getLineWidth( ) }
  14 receiver D = {  } U = {  }
  15 methodCall D = {  } U = { this.figure.color, this.figure.endX, this.figure.endY, this.figure.outlineWidth, this.figure.startX, this.figure.startY, this.icon$0.!getFigure( ).outlineWidth, this.icon$0.figure, this.widthCombo, this.widthCombo.!javax.swing.JComboBox.dataModel } TO = jp.ac.ritsumei.cs.draw.FigureSelector#getLineWidth( )
  16 actualOut D = { this.!getLineWidth( ) } U = { this.figure.color, this.figure.endX, this.figure.endY, this.figure.outlineWidth, this.figure.startX, this.figure.startY, this.icon$0.!getFigure( ).outlineWidth, this.icon$0.figure, this.widthCombo, this.widthCombo.!javax.swing.JComboBox.dataModel }
  17 actualOut D = { shape$0.!create( java.awt.Color float ) } U = {  }
  19 returnSt D = { $_ } U = {  }
  21 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ jp.ac.ritsumei.cs.draw.FigureSelector#FigureSelector( ) ]
   1 assignment D = {  } U = { this.!setLayout( java.awt.LayoutManager ) }
   2 receiver D = {  } U = {  }
   3 methodCall D = {  } U = { java.awt.FlowLayout.!FlowLayout( int ) } TO = java.awt.Container#setLayout( java.awt.LayoutManager )
   4 receiver D = {  } U = {  }
   5 constructorCall D = {  } U = { FlowLayout.RIGHT } TO = java.awt.FlowLayout#FlowLayout( int )
   6 actualOut D = { java.awt.FlowLayout.!FlowLayout( int ), java.awt.FlowLayout.!java.awt.FlowLayout.hgap, java.awt.FlowLayout.!java.awt.FlowLayout.serialVersionOnStream, java.awt.FlowLayout.!java.awt.FlowLayout.vgap } U = {  }
   7 actualOut D = { this.!java.awt.Container.layoutMgr, this.!setLayout( java.awt.LayoutManager ) } U = {  }
   8 assignment D = {  } U = { this.!createComboBoxes( ) }
   9 receiver D = {  } U = {  }
  10 methodCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY, icons$1.length, jp.ac.ritsumei.cs.draw.FigureSelector.colorComboIcons, jp.ac.ritsumei.cs.draw.FigureSelector.shapeComboIcons, jp.ac.ritsumei.cs.draw.FigureSelector.widthComboIcons, this.!java.awt.Component.parent, this.!java.awt.Container.component, this.!java.awt.Container.containerListener, this.!java.awt.Container.eventMask, this.!java.awt.Container.layoutMgr, this.!java.awt.Container.peer, this.cb$0.!javax.swing.JComboBox.dataModel, this.colorCombo, this.javax.swing.JComboBox.!java.lang.Boolean.TRUE, this.javax.swing.JComboBox.!javax.swing.JComboBox.dataModel, this.javax.swing.JComboBox.!javax.swing.JPopupMenu.defaultLWPopupEnabledKey, this.shapeCombo, this.shapeCombo.!javax.swing.JComboBox.dataModel, this.widthCombo } TO = jp.ac.ritsumei.cs.draw.FigureSelector#createComboBoxes( )
  11 actualOut D = { this.!createComboBoxes( ), this.!java.awt.Component.parent, this.javax.swing.JComboBox.!javax.swing.DefaultComboBoxModel.objects, this.javax.swing.JComboBox.!javax.swing.JComboBox.actionCommand, this.javax.swing.JComboBox.!javax.swing.JComboBox.dataModel, this.javax.swing.JComboBox.!javax.swing.JComboBox.firingActionEvent, this.javax.swing.JComboBox.!javax.swing.JComboBox.isEditable, this.javax.swing.JComboBox.!javax.swing.JComboBox.keySelectionManager, this.javax.swing.JComboBox.!javax.swing.JComboBox.lightWeightPopupEnabled, this.javax.swing.JComboBox.!javax.swing.JComboBox.maximumRowCount, this.javax.swing.JComboBox.!javax.swing.JComboBox.selectedItemReminder, this.javax.swing.JComboBox.!javax.swing.JComboBox.selectingItem, this.javax.swing.JComboBox.!javax.swing.JComponent.inputVerifier, this.javax.swing.JComboBox.!javax.swing.JComponent.listenerList, this.javax.swing.JComboBox.!javax.swing.JComponent.revalidateRunnableScheduled, this.javax.swing.JComboBox.!javax.swing.JComponent.verifyInputWhenFocusTarget, this.javax.swing.JLabel.!javax.swing.JLabel.defaultIcon, this.javax.swing.JLabel.!javax.swing.JLabel.disabledIcon, this.javax.swing.JLabel.!javax.swing.JLabel.disabledIconSet, this.javax.swing.JLabel.!javax.swing.JLabel.horizontalAlignment, this.javax.swing.JLabel.!javax.swing.JLabel.horizontalTextPosition, this.javax.swing.JLabel.!javax.swing.JLabel.iconTextGap, this.javax.swing.JLabel.!javax.swing.JLabel.labelFor, this.javax.swing.JLabel.!javax.swing.JLabel.mnemonic, this.javax.swing.JLabel.!javax.swing.JLabel.mnemonicIndex, this.javax.swing.JLabel.!javax.swing.JLabel.text, this.javax.swing.JLabel.!javax.swing.JLabel.verticalAlignment, this.javax.swing.JLabel.!javax.swing.JLabel.verticalTextPosition } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY, icons$1.length, jp.ac.ritsumei.cs.draw.FigureSelector.colorComboIcons, jp.ac.ritsumei.cs.draw.FigureSelector.shapeComboIcons, jp.ac.ritsumei.cs.draw.FigureSelector.widthComboIcons, this.!java.awt.Component.parent, this.!java.awt.Container.component, this.!java.awt.Container.containerListener, this.!java.awt.Container.eventMask, this.!java.awt.Container.layoutMgr, this.!java.awt.Container.peer, this.cb$0.!javax.swing.JComboBox.dataModel, this.colorCombo, this.javax.swing.JComboBox.!java.lang.Boolean.TRUE, this.javax.swing.JComboBox.!javax.swing.JComboBox.dataModel, this.javax.swing.JComboBox.!javax.swing.JPopupMenu.defaultLWPopupEnabledKey, this.shapeCombo, this.shapeCombo.!javax.swing.JComboBox.dataModel, this.widthCombo }
  13 formalOut D = {  } U = { $_ }
  10+ actualOutByFieldAccess D = { this.!createComboBoxes( ).figure } U = {  }
  10+ actualOutByFieldAccess D = { this.colorCombo } U = {  }
  10+ actualOutByFieldAccess D = { this.shapeCombo } U = {  }
  10+ actualOutByFieldAccess D = { this.widthCombo } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.FigureSelector#colorComboIcons ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.FigureSelector.colorComboIcons } U = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ), jp.ac.ritsumei.cs.draw.FigureSelector.colorComboIcons }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
   4 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) }
   5 receiver D = {  } U = {  }
   6 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
   7 actualIn D = {  } U = { Color.black }
   8 actualOut D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) } U = {  }
   9 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
  10 receiver D = {  } U = {  }
  11 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  12 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) }
  13 receiver D = {  } U = {  }
  14 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  15 actualIn D = {  } U = { Color.yellow }
  16 actualOut D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) } U = {  }
  17 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
  18 receiver D = {  } U = {  }
  19 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  20 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) }
  21 receiver D = {  } U = {  }
  22 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  23 actualIn D = {  } U = { Color.green }
  24 actualOut D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) } U = {  }
  25 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
  26 receiver D = {  } U = {  }
  27 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  28 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) }
  29 receiver D = {  } U = {  }
  30 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  31 actualIn D = {  } U = { Color.red }
  32 actualOut D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) } U = {  }
  33 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
  34 receiver D = {  } U = {  }
  35 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  36 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) }
  37 receiver D = {  } U = {  }
  38 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  39 actualIn D = {  } U = { Color.pink }
  40 actualOut D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) } U = {  }
  41 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
  42 receiver D = {  } U = {  }
  43 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  44 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) }
  45 receiver D = {  } U = {  }
  46 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  47 actualIn D = {  } U = { Color.blue }
  48 actualOut D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) } U = {  }
  49 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
  50 receiver D = {  } U = {  }
  51 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  52 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) }
  53 receiver D = {  } U = {  }
  54 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  55 actualIn D = {  } U = { Color.magenta }
  56 actualOut D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) } U = {  }
  57 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
  58 receiver D = {  } U = {  }
  59 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  60 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) }
  61 receiver D = {  } U = {  }
  62 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  63 actualIn D = {  } U = { Color.orange }
  64 actualOut D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) } U = {  }
  65 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
  66 receiver D = {  } U = {  }
  67 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  68 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) }
  69 receiver D = {  } U = {  }
  70 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  71 actualIn D = {  } U = { Color.gray }
  72 actualOut D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) } U = {  }
  73 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
  74 receiver D = {  } U = {  }
  75 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  76 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) }
  77 receiver D = {  } U = {  }
  78 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  79 actualIn D = {  } U = { Color.darkGray }
  80 actualOut D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) } U = {  }
  81 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
  82 receiver D = {  } U = {  }
  83 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  84 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) }
  85 receiver D = {  } U = {  }
  86 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  87 actualIn D = {  } U = { Color.lightGray }
  88 actualOut D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) } U = {  }
  89 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
  90 receiver D = {  } U = {  }
  91 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  92 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) }
  93 receiver D = {  } U = {  }
  94 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  95 actualIn D = {  } U = { Color.cyan }
  96 actualOut D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) } U = {  }
  97 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
  98 receiver D = {  } U = {  }
  99 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
 100 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) }
 101 receiver D = {  } U = {  }
 102 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
 103 actualIn D = {  } U = { Color.white }
 104 actualOut D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ) } U = {  }
 105 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
   3+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
   6+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color } U = {  }
   6+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth } U = {  }
  11+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
  14+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color } U = {  }
  14+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth } U = {  }
  19+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
  22+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color } U = {  }
  22+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth } U = {  }
  27+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
  30+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color } U = {  }
  30+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth } U = {  }
  35+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
  38+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color } U = {  }
  38+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth } U = {  }
  43+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
  46+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color } U = {  }
  46+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth } U = {  }
  51+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
  54+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color } U = {  }
  54+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth } U = {  }
  59+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
  62+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color } U = {  }
  62+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth } U = {  }
  67+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
  70+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color } U = {  }
  70+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth } U = {  }
  75+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
  78+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color } U = {  }
  78+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth } U = {  }
  83+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
  86+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color } U = {  }
  86+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth } U = {  }
  91+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
  94+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color } U = {  }
  94+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth } U = {  }
  99+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
 102+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color } U = {  }
 102+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.FigureSelector#serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.FigureSelector.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.FigureSelector.serialVersionUID }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.FigureSelector#getLineWidth( ) ]
   1 localDeclaration D = { icon$0 } U = { this.widthCombo.!getSelectedItem( ) }
   2 receiver D = {  } U = { this.widthCombo }
   3 methodCall D = {  } U = { this.widthCombo.!javax.swing.JComboBox.dataModel } TO = javax.swing.JComboBox#getSelectedItem( )
   4 actualOut D = { this.widthCombo.!getSelectedItem( ) } U = { this.widthCombo.!javax.swing.JComboBox.dataModel }
   5 returnSt D = { $_ } U = { icon$0.!getFigure( ).!getOutlineWidth( ) }
   6 receiver D = {  } U = { icon$0.!getFigure( ) }
   7 receiver D = {  } U = { icon$0 }
   8 methodCall D = {  } U = { icon$0.figure, this.figure.color, this.figure.endX, this.figure.endY, this.figure.outlineWidth, this.figure.startX, this.figure.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#getFigure( )
   9 actualOut D = { icon$0.!getFigure( ) } U = { icon$0.figure, this.figure.color, this.figure.endX, this.figure.endY, this.figure.outlineWidth, this.figure.startX, this.figure.startY }
  10 methodCall D = {  } U = { icon$0.!getFigure( ).outlineWidth } TO = jp.ac.ritsumei.cs.draw.Figure#getOutlineWidth( )
  11 actualOut D = { icon$0.!getFigure( ).!getOutlineWidth( ) } U = { icon$0.!getFigure( ).outlineWidth }
  13 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.FigureSelector#widthComboIcons ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.FigureSelector.widthComboIcons } U = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ), jp.ac.ritsumei.cs.draw.FigureSelector.widthComboIcons }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
   4 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Line.!Line( int ) }
   5 receiver D = {  } U = {  }
   6 constructorCall D = {  } U = { Color.black } TO = jp.ac.ritsumei.cs.draw.Line#Line( int )
   7 actualIn D = {  } U = {  }
   8 actualOut D = { jp.ac.ritsumei.cs.draw.Line.!Line( int ) } U = { Color.black }
   9 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
  10 receiver D = {  } U = {  }
  11 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  12 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Line.!Line( int ) }
  13 receiver D = {  } U = {  }
  14 constructorCall D = {  } U = { Color.black } TO = jp.ac.ritsumei.cs.draw.Line#Line( int )
  15 actualIn D = {  } U = {  }
  16 actualOut D = { jp.ac.ritsumei.cs.draw.Line.!Line( int ) } U = { Color.black }
  17 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
  18 receiver D = {  } U = {  }
  19 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  20 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Line.!Line( int ) }
  21 receiver D = {  } U = {  }
  22 constructorCall D = {  } U = { Color.black } TO = jp.ac.ritsumei.cs.draw.Line#Line( int )
  23 actualIn D = {  } U = {  }
  24 actualOut D = { jp.ac.ritsumei.cs.draw.Line.!Line( int ) } U = { Color.black }
  25 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
  26 receiver D = {  } U = {  }
  27 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  28 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.Line.!Line( int ) }
  29 receiver D = {  } U = {  }
  30 constructorCall D = {  } U = { Color.black } TO = jp.ac.ritsumei.cs.draw.Line#Line( int )
  31 actualIn D = {  } U = {  }
  32 actualOut D = { jp.ac.ritsumei.cs.draw.Line.!Line( int ) } U = { Color.black }
  33 actualOut D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
   3+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
   6+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( int ).color } U = {  }
   6+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( int ).outlineWidth } U = {  }
  11+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
  14+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( int ).color } U = {  }
  14+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( int ).outlineWidth } U = {  }
  19+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
  22+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( int ).color } U = {  }
  22+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( int ).outlineWidth } U = {  }
  27+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure } U = {  }
  30+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( int ).color } U = {  }
  30+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.Line.!Line( int ).outlineWidth } U = {  }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.FigureSelector#createComboBoxes( ) ]
   1 localDeclaration D = { shapeLabel$0 } U = { javax.swing.JLabel.!JLabel( java.lang.String ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JLabel#JLabel( java.lang.String )
   4 actualOut D = { javax.swing.JLabel.!JLabel( java.lang.String ), javax.swing.JLabel.!javax.swing.JLabel.defaultIcon, javax.swing.JLabel.!javax.swing.JLabel.disabledIcon, javax.swing.JLabel.!javax.swing.JLabel.disabledIconSet, javax.swing.JLabel.!javax.swing.JLabel.horizontalAlignment, javax.swing.JLabel.!javax.swing.JLabel.horizontalTextPosition, javax.swing.JLabel.!javax.swing.JLabel.iconTextGap, javax.swing.JLabel.!javax.swing.JLabel.labelFor, javax.swing.JLabel.!javax.swing.JLabel.mnemonic, javax.swing.JLabel.!javax.swing.JLabel.mnemonicIndex, javax.swing.JLabel.!javax.swing.JLabel.text, javax.swing.JLabel.!javax.swing.JLabel.verticalAlignment, javax.swing.JLabel.!javax.swing.JLabel.verticalTextPosition } U = {  }
   5 assignment D = {  } U = { this.!add( java.awt.Component ) }
   6 receiver D = {  } U = {  }
   7 methodCall D = {  } U = { shapeLabel$0, this.!java.awt.Component.parent, this.!java.awt.Container.component, this.!java.awt.Container.containerListener, this.!java.awt.Container.eventMask, this.!java.awt.Container.layoutMgr, this.!java.awt.Container.peer } TO = java.awt.Container#add( java.awt.Component )
   8 actualOut D = { this.!add( java.awt.Component ), this.!java.awt.Component.parent } U = { this.!java.awt.Component.parent, this.!java.awt.Container.component, this.!java.awt.Container.containerListener, this.!java.awt.Container.eventMask, this.!java.awt.Container.layoutMgr, this.!java.awt.Container.peer }
   9 assignment D = { this.shapeCombo } U = { javax.swing.JComboBox.!JComboBox( ) }
  10 receiver D = {  } U = {  }
  11 constructorCall D = {  } U = { javax.swing.JComboBox.!java.lang.Boolean.TRUE, javax.swing.JComboBox.!javax.swing.JComboBox.dataModel, javax.swing.JComboBox.!javax.swing.JPopupMenu.defaultLWPopupEnabledKey } TO = javax.swing.JComboBox#JComboBox( )
  12 actualOut D = { javax.swing.JComboBox.!JComboBox( ), javax.swing.JComboBox.!javax.swing.DefaultComboBoxModel.objects, javax.swing.JComboBox.!javax.swing.JComboBox.actionCommand, javax.swing.JComboBox.!javax.swing.JComboBox.dataModel, javax.swing.JComboBox.!javax.swing.JComboBox.firingActionEvent, javax.swing.JComboBox.!javax.swing.JComboBox.isEditable, javax.swing.JComboBox.!javax.swing.JComboBox.keySelectionManager, javax.swing.JComboBox.!javax.swing.JComboBox.lightWeightPopupEnabled, javax.swing.JComboBox.!javax.swing.JComboBox.maximumRowCount, javax.swing.JComboBox.!javax.swing.JComboBox.selectedItemReminder, javax.swing.JComboBox.!javax.swing.JComboBox.selectingItem, javax.swing.JComboBox.!javax.swing.JComponent.inputVerifier, javax.swing.JComboBox.!javax.swing.JComponent.listenerList, javax.swing.JComboBox.!javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JComboBox.!javax.swing.JComponent.verifyInputWhenFocusTarget } U = { javax.swing.JComboBox.!java.lang.Boolean.TRUE, javax.swing.JComboBox.!javax.swing.JComboBox.dataModel, javax.swing.JComboBox.!javax.swing.JPopupMenu.defaultLWPopupEnabledKey }
  13 assignment D = {  } U = { this.!add( java.awt.Component ) }
  14 receiver D = {  } U = {  }
  15 methodCall D = {  } U = { this.!java.awt.Component.parent, this.!java.awt.Container.component, this.!java.awt.Container.containerListener, this.!java.awt.Container.eventMask, this.!java.awt.Container.layoutMgr, this.!java.awt.Container.peer, this.shapeCombo } TO = java.awt.Container#add( java.awt.Component )
  16 actualOut D = { this.!add( java.awt.Component ), this.!java.awt.Component.parent } U = { this.!java.awt.Component.parent, this.!java.awt.Container.component, this.!java.awt.Container.containerListener, this.!java.awt.Container.eventMask, this.!java.awt.Container.layoutMgr, this.!java.awt.Container.peer }
  17 assignment D = {  } U = { this.shapeCombo.!addItem( java.lang.Object ) }
  18 receiver D = {  } U = { this.shapeCombo }
  19 methodCall D = {  } U = { javax.swing.JComboBox.!JComboBox( ).!javax.swing.JComboBox.dataModel, jp.ac.ritsumei.cs.draw.CursorIcon.!CursorIcon( ), this.shapeCombo.!javax.swing.JComboBox.dataModel } TO = javax.swing.JComboBox#addItem( java.lang.Object )
  20 receiver D = {  } U = {  }
  21 constructorCall D = {  } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY } TO = jp.ac.ritsumei.cs.draw.CursorIcon#CursorIcon( )
  22 actualOut D = { jp.ac.ritsumei.cs.draw.CursorIcon.!CursorIcon( ) } U = { f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY }
  23 actualOut D = { this.shapeCombo.!addItem( java.lang.Object ) } U = { javax.swing.JComboBox.!JComboBox( ).!javax.swing.JComboBox.dataModel, this.shapeCombo.!javax.swing.JComboBox.dataModel }
  24 assignment D = {  } U = { this.!addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] ) }
  25 receiver D = {  } U = {  }
  26 methodCall D = {  } U = { icons$1.length, this.cb$0.!javax.swing.JComboBox.dataModel } TO = jp.ac.ritsumei.cs.draw.FigureSelector#addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] )
  27 actualIn D = {  } U = { this.shapeCombo }
  28 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.FigureSelector.shapeComboIcons }
  29 actualOut D = { this.!addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] ) } U = { icons$1.length, this.cb$0.!javax.swing.JComboBox.dataModel }
  30 localDeclaration D = { colorLabel$1 } U = { javax.swing.JLabel.!JLabel( java.lang.String ) }
  31 receiver D = {  } U = {  }
  32 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JLabel#JLabel( java.lang.String )
  33 actualOut D = { javax.swing.JLabel.!JLabel( java.lang.String ), javax.swing.JLabel.!javax.swing.JLabel.defaultIcon, javax.swing.JLabel.!javax.swing.JLabel.disabledIcon, javax.swing.JLabel.!javax.swing.JLabel.disabledIconSet, javax.swing.JLabel.!javax.swing.JLabel.horizontalAlignment, javax.swing.JLabel.!javax.swing.JLabel.horizontalTextPosition, javax.swing.JLabel.!javax.swing.JLabel.iconTextGap, javax.swing.JLabel.!javax.swing.JLabel.labelFor, javax.swing.JLabel.!javax.swing.JLabel.mnemonic, javax.swing.JLabel.!javax.swing.JLabel.mnemonicIndex, javax.swing.JLabel.!javax.swing.JLabel.text, javax.swing.JLabel.!javax.swing.JLabel.verticalAlignment, javax.swing.JLabel.!javax.swing.JLabel.verticalTextPosition } U = {  }
  34 assignment D = {  } U = { this.!add( java.awt.Component ) }
  35 receiver D = {  } U = {  }
  36 methodCall D = {  } U = { colorLabel$1, this.!java.awt.Component.parent, this.!java.awt.Container.component, this.!java.awt.Container.containerListener, this.!java.awt.Container.eventMask, this.!java.awt.Container.layoutMgr, this.!java.awt.Container.peer } TO = java.awt.Container#add( java.awt.Component )
  37 actualOut D = { this.!add( java.awt.Component ), this.!java.awt.Component.parent } U = { this.!java.awt.Component.parent, this.!java.awt.Container.component, this.!java.awt.Container.containerListener, this.!java.awt.Container.eventMask, this.!java.awt.Container.layoutMgr, this.!java.awt.Container.peer }
  38 assignment D = { this.colorCombo } U = { javax.swing.JComboBox.!JComboBox( ) }
  39 receiver D = {  } U = {  }
  40 constructorCall D = {  } U = { javax.swing.JComboBox.!java.lang.Boolean.TRUE, javax.swing.JComboBox.!javax.swing.JComboBox.dataModel, javax.swing.JComboBox.!javax.swing.JPopupMenu.defaultLWPopupEnabledKey } TO = javax.swing.JComboBox#JComboBox( )
  41 actualOut D = { javax.swing.JComboBox.!JComboBox( ), javax.swing.JComboBox.!javax.swing.DefaultComboBoxModel.objects, javax.swing.JComboBox.!javax.swing.JComboBox.actionCommand, javax.swing.JComboBox.!javax.swing.JComboBox.dataModel, javax.swing.JComboBox.!javax.swing.JComboBox.firingActionEvent, javax.swing.JComboBox.!javax.swing.JComboBox.isEditable, javax.swing.JComboBox.!javax.swing.JComboBox.keySelectionManager, javax.swing.JComboBox.!javax.swing.JComboBox.lightWeightPopupEnabled, javax.swing.JComboBox.!javax.swing.JComboBox.maximumRowCount, javax.swing.JComboBox.!javax.swing.JComboBox.selectedItemReminder, javax.swing.JComboBox.!javax.swing.JComboBox.selectingItem, javax.swing.JComboBox.!javax.swing.JComponent.inputVerifier, javax.swing.JComboBox.!javax.swing.JComponent.listenerList, javax.swing.JComboBox.!javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JComboBox.!javax.swing.JComponent.verifyInputWhenFocusTarget } U = { javax.swing.JComboBox.!java.lang.Boolean.TRUE, javax.swing.JComboBox.!javax.swing.JComboBox.dataModel, javax.swing.JComboBox.!javax.swing.JPopupMenu.defaultLWPopupEnabledKey }
  42 assignment D = {  } U = { this.!add( java.awt.Component ) }
  43 receiver D = {  } U = {  }
  44 methodCall D = {  } U = { this.!java.awt.Component.parent, this.!java.awt.Container.component, this.!java.awt.Container.containerListener, this.!java.awt.Container.eventMask, this.!java.awt.Container.layoutMgr, this.!java.awt.Container.peer, this.colorCombo } TO = java.awt.Container#add( java.awt.Component )
  45 actualOut D = { this.!add( java.awt.Component ), this.!java.awt.Component.parent } U = { this.!java.awt.Component.parent, this.!java.awt.Container.component, this.!java.awt.Container.containerListener, this.!java.awt.Container.eventMask, this.!java.awt.Container.layoutMgr, this.!java.awt.Container.peer }
  46 assignment D = {  } U = { this.!addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] ) }
  47 receiver D = {  } U = {  }
  48 methodCall D = {  } U = { icons$1.length, this.cb$0.!javax.swing.JComboBox.dataModel } TO = jp.ac.ritsumei.cs.draw.FigureSelector#addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] )
  49 actualIn D = {  } U = { this.colorCombo }
  50 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.FigureSelector.colorComboIcons }
  51 actualOut D = { this.!addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] ) } U = { icons$1.length, this.cb$0.!javax.swing.JComboBox.dataModel }
  52 localDeclaration D = { lineWidthLabel$2 } U = { javax.swing.JLabel.!JLabel( java.lang.String ) }
  53 receiver D = {  } U = {  }
  54 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JLabel#JLabel( java.lang.String )
  55 actualOut D = { javax.swing.JLabel.!JLabel( java.lang.String ), javax.swing.JLabel.!javax.swing.JLabel.defaultIcon, javax.swing.JLabel.!javax.swing.JLabel.disabledIcon, javax.swing.JLabel.!javax.swing.JLabel.disabledIconSet, javax.swing.JLabel.!javax.swing.JLabel.horizontalAlignment, javax.swing.JLabel.!javax.swing.JLabel.horizontalTextPosition, javax.swing.JLabel.!javax.swing.JLabel.iconTextGap, javax.swing.JLabel.!javax.swing.JLabel.labelFor, javax.swing.JLabel.!javax.swing.JLabel.mnemonic, javax.swing.JLabel.!javax.swing.JLabel.mnemonicIndex, javax.swing.JLabel.!javax.swing.JLabel.text, javax.swing.JLabel.!javax.swing.JLabel.verticalAlignment, javax.swing.JLabel.!javax.swing.JLabel.verticalTextPosition } U = {  }
  56 assignment D = {  } U = { this.!add( java.awt.Component ) }
  57 receiver D = {  } U = {  }
  58 methodCall D = {  } U = { lineWidthLabel$2, this.!java.awt.Component.parent, this.!java.awt.Container.component, this.!java.awt.Container.containerListener, this.!java.awt.Container.eventMask, this.!java.awt.Container.layoutMgr, this.!java.awt.Container.peer } TO = java.awt.Container#add( java.awt.Component )
  59 actualOut D = { this.!add( java.awt.Component ), this.!java.awt.Component.parent } U = { this.!java.awt.Component.parent, this.!java.awt.Container.component, this.!java.awt.Container.containerListener, this.!java.awt.Container.eventMask, this.!java.awt.Container.layoutMgr, this.!java.awt.Container.peer }
  60 assignment D = { this.widthCombo } U = { javax.swing.JComboBox.!JComboBox( ) }
  61 receiver D = {  } U = {  }
  62 constructorCall D = {  } U = { javax.swing.JComboBox.!java.lang.Boolean.TRUE, javax.swing.JComboBox.!javax.swing.JComboBox.dataModel, javax.swing.JComboBox.!javax.swing.JPopupMenu.defaultLWPopupEnabledKey } TO = javax.swing.JComboBox#JComboBox( )
  63 actualOut D = { javax.swing.JComboBox.!JComboBox( ), javax.swing.JComboBox.!javax.swing.DefaultComboBoxModel.objects, javax.swing.JComboBox.!javax.swing.JComboBox.actionCommand, javax.swing.JComboBox.!javax.swing.JComboBox.dataModel, javax.swing.JComboBox.!javax.swing.JComboBox.firingActionEvent, javax.swing.JComboBox.!javax.swing.JComboBox.isEditable, javax.swing.JComboBox.!javax.swing.JComboBox.keySelectionManager, javax.swing.JComboBox.!javax.swing.JComboBox.lightWeightPopupEnabled, javax.swing.JComboBox.!javax.swing.JComboBox.maximumRowCount, javax.swing.JComboBox.!javax.swing.JComboBox.selectedItemReminder, javax.swing.JComboBox.!javax.swing.JComboBox.selectingItem, javax.swing.JComboBox.!javax.swing.JComponent.inputVerifier, javax.swing.JComboBox.!javax.swing.JComponent.listenerList, javax.swing.JComboBox.!javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JComboBox.!javax.swing.JComponent.verifyInputWhenFocusTarget } U = { javax.swing.JComboBox.!java.lang.Boolean.TRUE, javax.swing.JComboBox.!javax.swing.JComboBox.dataModel, javax.swing.JComboBox.!javax.swing.JPopupMenu.defaultLWPopupEnabledKey }
  64 assignment D = {  } U = { this.!add( java.awt.Component ) }
  65 receiver D = {  } U = {  }
  66 methodCall D = {  } U = { this.!java.awt.Component.parent, this.!java.awt.Container.component, this.!java.awt.Container.containerListener, this.!java.awt.Container.eventMask, this.!java.awt.Container.layoutMgr, this.!java.awt.Container.peer, this.widthCombo } TO = java.awt.Container#add( java.awt.Component )
  67 actualOut D = { this.!add( java.awt.Component ), this.!java.awt.Component.parent } U = { this.!java.awt.Component.parent, this.!java.awt.Container.component, this.!java.awt.Container.containerListener, this.!java.awt.Container.eventMask, this.!java.awt.Container.layoutMgr, this.!java.awt.Container.peer }
  68 assignment D = {  } U = { this.!addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] ) }
  69 receiver D = {  } U = {  }
  70 methodCall D = {  } U = { icons$1.length, this.cb$0.!javax.swing.JComboBox.dataModel } TO = jp.ac.ritsumei.cs.draw.FigureSelector#addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] )
  71 actualIn D = {  } U = { this.widthCombo }
  72 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.FigureSelector.widthComboIcons }
  73 actualOut D = { this.!addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] ) } U = { icons$1.length, this.cb$0.!javax.swing.JComboBox.dataModel }
  75 formalOut D = {  } U = { $_ }
  21+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.CursorIcon.!CursorIcon( ).figure } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.FigureSelector#colorCombo ]
   1 fieldDeclaration D = { this.colorCombo } U = { this.colorCombo }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.FigureSelector#shapeCombo ]
   1 fieldDeclaration D = { this.shapeCombo } U = { this.shapeCombo }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.FigureSelector#addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] ) ]
   1 formalIn D = { cb$0 } U = {  }
   2 formalIn D = { icons$1 } U = {  }
   3 localDeclaration D = { i$2 } U = {  }
   4 forSt D = {  } U = { i$2, icons$1, icons$1.length }
   5 assignment D = {  } U = { cb$0.!addItem( java.lang.Object ) }
   6 receiver D = {  } U = { cb$0 }
   7 methodCall D = {  } U = { cb$0.!javax.swing.JComboBox.dataModel, i$2, icons$1 } TO = javax.swing.JComboBox#addItem( java.lang.Object )
   8 actualOut D = { cb$0.!addItem( java.lang.Object ) } U = { cb$0.!javax.swing.JComboBox.dataModel }
   9 assignment D = { i$2 } U = { i$2 }
  11 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.FigureSelector#getShape( ) ]
   1 localDeclaration D = { icon$0 } U = { this.shapeCombo.!getSelectedItem( ) }
   2 receiver D = {  } U = { this.shapeCombo }
   3 methodCall D = {  } U = { this.shapeCombo.!javax.swing.JComboBox.dataModel } TO = javax.swing.JComboBox#getSelectedItem( )
   4 actualOut D = { this.shapeCombo.!getSelectedItem( ) } U = { this.shapeCombo.!javax.swing.JComboBox.dataModel }
   5 returnSt D = { $_ } U = { icon$0.!getFigure( ) }
   6 receiver D = {  } U = { icon$0 }
   7 methodCall D = {  } U = { icon$0.figure, this.figure.color, this.figure.endX, this.figure.endY, this.figure.outlineWidth, this.figure.startX, this.figure.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#getFigure( )
   8 actualOut D = { icon$0.!getFigure( ) } U = { icon$0.figure, this.figure.color, this.figure.endX, this.figure.endY, this.figure.outlineWidth, this.figure.startX, this.figure.startY }
  10 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.FigureSelector#isGrabMode( ) ]
   1 returnSt D = { $_ } U = { this.!getShape( ) }
   2 receiver D = {  } U = {  }
   3 methodCall D = {  } U = { this.figure.color, this.figure.endX, this.figure.endY, this.figure.outlineWidth, this.figure.startX, this.figure.startY, this.icon$0.figure, this.shapeCombo, this.shapeCombo.!javax.swing.JComboBox.dataModel } TO = jp.ac.ritsumei.cs.draw.FigureSelector#getShape( )
   4 actualOut D = { this.!getShape( ) } U = { this.figure.color, this.figure.endX, this.figure.endY, this.figure.outlineWidth, this.figure.startX, this.figure.startY, this.icon$0.figure, this.shapeCombo, this.shapeCombo.!javax.swing.JComboBox.dataModel }
   6 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.FigureSelector#widthCombo ]
   1 fieldDeclaration D = { this.widthCombo } U = { this.widthCombo }
--
   0: getColor( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   13 trueControlDependence
  13:    1 ->    7 declaration
  14:    1 ->    7 loopIndependentDefUseDependence icon$0
  15:    4 ->    1 loopIndependentDefUseDependence this.colorCombo.!getSelectedItem( )
  16:    5 ->   13 loopIndependentDefUseDependence $_
  17:    9 ->    6 loopIndependentDefUseDependence icon$0.!getFigure( )
  18:   11 ->    5 loopIndependentDefUseDependence icon$0.!getFigure( ).!getColor( )
--
   0: shapeComboIcons
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    3+ trueControlDependence
   5:    0 ->    4 trueControlDependence
   6:    0 ->    5 trueControlDependence
   7:    0 ->    6 trueControlDependence
   8:    0 ->    6+ trueControlDependence
   9:    0 ->    6+ trueControlDependence
  10:    0 ->    7 trueControlDependence
  11:    0 ->    8 trueControlDependence
  12:    0 ->    9 trueControlDependence
  13:    0 ->   10 trueControlDependence
  14:    0 ->   10+ trueControlDependence
  15:    0 ->   11 trueControlDependence
  16:    0 ->   12 trueControlDependence
  17:    0 ->   13 trueControlDependence
  18:    0 ->   13+ trueControlDependence
  19:    0 ->   13+ trueControlDependence
  20:    0 ->   14 trueControlDependence
  21:    0 ->   15 trueControlDependence
  22:    0 ->   16 trueControlDependence
  23:    0 ->   17 trueControlDependence
  24:    0 ->   17+ trueControlDependence
  25:    0 ->   18 trueControlDependence
  26:    0 ->   19 trueControlDependence
  27:    0 ->   20 trueControlDependence
  28:    0 ->   20+ trueControlDependence
  29:    0 ->   20+ trueControlDependence
  30:    0 ->   21 trueControlDependence
  31:    0 ->   22 trueControlDependence
  32:    0 ->   23 trueControlDependence
  33:    0 ->   24 trueControlDependence
  34:    0 ->   24+ trueControlDependence
  35:    0 ->   25 trueControlDependence
  36:    0 ->   26 trueControlDependence
  37:    0 ->   27 trueControlDependence
  38:    0 ->   27+ trueControlDependence
  39:    0 ->   27+ trueControlDependence
  40:    0 ->   28 trueControlDependence
  41:    0 ->   29 trueControlDependence
  42:    0 ->   30 trueControlDependence
  43:    0 ->   31 trueControlDependence
  44:    0 ->   31+ trueControlDependence
  45:    0 ->   32 trueControlDependence
  46:    0 ->   33 trueControlDependence
  47:    0 ->   34 trueControlDependence
  48:    0 ->   34+ trueControlDependence
  49:    0 ->   34+ trueControlDependence
  50:    0 ->   35 trueControlDependence
  51:    0 ->   36 trueControlDependence
  52:    3+ ->   10+ outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure
  53:    7 ->    4 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Line.!Line( )
  54:    8 ->   15 outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  55:   10+ ->   17+ outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure
  56:   14 ->   11 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Rect.!Rect( )
  57:   15 ->   22 outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  58:   17+ ->   24+ outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure
  59:   21 ->   18 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.FilledRect.!FilledRect( )
  60:   22 ->   29 outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  61:   24+ ->   31+ outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure
  62:   28 ->   25 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Oval.!Oval( )
  63:   29 ->   36 outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  64:   35 ->   32 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.FilledOval.!FilledOval( )
  65:   36 ->    1 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
--
   0: createFigure( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->   21 trueControlDependence
   7:    1 ->    5 declaration
   8:    1 ->    5 loopIndependentDefUseDependence shape$0
   9:    1 ->    7 declaration
  10:    1 ->    7 loopIndependentDefUseDependence shape$0
  11:    4 ->    1 loopIndependentDefUseDependence this.!getShape( )
  12:    5 ->    6 trueControlDependence
  13:    5 ->    7 trueControlDependence
  14:    5 ->    8 trueControlDependence
  15:    5 ->    9 trueControlDependence
  16:    5 ->   10 trueControlDependence
  17:    5 ->   11 trueControlDependence
  18:    5 ->   12 trueControlDependence
  19:    5 ->   13 trueControlDependence
  20:    5 ->   14 trueControlDependence
  21:    5 ->   15 trueControlDependence
  22:    5 ->   16 trueControlDependence
  23:    5 ->   17 trueControlDependence
  24:    5 ->   19 falseControlDependence
  25:    6 ->   19 fallThroughControlDependence
  26:    6 ->   21 loopIndependentDefUseDependence $_
  27:   12 ->    9 loopIndependentDefUseDependence this.!getColor( )
  28:   16 ->   13 loopIndependentDefUseDependence this.!getLineWidth( )
  29:   17 ->    6 loopIndependentDefUseDependence shape$0.!create( java.awt.Color float )
  30:   19 ->   21 loopIndependentDefUseDependence $_
--
   0: FigureSelector( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   10+ trueControlDependence
  12:    0 ->   10+ trueControlDependence
  13:    0 ->   10+ trueControlDependence
  14:    0 ->   10+ trueControlDependence
  15:    0 ->   11 trueControlDependence
  16:    0 ->   13 trueControlDependence
  17:    6 ->    3 loopIndependentDefUseDependence java.awt.FlowLayout.!FlowLayout( int )
  18:    7 ->    1 loopIndependentDefUseDependence this.!setLayout( java.awt.LayoutManager )
  19:    7 ->   10 loopIndependentDefUseDependence this.!java.awt.Container.layoutMgr
  20:    7 ->   11 loopIndependentDefUseDependence this.!java.awt.Container.layoutMgr
  21:   10+ ->   11 loopIndependentDefUseDependence this.colorCombo
  22:   10+ ->   11 loopIndependentDefUseDependence this.shapeCombo
  23:   10+ ->   11 loopIndependentDefUseDependence this.widthCombo
  24:   11 ->    8 loopIndependentDefUseDependence this.!createComboBoxes( )
--
   0: colorComboIcons
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    3+ trueControlDependence
   5:    0 ->    4 trueControlDependence
   6:    0 ->    5 trueControlDependence
   7:    0 ->    6 trueControlDependence
   8:    0 ->    6+ trueControlDependence
   9:    0 ->    6+ trueControlDependence
  10:    0 ->    7 trueControlDependence
  11:    0 ->    8 trueControlDependence
  12:    0 ->    9 trueControlDependence
  13:    0 ->   10 trueControlDependence
  14:    0 ->   11 trueControlDependence
  15:    0 ->   11+ trueControlDependence
  16:    0 ->   12 trueControlDependence
  17:    0 ->   13 trueControlDependence
  18:    0 ->   14 trueControlDependence
  19:    0 ->   14+ trueControlDependence
  20:    0 ->   14+ trueControlDependence
  21:    0 ->   15 trueControlDependence
  22:    0 ->   16 trueControlDependence
  23:    0 ->   17 trueControlDependence
  24:    0 ->   18 trueControlDependence
  25:    0 ->   19 trueControlDependence
  26:    0 ->   19+ trueControlDependence
  27:    0 ->   20 trueControlDependence
  28:    0 ->   21 trueControlDependence
  29:    0 ->   22 trueControlDependence
  30:    0 ->   22+ trueControlDependence
  31:    0 ->   22+ trueControlDependence
  32:    0 ->   23 trueControlDependence
  33:    0 ->   24 trueControlDependence
  34:    0 ->   25 trueControlDependence
  35:    0 ->   26 trueControlDependence
  36:    0 ->   27 trueControlDependence
  37:    0 ->   27+ trueControlDependence
  38:    0 ->   28 trueControlDependence
  39:    0 ->   29 trueControlDependence
  40:    0 ->   30 trueControlDependence
  41:    0 ->   30+ trueControlDependence
  42:    0 ->   30+ trueControlDependence
  43:    0 ->   31 trueControlDependence
  44:    0 ->   32 trueControlDependence
  45:    0 ->   33 trueControlDependence
  46:    0 ->   34 trueControlDependence
  47:    0 ->   35 trueControlDependence
  48:    0 ->   35+ trueControlDependence
  49:    0 ->   36 trueControlDependence
  50:    0 ->   37 trueControlDependence
  51:    0 ->   38 trueControlDependence
  52:    0 ->   38+ trueControlDependence
  53:    0 ->   38+ trueControlDependence
  54:    0 ->   39 trueControlDependence
  55:    0 ->   40 trueControlDependence
  56:    0 ->   41 trueControlDependence
  57:    0 ->   42 trueControlDependence
  58:    0 ->   43 trueControlDependence
  59:    0 ->   43+ trueControlDependence
  60:    0 ->   44 trueControlDependence
  61:    0 ->   45 trueControlDependence
  62:    0 ->   46 trueControlDependence
  63:    0 ->   46+ trueControlDependence
  64:    0 ->   46+ trueControlDependence
  65:    0 ->   47 trueControlDependence
  66:    0 ->   48 trueControlDependence
  67:    0 ->   49 trueControlDependence
  68:    0 ->   50 trueControlDependence
  69:    0 ->   51 trueControlDependence
  70:    0 ->   51+ trueControlDependence
  71:    0 ->   52 trueControlDependence
  72:    0 ->   53 trueControlDependence
  73:    0 ->   54 trueControlDependence
  74:    0 ->   54+ trueControlDependence
  75:    0 ->   54+ trueControlDependence
  76:    0 ->   55 trueControlDependence
  77:    0 ->   56 trueControlDependence
  78:    0 ->   57 trueControlDependence
  79:    0 ->   58 trueControlDependence
  80:    0 ->   59 trueControlDependence
  81:    0 ->   59+ trueControlDependence
  82:    0 ->   60 trueControlDependence
  83:    0 ->   61 trueControlDependence
  84:    0 ->   62 trueControlDependence
  85:    0 ->   62+ trueControlDependence
  86:    0 ->   62+ trueControlDependence
  87:    0 ->   63 trueControlDependence
  88:    0 ->   64 trueControlDependence
  89:    0 ->   65 trueControlDependence
  90:    0 ->   66 trueControlDependence
  91:    0 ->   67 trueControlDependence
  92:    0 ->   67+ trueControlDependence
  93:    0 ->   68 trueControlDependence
  94:    0 ->   69 trueControlDependence
  95:    0 ->   70 trueControlDependence
  96:    0 ->   70+ trueControlDependence
  97:    0 ->   70+ trueControlDependence
  98:    0 ->   71 trueControlDependence
  99:    0 ->   72 trueControlDependence
 100:    0 ->   73 trueControlDependence
 101:    0 ->   74 trueControlDependence
 102:    0 ->   75 trueControlDependence
 103:    0 ->   75+ trueControlDependence
 104:    0 ->   76 trueControlDependence
 105:    0 ->   77 trueControlDependence
 106:    0 ->   78 trueControlDependence
 107:    0 ->   78+ trueControlDependence
 108:    0 ->   78+ trueControlDependence
 109:    0 ->   79 trueControlDependence
 110:    0 ->   80 trueControlDependence
 111:    0 ->   81 trueControlDependence
 112:    0 ->   82 trueControlDependence
 113:    0 ->   83 trueControlDependence
 114:    0 ->   83+ trueControlDependence
 115:    0 ->   84 trueControlDependence
 116:    0 ->   85 trueControlDependence
 117:    0 ->   86 trueControlDependence
 118:    0 ->   86+ trueControlDependence
 119:    0 ->   86+ trueControlDependence
 120:    0 ->   87 trueControlDependence
 121:    0 ->   88 trueControlDependence
 122:    0 ->   89 trueControlDependence
 123:    0 ->   90 trueControlDependence
 124:    0 ->   91 trueControlDependence
 125:    0 ->   91+ trueControlDependence
 126:    0 ->   92 trueControlDependence
 127:    0 ->   93 trueControlDependence
 128:    0 ->   94 trueControlDependence
 129:    0 ->   94+ trueControlDependence
 130:    0 ->   94+ trueControlDependence
 131:    0 ->   95 trueControlDependence
 132:    0 ->   96 trueControlDependence
 133:    0 ->   97 trueControlDependence
 134:    0 ->   98 trueControlDependence
 135:    0 ->   99 trueControlDependence
 136:    0 ->   99+ trueControlDependence
 137:    0 ->  100 trueControlDependence
 138:    0 ->  101 trueControlDependence
 139:    0 ->  102 trueControlDependence
 140:    0 ->  102+ trueControlDependence
 141:    0 ->  102+ trueControlDependence
 142:    0 ->  103 trueControlDependence
 143:    0 ->  104 trueControlDependence
 144:    0 ->  105 trueControlDependence
 145:    3+ ->   11+ outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure
 146:    6+ ->   14+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color
 147:    6+ ->   14+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth
 148:    8 ->    4 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 149:    8 ->   16 outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 150:    9 ->   17 outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
 151:   11+ ->   19+ outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure
 152:   14+ ->   22+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color
 153:   14+ ->   22+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth
 154:   16 ->   12 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 155:   16 ->   24 outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 156:   17 ->   25 outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
 157:   19+ ->   27+ outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure
 158:   22+ ->   30+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color
 159:   22+ ->   30+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth
 160:   24 ->   20 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 161:   24 ->   32 outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 162:   25 ->   33 outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
 163:   27+ ->   35+ outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure
 164:   30+ ->   38+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color
 165:   30+ ->   38+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth
 166:   32 ->   28 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 167:   32 ->   40 outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 168:   33 ->   41 outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
 169:   35+ ->   43+ outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure
 170:   38+ ->   46+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color
 171:   38+ ->   46+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth
 172:   40 ->   36 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 173:   40 ->   48 outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 174:   41 ->   49 outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
 175:   43+ ->   51+ outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure
 176:   46+ ->   54+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color
 177:   46+ ->   54+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth
 178:   48 ->   44 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 179:   48 ->   56 outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 180:   49 ->   57 outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
 181:   51+ ->   59+ outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure
 182:   54+ ->   62+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color
 183:   54+ ->   62+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth
 184:   56 ->   52 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 185:   56 ->   64 outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 186:   57 ->   65 outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
 187:   59+ ->   67+ outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure
 188:   62+ ->   70+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color
 189:   62+ ->   70+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth
 190:   64 ->   60 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 191:   64 ->   72 outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 192:   65 ->   73 outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
 193:   67+ ->   75+ outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure
 194:   70+ ->   78+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color
 195:   70+ ->   78+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth
 196:   72 ->   68 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 197:   72 ->   80 outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 198:   73 ->   81 outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
 199:   75+ ->   83+ outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure
 200:   78+ ->   86+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color
 201:   78+ ->   86+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth
 202:   80 ->   76 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 203:   80 ->   88 outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 204:   81 ->   89 outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
 205:   83+ ->   91+ outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure
 206:   86+ ->   94+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color
 207:   86+ ->   94+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth
 208:   88 ->   84 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 209:   88 ->   96 outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 210:   89 ->   97 outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
 211:   91+ ->   99+ outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure
 212:   94+ ->  102+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).color
 213:   94+ ->  102+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color ).outlineWidth
 214:   96 ->   92 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 215:   96 ->  104 outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 216:   97 ->  105 outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
 217:  104 ->  100 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Line.!Line( java.awt.Color )
 218:  105 ->    1 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
--
   0: serialVersionUID
   1:    0 ->    1 trueControlDependence
--
   0: getLineWidth( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   13 trueControlDependence
  13:    1 ->    7 declaration
  14:    1 ->    7 loopIndependentDefUseDependence icon$0
  15:    4 ->    1 loopIndependentDefUseDependence this.widthCombo.!getSelectedItem( )
  16:    5 ->   13 loopIndependentDefUseDependence $_
  17:    9 ->    6 loopIndependentDefUseDependence icon$0.!getFigure( )
  18:   11 ->    5 loopIndependentDefUseDependence icon$0.!getFigure( ).!getOutlineWidth( )
--
   0: widthComboIcons
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    3+ trueControlDependence
   5:    0 ->    4 trueControlDependence
   6:    0 ->    5 trueControlDependence
   7:    0 ->    6 trueControlDependence
   8:    0 ->    6+ trueControlDependence
   9:    0 ->    6+ trueControlDependence
  10:    0 ->    7 trueControlDependence
  11:    0 ->    8 trueControlDependence
  12:    0 ->    9 trueControlDependence
  13:    0 ->   10 trueControlDependence
  14:    0 ->   11 trueControlDependence
  15:    0 ->   11+ trueControlDependence
  16:    0 ->   12 trueControlDependence
  17:    0 ->   13 trueControlDependence
  18:    0 ->   14 trueControlDependence
  19:    0 ->   14+ trueControlDependence
  20:    0 ->   14+ trueControlDependence
  21:    0 ->   15 trueControlDependence
  22:    0 ->   16 trueControlDependence
  23:    0 ->   17 trueControlDependence
  24:    0 ->   18 trueControlDependence
  25:    0 ->   19 trueControlDependence
  26:    0 ->   19+ trueControlDependence
  27:    0 ->   20 trueControlDependence
  28:    0 ->   21 trueControlDependence
  29:    0 ->   22 trueControlDependence
  30:    0 ->   22+ trueControlDependence
  31:    0 ->   22+ trueControlDependence
  32:    0 ->   23 trueControlDependence
  33:    0 ->   24 trueControlDependence
  34:    0 ->   25 trueControlDependence
  35:    0 ->   26 trueControlDependence
  36:    0 ->   27 trueControlDependence
  37:    0 ->   27+ trueControlDependence
  38:    0 ->   28 trueControlDependence
  39:    0 ->   29 trueControlDependence
  40:    0 ->   30 trueControlDependence
  41:    0 ->   30+ trueControlDependence
  42:    0 ->   30+ trueControlDependence
  43:    0 ->   31 trueControlDependence
  44:    0 ->   32 trueControlDependence
  45:    0 ->   33 trueControlDependence
  46:    3+ ->   11+ outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure
  47:    6+ ->   14+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( int ).color
  48:    6+ ->   14+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( int ).outlineWidth
  49:    8 ->    4 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Line.!Line( int )
  50:    8 ->   16 outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( int )
  51:    9 ->   17 outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  52:   11+ ->   19+ outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure
  53:   14+ ->   22+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( int ).color
  54:   14+ ->   22+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( int ).outlineWidth
  55:   16 ->   12 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Line.!Line( int )
  56:   16 ->   24 outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( int )
  57:   17 ->   25 outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  58:   19+ ->   27+ outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure ).figure
  59:   22+ ->   30+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( int ).color
  60:   22+ ->   30+ outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( int ).outlineWidth
  61:   24 ->   20 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Line.!Line( int )
  62:   24 ->   32 outputDependence jp.ac.ritsumei.cs.draw.Line.!Line( int )
  63:   25 ->   33 outputDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  64:   32 ->   28 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.Line.!Line( int )
  65:   33 ->    1 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.FigureIcon.!FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
--
   0: createComboBoxes( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   17 trueControlDependence
  18:    0 ->   18 trueControlDependence
  19:    0 ->   19 trueControlDependence
  20:    0 ->   20 trueControlDependence
  21:    0 ->   21 trueControlDependence
  22:    0 ->   21+ trueControlDependence
  23:    0 ->   22 trueControlDependence
  24:    0 ->   23 trueControlDependence
  25:    0 ->   24 trueControlDependence
  26:    0 ->   25 trueControlDependence
  27:    0 ->   26 trueControlDependence
  28:    0 ->   27 trueControlDependence
  29:    0 ->   28 trueControlDependence
  30:    0 ->   29 trueControlDependence
  31:    0 ->   30 trueControlDependence
  32:    0 ->   31 trueControlDependence
  33:    0 ->   32 trueControlDependence
  34:    0 ->   33 trueControlDependence
  35:    0 ->   34 trueControlDependence
  36:    0 ->   35 trueControlDependence
  37:    0 ->   36 trueControlDependence
  38:    0 ->   37 trueControlDependence
  39:    0 ->   38 trueControlDependence
  40:    0 ->   39 trueControlDependence
  41:    0 ->   40 trueControlDependence
  42:    0 ->   41 trueControlDependence
  43:    0 ->   42 trueControlDependence
  44:    0 ->   43 trueControlDependence
  45:    0 ->   44 trueControlDependence
  46:    0 ->   45 trueControlDependence
  47:    0 ->   46 trueControlDependence
  48:    0 ->   47 trueControlDependence
  49:    0 ->   48 trueControlDependence
  50:    0 ->   49 trueControlDependence
  51:    0 ->   50 trueControlDependence
  52:    0 ->   51 trueControlDependence
  53:    0 ->   52 trueControlDependence
  54:    0 ->   53 trueControlDependence
  55:    0 ->   54 trueControlDependence
  56:    0 ->   55 trueControlDependence
  57:    0 ->   56 trueControlDependence
  58:    0 ->   57 trueControlDependence
  59:    0 ->   58 trueControlDependence
  60:    0 ->   59 trueControlDependence
  61:    0 ->   60 trueControlDependence
  62:    0 ->   61 trueControlDependence
  63:    0 ->   62 trueControlDependence
  64:    0 ->   63 trueControlDependence
  65:    0 ->   64 trueControlDependence
  66:    0 ->   65 trueControlDependence
  67:    0 ->   66 trueControlDependence
  68:    0 ->   67 trueControlDependence
  69:    0 ->   68 trueControlDependence
  70:    0 ->   69 trueControlDependence
  71:    0 ->   70 trueControlDependence
  72:    0 ->   71 trueControlDependence
  73:    0 ->   72 trueControlDependence
  74:    0 ->   73 trueControlDependence
  75:    0 ->   75 trueControlDependence
  76:    1 ->    7 declaration
  77:    1 ->    7 loopIndependentDefUseDependence shapeLabel$0
  78:    4 ->    1 loopIndependentDefUseDependence javax.swing.JLabel.!JLabel( java.lang.String )
  79:    4 ->   33 outputDependence javax.swing.JLabel.!JLabel( java.lang.String )
  80:    4 ->   33 outputDependence javax.swing.JLabel.!javax.swing.JLabel.defaultIcon
  81:    4 ->   33 outputDependence javax.swing.JLabel.!javax.swing.JLabel.disabledIcon
  82:    4 ->   33 outputDependence javax.swing.JLabel.!javax.swing.JLabel.disabledIconSet
  83:    4 ->   33 outputDependence javax.swing.JLabel.!javax.swing.JLabel.horizontalAlignment
  84:    4 ->   33 outputDependence javax.swing.JLabel.!javax.swing.JLabel.horizontalTextPosition
  85:    4 ->   33 outputDependence javax.swing.JLabel.!javax.swing.JLabel.iconTextGap
  86:    4 ->   33 outputDependence javax.swing.JLabel.!javax.swing.JLabel.labelFor
  87:    4 ->   33 outputDependence javax.swing.JLabel.!javax.swing.JLabel.mnemonic
  88:    4 ->   33 outputDependence javax.swing.JLabel.!javax.swing.JLabel.mnemonicIndex
  89:    4 ->   33 outputDependence javax.swing.JLabel.!javax.swing.JLabel.text
  90:    4 ->   33 outputDependence javax.swing.JLabel.!javax.swing.JLabel.verticalAlignment
  91:    4 ->   33 outputDependence javax.swing.JLabel.!javax.swing.JLabel.verticalTextPosition
  92:    8 ->    5 loopIndependentDefUseDependence this.!add( java.awt.Component )
  93:    8 ->   15 loopIndependentDefUseDependence this.!java.awt.Component.parent
  94:    8 ->   16 loopIndependentDefUseDependence this.!java.awt.Component.parent
  95:    8 ->   16 outputDependence this.!add( java.awt.Component )
  96:    9 ->   15 loopIndependentDefUseDependence this.shapeCombo
  97:    9 ->   18 loopIndependentDefUseDependence this.shapeCombo
  98:    9 ->   27 loopIndependentDefUseDependence this.shapeCombo
  99:   12 ->    9 loopIndependentDefUseDependence javax.swing.JComboBox.!JComboBox( )
 100:   12 ->   40 loopIndependentDefUseDependence javax.swing.JComboBox.!javax.swing.JComboBox.dataModel
 101:   12 ->   41 loopIndependentDefUseDependence javax.swing.JComboBox.!javax.swing.JComboBox.dataModel
 102:   12 ->   41 outputDependence javax.swing.JComboBox.!JComboBox( )
 103:   12 ->   41 outputDependence javax.swing.JComboBox.!javax.swing.DefaultComboBoxModel.objects
 104:   12 ->   41 outputDependence javax.swing.JComboBox.!javax.swing.JComboBox.actionCommand
 105:   12 ->   41 outputDependence javax.swing.JComboBox.!javax.swing.JComboBox.firingActionEvent
 106:   12 ->   41 outputDependence javax.swing.JComboBox.!javax.swing.JComboBox.isEditable
 107:   12 ->   41 outputDependence javax.swing.JComboBox.!javax.swing.JComboBox.keySelectionManager
 108:   12 ->   41 outputDependence javax.swing.JComboBox.!javax.swing.JComboBox.lightWeightPopupEnabled
 109:   12 ->   41 outputDependence javax.swing.JComboBox.!javax.swing.JComboBox.maximumRowCount
 110:   12 ->   41 outputDependence javax.swing.JComboBox.!javax.swing.JComboBox.selectedItemReminder
 111:   12 ->   41 outputDependence javax.swing.JComboBox.!javax.swing.JComboBox.selectingItem
 112:   12 ->   41 outputDependence javax.swing.JComboBox.!javax.swing.JComponent.inputVerifier
 113:   12 ->   41 outputDependence javax.swing.JComboBox.!javax.swing.JComponent.listenerList
 114:   12 ->   41 outputDependence javax.swing.JComboBox.!javax.swing.JComponent.revalidateRunnableScheduled
 115:   12 ->   41 outputDependence javax.swing.JComboBox.!javax.swing.JComponent.verifyInputWhenFocusTarget
 116:   16 ->   13 loopIndependentDefUseDependence this.!add( java.awt.Component )
 117:   16 ->   36 loopIndependentDefUseDependence this.!java.awt.Component.parent
 118:   16 ->   37 loopIndependentDefUseDependence this.!java.awt.Component.parent
 119:   16 ->   37 outputDependence this.!add( java.awt.Component )
 120:   22 ->   19 loopIndependentDefUseDependence jp.ac.ritsumei.cs.draw.CursorIcon.!CursorIcon( )
 121:   23 ->   17 loopIndependentDefUseDependence this.shapeCombo.!addItem( java.lang.Object )
 122:   29 ->   24 loopIndependentDefUseDependence this.!addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] )
 123:   29 ->   51 outputDependence this.!addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] )
 124:   30 ->   36 declaration
 125:   30 ->   36 loopIndependentDefUseDependence colorLabel$1
 126:   33 ->   30 loopIndependentDefUseDependence javax.swing.JLabel.!JLabel( java.lang.String )
 127:   33 ->   55 outputDependence javax.swing.JLabel.!JLabel( java.lang.String )
 128:   33 ->   55 outputDependence javax.swing.JLabel.!javax.swing.JLabel.defaultIcon
 129:   33 ->   55 outputDependence javax.swing.JLabel.!javax.swing.JLabel.disabledIcon
 130:   33 ->   55 outputDependence javax.swing.JLabel.!javax.swing.JLabel.disabledIconSet
 131:   33 ->   55 outputDependence javax.swing.JLabel.!javax.swing.JLabel.horizontalAlignment
 132:   33 ->   55 outputDependence javax.swing.JLabel.!javax.swing.JLabel.horizontalTextPosition
 133:   33 ->   55 outputDependence javax.swing.JLabel.!javax.swing.JLabel.iconTextGap
 134:   33 ->   55 outputDependence javax.swing.JLabel.!javax.swing.JLabel.labelFor
 135:   33 ->   55 outputDependence javax.swing.JLabel.!javax.swing.JLabel.mnemonic
 136:   33 ->   55 outputDependence javax.swing.JLabel.!javax.swing.JLabel.mnemonicIndex
 137:   33 ->   55 outputDependence javax.swing.JLabel.!javax.swing.JLabel.text
 138:   33 ->   55 outputDependence javax.swing.JLabel.!javax.swing.JLabel.verticalAlignment
 139:   33 ->   55 outputDependence javax.swing.JLabel.!javax.swing.JLabel.verticalTextPosition
 140:   37 ->   34 loopIndependentDefUseDependence this.!add( java.awt.Component )
 141:   37 ->   44 loopIndependentDefUseDependence this.!java.awt.Component.parent
 142:   37 ->   45 loopIndependentDefUseDependence this.!java.awt.Component.parent
 143:   37 ->   45 outputDependence this.!add( java.awt.Component )
 144:   38 ->   44 loopIndependentDefUseDependence this.colorCombo
 145:   38 ->   49 loopIndependentDefUseDependence this.colorCombo
 146:   41 ->   38 loopIndependentDefUseDependence javax.swing.JComboBox.!JComboBox( )
 147:   41 ->   62 loopIndependentDefUseDependence javax.swing.JComboBox.!javax.swing.JComboBox.dataModel
 148:   41 ->   63 loopIndependentDefUseDependence javax.swing.JComboBox.!javax.swing.JComboBox.dataModel
 149:   41 ->   63 outputDependence javax.swing.JComboBox.!JComboBox( )
 150:   41 ->   63 outputDependence javax.swing.JComboBox.!javax.swing.DefaultComboBoxModel.objects
 151:   41 ->   63 outputDependence javax.swing.JComboBox.!javax.swing.JComboBox.actionCommand
 152:   41 ->   63 outputDependence javax.swing.JComboBox.!javax.swing.JComboBox.firingActionEvent
 153:   41 ->   63 outputDependence javax.swing.JComboBox.!javax.swing.JComboBox.isEditable
 154:   41 ->   63 outputDependence javax.swing.JComboBox.!javax.swing.JComboBox.keySelectionManager
 155:   41 ->   63 outputDependence javax.swing.JComboBox.!javax.swing.JComboBox.lightWeightPopupEnabled
 156:   41 ->   63 outputDependence javax.swing.JComboBox.!javax.swing.JComboBox.maximumRowCount
 157:   41 ->   63 outputDependence javax.swing.JComboBox.!javax.swing.JComboBox.selectedItemReminder
 158:   41 ->   63 outputDependence javax.swing.JComboBox.!javax.swing.JComboBox.selectingItem
 159:   41 ->   63 outputDependence javax.swing.JComboBox.!javax.swing.JComponent.inputVerifier
 160:   41 ->   63 outputDependence javax.swing.JComboBox.!javax.swing.JComponent.listenerList
 161:   41 ->   63 outputDependence javax.swing.JComboBox.!javax.swing.JComponent.revalidateRunnableScheduled
 162:   41 ->   63 outputDependence javax.swing.JComboBox.!javax.swing.JComponent.verifyInputWhenFocusTarget
 163:   45 ->   42 loopIndependentDefUseDependence this.!add( java.awt.Component )
 164:   45 ->   58 loopIndependentDefUseDependence this.!java.awt.Component.parent
 165:   45 ->   59 loopIndependentDefUseDependence this.!java.awt.Component.parent
 166:   45 ->   59 outputDependence this.!add( java.awt.Component )
 167:   51 ->   46 loopIndependentDefUseDependence this.!addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] )
 168:   51 ->   73 outputDependence this.!addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] )
 169:   52 ->   58 declaration
 170:   52 ->   58 loopIndependentDefUseDependence lineWidthLabel$2
 171:   55 ->   52 loopIndependentDefUseDependence javax.swing.JLabel.!JLabel( java.lang.String )
 172:   59 ->   56 loopIndependentDefUseDependence this.!add( java.awt.Component )
 173:   59 ->   66 loopIndependentDefUseDependence this.!java.awt.Component.parent
 174:   59 ->   67 loopIndependentDefUseDependence this.!java.awt.Component.parent
 175:   59 ->   67 outputDependence this.!add( java.awt.Component )
 176:   60 ->   66 loopIndependentDefUseDependence this.widthCombo
 177:   60 ->   71 loopIndependentDefUseDependence this.widthCombo
 178:   63 ->   60 loopIndependentDefUseDependence javax.swing.JComboBox.!JComboBox( )
 179:   67 ->   64 loopIndependentDefUseDependence this.!add( java.awt.Component )
 180:   73 ->   68 loopIndependentDefUseDependence this.!addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] )
--
   0: colorCombo
   1:    0 ->    1 trueControlDependence
--
   0: shapeCombo
   1:    0 ->    1 trueControlDependence
--
   0: addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->   11 trueControlDependence
   6:    1 ->    6 loopIndependentDefUseDependence cb$0
   7:    2 ->    4 loopIndependentDefUseDependence icons$1
   8:    2 ->    7 loopIndependentDefUseDependence icons$1
   9:    3 ->    4 declaration
  10:    3 ->    4 loopIndependentDefUseDependence i$2
  11:    3 ->    7 declaration
  12:    3 ->    7 loopIndependentDefUseDependence i$2
  13:    3 ->    9 declaration
  14:    3 ->    9 loopIndependentDefUseDependence i$2
  15:    4 ->    5 trueControlDependence
  16:    4 ->    6 trueControlDependence
  17:    4 ->    7 trueControlDependence
  18:    4 ->    8 trueControlDependence
  19:    4 ->    9 trueControlDependence
  20:    8 ->    5 loopIndependentDefUseDependence cb$0.!addItem( java.lang.Object )
  21:    8 ->    8 defOrderDependence cb$0.!addItem( java.lang.Object )
  22:    9 ->    4 loopCarriedDefUseDependence i$2 (LC = 4)
  23:    9 ->    7 loopCarriedDefUseDependence i$2 (LC = 4)
  24:    9 ->    9 loopCarriedDefUseDependence i$2 (LC = 4)
--
   0: getShape( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->   10 trueControlDependence
  10:    1 ->    6 declaration
  11:    1 ->    6 loopIndependentDefUseDependence icon$0
  12:    4 ->    1 loopIndependentDefUseDependence this.shapeCombo.!getSelectedItem( )
  13:    5 ->   10 loopIndependentDefUseDependence $_
  14:    8 ->    5 loopIndependentDefUseDependence icon$0.!getFigure( )
--
   0: isGrabMode( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    1 ->    6 loopIndependentDefUseDependence $_
   7:    4 ->    1 loopIndependentDefUseDependence this.!getShape( )
--
   0: widthCombo
   1:    0 ->    1 trueControlDependence
--
----- ClDG (to here) -----

