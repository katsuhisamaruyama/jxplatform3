----- ClDG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.DrawCanvas
   0 methodEntry [ autoSave( ) ]
   1 ifSt D = {  } U = { this.menu }
   2 whileSt D = {  } U = { this.!getCurrentFigure }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
   5 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
   6 trySt D = {  } U = {  }
   7 assignment D = {  } U = { this.!wait }
   8 receiver D = {  } U = {  }
   9 methodCall D = {  } U = {  } TO = java.lang.Object#wait( )
  10 actualOut D = { this.!wait } U = {  }
  12 catchClause D = { e$0 } U = {  }
  13 ifSt D = {  } U = { this.!hasChanged }
  14 receiver D = {  } U = {  }
  15 methodCall D = {  } U = { this.changed } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#hasChanged( )
  16 actualOut D = { this.!hasChanged } U = { this.changed }
  17 assignment D = {  } U = { this.menu.!saveTempFile }
  18 receiver D = {  } U = { this.menu }
  19 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawMenu#saveTempFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
  20 actualIn D = {  } U = { this }
  21 actualOut D = { this.menu.!saveTempFile } U = {  }
  25 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ mouseEntered( java.awt.event.MouseEvent ) ]
   1 formalIn D = { e$0 } U = {  }
   3 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ) ]
   1 formalIn D = { menu$0 } U = {  }
   2 formalIn D = { selector$1 } U = {  }
   3 formalIn D = { filename$2 } U = {  }
   4 assignment D = { this.menu } U = { menu$0, this }
   5 assignment D = { this.selector } U = { selector$1, this }
   6 ifSt D = {  } U = { filename$2 }
   7 assignment D = { this.figureManager } U = { this.figureManager.!FigureManager }
   8 receiver D = {  } U = {  }
   9 constructorCall D = { this.figureManager.figures, this.figureManager.filename } U = { this.figureManager.figures, this.figureManager.filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#FigureManager( java.lang.String )
  10 actualIn D = {  } U = { filename$2 }
  11 actualOut D = { this.figureManager.!FigureManager, this.figureManager.figures, this.figureManager.filename } U = { this.figureManager.figures, this.figureManager.filename }
  12 assignment D = { this.figureManager } U = { this.figureManager.!FigureManager }
  13 receiver D = {  } U = {  }
  14 constructorCall D = { this.figureManager.figures, this.figureManager.filename } U = { this.figureManager.figures, this.figureManager.filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#FigureManager( )
  15 actualOut D = { this.figureManager.!FigureManager, this.figureManager.figures, this.figureManager.filename } U = { this.figureManager.figures, this.figureManager.filename }
  17 assignment D = {  } U = { this.!setChanged }
  18 receiver D = {  } U = {  }
  19 methodCall D = { this.changed } U = { this.changed } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setChanged( boolean )
  20 actualIn D = {  } U = {  }
  21 actualOut D = { this.!setChanged, this.changed } U = { this.changed }
  22 assignment D = {  } U = { this.!setBackground }
  23 receiver D = {  } U = {  }
  24 methodCall D = { java.awt.Component.background } U = { Color.white, java.awt.Component.background, java.awt.Component.height, java.awt.Component.parent, java.awt.Component.peer, java.awt.Component.width } TO = javax.swing.JComponent#setBackground( java.awt.Color )
  25 actualOut D = { java.awt.Component.background, this.!setBackground } U = { java.awt.Component.background, java.awt.Component.height, java.awt.Component.parent, java.awt.Component.peer, java.awt.Component.width }
  26 assignment D = {  } U = { this.!setPreferredSize }
  27 receiver D = {  } U = {  }
  28 methodCall D = { java.awt.Component.prefSize, java.awt.Component.prefSizeSet } U = { Dimension.!Dimension, java.awt.Component.prefSize, java.awt.Component.prefSizeSet } TO = javax.swing.JComponent#setPreferredSize( java.awt.Dimension )
  29 receiver D = {  } U = {  }
  30 constructorCall D = { Dimension.height, Dimension.width } U = {  } TO = java.awt.Dimension#Dimension( int int )
  31 actualOut D = { Dimension.!Dimension, Dimension.height, Dimension.width } U = {  }
  32 actualOut D = { java.awt.Component.prefSize, java.awt.Component.prefSizeSet, this.!setPreferredSize } U = { java.awt.Component.prefSize, java.awt.Component.prefSizeSet }
  33 assignment D = {  } U = { this.!addMouseListener }
  34 receiver D = {  } U = {  }
  35 methodCall D = { this.mouseListener, this.newEventsOnly } U = { java.awt.Container.dispatcher, this, this.mouseListener, this.parent, this.peer } TO = java.awt.Component#addMouseListener( java.awt.event.MouseListener )
  36 actualOut D = { this.!addMouseListener, this.mouseListener, this.newEventsOnly } U = { java.awt.Container.dispatcher, this.mouseListener, this.parent, this.peer }
  37 assignment D = {  } U = { this.!addMouseMotionListener }
  38 receiver D = {  } U = {  }
  39 methodCall D = { this.mouseMotionListener, this.newEventsOnly } U = { java.awt.Container.dispatcher, this, this.mouseMotionListener, this.parent, this.peer } TO = java.awt.Component#addMouseMotionListener( java.awt.event.MouseMotionListener )
  40 actualOut D = { this.!addMouseMotionListener, this.mouseMotionListener, this.newEventsOnly } U = { java.awt.Container.dispatcher, this.mouseMotionListener, this.parent, this.peer }
  42 formalOut D = {  } U = { $_, Dimension.height, Dimension.width, java.awt.Component.background, java.awt.Component.prefSize, java.awt.Component.prefSizeSet, this.changed, this.figureManager, this.figureManager.figures, this.figureManager.filename, this.menu, this.mouseListener, this.mouseMotionListener, this.newEventsOnly, this.selector }
--
   0 methodEntry [ paintComponent( java.awt.Graphics ) ]
   1 formalIn D = { g$0 } U = {  }
   2 assignment D = {  } U = { super.!paintComponent }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { g$0, super.ui } TO = javax.swing.JComponent#paintComponent( java.awt.Graphics )
   5 actualOut D = { super.!paintComponent } U = { super.ui }
   6 forSt D = {  } U = { figure$1, this.figureManager.!getFigures }
   7 receiver D = {  } U = { this.figureManager }
   8 methodCall D = {  } U = { this.figureManager.figures } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFigures( )
   9 actualOut D = { this.figureManager.!getFigures } U = { this.figureManager.figures }
  10 assignment D = {  } U = { this.!drawFigure }
  11 receiver D = {  } U = {  }
  12 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#drawFigure( java.awt.Graphics jp.ac.ritsumei.cs.draw.Figure )
  13 actualIn D = {  } U = { g$0 }
  14 actualIn D = {  } U = { figure$1 }
  15 actualOut D = { this.!drawFigure } U = {  }
  16 ifSt D = {  } U = { this.!getCurrentFigure }
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
  19 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
  20 assignment D = {  } U = { this.!drawGrabbedFigure }
  21 receiver D = {  } U = {  }
  22 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#drawGrabbedFigure( java.awt.Graphics jp.ac.ritsumei.cs.draw.Figure )
  23 actualIn D = {  } U = { g$0 }
  24 actualIn D = {  } U = { this.!getCurrentFigure }
  25 receiver D = {  } U = {  }
  26 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
  27 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
  28 actualOut D = { this.!drawGrabbedFigure } U = {  }
  31 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.DrawCanvas.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.DrawCanvas.serialVersionUID }
--
   0 methodEntry [ mouseMoved( java.awt.event.MouseEvent ) ]
   1 formalIn D = { e$0 } U = {  }
   3 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ currentFigure ]
   1 fieldDeclaration D = { this.currentFigure } U = { this.currentFigure }
--
   0 fieldEntry [ undoManager ]
   1 fieldDeclaration D = { this.undoManager } U = { this.undoManager }
--
   0 methodEntry [ mouseExited( java.awt.event.MouseEvent ) ]
   1 formalIn D = { e$0 } U = {  }
   3 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ menu ]
   1 fieldDeclaration D = { this.menu } U = { this.menu }
--
   0 methodEntry [ mousePressed( java.awt.event.MouseEvent ) ]
   1 formalIn D = { e$0 } U = {  }
   2 localDeclaration D = { g$1 } U = { this.!getGraphics }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { java.awt.Component.height, java.awt.Component.parent, java.awt.Component.peer, java.awt.Component.width, java.awt.Component.x, java.awt.Component.y, this.DEBUG_GRAPHICS_LOADED } TO = javax.swing.JComponent#getGraphics( )
   5 actualOut D = { this.!getGraphics } U = { java.awt.Component.height, java.awt.Component.parent, java.awt.Component.peer, java.awt.Component.width, java.awt.Component.x, java.awt.Component.y, this.DEBUG_GRAPHICS_LOADED }
   6 assignment D = { this.isGrabMode } U = { this.selector.!isGrabMode }
   7 receiver D = {  } U = { this.selector }
   8 methodCall D = {  } U = { this.selector.shapeCombo } TO = jp.ac.ritsumei.cs.draw.FigureSelector#isGrabMode( )
   9 actualOut D = { this.selector.!isGrabMode } U = { this.selector.shapeCombo }
  10 ifSt D = {  } U = { this.isGrabMode }
  11 assignment D = {  } U = { this.!setCurrentFigure }
  12 receiver D = {  } U = {  }
  13 methodCall D = { this.currentFigure } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setCurrentFigure( jp.ac.ritsumei.cs.draw.Figure )
  14 actualIn D = {  } U = { this.!getGrabbedFigure }
  15 receiver D = {  } U = {  }
  16 methodCall D = {  } U = { this.figureManager, this.figureManager.figures } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getGrabbedFigure( int int )
  17 actualIn D = {  } U = { e$0.!getX }
  18 receiver D = {  } U = { e$0 }
  19 methodCall D = {  } U = { e$0, e$0.x } TO = java.awt.event.MouseEvent#getX( )
  20 actualOut D = { e$0.!getX } U = { e$0.x }
  21 actualIn D = {  } U = { e$0.!getY }
  22 receiver D = {  } U = { e$0 }
  23 methodCall D = {  } U = { e$0, e$0.y } TO = java.awt.event.MouseEvent#getY( )
  24 actualOut D = { e$0.!getY } U = { e$0.y }
  25 actualOut D = { this.!getGrabbedFigure } U = { this.figureManager, this.figureManager.figures }
  26 actualOut D = { this.!setCurrentFigure, this.currentFigure } U = { this.currentFigure }
  27 ifSt D = {  } U = { this.!getCurrentFigure }
  28 receiver D = {  } U = {  }
  29 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
  30 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
  31 ifSt D = {  } U = { this.grabbedFigure }
  32 assignment D = { this.grabbedFigure } U = { this.!getCurrentFigure.!createClone }
  33 receiver D = {  } U = { this.!getCurrentFigure }
  34 receiver D = {  } U = {  }
  35 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
  36 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
  37 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#createClone( )
  38 actualOut D = { this.!getCurrentFigure.!createClone } U = {  }
  39 assignment D = {  } U = { this.!drawGrabbedFigure }
  40 receiver D = {  } U = {  }
  41 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#drawGrabbedFigure( java.awt.Graphics jp.ac.ritsumei.cs.draw.Figure )
  42 actualIn D = {  } U = { g$1, this.!getGraphics }
  43 actualIn D = {  } U = { this.!getCurrentFigure.!createClone, this.grabbedFigure }
  44 actualOut D = { this.!drawGrabbedFigure } U = {  }
  46 assignment D = { this.curX } U = { e$0.!getX }
  47 receiver D = {  } U = { e$0 }
  48 methodCall D = {  } U = { e$0, e$0.x } TO = java.awt.event.MouseEvent#getX( )
  49 actualOut D = { e$0.!getX } U = { e$0.x }
  50 assignment D = { this.curY } U = { e$0.!getY }
  51 receiver D = {  } U = { e$0 }
  52 methodCall D = {  } U = { e$0, e$0.y } TO = java.awt.event.MouseEvent#getY( )
  53 actualOut D = { e$0.!getY } U = { e$0.y }
  55 assignment D = {  } U = { this.!setCurrentFigure }
  56 receiver D = {  } U = {  }
  57 methodCall D = { this.currentFigure } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setCurrentFigure( jp.ac.ritsumei.cs.draw.Figure )
  58 actualIn D = {  } U = { this.selector.!createFigure }
  59 receiver D = {  } U = { this.selector }
  60 methodCall D = {  } U = { this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo } TO = jp.ac.ritsumei.cs.draw.FigureSelector#createFigure( )
  61 actualOut D = { this.selector.!createFigure } U = { this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo }
  62 actualOut D = { this.!setCurrentFigure, this.currentFigure } U = { this.currentFigure }
  63 assignment D = {  } U = { this.!getCurrentFigure.!setStart }
  64 receiver D = {  } U = { this.!getCurrentFigure }
  65 receiver D = {  } U = {  }
  66 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
  67 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
  68 methodCall D = { this.!getCurrentFigure.startX, this.!getCurrentFigure.startY } U = { this.!getCurrentFigure.startX, this.!getCurrentFigure.startY } TO = jp.ac.ritsumei.cs.draw.Figure#setStart( int int )
  69 actualIn D = {  } U = { e$0.!getX }
  70 receiver D = {  } U = { e$0 }
  71 methodCall D = {  } U = { e$0, e$0.x } TO = java.awt.event.MouseEvent#getX( )
  72 actualOut D = { e$0.!getX } U = { e$0.x }
  73 actualIn D = {  } U = { e$0.!getY }
  74 receiver D = {  } U = { e$0 }
  75 methodCall D = {  } U = { e$0, e$0.y } TO = java.awt.event.MouseEvent#getY( )
  76 actualOut D = { e$0.!getY } U = { e$0.y }
  77 actualOut D = { this.!getCurrentFigure.!setStart, this.!getCurrentFigure.startX, this.!getCurrentFigure.startY } U = { this.!getCurrentFigure.startX, this.!getCurrentFigure.startY }
  78 assignment D = {  } U = { this.!getCurrentFigure.!setEnd }
  79 receiver D = {  } U = { this.!getCurrentFigure }
  80 receiver D = {  } U = {  }
  81 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
  82 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
  83 methodCall D = { this.!getCurrentFigure.endX, this.!getCurrentFigure.endY } U = { this.!getCurrentFigure.endX, this.!getCurrentFigure.endY } TO = jp.ac.ritsumei.cs.draw.Figure#setEnd( int int )
  84 actualIn D = {  } U = { e$0.!getX }
  85 receiver D = {  } U = { e$0 }
  86 methodCall D = {  } U = { e$0, e$0.x } TO = java.awt.event.MouseEvent#getX( )
  87 actualOut D = { e$0.!getX } U = { e$0.x }
  88 actualIn D = {  } U = { e$0.!getY }
  89 receiver D = {  } U = { e$0 }
  90 methodCall D = {  } U = { e$0, e$0.y } TO = java.awt.event.MouseEvent#getY( )
  91 actualOut D = { e$0.!getY } U = { e$0.y }
  92 actualOut D = { this.!getCurrentFigure.!setEnd, this.!getCurrentFigure.endX, this.!getCurrentFigure.endY } U = { this.!getCurrentFigure.endX, this.!getCurrentFigure.endY }
  93 assignment D = {  } U = { this.!drawRubber }
  94 receiver D = {  } U = {  }
  95 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#drawRubber( java.awt.Graphics jp.ac.ritsumei.cs.draw.Figure )
  96 actualIn D = {  } U = { g$1, this.!getGraphics }
  97 actualIn D = {  } U = { this.!getCurrentFigure }
  98 receiver D = {  } U = {  }
  99 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
 100 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
 101 actualOut D = { this.!drawRubber } U = {  }
 104 formalOut D = {  } U = { $_, this.!getCurrentFigure.endX, this.!getCurrentFigure.endY, this.!getCurrentFigure.startX, this.!getCurrentFigure.startY, this.curX, this.curY, this.currentFigure, this.grabbedFigure, this.isGrabMode }
--
   0 methodEntry [ drawOutline( java.awt.Graphics jp.ac.ritsumei.cs.draw.Figure ) ]
   1 formalIn D = { g$0 } U = {  }
   2 formalIn D = { figure$1 } U = {  }
   3 localDeclaration D = { c$2 } U = { g$0.!getColor }
   4 receiver D = {  } U = { g$0 }
   5 methodCall D = {  } U = {  } TO = java.awt.Graphics#getColor( )
   6 actualOut D = { g$0.!getColor } U = {  }
   7 assignment D = {  } U = { g$0.!setXORMode }
   8 receiver D = {  } U = { g$0 }
   9 methodCall D = {  } U = { this.!getBackground } TO = java.awt.Graphics#setXORMode( java.awt.Color )
  10 receiver D = {  } U = {  }
  11 methodCall D = {  } U = { this.background, this.parent } TO = java.awt.Component#getBackground( )
  12 actualOut D = { this.!getBackground } U = { this.background, this.parent }
  13 actualOut D = { g$0.!setXORMode } U = {  }
  14 assignment D = {  } U = { figure$1.!drawOutline }
  15 receiver D = {  } U = { figure$1 }
  16 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#drawOutline( java.awt.Graphics )
  17 actualIn D = {  } U = { g$0 }
  18 actualOut D = { figure$1.!drawOutline } U = {  }
  19 assignment D = {  } U = { g$0.!setColor }
  20 receiver D = {  } U = { g$0 }
  21 methodCall D = {  } U = { c$2, g$0.!getColor } TO = java.awt.Graphics#setColor( java.awt.Color )
  22 actualOut D = { g$0.!setColor } U = {  }
  24 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ changed ]
   1 fieldDeclaration D = { this.changed } U = { this.changed }
--
   0 methodEntry [ removeUndoableEditListener( javax.swing.event.UndoableEditListener ) ]
   1 formalIn D = { listener$0 } U = {  }
   2 assignment D = {  } U = { this.support.!removeUndoableEditListener }
   3 receiver D = {  } U = { this.support }
   4 methodCall D = { java.util.AbstractList.modCount, this.support } U = { java.util.AbstractList.modCount, listener$0, this.support, this.support.listeners } TO = javax.swing.undo.UndoableEditSupport#removeUndoableEditListener( javax.swing.event.UndoableEditListener )
   5 actualOut D = { java.util.AbstractList.modCount, this.support, this.support.!removeUndoableEditListener } U = { java.util.AbstractList.modCount, this.support, this.support.listeners }
   7 formalOut D = {  } U = { $_, java.util.AbstractList.modCount, this.support }
--
   0 methodEntry [ clearFigure( ) ]
   1 assignment D = {  } U = { this.!setCurrentFigure }
   2 receiver D = {  } U = {  }
   3 methodCall D = { this.currentFigure } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setCurrentFigure( jp.ac.ritsumei.cs.draw.Figure )
   4 actualIn D = {  } U = {  }
   5 actualOut D = { this.!setCurrentFigure, this.currentFigure } U = { this.currentFigure }
   6 assignment D = { this.grabbedFigure } U = {  }
   8 formalOut D = {  } U = { $_, this.currentFigure, this.grabbedFigure }
--
   0 fieldEntry [ isGrabMode ]
   1 fieldDeclaration D = { this.isGrabMode } U = { this.isGrabMode }
--
   0 methodEntry [ drawFigure( java.awt.Graphics jp.ac.ritsumei.cs.draw.Figure ) ]
   1 formalIn D = { g$0 } U = {  }
   2 formalIn D = { figure$1 } U = {  }
   3 localDeclaration D = { c$2 } U = { g$0.!getColor }
   4 receiver D = {  } U = { g$0 }
   5 methodCall D = {  } U = {  } TO = java.awt.Graphics#getColor( )
   6 actualOut D = { g$0.!getColor } U = {  }
   7 assignment D = {  } U = { g$0.!setPaintMode }
   8 receiver D = {  } U = { g$0 }
   9 methodCall D = {  } U = {  } TO = java.awt.Graphics#setPaintMode( )
  10 actualOut D = { g$0.!setPaintMode } U = {  }
  11 assignment D = {  } U = { figure$1.!draw }
  12 receiver D = {  } U = { figure$1 }
  13 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#draw( java.awt.Graphics )
  14 actualIn D = {  } U = { g$0 }
  15 actualOut D = { figure$1.!draw } U = {  }
  16 assignment D = {  } U = { g$0.!setColor }
  17 receiver D = {  } U = { g$0 }
  18 methodCall D = {  } U = { c$2, g$0.!getColor } TO = java.awt.Graphics#setColor( java.awt.Color )
  19 actualOut D = { g$0.!setColor } U = {  }
  21 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ getUndoManager( ) ]
   1 returnSt D = { $_ } U = { this.undoManager }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ hasChanged( ) ]
   1 returnSt D = { $_ } U = { this.changed }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ setChanged( boolean ) ]
   1 formalIn D = { bool$0 } U = {  }
   2 assignment D = { this.changed } U = { bool$0 }
   4 formalOut D = {  } U = { $_, this.changed }
--
   0 methodEntry [ getCurrentFigure( ) ]
   1 returnSt D = { $_ } U = { this.currentFigure }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ setCurrentFigure( jp.ac.ritsumei.cs.draw.Figure ) ]
   1 formalIn D = { figure$0 } U = {  }
   2 assignment D = { this.currentFigure } U = { figure$0 }
   3 assignment D = {  } U = { this.!notifyAll }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = {  } TO = java.lang.Object#notifyAll( )
   6 actualOut D = { this.!notifyAll } U = {  }
   8 formalOut D = {  } U = { $_, this.currentFigure }
--
   0 methodEntry [ addUndoableEditListener( javax.swing.event.UndoableEditListener ) ]
   1 formalIn D = { listener$0 } U = {  }
   2 assignment D = {  } U = { this.support.!addUndoableEditListener }
   3 receiver D = {  } U = { this.support }
   4 methodCall D = { java.util.AbstractList.modCount, this.support } U = { java.util.AbstractList.modCount, java.util.Vector.elementCount, java.util.Vector.elementData, listener$0, this.support, this.support.listeners } TO = javax.swing.undo.UndoableEditSupport#addUndoableEditListener( javax.swing.event.UndoableEditListener )
   5 actualOut D = { java.util.AbstractList.modCount, this.support, this.support.!addUndoableEditListener } U = { java.util.AbstractList.modCount, java.util.Vector.elementCount, java.util.Vector.elementData, this.support, this.support.listeners }
   7 formalOut D = {  } U = { $_, java.util.AbstractList.modCount, this.support }
--
   0 methodEntry [ drawRubber( java.awt.Graphics jp.ac.ritsumei.cs.draw.Figure ) ]
   1 formalIn D = { g$0 } U = {  }
   2 formalIn D = { figure$1 } U = {  }
   3 localDeclaration D = { c$2 } U = { g$0.!getColor }
   4 receiver D = {  } U = { g$0 }
   5 methodCall D = {  } U = {  } TO = java.awt.Graphics#getColor( )
   6 actualOut D = { g$0.!getColor } U = {  }
   7 assignment D = {  } U = { g$0.!setXORMode }
   8 receiver D = {  } U = { g$0 }
   9 methodCall D = {  } U = { this.!getBackground } TO = java.awt.Graphics#setXORMode( java.awt.Color )
  10 receiver D = {  } U = {  }
  11 methodCall D = {  } U = { this.background, this.parent } TO = java.awt.Component#getBackground( )
  12 actualOut D = { this.!getBackground } U = { this.background, this.parent }
  13 actualOut D = { g$0.!setXORMode } U = {  }
  14 assignment D = {  } U = { figure$1.!drawRubber }
  15 receiver D = {  } U = { figure$1 }
  16 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#drawRubber( java.awt.Graphics )
  17 actualIn D = {  } U = { g$0 }
  18 actualOut D = { figure$1.!drawRubber } U = {  }
  19 assignment D = {  } U = { g$0.!setColor }
  20 receiver D = {  } U = { g$0 }
  21 methodCall D = {  } U = { c$2, g$0.!getColor } TO = java.awt.Graphics#setColor( java.awt.Color )
  22 actualOut D = { g$0.!setColor } U = {  }
  24 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ setUndoManager( javax.swing.undo.UndoManager ) ]
   1 formalIn D = { undoManger$0 } U = {  }
   2 assignment D = { this.undoManager } U = { this, undoManger$0 }
   4 formalOut D = {  } U = { $_, this.undoManager }
--
   0 methodEntry [ getFigureManager( ) ]
   1 returnSt D = { $_ } U = { this.figureManager }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ mouseClicked( java.awt.event.MouseEvent ) ]
   1 formalIn D = { e$0 } U = {  }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ mouseDragged( java.awt.event.MouseEvent ) ]
   1 formalIn D = { e$0 } U = {  }
   2 ifSt D = {  } U = { this.!getCurrentFigure }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
   5 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
   6 localDeclaration D = { g$1 } U = { this.!getGraphics }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = { java.awt.Component.height, java.awt.Component.parent, java.awt.Component.peer, java.awt.Component.width, java.awt.Component.x, java.awt.Component.y, this.DEBUG_GRAPHICS_LOADED } TO = javax.swing.JComponent#getGraphics( )
   9 actualOut D = { this.!getGraphics } U = { java.awt.Component.height, java.awt.Component.parent, java.awt.Component.peer, java.awt.Component.width, java.awt.Component.x, java.awt.Component.y, this.DEBUG_GRAPHICS_LOADED }
  10 ifSt D = {  } U = { this.isGrabMode }
  11 ifSt D = {  } U = { e$0.!getX, e$0.!getY, this.curX, this.curY }
  12 receiver D = {  } U = { e$0 }
  13 methodCall D = {  } U = { e$0, e$0.x } TO = java.awt.event.MouseEvent#getX( )
  14 actualOut D = { e$0.!getX } U = { e$0.x }
  15 receiver D = {  } U = { e$0 }
  16 methodCall D = {  } U = { e$0, e$0.y } TO = java.awt.event.MouseEvent#getY( )
  17 actualOut D = { e$0.!getY } U = { e$0.y }
  18 assignment D = {  } U = { this.!drawOutline }
  19 receiver D = {  } U = {  }
  20 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#drawOutline( java.awt.Graphics jp.ac.ritsumei.cs.draw.Figure )
  21 actualIn D = {  } U = { g$1, this.!getGraphics }
  22 actualIn D = {  } U = { this.!getCurrentFigure }
  23 receiver D = {  } U = {  }
  24 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
  25 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
  26 actualOut D = { this.!drawOutline } U = {  }
  27 assignment D = {  } U = { this.!getCurrentFigure.!move }
  28 receiver D = {  } U = { this.!getCurrentFigure }
  29 receiver D = {  } U = {  }
  30 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
  31 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
  32 methodCall D = { this.!getCurrentFigure.endX, this.!getCurrentFigure.endY, this.!getCurrentFigure.startX, this.!getCurrentFigure.startY } U = { this.!getCurrentFigure.endX, this.!getCurrentFigure.endY, this.!getCurrentFigure.startX, this.!getCurrentFigure.startY } TO = jp.ac.ritsumei.cs.draw.Figure#move( int int )
  33 actualIn D = {  } U = { e$0.!getX, this.curX }
  34 receiver D = {  } U = { e$0 }
  35 methodCall D = {  } U = { e$0, e$0.x } TO = java.awt.event.MouseEvent#getX( )
  36 actualOut D = { e$0.!getX } U = { e$0.x }
  37 actualIn D = {  } U = { e$0.!getY, this.curY }
  38 receiver D = {  } U = { e$0 }
  39 methodCall D = {  } U = { e$0, e$0.y } TO = java.awt.event.MouseEvent#getY( )
  40 actualOut D = { e$0.!getY } U = { e$0.y }
  41 actualOut D = { this.!getCurrentFigure.!move, this.!getCurrentFigure.endX, this.!getCurrentFigure.endY, this.!getCurrentFigure.startX, this.!getCurrentFigure.startY } U = { this.!getCurrentFigure.endX, this.!getCurrentFigure.endY, this.!getCurrentFigure.startX, this.!getCurrentFigure.startY }
  42 assignment D = { this.curX } U = { e$0.!getX }
  43 receiver D = {  } U = { e$0 }
  44 methodCall D = {  } U = { e$0, e$0.x } TO = java.awt.event.MouseEvent#getX( )
  45 actualOut D = { e$0.!getX } U = { e$0.x }
  46 assignment D = { this.curY } U = { e$0.!getY }
  47 receiver D = {  } U = { e$0 }
  48 methodCall D = {  } U = { e$0, e$0.y } TO = java.awt.event.MouseEvent#getY( )
  49 actualOut D = { e$0.!getY } U = { e$0.y }
  50 assignment D = {  } U = { this.!drawOutline }
  51 receiver D = {  } U = {  }
  52 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#drawOutline( java.awt.Graphics jp.ac.ritsumei.cs.draw.Figure )
  53 actualIn D = {  } U = { g$1, this.!getGraphics }
  54 actualIn D = {  } U = { this.!getCurrentFigure }
  55 receiver D = {  } U = {  }
  56 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
  57 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
  58 actualOut D = { this.!drawOutline } U = {  }
  60 assignment D = {  } U = { this.!drawRubber }
  61 receiver D = {  } U = {  }
  62 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#drawRubber( java.awt.Graphics jp.ac.ritsumei.cs.draw.Figure )
  63 actualIn D = {  } U = { g$1, this.!getGraphics }
  64 actualIn D = {  } U = { this.!getCurrentFigure }
  65 receiver D = {  } U = {  }
  66 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
  67 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
  68 actualOut D = { this.!drawRubber } U = {  }
  69 assignment D = {  } U = { this.!getCurrentFigure.!setEnd }
  70 receiver D = {  } U = { this.!getCurrentFigure }
  71 receiver D = {  } U = {  }
  72 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
  73 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
  74 methodCall D = { this.!getCurrentFigure.endX, this.!getCurrentFigure.endY } U = { this.!getCurrentFigure.endX, this.!getCurrentFigure.endY } TO = jp.ac.ritsumei.cs.draw.Figure#setEnd( int int )
  75 actualIn D = {  } U = { e$0.!getX }
  76 receiver D = {  } U = { e$0 }
  77 methodCall D = {  } U = { e$0, e$0.x } TO = java.awt.event.MouseEvent#getX( )
  78 actualOut D = { e$0.!getX } U = { e$0.x }
  79 actualIn D = {  } U = { e$0.!getY }
  80 receiver D = {  } U = { e$0 }
  81 methodCall D = {  } U = { e$0, e$0.y } TO = java.awt.event.MouseEvent#getY( )
  82 actualOut D = { e$0.!getY } U = { e$0.y }
  83 actualOut D = { this.!getCurrentFigure.!setEnd, this.!getCurrentFigure.endX, this.!getCurrentFigure.endY } U = { this.!getCurrentFigure.endX, this.!getCurrentFigure.endY }
  84 assignment D = {  } U = { this.!drawRubber }
  85 receiver D = {  } U = {  }
  86 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#drawRubber( java.awt.Graphics jp.ac.ritsumei.cs.draw.Figure )
  87 actualIn D = {  } U = { g$1, this.!getGraphics }
  88 actualIn D = {  } U = { this.!getCurrentFigure }
  89 receiver D = {  } U = {  }
  90 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
  91 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
  92 actualOut D = { this.!drawRubber } U = {  }
  96 formalOut D = {  } U = { $_, this.!getCurrentFigure.endX, this.!getCurrentFigure.endY, this.!getCurrentFigure.startX, this.!getCurrentFigure.startY, this.curX, this.curY }
--
   0 fieldEntry [ grabbedFigure ]
   1 fieldDeclaration D = { this.grabbedFigure } U = { this.grabbedFigure }
--
   0 methodEntry [ drawGrabbedFigure( java.awt.Graphics jp.ac.ritsumei.cs.draw.Figure ) ]
   1 formalIn D = { g$0 } U = {  }
   2 formalIn D = { figure$1 } U = {  }
   3 localDeclaration D = { c$2 } U = { g$0.!getColor }
   4 receiver D = {  } U = { g$0 }
   5 methodCall D = {  } U = {  } TO = java.awt.Graphics#getColor( )
   6 actualOut D = { g$0.!getColor } U = {  }
   7 assignment D = {  } U = { g$0.!setXORMode }
   8 receiver D = {  } U = { g$0 }
   9 methodCall D = {  } U = { this.!getBackground } TO = java.awt.Graphics#setXORMode( java.awt.Color )
  10 receiver D = {  } U = {  }
  11 methodCall D = {  } U = { this.background, this.parent } TO = java.awt.Component#getBackground( )
  12 actualOut D = { this.!getBackground } U = { this.background, this.parent }
  13 actualOut D = { g$0.!setXORMode } U = {  }
  14 assignment D = {  } U = { figure$1.!drawGrabbedFigure }
  15 receiver D = {  } U = { figure$1 }
  16 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#drawGrabbedFigure( java.awt.Graphics )
  17 actualIn D = {  } U = { g$0 }
  18 actualOut D = { figure$1.!drawGrabbedFigure } U = {  }
  19 assignment D = {  } U = { g$0.!setColor }
  20 receiver D = {  } U = { g$0 }
  21 methodCall D = {  } U = { c$2, g$0.!getColor } TO = java.awt.Graphics#setColor( java.awt.Color )
  22 actualOut D = { g$0.!setColor } U = {  }
  24 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ isOverlapped( jp.ac.ritsumei.cs.draw.Figure ) ]
   1 formalIn D = { figure$0 } U = {  }
   2 forSt D = {  } U = { fig$1, this.figureManager.!getFigures }
   3 receiver D = {  } U = { this.figureManager }
   4 methodCall D = {  } U = { this.figureManager.figures } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFigures( )
   5 actualOut D = { this.figureManager.!getFigures } U = { this.figureManager.figures }
   6 ifSt D = {  } U = { figure$0.!isOverlapped }
   7 receiver D = {  } U = { figure$0 }
   8 methodCall D = {  } U = { figure$0.endX, figure$0.endY, figure$0.startX, figure$0.startY } TO = jp.ac.ritsumei.cs.draw.Figure#isOverlapped( jp.ac.ritsumei.cs.draw.Figure )
   9 actualIn D = {  } U = { fig$1 }
  10 actualOut D = { figure$0.!isOverlapped } U = { figure$0.endX, figure$0.endY, figure$0.startX, figure$0.startY }
  11 returnSt D = { $_ } U = {  }
  13 returnSt D = { $_ } U = {  }
  15 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ getGrabbedFigure( int int ) ]
   1 formalIn D = { x$0 } U = {  }
   2 formalIn D = { y$1 } U = {  }
   3 localDeclaration D = { it$2 } U = { this.figureManager.!getFigures.!listIterator }
   4 receiver D = {  } U = { this.figureManager.!getFigures }
   5 receiver D = {  } U = { this.figureManager }
   6 methodCall D = {  } U = { this.figureManager.figures } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFigures( )
   7 actualOut D = { this.figureManager.!getFigures } U = { this.figureManager.figures }
   8 methodCall D = {  } U = {  } TO = java.util.List#listIterator( )
   9 actualOut D = { this.figureManager.!getFigures.!listIterator } U = {  }
  10 whileSt D = {  } U = { it$2.!hasNext, this.figureManager.!getFigures.!listIterator.!hasNext }
  11 receiver D = {  } U = { it$2, this.figureManager.!getFigures.!listIterator }
  12 methodCall D = {  } U = {  } TO = java.util.ListIterator#hasNext( )
  13 actualOut D = { it$2.!hasNext } U = {  }
  14 assignment D = {  } U = { it$2.!next, this.figureManager.!getFigures.!listIterator.!next }
  15 receiver D = {  } U = { it$2, this.figureManager.!getFigures.!listIterator }
  16 methodCall D = {  } U = {  } TO = java.util.ListIterator#next( )
  17 actualOut D = { it$2.!next } U = {  }
  18 whileSt D = {  } U = { it$2.!hasPrevious, this.figureManager.!getFigures.!listIterator.!hasPrevious }
  19 receiver D = {  } U = { it$2, this.figureManager.!getFigures.!listIterator }
  20 methodCall D = {  } U = {  } TO = java.util.ListIterator#hasPrevious( )
  21 actualOut D = { it$2.!hasPrevious } U = {  }
  22 localDeclaration D = { figure$3 } U = { it$2.!previous, this.figureManager.!getFigures.!listIterator.!previous }
  23 receiver D = {  } U = { it$2, this.figureManager.!getFigures.!listIterator }
  24 methodCall D = {  } U = {  } TO = java.util.ListIterator#previous( )
  25 actualOut D = { it$2.!previous } U = {  }
  26 ifSt D = {  } U = { figure$3.!isGrabbed }
  27 receiver D = {  } U = { figure$3 }
  28 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#isGrabbed( int int )
  29 actualIn D = {  } U = { x$0 }
  30 actualIn D = {  } U = { y$1 }
  31 actualOut D = { figure$3.!isGrabbed } U = {  }
  32 returnSt D = { $_ } U = { figure$3 }
  34 returnSt D = { $_ } U = {  }
  36 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ pasteFigure( jp.ac.ritsumei.cs.draw.Figure ) ]
   1 formalIn D = { figure$0 } U = {  }
   2 assignment D = {  } U = { this.support.!postEdit }
   3 receiver D = {  } U = { this.support }
   4 methodCall D = {  } U = { FigureDrawn.!FigureDrawn, javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, this.support, this.support.compoundEdit, this.support.listeners, this.support.realSource, this.support.updateLevel } TO = javax.swing.undo.UndoableEditSupport#postEdit( javax.swing.undo.UndoableEdit )
   5 receiver D = {  } U = {  }
   6 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureDrawn#FigureDrawn( jp.ac.ritsumei.cs.draw.DrawCanvas jp.ac.ritsumei.cs.draw.Figure )
   7 actualIn D = {  } U = { this }
   8 actualIn D = {  } U = { figure$0 }
   9 actualOut D = { FigureDrawn.!FigureDrawn } U = {  }
  10 actualOut D = { this.support.!postEdit } U = { javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, this.support.compoundEdit, this.support.listeners, this.support.realSource, this.support.updateLevel }
  11 assignment D = {  } U = { this.menu.!updateUndoState }
  12 receiver D = {  } U = { this.menu }
  13 methodCall D = {  } U = { this.menu, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab, this.menu.undoAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateUndoState( )
  14 actualOut D = { this.menu.!updateUndoState } U = { this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab, this.menu.undoAction }
  15 assignment D = {  } U = { this.menu.!updateRedoState }
  16 receiver D = {  } U = { this.menu }
  17 methodCall D = {  } U = { this.menu, this.menu.redoAction, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateRedoState( )
  18 actualOut D = { this.menu.!updateRedoState } U = { this.menu.redoAction, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab }
  19 assignment D = {  } U = { this.menu.!updateEditState }
  20 receiver D = {  } U = { this.menu }
  21 methodCall D = {  } U = { this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.pasteAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateEditState( boolean )
  22 actualIn D = {  } U = {  }
  23 actualOut D = { this.menu.!updateEditState } U = { this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.pasteAction }
  24 whileSt D = {  } U = { this.!isOverlapped }
  25 receiver D = {  } U = {  }
  26 methodCall D = {  } U = { this.figureManager, this.figureManager.figures } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#isOverlapped( jp.ac.ritsumei.cs.draw.Figure )
  27 actualIn D = {  } U = { figure$0 }
  28 actualOut D = { this.!isOverlapped } U = { this.figureManager, this.figureManager.figures }
  29 assignment D = {  } U = { figure$0.!move }
  30 receiver D = {  } U = { figure$0 }
  31 methodCall D = { figure$0.endX, figure$0.endY, figure$0.startX, figure$0.startY } U = { figure$0.endX, figure$0.endY, figure$0.startX, figure$0.startY } TO = jp.ac.ritsumei.cs.draw.Figure#move( int int )
  32 actualIn D = {  } U = {  }
  33 actualIn D = {  } U = {  }
  34 actualOut D = { figure$0.!move, figure$0.endX, figure$0.endY, figure$0.startX, figure$0.startY } U = { figure$0.endX, figure$0.endY, figure$0.startX, figure$0.startY }
  35 assignment D = {  } U = { this.figureManager.!add }
  36 receiver D = {  } U = { this.figureManager }
  37 methodCall D = {  } U = { this.figureManager.figures } TO = jp.ac.ritsumei.cs.draw.FigureManager#add( jp.ac.ritsumei.cs.draw.Figure )
  38 actualIn D = {  } U = { figure$0 }
  39 actualOut D = { this.figureManager.!add } U = { this.figureManager.figures }
  40 assignment D = {  } U = { this.!setChanged }
  41 receiver D = {  } U = {  }
  42 methodCall D = { this.changed } U = { this.changed } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setChanged( boolean )
  43 actualIn D = {  } U = {  }
  44 actualOut D = { this.!setChanged, this.changed } U = { this.changed }
  45 assignment D = {  } U = { this.!clearFigure }
  46 receiver D = {  } U = {  }
  47 methodCall D = { this.currentFigure, this.grabbedFigure } U = { this.currentFigure, this.grabbedFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#clearFigure( )
  48 actualOut D = { this.!clearFigure, this.currentFigure, this.grabbedFigure } U = { this.currentFigure, this.grabbedFigure }
  49 assignment D = {  } U = { this.!repaint }
  50 receiver D = {  } U = {  }
  51 methodCall D = {  } U = { this.height, this.parent, this.peer, this.width, this.x, this.y } TO = java.awt.Component#repaint( )
  52 actualOut D = { this.!repaint } U = { this.height, this.parent, this.peer, this.width, this.x, this.y }
  54 formalOut D = {  } U = { $_, figure$0.endX, figure$0.endY, figure$0.startX, figure$0.startY, this.changed, this.currentFigure, this.grabbedFigure }
--
   0 fieldEntry [ figureManager ]
   1 fieldDeclaration D = { this.figureManager } U = { this.figureManager }
--
   0 fieldEntry [ support ]
   1 fieldDeclaration D = { this.support } U = { UndoableEditSupport.!UndoableEditSupport, this.support }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { UndoableEditSupport.compoundEdit, UndoableEditSupport.listeners, UndoableEditSupport.realSource, UndoableEditSupport.updateLevel } U = {  } TO = javax.swing.undo.UndoableEditSupport#UndoableEditSupport( )
   4 actualOut D = { UndoableEditSupport.!UndoableEditSupport, UndoableEditSupport.compoundEdit, UndoableEditSupport.listeners, UndoableEditSupport.realSource, UndoableEditSupport.updateLevel } U = {  }
--
   0 fieldEntry [ selector ]
   1 fieldDeclaration D = { this.selector } U = { this.selector }
--
   0 methodEntry [ deleteFigure( ) ]
   1 assignment D = {  } U = { this.support.!postEdit }
   2 receiver D = {  } U = { this.support }
   3 methodCall D = {  } U = { FigureDeleted.!FigureDeleted, javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, this.support, this.support.compoundEdit, this.support.listeners, this.support.realSource, this.support.updateLevel } TO = javax.swing.undo.UndoableEditSupport#postEdit( javax.swing.undo.UndoableEdit )
   4 receiver D = {  } U = {  }
   5 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureDeleted#FigureDeleted( jp.ac.ritsumei.cs.draw.DrawCanvas jp.ac.ritsumei.cs.draw.Figure )
   6 actualIn D = {  } U = { this }
   7 actualIn D = {  } U = { this.grabbedFigure }
   8 actualOut D = { FigureDeleted.!FigureDeleted } U = {  }
   9 actualOut D = { this.support.!postEdit } U = { javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, this.support.compoundEdit, this.support.listeners, this.support.realSource, this.support.updateLevel }
  10 assignment D = {  } U = { this.menu.!updateUndoState }
  11 receiver D = {  } U = { this.menu }
  12 methodCall D = {  } U = { this.menu, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab, this.menu.undoAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateUndoState( )
  13 actualOut D = { this.menu.!updateUndoState } U = { this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab, this.menu.undoAction }
  14 assignment D = {  } U = { this.menu.!updateRedoState }
  15 receiver D = {  } U = { this.menu }
  16 methodCall D = {  } U = { this.menu, this.menu.redoAction, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateRedoState( )
  17 actualOut D = { this.menu.!updateRedoState } U = { this.menu.redoAction, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab }
  18 assignment D = {  } U = { this.menu.!updateEditState }
  19 receiver D = {  } U = { this.menu }
  20 methodCall D = {  } U = { this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.pasteAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateEditState( boolean )
  21 actualIn D = {  } U = {  }
  22 actualOut D = { this.menu.!updateEditState } U = { this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.pasteAction }
  23 assignment D = {  } U = { this.figureManager.!remove }
  24 receiver D = {  } U = { this.figureManager }
  25 methodCall D = {  } U = { this.figureManager.figures } TO = jp.ac.ritsumei.cs.draw.FigureManager#remove( jp.ac.ritsumei.cs.draw.Figure )
  26 actualIn D = {  } U = { this.!getCurrentFigure }
  27 receiver D = {  } U = {  }
  28 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
  29 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
  30 actualOut D = { this.figureManager.!remove } U = { this.figureManager.figures }
  31 assignment D = {  } U = { this.!setChanged }
  32 receiver D = {  } U = {  }
  33 methodCall D = { this.changed } U = { this.changed } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setChanged( boolean )
  34 actualIn D = {  } U = {  }
  35 actualOut D = { this.!setChanged, this.changed } U = { this.changed }
  36 assignment D = {  } U = { this.!clearFigure }
  37 receiver D = {  } U = {  }
  38 methodCall D = { this.currentFigure, this.grabbedFigure } U = { this.currentFigure, this.grabbedFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#clearFigure( )
  39 actualOut D = { this.!clearFigure, this.currentFigure, this.grabbedFigure } U = { this.currentFigure, this.grabbedFigure }
  40 assignment D = {  } U = { this.!repaint }
  41 receiver D = {  } U = {  }
  42 methodCall D = {  } U = { this.height, this.parent, this.peer, this.width, this.x, this.y } TO = java.awt.Component#repaint( )
  43 actualOut D = { this.!repaint } U = { this.height, this.parent, this.peer, this.width, this.x, this.y }
  45 formalOut D = {  } U = { $_, this.changed, this.currentFigure, this.grabbedFigure }
--
   0 methodEntry [ getGrabbedFigure( ) ]
   1 returnSt D = { $_ } U = { this.grabbedFigure }
   3 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ curY ]
   1 fieldDeclaration D = { this.curY } U = { this.curY }
--
   0 fieldEntry [ curX ]
   1 fieldDeclaration D = { this.curX } U = { this.curX }
--
   0 methodEntry [ mouseReleased( java.awt.event.MouseEvent ) ]
   1 formalIn D = { e$0 } U = {  }
   2 ifSt D = {  } U = { this.!getCurrentFigure }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
   5 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
   6 localDeclaration D = { g$1 } U = { this.!getGraphics }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = { java.awt.Component.height, java.awt.Component.parent, java.awt.Component.peer, java.awt.Component.width, java.awt.Component.x, java.awt.Component.y, this.DEBUG_GRAPHICS_LOADED } TO = javax.swing.JComponent#getGraphics( )
   9 actualOut D = { this.!getGraphics } U = { java.awt.Component.height, java.awt.Component.parent, java.awt.Component.peer, java.awt.Component.width, java.awt.Component.x, java.awt.Component.y, this.DEBUG_GRAPHICS_LOADED }
  10 ifSt D = {  } U = { this.isGrabMode }
  11 ifSt D = {  } U = { this.!getCurrentFigure.!getLeft, this.!getCurrentFigure.!getTop, this.grabbedFigure.!getLeft, this.grabbedFigure.!getTop }
  12 receiver D = {  } U = { this.!getCurrentFigure }
  13 receiver D = {  } U = {  }
  14 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
  15 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
  16 methodCall D = {  } U = { this.!getCurrentFigure.endX, this.!getCurrentFigure.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getLeft( )
  17 actualOut D = { this.!getCurrentFigure.!getLeft } U = { this.!getCurrentFigure.endX, this.!getCurrentFigure.startX }
  18 receiver D = {  } U = { this.grabbedFigure }
  19 methodCall D = {  } U = { this.grabbedFigure.endX, this.grabbedFigure.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getLeft( )
  20 actualOut D = { this.grabbedFigure.!getLeft } U = { this.grabbedFigure.endX, this.grabbedFigure.startX }
  21 receiver D = {  } U = { this.!getCurrentFigure }
  22 receiver D = {  } U = {  }
  23 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
  24 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
  25 methodCall D = {  } U = { this.!getCurrentFigure.endY, this.!getCurrentFigure.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getTop( )
  26 actualOut D = { this.!getCurrentFigure.!getTop } U = { this.!getCurrentFigure.endY, this.!getCurrentFigure.startY }
  27 receiver D = {  } U = { this.grabbedFigure }
  28 methodCall D = {  } U = { this.grabbedFigure.endY, this.grabbedFigure.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getTop( )
  29 actualOut D = { this.grabbedFigure.!getTop } U = { this.grabbedFigure.endY, this.grabbedFigure.startY }
  30 assignment D = {  } U = { this.support.!postEdit }
  31 receiver D = {  } U = { this.support }
  32 methodCall D = {  } U = { FigureMoved.!FigureMoved, javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, this.support, this.support.compoundEdit, this.support.listeners, this.support.realSource, this.support.updateLevel } TO = javax.swing.undo.UndoableEditSupport#postEdit( javax.swing.undo.UndoableEdit )
  33 receiver D = {  } U = {  }
  34 constructorCall D = { FigureMoved.redoFigure, FigureMoved.undoFigure } U = { FigureMoved.redoFigure, FigureMoved.undoFigure } TO = jp.ac.ritsumei.cs.draw.FigureMoved#FigureMoved( jp.ac.ritsumei.cs.draw.DrawCanvas jp.ac.ritsumei.cs.draw.Figure jp.ac.ritsumei.cs.draw.Figure )
  35 actualIn D = {  } U = { this }
  36 actualIn D = {  } U = { this.!getCurrentFigure }
  37 receiver D = {  } U = {  }
  38 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
  39 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
  40 actualIn D = {  } U = { this.grabbedFigure }
  41 actualOut D = { FigureMoved.!FigureMoved, FigureMoved.redoFigure, FigureMoved.undoFigure } U = { FigureMoved.redoFigure, FigureMoved.undoFigure }
  42 actualOut D = { this.support.!postEdit } U = { javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, this.support.compoundEdit, this.support.listeners, this.support.realSource, this.support.updateLevel }
  43 assignment D = {  } U = { this.menu.!updateUndoState }
  44 receiver D = {  } U = { this.menu }
  45 methodCall D = {  } U = { this.menu, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab, this.menu.undoAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateUndoState( )
  46 actualOut D = { this.menu.!updateUndoState } U = { this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab, this.menu.undoAction }
  47 assignment D = {  } U = { this.menu.!updateRedoState }
  48 receiver D = {  } U = { this.menu }
  49 methodCall D = {  } U = { this.menu, this.menu.redoAction, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateRedoState( )
  50 actualOut D = { this.menu.!updateRedoState } U = { this.menu.redoAction, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab }
  51 assignment D = {  } U = { this.!setChanged }
  52 receiver D = {  } U = {  }
  53 methodCall D = { this.changed } U = { this.changed } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setChanged( boolean )
  54 actualIn D = {  } U = {  }
  55 actualOut D = { this.!setChanged, this.changed } U = { this.changed }
  56 assignment D = {  } U = { this.!setCurrentFigure }
  57 receiver D = {  } U = {  }
  58 methodCall D = { this.currentFigure } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setCurrentFigure( jp.ac.ritsumei.cs.draw.Figure )
  59 actualIn D = {  } U = {  }
  60 actualOut D = { this.!setCurrentFigure, this.currentFigure } U = { this.currentFigure }
  61 assignment D = { this.grabbedFigure } U = {  }
  62 assignment D = {  } U = { this.!repaint }
  63 receiver D = {  } U = {  }
  64 methodCall D = {  } U = { this.height, this.parent, this.peer, this.width, this.x, this.y } TO = java.awt.Component#repaint( )
  65 actualOut D = { this.!repaint } U = { this.height, this.parent, this.peer, this.width, this.x, this.y }
  66 assignment D = {  } U = { this.menu.!updateEditState }
  67 receiver D = {  } U = { this.menu }
  68 methodCall D = {  } U = { this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.pasteAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateEditState( boolean )
  69 actualIn D = {  } U = {  }
  70 actualOut D = { this.menu.!updateEditState } U = { this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.pasteAction }
  72 assignment D = {  } U = { this.!drawRubber }
  73 receiver D = {  } U = {  }
  74 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#drawRubber( java.awt.Graphics jp.ac.ritsumei.cs.draw.Figure )
  75 actualIn D = {  } U = { g$1, this.!getGraphics }
  76 actualIn D = {  } U = { this.!getCurrentFigure }
  77 receiver D = {  } U = {  }
  78 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
  79 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
  80 actualOut D = { this.!drawRubber } U = {  }
  81 ifSt D = {  } U = { e$0.!getX, e$0.!getY, this.!getCurrentFigure.!getLeft, this.!getCurrentFigure.!getTop }
  82 receiver D = {  } U = { this.!getCurrentFigure }
  83 receiver D = {  } U = {  }
  84 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
  85 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
  86 methodCall D = {  } U = { this.!getCurrentFigure.endX, this.!getCurrentFigure.startX } TO = jp.ac.ritsumei.cs.draw.Figure#getLeft( )
  87 actualOut D = { this.!getCurrentFigure.!getLeft } U = { this.!getCurrentFigure.endX, this.!getCurrentFigure.startX }
  88 receiver D = {  } U = { e$0 }
  89 methodCall D = {  } U = { e$0, e$0.x } TO = java.awt.event.MouseEvent#getX( )
  90 actualOut D = { e$0.!getX } U = { e$0.x }
  91 receiver D = {  } U = { this.!getCurrentFigure }
  92 receiver D = {  } U = {  }
  93 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
  94 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
  95 methodCall D = {  } U = { this.!getCurrentFigure.endY, this.!getCurrentFigure.startY } TO = jp.ac.ritsumei.cs.draw.Figure#getTop( )
  96 actualOut D = { this.!getCurrentFigure.!getTop } U = { this.!getCurrentFigure.endY, this.!getCurrentFigure.startY }
  97 receiver D = {  } U = { e$0 }
  98 methodCall D = {  } U = { e$0, e$0.y } TO = java.awt.event.MouseEvent#getY( )
  99 actualOut D = { e$0.!getY } U = { e$0.y }
 100 assignment D = {  } U = { this.support.!postEdit }
 101 receiver D = {  } U = { this.support }
 102 methodCall D = {  } U = { FigureDrawn.!FigureDrawn, javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, this.support, this.support.compoundEdit, this.support.listeners, this.support.realSource, this.support.updateLevel } TO = javax.swing.undo.UndoableEditSupport#postEdit( javax.swing.undo.UndoableEdit )
 103 receiver D = {  } U = {  }
 104 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureDrawn#FigureDrawn( jp.ac.ritsumei.cs.draw.DrawCanvas jp.ac.ritsumei.cs.draw.Figure )
 105 actualIn D = {  } U = { this }
 106 actualIn D = {  } U = { this.!getCurrentFigure }
 107 receiver D = {  } U = {  }
 108 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
 109 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
 110 actualOut D = { FigureDrawn.!FigureDrawn } U = {  }
 111 actualOut D = { this.support.!postEdit } U = { javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, this.support.compoundEdit, this.support.listeners, this.support.realSource, this.support.updateLevel }
 112 assignment D = {  } U = { this.menu.!updateUndoState }
 113 receiver D = {  } U = { this.menu }
 114 methodCall D = {  } U = { this.menu, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab, this.menu.undoAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateUndoState( )
 115 actualOut D = { this.menu.!updateUndoState } U = { this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab, this.menu.undoAction }
 116 assignment D = {  } U = { this.menu.!updateRedoState }
 117 receiver D = {  } U = { this.menu }
 118 methodCall D = {  } U = { this.menu, this.menu.redoAction, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateRedoState( )
 119 actualOut D = { this.menu.!updateRedoState } U = { this.menu.redoAction, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab }
 120 assignment D = {  } U = { this.!getCurrentFigure.!setEnd }
 121 receiver D = {  } U = { this.!getCurrentFigure }
 122 receiver D = {  } U = {  }
 123 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
 124 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
 125 methodCall D = { this.!getCurrentFigure.endX, this.!getCurrentFigure.endY } U = { this.!getCurrentFigure.endX, this.!getCurrentFigure.endY } TO = jp.ac.ritsumei.cs.draw.Figure#setEnd( int int )
 126 actualIn D = {  } U = { e$0.!getX }
 127 receiver D = {  } U = { e$0 }
 128 methodCall D = {  } U = { e$0, e$0.x } TO = java.awt.event.MouseEvent#getX( )
 129 actualOut D = { e$0.!getX } U = { e$0.x }
 130 actualIn D = {  } U = { e$0.!getY }
 131 receiver D = {  } U = { e$0 }
 132 methodCall D = {  } U = { e$0, e$0.y } TO = java.awt.event.MouseEvent#getY( )
 133 actualOut D = { e$0.!getY } U = { e$0.y }
 134 actualOut D = { this.!getCurrentFigure.!setEnd, this.!getCurrentFigure.endX, this.!getCurrentFigure.endY } U = { this.!getCurrentFigure.endX, this.!getCurrentFigure.endY }
 135 assignment D = {  } U = { this.figureManager.!add }
 136 receiver D = {  } U = { this.figureManager }
 137 methodCall D = {  } U = { this.figureManager.figures } TO = jp.ac.ritsumei.cs.draw.FigureManager#add( jp.ac.ritsumei.cs.draw.Figure )
 138 actualIn D = {  } U = { this.!getCurrentFigure }
 139 receiver D = {  } U = {  }
 140 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
 141 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
 142 actualOut D = { this.figureManager.!add } U = { this.figureManager.figures }
 143 assignment D = {  } U = { this.!drawFigure }
 144 receiver D = {  } U = {  }
 145 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#drawFigure( java.awt.Graphics jp.ac.ritsumei.cs.draw.Figure )
 146 actualIn D = {  } U = { g$1, this.!getGraphics }
 147 actualIn D = {  } U = { this.!getCurrentFigure }
 148 receiver D = {  } U = {  }
 149 methodCall D = {  } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getCurrentFigure( )
 150 actualOut D = { this.!getCurrentFigure } U = { this.currentFigure }
 151 actualOut D = { this.!drawFigure } U = {  }
 152 assignment D = {  } U = { this.!setChanged }
 153 receiver D = {  } U = {  }
 154 methodCall D = { this.changed } U = { this.changed } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setChanged( boolean )
 155 actualIn D = {  } U = {  }
 156 actualOut D = { this.!setChanged, this.changed } U = { this.changed }
 157 assignment D = {  } U = { this.!repaint }
 158 receiver D = {  } U = {  }
 159 methodCall D = {  } U = { this.height, this.parent, this.peer, this.width, this.x, this.y } TO = java.awt.Component#repaint( )
 160 actualOut D = { this.!repaint } U = { this.height, this.parent, this.peer, this.width, this.x, this.y }
 162 assignment D = {  } U = { this.!setCurrentFigure }
 163 receiver D = {  } U = {  }
 164 methodCall D = { this.currentFigure } U = { this.currentFigure } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setCurrentFigure( jp.ac.ritsumei.cs.draw.Figure )
 165 actualIn D = {  } U = {  }
 166 actualOut D = { this.!setCurrentFigure, this.currentFigure } U = { this.currentFigure }
 167 assignment D = { this.grabbedFigure } U = {  }
 171 formalOut D = {  } U = { $_, FigureMoved.redoFigure, FigureMoved.undoFigure, this.!getCurrentFigure.endX, this.!getCurrentFigure.endY, this.changed, this.currentFigure, this.grabbedFigure }
--
   0: autoSave( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 12 trueControlDependence
   3: 0 -> 25 trueControlDependence
   4: 1 -> 13 trueControlDependence
   5: 1 -> 14 trueControlDependence
   6: 1 -> 15 trueControlDependence
   7: 1 -> 16 trueControlDependence
   8: 1 -> 2 trueControlDependence
   9: 1 -> 3 trueControlDependence
  10: 1 -> 4 trueControlDependence
  11: 1 -> 5 trueControlDependence
  12: 10 -> 10 defOrderDependence this.!wait
  13: 10 -> 7 loopIndependentDefUseDependence this.!wait
  14: 13 -> 17 trueControlDependence
  15: 13 -> 18 trueControlDependence
  16: 13 -> 19 trueControlDependence
  17: 13 -> 20 trueControlDependence
  18: 13 -> 21 trueControlDependence
  19: 16 -> 13 loopIndependentDefUseDependence this.!hasChanged
  20: 2 -> 6 trueControlDependence
  21: 21 -> 17 loopIndependentDefUseDependence this.menu.!saveTempFile
  22: 5 -> 2 loopIndependentDefUseDependence this.!getCurrentFigure
  23: 6 -> 10 trueControlDependence
  24: 6 -> 8 trueControlDependence
  25: 6 -> 9 trueControlDependence
  26: 9 -> 12 exceptionCatch
  27: 9 -> 7 trueControlDependence
--
   0: mouseEntered( java.awt.event.MouseEvent )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 3 trueControlDependence
--
   0: DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 17 trueControlDependence
   3: 0 -> 18 trueControlDependence
   4: 0 -> 19 trueControlDependence
   5: 0 -> 2 trueControlDependence
   6: 0 -> 20 trueControlDependence
   7: 0 -> 21 trueControlDependence
   8: 0 -> 22 trueControlDependence
   9: 0 -> 23 trueControlDependence
  10: 0 -> 24 trueControlDependence
  11: 0 -> 25 trueControlDependence
  12: 0 -> 26 trueControlDependence
  13: 0 -> 27 trueControlDependence
  14: 0 -> 28 trueControlDependence
  15: 0 -> 29 trueControlDependence
  16: 0 -> 3 trueControlDependence
  17: 0 -> 30 trueControlDependence
  18: 0 -> 31 trueControlDependence
  19: 0 -> 32 trueControlDependence
  20: 0 -> 33 trueControlDependence
  21: 0 -> 34 trueControlDependence
  22: 0 -> 35 trueControlDependence
  23: 0 -> 36 trueControlDependence
  24: 0 -> 37 trueControlDependence
  25: 0 -> 38 trueControlDependence
  26: 0 -> 39 trueControlDependence
  27: 0 -> 4 trueControlDependence
  28: 0 -> 40 trueControlDependence
  29: 0 -> 42 trueControlDependence
  30: 0 -> 5 trueControlDependence
  31: 0 -> 6 trueControlDependence
  32: 1 -> 4 loopIndependentDefUseDependence menu$0
  33: 10 -> 11 summary
  34: 11 -> 42 loopIndependentDefUseDependence this.figureManager.figures
  35: 11 -> 42 loopIndependentDefUseDependence this.figureManager.filename
  36: 11 -> 7 loopIndependentDefUseDependence this.figureManager.!FigureManager
  37: 12 -> 42 loopIndependentDefUseDependence this.figureManager
  38: 14 -> 15 loopIndependentDefUseDependence this.figureManager.figures
  39: 14 -> 15 loopIndependentDefUseDependence this.figureManager.filename
  40: 15 -> 12 loopIndependentDefUseDependence this.figureManager.!FigureManager
  41: 15 -> 42 loopIndependentDefUseDependence this.figureManager.figures
  42: 15 -> 42 loopIndependentDefUseDependence this.figureManager.filename
  43: 19 -> 21 loopIndependentDefUseDependence this.changed
  44: 2 -> 5 loopIndependentDefUseDependence selector$1
  45: 20 -> 21 summary
  46: 21 -> 17 loopIndependentDefUseDependence this.!setChanged
  47: 21 -> 42 loopIndependentDefUseDependence this.changed
  48: 24 -> 25 loopIndependentDefUseDependence java.awt.Component.background
  49: 25 -> 22 loopIndependentDefUseDependence this.!setBackground
  50: 25 -> 42 loopIndependentDefUseDependence java.awt.Component.background
  51: 28 -> 32 loopIndependentDefUseDependence java.awt.Component.prefSize
  52: 28 -> 32 loopIndependentDefUseDependence java.awt.Component.prefSizeSet
  53: 3 -> 10 loopIndependentDefUseDependence filename$2
  54: 3 -> 6 loopIndependentDefUseDependence filename$2
  55: 30 -> 31 outputDependence Dimension.height
  56: 30 -> 31 outputDependence Dimension.width
  57: 31 -> 28 loopIndependentDefUseDependence Dimension.!Dimension
  58: 31 -> 42 loopIndependentDefUseDependence Dimension.height
  59: 31 -> 42 loopIndependentDefUseDependence Dimension.width
  60: 32 -> 26 loopIndependentDefUseDependence this.!setPreferredSize
  61: 32 -> 42 loopIndependentDefUseDependence java.awt.Component.prefSize
  62: 32 -> 42 loopIndependentDefUseDependence java.awt.Component.prefSizeSet
  63: 35 -> 36 loopIndependentDefUseDependence this.mouseListener
  64: 35 -> 36 outputDependence this.newEventsOnly
  65: 36 -> 33 loopIndependentDefUseDependence this.!addMouseListener
  66: 36 -> 39 outputDependence this.newEventsOnly
  67: 36 -> 42 loopIndependentDefUseDependence this.mouseListener
  68: 39 -> 40 loopIndependentDefUseDependence this.mouseMotionListener
  69: 39 -> 40 outputDependence this.newEventsOnly
  70: 4 -> 42 loopIndependentDefUseDependence this.menu
  71: 40 -> 37 loopIndependentDefUseDependence this.!addMouseMotionListener
  72: 40 -> 42 loopIndependentDefUseDependence this.mouseMotionListener
  73: 40 -> 42 loopIndependentDefUseDependence this.newEventsOnly
  74: 5 -> 42 loopIndependentDefUseDependence this.selector
  75: 6 -> 10 trueControlDependence
  76: 6 -> 11 trueControlDependence
  77: 6 -> 12 falseControlDependence
  78: 6 -> 13 trueControlDependence
  79: 6 -> 14 falseControlDependence
  80: 6 -> 15 trueControlDependence
  81: 6 -> 7 trueControlDependence
  82: 6 -> 8 trueControlDependence
  83: 6 -> 9 trueControlDependence
  84: 7 -> 42 loopIndependentDefUseDependence this.figureManager
  85: 9 -> 11 loopIndependentDefUseDependence this.figureManager.figures
  86: 9 -> 11 loopIndependentDefUseDependence this.figureManager.filename
--
   0: paintComponent( java.awt.Graphics )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 16 trueControlDependence
   3: 0 -> 17 trueControlDependence
   4: 0 -> 18 trueControlDependence
   5: 0 -> 19 trueControlDependence
   6: 0 -> 2 trueControlDependence
   7: 0 -> 3 trueControlDependence
   8: 0 -> 31 trueControlDependence
   9: 0 -> 4 trueControlDependence
  10: 0 -> 5 trueControlDependence
  11: 0 -> 6 trueControlDependence
  12: 0 -> 7 trueControlDependence
  13: 0 -> 8 trueControlDependence
  14: 0 -> 9 trueControlDependence
  15: 1 -> 13 loopIndependentDefUseDependence g$0
  16: 1 -> 23 loopIndependentDefUseDependence g$0
  17: 1 -> 4 loopIndependentDefUseDependence g$0
  18: 15 -> 10 loopIndependentDefUseDependence this.!drawFigure
  19: 15 -> 15 defOrderDependence this.!drawFigure
  20: 16 -> 20 trueControlDependence
  21: 16 -> 21 trueControlDependence
  22: 16 -> 22 trueControlDependence
  23: 16 -> 23 trueControlDependence
  24: 16 -> 24 trueControlDependence
  25: 16 -> 25 trueControlDependence
  26: 16 -> 26 trueControlDependence
  27: 16 -> 27 trueControlDependence
  28: 16 -> 28 trueControlDependence
  29: 19 -> 16 loopIndependentDefUseDependence this.!getCurrentFigure
  30: 19 -> 27 outputDependence this.!getCurrentFigure
  31: 27 -> 24 loopIndependentDefUseDependence this.!getCurrentFigure
  32: 28 -> 20 loopIndependentDefUseDependence this.!drawGrabbedFigure
  33: 5 -> 2 loopIndependentDefUseDependence super.!paintComponent
  34: 6 -> 10 trueControlDependence
  35: 6 -> 11 trueControlDependence
  36: 6 -> 12 trueControlDependence
  37: 6 -> 13 trueControlDependence
  38: 6 -> 14 trueControlDependence
  39: 6 -> 15 trueControlDependence
  40: 9 -> 6 loopIndependentDefUseDependence this.figureManager.!getFigures
--
   0: serialVersionUID
   1: 0 -> 1 trueControlDependence
--
   0: mouseMoved( java.awt.event.MouseEvent )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 3 trueControlDependence
--
   0: currentFigure
   1: 0 -> 1 trueControlDependence
--
   0: undoManager
   1: 0 -> 1 trueControlDependence
--
   0: mouseExited( java.awt.event.MouseEvent )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 3 trueControlDependence
--
   0: menu
   1: 0 -> 1 trueControlDependence
--
   0: mousePressed( java.awt.event.MouseEvent )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 104 trueControlDependence
   4: 0 -> 2 trueControlDependence
   5: 0 -> 3 trueControlDependence
   6: 0 -> 4 trueControlDependence
   7: 0 -> 5 trueControlDependence
   8: 0 -> 6 trueControlDependence
   9: 0 -> 7 trueControlDependence
  10: 0 -> 8 trueControlDependence
  11: 0 -> 9 trueControlDependence
  12: 1 -> 18 loopIndependentDefUseDependence e$0
  13: 1 -> 19 loopIndependentDefUseDependence e$0
  14: 1 -> 22 loopIndependentDefUseDependence e$0
  15: 1 -> 23 loopIndependentDefUseDependence e$0
  16: 1 -> 47 loopIndependentDefUseDependence e$0
  17: 1 -> 48 loopIndependentDefUseDependence e$0
  18: 1 -> 51 loopIndependentDefUseDependence e$0
  19: 1 -> 52 loopIndependentDefUseDependence e$0
  20: 1 -> 70 loopIndependentDefUseDependence e$0
  21: 1 -> 71 loopIndependentDefUseDependence e$0
  22: 1 -> 74 loopIndependentDefUseDependence e$0
  23: 1 -> 75 loopIndependentDefUseDependence e$0
  24: 1 -> 85 loopIndependentDefUseDependence e$0
  25: 1 -> 86 loopIndependentDefUseDependence e$0
  26: 1 -> 89 loopIndependentDefUseDependence e$0
  27: 1 -> 90 loopIndependentDefUseDependence e$0
  28: 10 -> 100 trueControlDependence
  29: 10 -> 101 trueControlDependence
  30: 10 -> 11 trueControlDependence
  31: 10 -> 12 trueControlDependence
  32: 10 -> 13 trueControlDependence
  33: 10 -> 14 trueControlDependence
  34: 10 -> 15 trueControlDependence
  35: 10 -> 16 trueControlDependence
  36: 10 -> 17 trueControlDependence
  37: 10 -> 18 trueControlDependence
  38: 10 -> 19 trueControlDependence
  39: 10 -> 20 trueControlDependence
  40: 10 -> 21 trueControlDependence
  41: 10 -> 22 trueControlDependence
  42: 10 -> 23 trueControlDependence
  43: 10 -> 24 trueControlDependence
  44: 10 -> 25 trueControlDependence
  45: 10 -> 26 trueControlDependence
  46: 10 -> 27 trueControlDependence
  47: 10 -> 28 trueControlDependence
  48: 10 -> 29 trueControlDependence
  49: 10 -> 30 trueControlDependence
  50: 10 -> 55 falseControlDependence
  51: 10 -> 56 trueControlDependence
  52: 10 -> 57 falseControlDependence
  53: 10 -> 58 trueControlDependence
  54: 10 -> 59 trueControlDependence
  55: 10 -> 60 falseControlDependence
  56: 10 -> 61 trueControlDependence
  57: 10 -> 62 trueControlDependence
  58: 10 -> 63 falseControlDependence
  59: 10 -> 64 trueControlDependence
  60: 10 -> 65 trueControlDependence
  61: 10 -> 66 falseControlDependence
  62: 10 -> 67 trueControlDependence
  63: 10 -> 68 falseControlDependence
  64: 10 -> 69 trueControlDependence
  65: 10 -> 70 trueControlDependence
  66: 10 -> 71 falseControlDependence
  67: 10 -> 72 trueControlDependence
  68: 10 -> 73 trueControlDependence
  69: 10 -> 74 trueControlDependence
  70: 10 -> 75 falseControlDependence
  71: 10 -> 76 trueControlDependence
  72: 10 -> 77 trueControlDependence
  73: 10 -> 78 falseControlDependence
  74: 10 -> 79 trueControlDependence
  75: 10 -> 80 trueControlDependence
  76: 10 -> 81 falseControlDependence
  77: 10 -> 82 trueControlDependence
  78: 10 -> 83 falseControlDependence
  79: 10 -> 84 trueControlDependence
  80: 10 -> 85 trueControlDependence
  81: 10 -> 86 falseControlDependence
  82: 10 -> 87 trueControlDependence
  83: 10 -> 88 trueControlDependence
  84: 10 -> 89 trueControlDependence
  85: 10 -> 90 falseControlDependence
  86: 10 -> 91 trueControlDependence
  87: 10 -> 92 trueControlDependence
  88: 10 -> 93 falseControlDependence
  89: 10 -> 94 trueControlDependence
  90: 10 -> 95 falseControlDependence
  91: 10 -> 96 trueControlDependence
  92: 10 -> 97 trueControlDependence
  93: 10 -> 98 trueControlDependence
  94: 10 -> 99 falseControlDependence
  95: 100 -> 97 loopIndependentDefUseDependence this.!getCurrentFigure
  96: 101 -> 93 loopIndependentDefUseDependence this.!drawRubber
  97: 13 -> 26 loopIndependentDefUseDependence this.currentFigure
  98: 14 -> 26 summary
  99: 2 -> 42 declaration
 100: 2 -> 42 loopIndependentDefUseDependence g$1
 101: 2 -> 96 declaration
 102: 2 -> 96 loopIndependentDefUseDependence g$1
 103: 20 -> 17 loopIndependentDefUseDependence e$0.!getX
 104: 20 -> 49 outputDependence e$0.!getX
 105: 24 -> 21 loopIndependentDefUseDependence e$0.!getY
 106: 24 -> 53 outputDependence e$0.!getY
 107: 25 -> 14 loopIndependentDefUseDependence this.!getGrabbedFigure
 108: 26 -> 104 loopIndependentDefUseDependence this.currentFigure
 109: 26 -> 11 loopIndependentDefUseDependence this.!setCurrentFigure
 110: 26 -> 29 loopIndependentDefUseDependence this.currentFigure
 111: 26 -> 30 loopIndependentDefUseDependence this.currentFigure
 112: 26 -> 35 loopIndependentDefUseDependence this.currentFigure
 113: 26 -> 36 loopIndependentDefUseDependence this.currentFigure
 114: 27 -> 31 trueControlDependence
 115: 27 -> 46 trueControlDependence
 116: 27 -> 47 trueControlDependence
 117: 27 -> 48 trueControlDependence
 118: 27 -> 49 trueControlDependence
 119: 27 -> 50 trueControlDependence
 120: 27 -> 51 trueControlDependence
 121: 27 -> 52 trueControlDependence
 122: 27 -> 53 trueControlDependence
 123: 30 -> 27 loopIndependentDefUseDependence this.!getCurrentFigure
 124: 30 -> 36 outputDependence this.!getCurrentFigure
 125: 31 -> 32 trueControlDependence
 126: 31 -> 33 trueControlDependence
 127: 31 -> 34 trueControlDependence
 128: 31 -> 35 trueControlDependence
 129: 31 -> 36 trueControlDependence
 130: 31 -> 37 trueControlDependence
 131: 31 -> 38 trueControlDependence
 132: 31 -> 39 trueControlDependence
 133: 31 -> 40 trueControlDependence
 134: 31 -> 41 trueControlDependence
 135: 31 -> 42 trueControlDependence
 136: 31 -> 43 trueControlDependence
 137: 31 -> 44 trueControlDependence
 138: 32 -> 104 loopIndependentDefUseDependence this.grabbedFigure
 139: 32 -> 43 loopIndependentDefUseDependence this.grabbedFigure
 140: 36 -> 33 loopIndependentDefUseDependence this.!getCurrentFigure
 141: 38 -> 32 loopIndependentDefUseDependence this.!getCurrentFigure.!createClone
 142: 38 -> 43 loopIndependentDefUseDependence this.!getCurrentFigure.!createClone
 143: 44 -> 39 loopIndependentDefUseDependence this.!drawGrabbedFigure
 144: 46 -> 104 loopIndependentDefUseDependence this.curX
 145: 49 -> 46 loopIndependentDefUseDependence e$0.!getX
 146: 5 -> 2 loopIndependentDefUseDependence this.!getGraphics
 147: 5 -> 42 loopIndependentDefUseDependence this.!getGraphics
 148: 5 -> 96 loopIndependentDefUseDependence this.!getGraphics
 149: 50 -> 104 loopIndependentDefUseDependence this.curY
 150: 53 -> 50 loopIndependentDefUseDependence e$0.!getY
 151: 57 -> 62 loopIndependentDefUseDependence this.currentFigure
 152: 58 -> 62 summary
 153: 6 -> 10 loopIndependentDefUseDependence this.isGrabMode
 154: 6 -> 104 loopIndependentDefUseDependence this.isGrabMode
 155: 61 -> 58 loopIndependentDefUseDependence this.selector.!createFigure
 156: 62 -> 100 loopIndependentDefUseDependence this.currentFigure
 157: 62 -> 104 loopIndependentDefUseDependence this.currentFigure
 158: 62 -> 55 loopIndependentDefUseDependence this.!setCurrentFigure
 159: 62 -> 66 loopIndependentDefUseDependence this.currentFigure
 160: 62 -> 67 loopIndependentDefUseDependence this.currentFigure
 161: 62 -> 81 loopIndependentDefUseDependence this.currentFigure
 162: 62 -> 82 loopIndependentDefUseDependence this.currentFigure
 163: 62 -> 99 loopIndependentDefUseDependence this.currentFigure
 164: 67 -> 64 loopIndependentDefUseDependence this.!getCurrentFigure
 165: 67 -> 82 outputDependence this.!getCurrentFigure
 166: 68 -> 77 loopIndependentDefUseDependence this.!getCurrentFigure.startX
 167: 68 -> 77 loopIndependentDefUseDependence this.!getCurrentFigure.startY
 168: 69 -> 77 summary
 169: 72 -> 69 loopIndependentDefUseDependence e$0.!getX
 170: 72 -> 87 outputDependence e$0.!getX
 171: 73 -> 77 summary
 172: 76 -> 73 loopIndependentDefUseDependence e$0.!getY
 173: 76 -> 91 outputDependence e$0.!getY
 174: 77 -> 104 loopIndependentDefUseDependence this.!getCurrentFigure.startX
 175: 77 -> 104 loopIndependentDefUseDependence this.!getCurrentFigure.startY
 176: 77 -> 63 loopIndependentDefUseDependence this.!getCurrentFigure.!setStart
 177: 82 -> 100 outputDependence this.!getCurrentFigure
 178: 82 -> 79 loopIndependentDefUseDependence this.!getCurrentFigure
 179: 83 -> 92 loopIndependentDefUseDependence this.!getCurrentFigure.endX
 180: 83 -> 92 loopIndependentDefUseDependence this.!getCurrentFigure.endY
 181: 84 -> 92 summary
 182: 87 -> 84 loopIndependentDefUseDependence e$0.!getX
 183: 88 -> 92 summary
 184: 9 -> 6 loopIndependentDefUseDependence this.selector.!isGrabMode
 185: 91 -> 88 loopIndependentDefUseDependence e$0.!getY
 186: 92 -> 104 loopIndependentDefUseDependence this.!getCurrentFigure.endX
 187: 92 -> 104 loopIndependentDefUseDependence this.!getCurrentFigure.endY
 188: 92 -> 78 loopIndependentDefUseDependence this.!getCurrentFigure.!setEnd
--
   0: drawOutline( java.awt.Graphics jp.ac.ritsumei.cs.draw.Figure )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 24 trueControlDependence
  17: 0 -> 3 trueControlDependence
  18: 0 -> 4 trueControlDependence
  19: 0 -> 5 trueControlDependence
  20: 0 -> 6 trueControlDependence
  21: 0 -> 7 trueControlDependence
  22: 0 -> 8 trueControlDependence
  23: 0 -> 9 trueControlDependence
  24: 1 -> 17 loopIndependentDefUseDependence g$0
  25: 1 -> 20 loopIndependentDefUseDependence g$0
  26: 1 -> 4 loopIndependentDefUseDependence g$0
  27: 1 -> 8 loopIndependentDefUseDependence g$0
  28: 12 -> 9 loopIndependentDefUseDependence this.!getBackground
  29: 13 -> 7 loopIndependentDefUseDependence g$0.!setXORMode
  30: 18 -> 14 loopIndependentDefUseDependence figure$1.!drawOutline
  31: 2 -> 15 loopIndependentDefUseDependence figure$1
  32: 22 -> 19 loopIndependentDefUseDependence g$0.!setColor
  33: 3 -> 21 declaration
  34: 3 -> 21 loopIndependentDefUseDependence c$2
  35: 6 -> 21 loopIndependentDefUseDependence g$0.!getColor
  36: 6 -> 3 loopIndependentDefUseDependence g$0.!getColor
--
   0: changed
   1: 0 -> 1 trueControlDependence
--
   0: removeUndoableEditListener( javax.swing.event.UndoableEditListener )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 0 -> 4 trueControlDependence
   5: 0 -> 5 trueControlDependence
   6: 0 -> 7 trueControlDependence
   7: 1 -> 4 loopIndependentDefUseDependence listener$0
   8: 4 -> 5 loopIndependentDefUseDependence java.util.AbstractList.modCount
   9: 4 -> 5 loopIndependentDefUseDependence this.support
  10: 5 -> 2 loopIndependentDefUseDependence this.support.!removeUndoableEditListener
  11: 5 -> 7 loopIndependentDefUseDependence java.util.AbstractList.modCount
  12: 5 -> 7 loopIndependentDefUseDependence this.support
--
   0: clearFigure( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 0 -> 4 trueControlDependence
   5: 0 -> 5 trueControlDependence
   6: 0 -> 6 trueControlDependence
   7: 0 -> 8 trueControlDependence
   8: 3 -> 5 loopIndependentDefUseDependence this.currentFigure
   9: 4 -> 5 summary
  10: 5 -> 1 loopIndependentDefUseDependence this.!setCurrentFigure
  11: 5 -> 8 loopIndependentDefUseDependence this.currentFigure
  12: 6 -> 8 loopIndependentDefUseDependence this.grabbedFigure
--
   0: isGrabMode
   1: 0 -> 1 trueControlDependence
--
   0: drawFigure( java.awt.Graphics jp.ac.ritsumei.cs.draw.Figure )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 21 trueControlDependence
  14: 0 -> 3 trueControlDependence
  15: 0 -> 4 trueControlDependence
  16: 0 -> 5 trueControlDependence
  17: 0 -> 6 trueControlDependence
  18: 0 -> 7 trueControlDependence
  19: 0 -> 8 trueControlDependence
  20: 0 -> 9 trueControlDependence
  21: 1 -> 14 loopIndependentDefUseDependence g$0
  22: 1 -> 17 loopIndependentDefUseDependence g$0
  23: 1 -> 4 loopIndependentDefUseDependence g$0
  24: 1 -> 8 loopIndependentDefUseDependence g$0
  25: 10 -> 7 loopIndependentDefUseDependence g$0.!setPaintMode
  26: 15 -> 11 loopIndependentDefUseDependence figure$1.!draw
  27: 19 -> 16 loopIndependentDefUseDependence g$0.!setColor
  28: 2 -> 12 loopIndependentDefUseDependence figure$1
  29: 3 -> 18 declaration
  30: 3 -> 18 loopIndependentDefUseDependence c$2
  31: 6 -> 18 loopIndependentDefUseDependence g$0.!getColor
  32: 6 -> 3 loopIndependentDefUseDependence g$0.!getColor
--
   0: getUndoManager( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 3 trueControlDependence
   3: 1 -> 3 loopIndependentDefUseDependence $_
--
   0: hasChanged( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 3 trueControlDependence
   3: 1 -> 3 loopIndependentDefUseDependence $_
--
   0: setChanged( boolean )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 4 trueControlDependence
   4: 1 -> 2 loopIndependentDefUseDependence bool$0
   5: 2 -> 4 loopIndependentDefUseDependence this.changed
--
   0: getCurrentFigure( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 3 trueControlDependence
   3: 1 -> 3 loopIndependentDefUseDependence $_
--
   0: setCurrentFigure( jp.ac.ritsumei.cs.draw.Figure )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 0 -> 4 trueControlDependence
   5: 0 -> 5 trueControlDependence
   6: 0 -> 6 trueControlDependence
   7: 0 -> 8 trueControlDependence
   8: 1 -> 2 loopIndependentDefUseDependence figure$0
   9: 2 -> 8 loopIndependentDefUseDependence this.currentFigure
  10: 6 -> 3 loopIndependentDefUseDependence this.!notifyAll
--
   0: addUndoableEditListener( javax.swing.event.UndoableEditListener )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 0 -> 4 trueControlDependence
   5: 0 -> 5 trueControlDependence
   6: 0 -> 7 trueControlDependence
   7: 1 -> 4 loopIndependentDefUseDependence listener$0
   8: 4 -> 5 loopIndependentDefUseDependence java.util.AbstractList.modCount
   9: 4 -> 5 loopIndependentDefUseDependence this.support
  10: 5 -> 2 loopIndependentDefUseDependence this.support.!addUndoableEditListener
  11: 5 -> 7 loopIndependentDefUseDependence java.util.AbstractList.modCount
  12: 5 -> 7 loopIndependentDefUseDependence this.support
--
   0: drawRubber( java.awt.Graphics jp.ac.ritsumei.cs.draw.Figure )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 24 trueControlDependence
  17: 0 -> 3 trueControlDependence
  18: 0 -> 4 trueControlDependence
  19: 0 -> 5 trueControlDependence
  20: 0 -> 6 trueControlDependence
  21: 0 -> 7 trueControlDependence
  22: 0 -> 8 trueControlDependence
  23: 0 -> 9 trueControlDependence
  24: 1 -> 17 loopIndependentDefUseDependence g$0
  25: 1 -> 20 loopIndependentDefUseDependence g$0
  26: 1 -> 4 loopIndependentDefUseDependence g$0
  27: 1 -> 8 loopIndependentDefUseDependence g$0
  28: 12 -> 9 loopIndependentDefUseDependence this.!getBackground
  29: 13 -> 7 loopIndependentDefUseDependence g$0.!setXORMode
  30: 18 -> 14 loopIndependentDefUseDependence figure$1.!drawRubber
  31: 2 -> 15 loopIndependentDefUseDependence figure$1
  32: 22 -> 19 loopIndependentDefUseDependence g$0.!setColor
  33: 3 -> 21 declaration
  34: 3 -> 21 loopIndependentDefUseDependence c$2
  35: 6 -> 21 loopIndependentDefUseDependence g$0.!getColor
  36: 6 -> 3 loopIndependentDefUseDependence g$0.!getColor
--
   0: setUndoManager( javax.swing.undo.UndoManager )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 4 trueControlDependence
   4: 1 -> 2 loopIndependentDefUseDependence undoManger$0
   5: 2 -> 4 loopIndependentDefUseDependence this.undoManager
--
   0: getFigureManager( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 3 trueControlDependence
   3: 1 -> 3 loopIndependentDefUseDependence $_
--
   0: mouseClicked( java.awt.event.MouseEvent )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 3 trueControlDependence
--
   0: mouseDragged( java.awt.event.MouseEvent )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 0 -> 4 trueControlDependence
   5: 0 -> 5 trueControlDependence
   6: 0 -> 96 trueControlDependence
   7: 1 -> 12 loopIndependentDefUseDependence e$0
   8: 1 -> 13 loopIndependentDefUseDependence e$0
   9: 1 -> 15 loopIndependentDefUseDependence e$0
  10: 1 -> 16 loopIndependentDefUseDependence e$0
  11: 1 -> 34 loopIndependentDefUseDependence e$0
  12: 1 -> 35 loopIndependentDefUseDependence e$0
  13: 1 -> 38 loopIndependentDefUseDependence e$0
  14: 1 -> 39 loopIndependentDefUseDependence e$0
  15: 1 -> 43 loopIndependentDefUseDependence e$0
  16: 1 -> 44 loopIndependentDefUseDependence e$0
  17: 1 -> 47 loopIndependentDefUseDependence e$0
  18: 1 -> 48 loopIndependentDefUseDependence e$0
  19: 1 -> 76 loopIndependentDefUseDependence e$0
  20: 1 -> 77 loopIndependentDefUseDependence e$0
  21: 1 -> 80 loopIndependentDefUseDependence e$0
  22: 1 -> 81 loopIndependentDefUseDependence e$0
  23: 10 -> 11 trueControlDependence
  24: 10 -> 12 trueControlDependence
  25: 10 -> 13 trueControlDependence
  26: 10 -> 14 trueControlDependence
  27: 10 -> 15 trueControlDependence
  28: 10 -> 16 trueControlDependence
  29: 10 -> 17 trueControlDependence
  30: 10 -> 60 falseControlDependence
  31: 10 -> 61 trueControlDependence
  32: 10 -> 62 falseControlDependence
  33: 10 -> 63 trueControlDependence
  34: 10 -> 64 trueControlDependence
  35: 10 -> 65 trueControlDependence
  36: 10 -> 66 falseControlDependence
  37: 10 -> 67 trueControlDependence
  38: 10 -> 68 trueControlDependence
  39: 10 -> 69 falseControlDependence
  40: 10 -> 70 trueControlDependence
  41: 10 -> 71 trueControlDependence
  42: 10 -> 72 falseControlDependence
  43: 10 -> 73 trueControlDependence
  44: 10 -> 74 falseControlDependence
  45: 10 -> 75 trueControlDependence
  46: 10 -> 76 trueControlDependence
  47: 10 -> 77 falseControlDependence
  48: 10 -> 78 trueControlDependence
  49: 10 -> 79 trueControlDependence
  50: 10 -> 80 trueControlDependence
  51: 10 -> 81 falseControlDependence
  52: 10 -> 82 trueControlDependence
  53: 10 -> 83 trueControlDependence
  54: 10 -> 84 falseControlDependence
  55: 10 -> 85 trueControlDependence
  56: 10 -> 86 falseControlDependence
  57: 10 -> 87 trueControlDependence
  58: 10 -> 88 trueControlDependence
  59: 10 -> 89 trueControlDependence
  60: 10 -> 90 falseControlDependence
  61: 10 -> 91 trueControlDependence
  62: 10 -> 92 trueControlDependence
  63: 11 -> 18 trueControlDependence
  64: 11 -> 19 trueControlDependence
  65: 11 -> 20 trueControlDependence
  66: 11 -> 21 trueControlDependence
  67: 11 -> 22 trueControlDependence
  68: 11 -> 23 trueControlDependence
  69: 11 -> 24 trueControlDependence
  70: 11 -> 25 trueControlDependence
  71: 11 -> 26 trueControlDependence
  72: 11 -> 27 trueControlDependence
  73: 11 -> 28 trueControlDependence
  74: 11 -> 29 trueControlDependence
  75: 11 -> 30 trueControlDependence
  76: 11 -> 31 trueControlDependence
  77: 11 -> 32 trueControlDependence
  78: 11 -> 33 trueControlDependence
  79: 11 -> 34 trueControlDependence
  80: 11 -> 35 trueControlDependence
  81: 11 -> 36 trueControlDependence
  82: 11 -> 37 trueControlDependence
  83: 11 -> 38 trueControlDependence
  84: 11 -> 39 trueControlDependence
  85: 11 -> 40 trueControlDependence
  86: 11 -> 41 trueControlDependence
  87: 11 -> 42 trueControlDependence
  88: 11 -> 43 trueControlDependence
  89: 11 -> 44 trueControlDependence
  90: 11 -> 45 trueControlDependence
  91: 11 -> 46 trueControlDependence
  92: 11 -> 47 trueControlDependence
  93: 11 -> 48 trueControlDependence
  94: 11 -> 49 trueControlDependence
  95: 11 -> 50 trueControlDependence
  96: 11 -> 51 trueControlDependence
  97: 11 -> 52 trueControlDependence
  98: 11 -> 53 trueControlDependence
  99: 11 -> 54 trueControlDependence
 100: 11 -> 55 trueControlDependence
 101: 11 -> 56 trueControlDependence
 102: 11 -> 57 trueControlDependence
 103: 11 -> 58 trueControlDependence
 104: 14 -> 11 loopIndependentDefUseDependence e$0.!getX
 105: 14 -> 36 outputDependence e$0.!getX
 106: 17 -> 11 loopIndependentDefUseDependence e$0.!getY
 107: 17 -> 40 outputDependence e$0.!getY
 108: 2 -> 10 trueControlDependence
 109: 2 -> 6 trueControlDependence
 110: 2 -> 7 trueControlDependence
 111: 2 -> 8 trueControlDependence
 112: 2 -> 9 trueControlDependence
 113: 25 -> 22 loopIndependentDefUseDependence this.!getCurrentFigure
 114: 25 -> 31 outputDependence this.!getCurrentFigure
 115: 26 -> 18 loopIndependentDefUseDependence this.!drawOutline
 116: 26 -> 58 outputDependence this.!drawOutline
 117: 31 -> 28 loopIndependentDefUseDependence this.!getCurrentFigure
 118: 31 -> 57 outputDependence this.!getCurrentFigure
 119: 32 -> 41 loopIndependentDefUseDependence this.!getCurrentFigure.endX
 120: 32 -> 41 loopIndependentDefUseDependence this.!getCurrentFigure.endY
 121: 32 -> 41 loopIndependentDefUseDependence this.!getCurrentFigure.startX
 122: 32 -> 41 loopIndependentDefUseDependence this.!getCurrentFigure.startY
 123: 33 -> 41 summary
 124: 36 -> 33 loopIndependentDefUseDependence e$0.!getX
 125: 36 -> 45 outputDependence e$0.!getX
 126: 37 -> 41 summary
 127: 40 -> 37 loopIndependentDefUseDependence e$0.!getY
 128: 40 -> 49 outputDependence e$0.!getY
 129: 41 -> 27 loopIndependentDefUseDependence this.!getCurrentFigure.!move
 130: 41 -> 96 loopIndependentDefUseDependence this.!getCurrentFigure.endX
 131: 41 -> 96 loopIndependentDefUseDependence this.!getCurrentFigure.endY
 132: 41 -> 96 loopIndependentDefUseDependence this.!getCurrentFigure.startX
 133: 41 -> 96 loopIndependentDefUseDependence this.!getCurrentFigure.startY
 134: 42 -> 96 loopIndependentDefUseDependence this.curX
 135: 45 -> 42 loopIndependentDefUseDependence e$0.!getX
 136: 46 -> 96 loopIndependentDefUseDependence this.curY
 137: 49 -> 46 loopIndependentDefUseDependence e$0.!getY
 138: 5 -> 2 loopIndependentDefUseDependence this.!getCurrentFigure
 139: 5 -> 25 outputDependence this.!getCurrentFigure
 140: 5 -> 67 outputDependence this.!getCurrentFigure
 141: 57 -> 54 loopIndependentDefUseDependence this.!getCurrentFigure
 142: 58 -> 50 loopIndependentDefUseDependence this.!drawOutline
 143: 6 -> 21 declaration
 144: 6 -> 21 loopIndependentDefUseDependence g$1
 145: 6 -> 53 declaration
 146: 6 -> 53 loopIndependentDefUseDependence g$1
 147: 6 -> 63 declaration
 148: 6 -> 63 loopIndependentDefUseDependence g$1
 149: 6 -> 87 declaration
 150: 6 -> 87 loopIndependentDefUseDependence g$1
 151: 67 -> 64 loopIndependentDefUseDependence this.!getCurrentFigure
 152: 67 -> 73 outputDependence this.!getCurrentFigure
 153: 68 -> 60 loopIndependentDefUseDependence this.!drawRubber
 154: 68 -> 92 outputDependence this.!drawRubber
 155: 73 -> 70 loopIndependentDefUseDependence this.!getCurrentFigure
 156: 73 -> 91 outputDependence this.!getCurrentFigure
 157: 74 -> 83 loopIndependentDefUseDependence this.!getCurrentFigure.endX
 158: 74 -> 83 loopIndependentDefUseDependence this.!getCurrentFigure.endY
 159: 75 -> 83 summary
 160: 78 -> 75 loopIndependentDefUseDependence e$0.!getX
 161: 79 -> 83 summary
 162: 82 -> 79 loopIndependentDefUseDependence e$0.!getY
 163: 83 -> 69 loopIndependentDefUseDependence this.!getCurrentFigure.!setEnd
 164: 83 -> 96 loopIndependentDefUseDependence this.!getCurrentFigure.endX
 165: 83 -> 96 loopIndependentDefUseDependence this.!getCurrentFigure.endY
 166: 9 -> 21 loopIndependentDefUseDependence this.!getGraphics
 167: 9 -> 53 loopIndependentDefUseDependence this.!getGraphics
 168: 9 -> 6 loopIndependentDefUseDependence this.!getGraphics
 169: 9 -> 63 loopIndependentDefUseDependence this.!getGraphics
 170: 9 -> 87 loopIndependentDefUseDependence this.!getGraphics
 171: 91 -> 88 loopIndependentDefUseDependence this.!getCurrentFigure
 172: 92 -> 84 loopIndependentDefUseDependence this.!drawRubber
--
   0: grabbedFigure
   1: 0 -> 1 trueControlDependence
--
   0: drawGrabbedFigure( java.awt.Graphics jp.ac.ritsumei.cs.draw.Figure )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 24 trueControlDependence
  17: 0 -> 3 trueControlDependence
  18: 0 -> 4 trueControlDependence
  19: 0 -> 5 trueControlDependence
  20: 0 -> 6 trueControlDependence
  21: 0 -> 7 trueControlDependence
  22: 0 -> 8 trueControlDependence
  23: 0 -> 9 trueControlDependence
  24: 1 -> 17 loopIndependentDefUseDependence g$0
  25: 1 -> 20 loopIndependentDefUseDependence g$0
  26: 1 -> 4 loopIndependentDefUseDependence g$0
  27: 1 -> 8 loopIndependentDefUseDependence g$0
  28: 12 -> 9 loopIndependentDefUseDependence this.!getBackground
  29: 13 -> 7 loopIndependentDefUseDependence g$0.!setXORMode
  30: 18 -> 14 loopIndependentDefUseDependence figure$1.!drawGrabbedFigure
  31: 2 -> 15 loopIndependentDefUseDependence figure$1
  32: 22 -> 19 loopIndependentDefUseDependence g$0.!setColor
  33: 3 -> 21 declaration
  34: 3 -> 21 loopIndependentDefUseDependence c$2
  35: 6 -> 21 loopIndependentDefUseDependence g$0.!getColor
  36: 6 -> 3 loopIndependentDefUseDependence g$0.!getColor
--
   0: isOverlapped( jp.ac.ritsumei.cs.draw.Figure )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 15 trueControlDependence
   3: 0 -> 2 trueControlDependence
   4: 0 -> 3 trueControlDependence
   5: 0 -> 4 trueControlDependence
   6: 0 -> 5 trueControlDependence
   7: 1 -> 7 loopIndependentDefUseDependence figure$0
   8: 10 -> 10 defOrderDependence figure$0.!isOverlapped
   9: 10 -> 6 loopIndependentDefUseDependence figure$0.!isOverlapped
  10: 11 -> 15 loopIndependentDefUseDependence $_
  11: 11 -> 2 fallThroughControlDependence
  12: 13 -> 15 loopIndependentDefUseDependence $_
  13: 2 -> 10 trueControlDependence
  14: 2 -> 13 falseControlDependence
  15: 2 -> 6 trueControlDependence
  16: 2 -> 7 trueControlDependence
  17: 2 -> 8 trueControlDependence
  18: 2 -> 9 trueControlDependence
  19: 5 -> 2 loopIndependentDefUseDependence this.figureManager.!getFigures
  20: 6 -> 11 trueControlDependence
  21: 6 -> 2 falseControlDependence
--
   0: getGrabbedFigure( int int )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 18 trueControlDependence
   7: 0 -> 19 trueControlDependence
   8: 0 -> 2 trueControlDependence
   9: 0 -> 20 trueControlDependence
  10: 0 -> 21 trueControlDependence
  11: 0 -> 3 trueControlDependence
  12: 0 -> 36 trueControlDependence
  13: 0 -> 4 trueControlDependence
  14: 0 -> 5 trueControlDependence
  15: 0 -> 6 trueControlDependence
  16: 0 -> 7 trueControlDependence
  17: 0 -> 8 trueControlDependence
  18: 0 -> 9 trueControlDependence
  19: 1 -> 29 loopIndependentDefUseDependence x$0
  20: 10 -> 14 trueControlDependence
  21: 10 -> 15 trueControlDependence
  22: 10 -> 16 trueControlDependence
  23: 10 -> 17 trueControlDependence
  24: 13 -> 10 loopIndependentDefUseDependence it$2.!hasNext
  25: 17 -> 14 loopIndependentDefUseDependence it$2.!next
  26: 17 -> 17 defOrderDependence it$2.!next
  27: 18 -> 22 trueControlDependence
  28: 18 -> 23 trueControlDependence
  29: 18 -> 24 trueControlDependence
  30: 18 -> 25 trueControlDependence
  31: 18 -> 26 trueControlDependence
  32: 18 -> 27 trueControlDependence
  33: 18 -> 28 trueControlDependence
  34: 18 -> 29 trueControlDependence
  35: 18 -> 30 trueControlDependence
  36: 18 -> 31 trueControlDependence
  37: 18 -> 34 falseControlDependence
  38: 2 -> 30 loopIndependentDefUseDependence y$1
  39: 21 -> 18 loopIndependentDefUseDependence it$2.!hasPrevious
  40: 22 -> 22 defOrderDependence figure$3
  41: 22 -> 27 declaration
  42: 22 -> 27 loopIndependentDefUseDependence figure$3
  43: 22 -> 32 declaration
  44: 22 -> 32 loopIndependentDefUseDependence figure$3
  45: 25 -> 22 loopIndependentDefUseDependence it$2.!previous
  46: 25 -> 25 defOrderDependence it$2.!previous
  47: 26 -> 18 falseControlDependence
  48: 26 -> 32 trueControlDependence
  49: 3 -> 11 declaration
  50: 3 -> 11 loopIndependentDefUseDependence it$2
  51: 3 -> 15 declaration
  52: 3 -> 15 loopIndependentDefUseDependence it$2
  53: 3 -> 19 declaration
  54: 3 -> 19 loopIndependentDefUseDependence it$2
  55: 3 -> 23 declaration
  56: 3 -> 23 loopIndependentDefUseDependence it$2
  57: 31 -> 26 loopIndependentDefUseDependence figure$3.!isGrabbed
  58: 31 -> 31 defOrderDependence figure$3.!isGrabbed
  59: 32 -> 18 fallThroughControlDependence
  60: 32 -> 36 loopIndependentDefUseDependence $_
  61: 34 -> 36 loopIndependentDefUseDependence $_
  62: 7 -> 4 loopIndependentDefUseDependence this.figureManager.!getFigures
  63: 9 -> 11 loopIndependentDefUseDependence this.figureManager.!getFigures.!listIterator
  64: 9 -> 15 loopIndependentDefUseDependence this.figureManager.!getFigures.!listIterator
  65: 9 -> 19 loopIndependentDefUseDependence this.figureManager.!getFigures.!listIterator
  66: 9 -> 23 loopIndependentDefUseDependence this.figureManager.!getFigures.!listIterator
  67: 9 -> 3 loopIndependentDefUseDependence this.figureManager.!getFigures.!listIterator
--
   0: pasteFigure( jp.ac.ritsumei.cs.draw.Figure )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 23 trueControlDependence
  17: 0 -> 24 trueControlDependence
  18: 0 -> 25 trueControlDependence
  19: 0 -> 26 trueControlDependence
  20: 0 -> 27 trueControlDependence
  21: 0 -> 28 trueControlDependence
  22: 0 -> 3 trueControlDependence
  23: 0 -> 35 trueControlDependence
  24: 0 -> 36 trueControlDependence
  25: 0 -> 37 trueControlDependence
  26: 0 -> 38 trueControlDependence
  27: 0 -> 39 trueControlDependence
  28: 0 -> 4 trueControlDependence
  29: 0 -> 40 trueControlDependence
  30: 0 -> 41 trueControlDependence
  31: 0 -> 42 trueControlDependence
  32: 0 -> 43 trueControlDependence
  33: 0 -> 44 trueControlDependence
  34: 0 -> 45 trueControlDependence
  35: 0 -> 46 trueControlDependence
  36: 0 -> 47 trueControlDependence
  37: 0 -> 48 trueControlDependence
  38: 0 -> 49 trueControlDependence
  39: 0 -> 5 trueControlDependence
  40: 0 -> 50 trueControlDependence
  41: 0 -> 51 trueControlDependence
  42: 0 -> 52 trueControlDependence
  43: 0 -> 54 trueControlDependence
  44: 0 -> 6 trueControlDependence
  45: 0 -> 7 trueControlDependence
  46: 0 -> 8 trueControlDependence
  47: 0 -> 9 trueControlDependence
  48: 1 -> 27 loopIndependentDefUseDependence figure$0
  49: 1 -> 30 loopIndependentDefUseDependence figure$0
  50: 1 -> 38 loopIndependentDefUseDependence figure$0
  51: 1 -> 8 loopIndependentDefUseDependence figure$0
  52: 10 -> 2 loopIndependentDefUseDependence this.support.!postEdit
  53: 14 -> 11 loopIndependentDefUseDependence this.menu.!updateUndoState
  54: 18 -> 15 loopIndependentDefUseDependence this.menu.!updateRedoState
  55: 23 -> 19 loopIndependentDefUseDependence this.menu.!updateEditState
  56: 24 -> 29 trueControlDependence
  57: 24 -> 30 trueControlDependence
  58: 24 -> 31 trueControlDependence
  59: 24 -> 32 trueControlDependence
  60: 24 -> 33 trueControlDependence
  61: 24 -> 34 trueControlDependence
  62: 28 -> 24 loopIndependentDefUseDependence this.!isOverlapped
  63: 31 -> 34 loopIndependentDefUseDependence figure$0.endX
  64: 31 -> 34 loopIndependentDefUseDependence figure$0.endY
  65: 31 -> 34 loopIndependentDefUseDependence figure$0.startX
  66: 31 -> 34 loopIndependentDefUseDependence figure$0.startY
  67: 32 -> 34 summary
  68: 33 -> 34 summary
  69: 34 -> 29 loopIndependentDefUseDependence figure$0.!move
  70: 34 -> 31 loopCarriedDefUseDependence figure$0.endX 24
  71: 34 -> 31 loopCarriedDefUseDependence figure$0.endY 24
  72: 34 -> 31 loopCarriedDefUseDependence figure$0.startX 24
  73: 34 -> 31 loopCarriedDefUseDependence figure$0.startY 24
  74: 34 -> 34 defOrderDependence figure$0.!move
  75: 34 -> 54 loopIndependentDefUseDependence figure$0.endX
  76: 34 -> 54 loopIndependentDefUseDependence figure$0.endY
  77: 34 -> 54 loopIndependentDefUseDependence figure$0.startX
  78: 34 -> 54 loopIndependentDefUseDependence figure$0.startY
  79: 39 -> 35 loopIndependentDefUseDependence this.figureManager.!add
  80: 42 -> 44 loopIndependentDefUseDependence this.changed
  81: 43 -> 44 summary
  82: 44 -> 40 loopIndependentDefUseDependence this.!setChanged
  83: 44 -> 54 loopIndependentDefUseDependence this.changed
  84: 47 -> 48 loopIndependentDefUseDependence this.currentFigure
  85: 47 -> 48 loopIndependentDefUseDependence this.grabbedFigure
  86: 48 -> 45 loopIndependentDefUseDependence this.!clearFigure
  87: 48 -> 54 loopIndependentDefUseDependence this.currentFigure
  88: 48 -> 54 loopIndependentDefUseDependence this.grabbedFigure
  89: 52 -> 49 loopIndependentDefUseDependence this.!repaint
  90: 7 -> 9 summary
  91: 8 -> 9 summary
  92: 9 -> 4 loopIndependentDefUseDependence FigureDrawn.!FigureDrawn
--
   0: figureManager
   1: 0 -> 1 trueControlDependence
--
   0: support
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 3 trueControlDependence
   4: 0 -> 4 trueControlDependence
   5: 3 -> 4 outputDependence UndoableEditSupport.compoundEdit
   6: 3 -> 4 outputDependence UndoableEditSupport.listeners
   7: 3 -> 4 outputDependence UndoableEditSupport.realSource
   8: 3 -> 4 outputDependence UndoableEditSupport.updateLevel
   9: 4 -> 1 loopIndependentDefUseDependence UndoableEditSupport.!UndoableEditSupport
--
   0: selector
   1: 0 -> 1 trueControlDependence
--
   0: deleteFigure( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 23 trueControlDependence
  17: 0 -> 24 trueControlDependence
  18: 0 -> 25 trueControlDependence
  19: 0 -> 26 trueControlDependence
  20: 0 -> 27 trueControlDependence
  21: 0 -> 28 trueControlDependence
  22: 0 -> 29 trueControlDependence
  23: 0 -> 3 trueControlDependence
  24: 0 -> 30 trueControlDependence
  25: 0 -> 31 trueControlDependence
  26: 0 -> 32 trueControlDependence
  27: 0 -> 33 trueControlDependence
  28: 0 -> 34 trueControlDependence
  29: 0 -> 35 trueControlDependence
  30: 0 -> 36 trueControlDependence
  31: 0 -> 37 trueControlDependence
  32: 0 -> 38 trueControlDependence
  33: 0 -> 39 trueControlDependence
  34: 0 -> 4 trueControlDependence
  35: 0 -> 40 trueControlDependence
  36: 0 -> 41 trueControlDependence
  37: 0 -> 42 trueControlDependence
  38: 0 -> 43 trueControlDependence
  39: 0 -> 45 trueControlDependence
  40: 0 -> 5 trueControlDependence
  41: 0 -> 6 trueControlDependence
  42: 0 -> 7 trueControlDependence
  43: 0 -> 8 trueControlDependence
  44: 0 -> 9 trueControlDependence
  45: 13 -> 10 loopIndependentDefUseDependence this.menu.!updateUndoState
  46: 17 -> 14 loopIndependentDefUseDependence this.menu.!updateRedoState
  47: 22 -> 18 loopIndependentDefUseDependence this.menu.!updateEditState
  48: 29 -> 26 loopIndependentDefUseDependence this.!getCurrentFigure
  49: 30 -> 23 loopIndependentDefUseDependence this.figureManager.!remove
  50: 33 -> 35 loopIndependentDefUseDependence this.changed
  51: 34 -> 35 summary
  52: 35 -> 31 loopIndependentDefUseDependence this.!setChanged
  53: 35 -> 45 loopIndependentDefUseDependence this.changed
  54: 38 -> 39 loopIndependentDefUseDependence this.currentFigure
  55: 38 -> 39 loopIndependentDefUseDependence this.grabbedFigure
  56: 39 -> 36 loopIndependentDefUseDependence this.!clearFigure
  57: 39 -> 45 loopIndependentDefUseDependence this.currentFigure
  58: 39 -> 45 loopIndependentDefUseDependence this.grabbedFigure
  59: 43 -> 40 loopIndependentDefUseDependence this.!repaint
  60: 6 -> 8 summary
  61: 7 -> 8 summary
  62: 8 -> 3 loopIndependentDefUseDependence FigureDeleted.!FigureDeleted
  63: 9 -> 1 loopIndependentDefUseDependence this.support.!postEdit
--
   0: getGrabbedFigure( )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 3 trueControlDependence
   3: 1 -> 3 loopIndependentDefUseDependence $_
--
   0: curY
   1: 0 -> 1 trueControlDependence
--
   0: curX
   1: 0 -> 1 trueControlDependence
--
   0: mouseReleased( java.awt.event.MouseEvent )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 171 trueControlDependence
   3: 0 -> 2 trueControlDependence
   4: 0 -> 3 trueControlDependence
   5: 0 -> 4 trueControlDependence
   6: 0 -> 5 trueControlDependence
   7: 1 -> 127 loopIndependentDefUseDependence e$0
   8: 1 -> 128 loopIndependentDefUseDependence e$0
   9: 1 -> 131 loopIndependentDefUseDependence e$0
  10: 1 -> 132 loopIndependentDefUseDependence e$0
  11: 1 -> 88 loopIndependentDefUseDependence e$0
  12: 1 -> 89 loopIndependentDefUseDependence e$0
  13: 1 -> 97 loopIndependentDefUseDependence e$0
  14: 1 -> 98 loopIndependentDefUseDependence e$0
  15: 10 -> 11 trueControlDependence
  16: 10 -> 12 trueControlDependence
  17: 10 -> 13 trueControlDependence
  18: 10 -> 14 trueControlDependence
  19: 10 -> 15 trueControlDependence
  20: 10 -> 16 trueControlDependence
  21: 10 -> 162 falseControlDependence
  22: 10 -> 163 trueControlDependence
  23: 10 -> 164 falseControlDependence
  24: 10 -> 165 trueControlDependence
  25: 10 -> 166 trueControlDependence
  26: 10 -> 167 falseControlDependence
  27: 10 -> 17 trueControlDependence
  28: 10 -> 18 trueControlDependence
  29: 10 -> 19 trueControlDependence
  30: 10 -> 20 trueControlDependence
  31: 10 -> 21 trueControlDependence
  32: 10 -> 22 trueControlDependence
  33: 10 -> 23 trueControlDependence
  34: 10 -> 24 trueControlDependence
  35: 10 -> 25 trueControlDependence
  36: 10 -> 26 trueControlDependence
  37: 10 -> 27 trueControlDependence
  38: 10 -> 28 trueControlDependence
  39: 10 -> 29 trueControlDependence
  40: 10 -> 72 falseControlDependence
  41: 10 -> 73 trueControlDependence
  42: 10 -> 74 falseControlDependence
  43: 10 -> 75 trueControlDependence
  44: 10 -> 76 trueControlDependence
  45: 10 -> 77 trueControlDependence
  46: 10 -> 78 falseControlDependence
  47: 10 -> 79 trueControlDependence
  48: 10 -> 80 trueControlDependence
  49: 10 -> 81 falseControlDependence
  50: 10 -> 82 trueControlDependence
  51: 10 -> 83 trueControlDependence
  52: 10 -> 84 falseControlDependence
  53: 10 -> 85 trueControlDependence
  54: 10 -> 86 falseControlDependence
  55: 10 -> 87 trueControlDependence
  56: 10 -> 88 trueControlDependence
  57: 10 -> 89 falseControlDependence
  58: 10 -> 90 trueControlDependence
  59: 10 -> 91 trueControlDependence
  60: 10 -> 92 trueControlDependence
  61: 10 -> 93 falseControlDependence
  62: 10 -> 94 trueControlDependence
  63: 10 -> 95 falseControlDependence
  64: 10 -> 96 trueControlDependence
  65: 10 -> 97 trueControlDependence
  66: 10 -> 98 falseControlDependence
  67: 10 -> 99 trueControlDependence
  68: 105 -> 110 summary
  69: 106 -> 110 summary
  70: 109 -> 106 loopIndependentDefUseDependence this.!getCurrentFigure
  71: 109 -> 124 outputDependence this.!getCurrentFigure
  72: 11 -> 30 trueControlDependence
  73: 11 -> 31 trueControlDependence
  74: 11 -> 32 trueControlDependence
  75: 11 -> 33 trueControlDependence
  76: 11 -> 34 trueControlDependence
  77: 11 -> 35 trueControlDependence
  78: 11 -> 36 trueControlDependence
  79: 11 -> 37 trueControlDependence
  80: 11 -> 38 trueControlDependence
  81: 11 -> 39 trueControlDependence
  82: 11 -> 40 trueControlDependence
  83: 11 -> 41 trueControlDependence
  84: 11 -> 42 trueControlDependence
  85: 11 -> 43 trueControlDependence
  86: 11 -> 44 trueControlDependence
  87: 11 -> 45 trueControlDependence
  88: 11 -> 46 trueControlDependence
  89: 11 -> 47 trueControlDependence
  90: 11 -> 48 trueControlDependence
  91: 11 -> 49 trueControlDependence
  92: 11 -> 50 trueControlDependence
  93: 11 -> 51 trueControlDependence
  94: 11 -> 52 trueControlDependence
  95: 11 -> 53 trueControlDependence
  96: 11 -> 54 trueControlDependence
  97: 11 -> 55 trueControlDependence
  98: 11 -> 56 trueControlDependence
  99: 11 -> 57 trueControlDependence
 100: 11 -> 58 trueControlDependence
 101: 11 -> 59 trueControlDependence
 102: 11 -> 60 trueControlDependence
 103: 11 -> 61 trueControlDependence
 104: 11 -> 62 trueControlDependence
 105: 11 -> 63 trueControlDependence
 106: 11 -> 64 trueControlDependence
 107: 11 -> 65 trueControlDependence
 108: 11 -> 66 falseControlDependence
 109: 11 -> 67 trueControlDependence
 110: 11 -> 68 falseControlDependence
 111: 11 -> 69 trueControlDependence
 112: 11 -> 70 trueControlDependence
 113: 110 -> 102 loopIndependentDefUseDependence FigureDrawn.!FigureDrawn
 114: 111 -> 100 loopIndependentDefUseDependence this.support.!postEdit
 115: 115 -> 112 loopIndependentDefUseDependence this.menu.!updateUndoState
 116: 119 -> 116 loopIndependentDefUseDependence this.menu.!updateRedoState
 117: 124 -> 121 loopIndependentDefUseDependence this.!getCurrentFigure
 118: 124 -> 141 outputDependence this.!getCurrentFigure
 119: 125 -> 134 loopIndependentDefUseDependence this.!getCurrentFigure.endX
 120: 125 -> 134 loopIndependentDefUseDependence this.!getCurrentFigure.endY
 121: 126 -> 134 summary
 122: 129 -> 126 loopIndependentDefUseDependence e$0.!getX
 123: 130 -> 134 summary
 124: 133 -> 130 loopIndependentDefUseDependence e$0.!getY
 125: 134 -> 120 loopIndependentDefUseDependence this.!getCurrentFigure.!setEnd
 126: 134 -> 171 loopIndependentDefUseDependence this.!getCurrentFigure.endX
 127: 134 -> 171 loopIndependentDefUseDependence this.!getCurrentFigure.endY
 128: 141 -> 138 loopIndependentDefUseDependence this.!getCurrentFigure
 129: 141 -> 150 outputDependence this.!getCurrentFigure
 130: 142 -> 135 loopIndependentDefUseDependence this.figureManager.!add
 131: 15 -> 12 loopIndependentDefUseDependence this.!getCurrentFigure
 132: 15 -> 24 outputDependence this.!getCurrentFigure
 133: 150 -> 147 loopIndependentDefUseDependence this.!getCurrentFigure
 134: 151 -> 143 loopIndependentDefUseDependence this.!drawFigure
 135: 154 -> 156 loopIndependentDefUseDependence this.changed
 136: 155 -> 156 summary
 137: 156 -> 152 loopIndependentDefUseDependence this.!setChanged
 138: 156 -> 171 loopIndependentDefUseDependence this.changed
 139: 160 -> 157 loopIndependentDefUseDependence this.!repaint
 140: 164 -> 166 loopIndependentDefUseDependence this.currentFigure
 141: 165 -> 166 summary
 142: 166 -> 162 loopIndependentDefUseDependence this.!setCurrentFigure
 143: 166 -> 171 loopIndependentDefUseDependence this.currentFigure
 144: 167 -> 171 loopIndependentDefUseDependence this.grabbedFigure
 145: 17 -> 11 loopIndependentDefUseDependence this.!getCurrentFigure.!getLeft
 146: 2 -> 10 trueControlDependence
 147: 2 -> 6 trueControlDependence
 148: 2 -> 7 trueControlDependence
 149: 2 -> 8 trueControlDependence
 150: 2 -> 9 trueControlDependence
 151: 20 -> 11 loopIndependentDefUseDependence this.grabbedFigure.!getLeft
 152: 24 -> 21 loopIndependentDefUseDependence this.!getCurrentFigure
 153: 24 -> 39 outputDependence this.!getCurrentFigure
 154: 26 -> 11 loopIndependentDefUseDependence this.!getCurrentFigure.!getTop
 155: 29 -> 11 loopIndependentDefUseDependence this.grabbedFigure.!getTop
 156: 34 -> 41 loopIndependentDefUseDependence FigureMoved.redoFigure
 157: 34 -> 41 loopIndependentDefUseDependence FigureMoved.undoFigure
 158: 35 -> 41 summary
 159: 36 -> 41 summary
 160: 39 -> 36 loopIndependentDefUseDependence this.!getCurrentFigure
 161: 40 -> 41 summary
 162: 41 -> 171 loopIndependentDefUseDependence FigureMoved.redoFigure
 163: 41 -> 171 loopIndependentDefUseDependence FigureMoved.undoFigure
 164: 41 -> 32 loopIndependentDefUseDependence FigureMoved.!FigureMoved
 165: 42 -> 30 loopIndependentDefUseDependence this.support.!postEdit
 166: 46 -> 43 loopIndependentDefUseDependence this.menu.!updateUndoState
 167: 5 -> 15 outputDependence this.!getCurrentFigure
 168: 5 -> 2 loopIndependentDefUseDependence this.!getCurrentFigure
 169: 5 -> 79 outputDependence this.!getCurrentFigure
 170: 50 -> 47 loopIndependentDefUseDependence this.menu.!updateRedoState
 171: 53 -> 55 loopIndependentDefUseDependence this.changed
 172: 54 -> 55 summary
 173: 55 -> 171 loopIndependentDefUseDependence this.changed
 174: 55 -> 51 loopIndependentDefUseDependence this.!setChanged
 175: 58 -> 60 loopIndependentDefUseDependence this.currentFigure
 176: 59 -> 60 summary
 177: 6 -> 146 declaration
 178: 6 -> 146 loopIndependentDefUseDependence g$1
 179: 6 -> 75 declaration
 180: 6 -> 75 loopIndependentDefUseDependence g$1
 181: 60 -> 171 loopIndependentDefUseDependence this.currentFigure
 182: 60 -> 56 loopIndependentDefUseDependence this.!setCurrentFigure
 183: 61 -> 171 loopIndependentDefUseDependence this.grabbedFigure
 184: 65 -> 62 loopIndependentDefUseDependence this.!repaint
 185: 70 -> 66 loopIndependentDefUseDependence this.menu.!updateEditState
 186: 79 -> 76 loopIndependentDefUseDependence this.!getCurrentFigure
 187: 79 -> 85 outputDependence this.!getCurrentFigure
 188: 80 -> 72 loopIndependentDefUseDependence this.!drawRubber
 189: 81 -> 100 trueControlDependence
 190: 81 -> 101 trueControlDependence
 191: 81 -> 102 trueControlDependence
 192: 81 -> 103 trueControlDependence
 193: 81 -> 104 trueControlDependence
 194: 81 -> 105 trueControlDependence
 195: 81 -> 106 trueControlDependence
 196: 81 -> 107 trueControlDependence
 197: 81 -> 108 trueControlDependence
 198: 81 -> 109 trueControlDependence
 199: 81 -> 110 trueControlDependence
 200: 81 -> 111 trueControlDependence
 201: 81 -> 112 trueControlDependence
 202: 81 -> 113 trueControlDependence
 203: 81 -> 114 trueControlDependence
 204: 81 -> 115 trueControlDependence
 205: 81 -> 116 trueControlDependence
 206: 81 -> 117 trueControlDependence
 207: 81 -> 118 trueControlDependence
 208: 81 -> 119 trueControlDependence
 209: 81 -> 120 trueControlDependence
 210: 81 -> 121 trueControlDependence
 211: 81 -> 122 trueControlDependence
 212: 81 -> 123 trueControlDependence
 213: 81 -> 124 trueControlDependence
 214: 81 -> 125 trueControlDependence
 215: 81 -> 126 trueControlDependence
 216: 81 -> 127 trueControlDependence
 217: 81 -> 128 trueControlDependence
 218: 81 -> 129 trueControlDependence
 219: 81 -> 130 trueControlDependence
 220: 81 -> 131 trueControlDependence
 221: 81 -> 132 trueControlDependence
 222: 81 -> 133 trueControlDependence
 223: 81 -> 134 trueControlDependence
 224: 81 -> 135 trueControlDependence
 225: 81 -> 136 trueControlDependence
 226: 81 -> 137 trueControlDependence
 227: 81 -> 138 trueControlDependence
 228: 81 -> 139 trueControlDependence
 229: 81 -> 140 trueControlDependence
 230: 81 -> 141 trueControlDependence
 231: 81 -> 142 trueControlDependence
 232: 81 -> 143 trueControlDependence
 233: 81 -> 144 trueControlDependence
 234: 81 -> 145 trueControlDependence
 235: 81 -> 146 trueControlDependence
 236: 81 -> 147 trueControlDependence
 237: 81 -> 148 trueControlDependence
 238: 81 -> 149 trueControlDependence
 239: 81 -> 150 trueControlDependence
 240: 81 -> 151 trueControlDependence
 241: 81 -> 152 trueControlDependence
 242: 81 -> 153 trueControlDependence
 243: 81 -> 154 trueControlDependence
 244: 81 -> 155 trueControlDependence
 245: 81 -> 156 trueControlDependence
 246: 81 -> 157 trueControlDependence
 247: 81 -> 158 trueControlDependence
 248: 81 -> 159 trueControlDependence
 249: 81 -> 160 trueControlDependence
 250: 85 -> 82 loopIndependentDefUseDependence this.!getCurrentFigure
 251: 85 -> 94 outputDependence this.!getCurrentFigure
 252: 87 -> 81 loopIndependentDefUseDependence this.!getCurrentFigure.!getLeft
 253: 9 -> 146 loopIndependentDefUseDependence this.!getGraphics
 254: 9 -> 6 loopIndependentDefUseDependence this.!getGraphics
 255: 9 -> 75 loopIndependentDefUseDependence this.!getGraphics
 256: 90 -> 129 outputDependence e$0.!getX
 257: 90 -> 81 loopIndependentDefUseDependence e$0.!getX
 258: 94 -> 109 outputDependence this.!getCurrentFigure
 259: 94 -> 91 loopIndependentDefUseDependence this.!getCurrentFigure
 260: 96 -> 81 loopIndependentDefUseDependence this.!getCurrentFigure.!getTop
 261: 99 -> 133 outputDependence e$0.!getY
 262: 99 -> 81 loopIndependentDefUseDependence e$0.!getY
--
----- ClDG (to here) -----

