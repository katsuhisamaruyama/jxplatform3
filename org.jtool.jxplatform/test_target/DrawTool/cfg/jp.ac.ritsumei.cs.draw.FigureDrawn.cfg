----- CCFG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.FigureDrawn
   0 fieldEntry [ serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.FigureDrawn.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.FigureDrawn.serialVersionUID }
   2 fieldExit
--
   0 constructorEntry [ FigureDrawn( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ undo( ) ]
   1 throwsClause D = {  } U = { $javax.swing.undo.CannotUndoException }
   2 assignment D = {  } U = { super.!undo }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureEdit#undo( )
   5 actualOut D = { super.!undo } U = {  }
   6 localDeclaration D = { fmanager$0 } U = { this.canvas.!getFigureManager }
   7 receiver D = {  } U = { this.canvas }
   8 methodCall D = {  } U = { this.canvas.figureManager, this.canvas.figureManager.UNTITLED, this.canvas.figureManager.figures, this.canvas.figureManager.filename } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
   9 actualOut D = { this.canvas.!getFigureManager } U = {  }
  10 assignment D = {  } U = { fmanager$0.!remove, this.canvas.!getFigureManager.!remove }
  11 receiver D = {  } U = { fmanager$0, this.canvas.!getFigureManager }
  12 methodCall D = {  } U = { fmanager$0.figures, this.canvas.!getFigureManager.figures } TO = jp.ac.ritsumei.cs.draw.FigureManager#remove( jp.ac.ritsumei.cs.draw.Figure )
  13 actualIn D = {  } U = { this.figure }
  14 actualOut D = { fmanager$0.!remove } U = {  }
  15 assignment D = {  } U = { this.canvas.!repaint }
  16 receiver D = {  } U = { this.canvas }
  17 methodCall D = {  } U = { this.canvas, this.canvas.height, this.canvas.parent, this.canvas.peer, this.canvas.width, this.canvas.x, this.canvas.y } TO = java.awt.Component#repaint( )
  18 actualOut D = { this.canvas.!repaint } U = {  }
  19 methodExit
  20 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ redo( ) ]
   1 throwsClause D = {  } U = { $javax.swing.undo.CannotUndoException }
   2 throwsClause D = {  } U = { $javax.swing.undo.CannotRedoException }
   3 assignment D = {  } U = { super.!redo }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureEdit#redo( )
   6 actualOut D = { super.!redo } U = {  }
   7 localDeclaration D = { fmanager$0 } U = { this.canvas.!getFigureManager }
   8 receiver D = {  } U = { this.canvas }
   9 methodCall D = {  } U = { this.canvas.figureManager, this.canvas.figureManager.UNTITLED, this.canvas.figureManager.figures, this.canvas.figureManager.filename } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  10 actualOut D = { this.canvas.!getFigureManager } U = {  }
  11 assignment D = {  } U = { fmanager$0.!add, this.canvas.!getFigureManager.!add }
  12 receiver D = {  } U = { fmanager$0, this.canvas.!getFigureManager }
  13 methodCall D = {  } U = { fmanager$0.figures, this.canvas.!getFigureManager.figures } TO = jp.ac.ritsumei.cs.draw.FigureManager#add( jp.ac.ritsumei.cs.draw.Figure )
  14 actualIn D = {  } U = { this.figure }
  15 actualOut D = { fmanager$0.!add } U = {  }
  16 assignment D = {  } U = { this.canvas.!repaint }
  17 receiver D = {  } U = { this.canvas }
  18 methodCall D = {  } U = { this.canvas, this.canvas.height, this.canvas.parent, this.canvas.peer, this.canvas.width, this.canvas.x, this.canvas.y } TO = java.awt.Component#repaint( )
  19 actualOut D = { this.canvas.!repaint } U = {  }
  20 methodExit
  21 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ FigureDrawn( jp.ac.ritsumei.cs.draw.DrawCanvas jp.ac.ritsumei.cs.draw.Figure ) ]
   1 formalIn D = { canvas$0 } U = {  }
   2 formalIn D = { figure$1 } U = {  }
   3 assignment D = {  } U = {  }
   4 receiver D = {  } U = {  }
   5 constructorCall D = { super.canvas, super.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureEdit#FigureEdit( jp.ac.ritsumei.cs.draw.DrawCanvas jp.ac.ritsumei.cs.draw.Figure )
   6 actualIn D = {  } U = { canvas$0 }
   7 actualIn D = {  } U = { figure$1 }
   8 actualOut D = {  } U = {  }
   9 constructorExit
  10 formalOut D = {  } U = { $_ }
--
   0: serialVersionUID
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: FigureDrawn( )
   1: 0 -> 2 trueControlFlow
   2: 2 -> 1 trueControlFlow
--
   0: undo( )
   1: 0 -> 3 trueControlFlow
   2: 1 -> 19 trueControlFlow
   3: 2 -> 7 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 1 exceptionCatchFlow
   6: 4 -> 1 exceptionCatchFlow
   7: 4 -> 5 trueControlFlow
   8: 5 -> 2 trueControlFlow
   9: 6 -> 11 trueControlFlow
  10: 7 -> 8 trueControlFlow
  11: 8 -> 9 trueControlFlow
  12: 9 -> 6 trueControlFlow
  13: 10 -> 16 trueControlFlow
  14: 11 -> 13 trueControlFlow
  15: 12 -> 14 trueControlFlow
  16: 13 -> 12 trueControlFlow
  17: 14 -> 10 trueControlFlow
  18: 15 -> 20 trueControlFlow
  19: 16 -> 17 trueControlFlow
  20: 17 -> 18 trueControlFlow
  21: 18 -> 15 trueControlFlow
  22: 20 -> 19 trueControlFlow
--
   0: redo( )
   1: 0 -> 4 trueControlFlow
   2: 1 -> 20 trueControlFlow
   3: 2 -> 20 trueControlFlow
   4: 3 -> 8 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 1 exceptionCatchFlow
   7: 5 -> 2 exceptionCatchFlow
   8: 5 -> 6 trueControlFlow
   9: 6 -> 3 trueControlFlow
  10: 7 -> 12 trueControlFlow
  11: 8 -> 9 trueControlFlow
  12: 9 -> 10 trueControlFlow
  13: 10 -> 7 trueControlFlow
  14: 11 -> 17 trueControlFlow
  15: 12 -> 14 trueControlFlow
  16: 13 -> 15 trueControlFlow
  17: 14 -> 13 trueControlFlow
  18: 15 -> 11 trueControlFlow
  19: 16 -> 21 trueControlFlow
  20: 17 -> 18 trueControlFlow
  21: 18 -> 19 trueControlFlow
  22: 19 -> 16 trueControlFlow
  23: 21 -> 20 trueControlFlow
--
   0: FigureDrawn( jp.ac.ritsumei.cs.draw.DrawCanvas jp.ac.ritsumei.cs.draw.Figure )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 10 trueControlFlow
   5: 4 -> 6 trueControlFlow
   6: 5 -> 8 trueControlFlow
   7: 6 -> 7 trueControlFlow
   8: 7 -> 5 trueControlFlow
   9: 8 -> 3 trueControlFlow
  10: 10 -> 9 trueControlFlow
--
----- CCFG (to here) -----

