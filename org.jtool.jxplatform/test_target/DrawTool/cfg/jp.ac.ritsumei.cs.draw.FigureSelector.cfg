----- CCFG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.FigureSelector
   0 methodEntry [ getColor( ) ]
   1 localDeclaration D = { icon$0 } U = { this.colorCombo.!getSelectedItem }
   2 receiver D = {  } U = { this.colorCombo }
   3 methodCall D = {  } U = { this.colorCombo, this.colorCombo.dataModel } TO = javax.swing.JComboBox#getSelectedItem( )
   4 actualOut D = { this.colorCombo.!getSelectedItem } U = {  }
   5 returnSt D = { $_ } U = { icon$0.!getFigure.!getColor, icon$0.!getFigure.!getColor.BLACK, icon$0.!getFigure.!getColor.BLUE, icon$0.!getFigure.!getColor.CYAN, icon$0.!getFigure.!getColor.DARK_GRAY, icon$0.!getFigure.!getColor.FACTOR, icon$0.!getFigure.!getColor.GRAY, icon$0.!getFigure.!getColor.GREEN, icon$0.!getFigure.!getColor.LIGHT_GRAY, icon$0.!getFigure.!getColor.MAGENTA, icon$0.!getFigure.!getColor.ORANGE, icon$0.!getFigure.!getColor.PINK, icon$0.!getFigure.!getColor.RED, icon$0.!getFigure.!getColor.WHITE, icon$0.!getFigure.!getColor.YELLOW, icon$0.!getFigure.!getColor.black, icon$0.!getFigure.!getColor.blue, icon$0.!getFigure.!getColor.cs, icon$0.!getFigure.!getColor.cyan, icon$0.!getFigure.!getColor.darkGray, icon$0.!getFigure.!getColor.falpha, icon$0.!getFigure.!getColor.frgbvalue, icon$0.!getFigure.!getColor.fvalue, icon$0.!getFigure.!getColor.gray, icon$0.!getFigure.!getColor.green, icon$0.!getFigure.!getColor.lightGray, icon$0.!getFigure.!getColor.magenta, icon$0.!getFigure.!getColor.orange, icon$0.!getFigure.!getColor.pink, icon$0.!getFigure.!getColor.red, icon$0.!getFigure.!getColor.serialVersionUID, icon$0.!getFigure.!getColor.value, icon$0.!getFigure.!getColor.white, icon$0.!getFigure.!getColor.yellow }
   6 receiver D = {  } U = { icon$0.!getFigure }
   7 receiver D = {  } U = { icon$0 }
   8 methodCall D = {  } U = { icon$0.figure, icon$0.figure.ALLOWABLE_GAP_WHEN_GRABBED, icon$0.figure.color, icon$0.figure.dotted, icon$0.figure.endX, icon$0.figure.endY, icon$0.figure.outlineWidth, icon$0.figure.startX, icon$0.figure.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#getFigure( )
   9 actualOut D = { icon$0.!getFigure } U = {  }
  10 methodCall D = {  } U = { icon$0.!getFigure, icon$0.!getFigure.color } TO = jp.ac.ritsumei.cs.draw.Figure#getColor( )
  11 actualOut D = { icon$0.!getFigure.!getColor } U = {  }
  12 methodExit
  13 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ shapeComboIcons ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.FigureSelector.shapeComboIcons } U = { FigureIcon.!FigureIcon, jp.ac.ritsumei.cs.draw.FigureSelector.shapeComboIcons }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
   4 actualIn D = {  } U = { Line.!Line }
   5 receiver D = {  } U = {  }
   6 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( )
   7 actualOut D = { Line.!Line } U = {  }
   8 actualOut D = { FigureIcon.!FigureIcon } U = {  }
   9 receiver D = {  } U = {  }
  10 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  11 actualIn D = {  } U = { Rect.!Rect }
  12 receiver D = {  } U = {  }
  13 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Rect#Rect( )
  14 actualOut D = { Rect.!Rect } U = {  }
  15 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  16 receiver D = {  } U = {  }
  17 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  18 actualIn D = {  } U = { FilledRect.!FilledRect }
  19 receiver D = {  } U = {  }
  20 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.FilledRect#FilledRect( )
  21 actualOut D = { FilledRect.!FilledRect } U = {  }
  22 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  23 receiver D = {  } U = {  }
  24 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  25 actualIn D = {  } U = { Oval.!Oval }
  26 receiver D = {  } U = {  }
  27 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Oval#Oval( )
  28 actualOut D = { Oval.!Oval } U = {  }
  29 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  30 receiver D = {  } U = {  }
  31 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  32 actualIn D = {  } U = { FilledOval.!FilledOval }
  33 receiver D = {  } U = {  }
  34 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.FilledOval#FilledOval( )
  35 actualOut D = { FilledOval.!FilledOval } U = {  }
  36 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  37 fieldExit
--
   0 methodEntry [ createFigure( ) ]
   1 localDeclaration D = { shape$0 } U = { this.!getShape }
   2 receiver D = {  } U = {  }
   3 methodCall D = {  } U = { this.shapeCombo } TO = jp.ac.ritsumei.cs.draw.FigureSelector#getShape( )
   4 actualOut D = { this.!getShape } U = {  }
   5 ifSt D = {  } U = { shape$0, this.!getShape }
   6 returnSt D = { $_ } U = { shape$0.!create, shape$0.!create.ALLOWABLE_GAP_WHEN_GRABBED, shape$0.!create.color, shape$0.!create.dotted, shape$0.!create.endX, shape$0.!create.endY, shape$0.!create.outlineWidth, shape$0.!create.startX, shape$0.!create.startY, this.!getShape.!create, this.!getShape.!create.ALLOWABLE_GAP_WHEN_GRABBED, this.!getShape.!create.color, this.!getShape.!create.dotted, this.!getShape.!create.endX, this.!getShape.!create.endY, this.!getShape.!create.outlineWidth, this.!getShape.!create.startX, this.!getShape.!create.startY }
   7 receiver D = {  } U = { shape$0, this.!getShape }
   8 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#create( java.awt.Color float )
   9 actualIn D = {  } U = { this.!getColor }
  10 receiver D = {  } U = {  }
  11 methodCall D = {  } U = { this.colorCombo } TO = jp.ac.ritsumei.cs.draw.FigureSelector#getColor( )
  12 actualOut D = { this.!getColor } U = {  }
  13 actualIn D = {  } U = { this.!getLineWidth }
  14 receiver D = {  } U = {  }
  15 methodCall D = {  } U = { this.widthCombo } TO = jp.ac.ritsumei.cs.draw.FigureSelector#getLineWidth( )
  16 actualOut D = { this.!getLineWidth } U = {  }
  17 actualOut D = { shape$0.!create } U = {  }
  18 merge ifSt(5)
  19 returnSt D = { $_ } U = {  }
  20 methodExit
  21 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ FigureSelector( ) ]
   1 assignment D = {  } U = { this.!setLayout }
   2 receiver D = {  } U = {  }
   3 methodCall D = { this.layoutMgr } U = { FlowLayout.!FlowLayout } TO = java.awt.Container#setLayout( java.awt.LayoutManager )
   4 receiver D = {  } U = {  }
   5 constructorCall D = { FlowLayout.hgap, FlowLayout.serialVersionOnStream, FlowLayout.vgap } U = { FlowLayout.RIGHT } TO = java.awt.FlowLayout#FlowLayout( int )
   6 actualOut D = { FlowLayout.!FlowLayout } U = {  }
   7 actualOut D = { this.!setLayout } U = {  }
   8 assignment D = {  } U = { this.!createComboBoxes }
   9 receiver D = {  } U = {  }
  10 methodCall D = { this.colorCombo, this.shapeCombo, this.widthCombo } U = { this.colorCombo, this.shapeCombo, this.widthCombo } TO = jp.ac.ritsumei.cs.draw.FigureSelector#createComboBoxes( )
  11 actualOut D = { this.!createComboBoxes } U = {  }
  12 constructorExit
  13 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ colorComboIcons ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.FigureSelector.colorComboIcons } U = { FigureIcon.!FigureIcon, jp.ac.ritsumei.cs.draw.FigureSelector.colorComboIcons }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
   4 actualIn D = {  } U = { Line.!Line }
   5 receiver D = {  } U = {  }
   6 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
   7 actualIn D = {  } U = { Color.black }
   8 actualOut D = { Line.!Line } U = {  }
   9 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  10 receiver D = {  } U = {  }
  11 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  12 actualIn D = {  } U = { Line.!Line }
  13 receiver D = {  } U = {  }
  14 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  15 actualIn D = {  } U = { Color.yellow }
  16 actualOut D = { Line.!Line } U = {  }
  17 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  18 receiver D = {  } U = {  }
  19 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  20 actualIn D = {  } U = { Line.!Line }
  21 receiver D = {  } U = {  }
  22 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  23 actualIn D = {  } U = { Color.green }
  24 actualOut D = { Line.!Line } U = {  }
  25 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  26 receiver D = {  } U = {  }
  27 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  28 actualIn D = {  } U = { Line.!Line }
  29 receiver D = {  } U = {  }
  30 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  31 actualIn D = {  } U = { Color.red }
  32 actualOut D = { Line.!Line } U = {  }
  33 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  34 receiver D = {  } U = {  }
  35 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  36 actualIn D = {  } U = { Line.!Line }
  37 receiver D = {  } U = {  }
  38 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  39 actualIn D = {  } U = { Color.pink }
  40 actualOut D = { Line.!Line } U = {  }
  41 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  42 receiver D = {  } U = {  }
  43 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  44 actualIn D = {  } U = { Line.!Line }
  45 receiver D = {  } U = {  }
  46 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  47 actualIn D = {  } U = { Color.blue }
  48 actualOut D = { Line.!Line } U = {  }
  49 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  50 receiver D = {  } U = {  }
  51 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  52 actualIn D = {  } U = { Line.!Line }
  53 receiver D = {  } U = {  }
  54 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  55 actualIn D = {  } U = { Color.magenta }
  56 actualOut D = { Line.!Line } U = {  }
  57 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  58 receiver D = {  } U = {  }
  59 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  60 actualIn D = {  } U = { Line.!Line }
  61 receiver D = {  } U = {  }
  62 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  63 actualIn D = {  } U = { Color.orange }
  64 actualOut D = { Line.!Line } U = {  }
  65 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  66 receiver D = {  } U = {  }
  67 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  68 actualIn D = {  } U = { Line.!Line }
  69 receiver D = {  } U = {  }
  70 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  71 actualIn D = {  } U = { Color.gray }
  72 actualOut D = { Line.!Line } U = {  }
  73 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  74 receiver D = {  } U = {  }
  75 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  76 actualIn D = {  } U = { Line.!Line }
  77 receiver D = {  } U = {  }
  78 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  79 actualIn D = {  } U = { Color.darkGray }
  80 actualOut D = { Line.!Line } U = {  }
  81 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  82 receiver D = {  } U = {  }
  83 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  84 actualIn D = {  } U = { Line.!Line }
  85 receiver D = {  } U = {  }
  86 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  87 actualIn D = {  } U = { Color.lightGray }
  88 actualOut D = { Line.!Line } U = {  }
  89 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  90 receiver D = {  } U = {  }
  91 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  92 actualIn D = {  } U = { Line.!Line }
  93 receiver D = {  } U = {  }
  94 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
  95 actualIn D = {  } U = { Color.cyan }
  96 actualOut D = { Line.!Line } U = {  }
  97 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  98 receiver D = {  } U = {  }
  99 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
 100 actualIn D = {  } U = { Line.!Line }
 101 receiver D = {  } U = {  }
 102 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( java.awt.Color )
 103 actualIn D = {  } U = { Color.white }
 104 actualOut D = { Line.!Line } U = {  }
 105 actualOut D = { FigureIcon.!FigureIcon } U = {  }
 106 fieldExit
--
   0 fieldEntry [ serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.FigureSelector.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.FigureSelector.serialVersionUID }
   2 fieldExit
--
   0 methodEntry [ getLineWidth( ) ]
   1 localDeclaration D = { icon$0 } U = { this.widthCombo.!getSelectedItem }
   2 receiver D = {  } U = { this.widthCombo }
   3 methodCall D = {  } U = { this.widthCombo, this.widthCombo.dataModel } TO = javax.swing.JComboBox#getSelectedItem( )
   4 actualOut D = { this.widthCombo.!getSelectedItem } U = {  }
   5 returnSt D = { $_ } U = { icon$0.!getFigure.!getOutlineWidth }
   6 receiver D = {  } U = { icon$0.!getFigure }
   7 receiver D = {  } U = { icon$0 }
   8 methodCall D = {  } U = { icon$0.figure, icon$0.figure.ALLOWABLE_GAP_WHEN_GRABBED, icon$0.figure.color, icon$0.figure.dotted, icon$0.figure.endX, icon$0.figure.endY, icon$0.figure.outlineWidth, icon$0.figure.startX, icon$0.figure.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#getFigure( )
   9 actualOut D = { icon$0.!getFigure } U = {  }
  10 methodCall D = {  } U = { icon$0.!getFigure.outlineWidth } TO = jp.ac.ritsumei.cs.draw.Figure#getOutlineWidth( )
  11 actualOut D = { icon$0.!getFigure.!getOutlineWidth } U = {  }
  12 methodExit
  13 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ widthComboIcons ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.FigureSelector.widthComboIcons } U = { FigureIcon.!FigureIcon, jp.ac.ritsumei.cs.draw.FigureSelector.widthComboIcons }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
   4 actualIn D = {  } U = { Line.!Line }
   5 receiver D = {  } U = {  }
   6 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( int )
   7 actualIn D = {  } U = {  }
   8 actualOut D = { Line.!Line } U = {  }
   9 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  10 receiver D = {  } U = {  }
  11 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  12 actualIn D = {  } U = { Line.!Line }
  13 receiver D = {  } U = {  }
  14 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( int )
  15 actualIn D = {  } U = {  }
  16 actualOut D = { Line.!Line } U = {  }
  17 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  18 receiver D = {  } U = {  }
  19 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  20 actualIn D = {  } U = { Line.!Line }
  21 receiver D = {  } U = {  }
  22 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( int )
  23 actualIn D = {  } U = {  }
  24 actualOut D = { Line.!Line } U = {  }
  25 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  26 receiver D = {  } U = {  }
  27 constructorCall D = { FigureIcon.figure } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureIcon#FigureIcon( jp.ac.ritsumei.cs.draw.Figure )
  28 actualIn D = {  } U = { Line.!Line }
  29 receiver D = {  } U = {  }
  30 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Line#Line( int )
  31 actualIn D = {  } U = {  }
  32 actualOut D = { Line.!Line } U = {  }
  33 actualOut D = { FigureIcon.!FigureIcon } U = {  }
  34 fieldExit
--
   0 methodEntry [ createComboBoxes( ) ]
   1 localDeclaration D = { shapeLabel$0 } U = { shapeLabel$0.!JLabel }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { shapeLabel$0.defaultIcon, shapeLabel$0.disabledIcon, shapeLabel$0.disabledIconSet, shapeLabel$0.horizontalAlignment, shapeLabel$0.horizontalTextPosition, shapeLabel$0.iconTextGap, shapeLabel$0.labelFor, shapeLabel$0.mnemonic, shapeLabel$0.mnemonicIndex, shapeLabel$0.text, shapeLabel$0.verticalAlignment, shapeLabel$0.verticalTextPosition } U = { $java.lang.String } TO = javax.swing.JLabel#JLabel( java.lang.String )
   4 actualOut D = { shapeLabel$0.!JLabel } U = {  }
   5 assignment D = {  } U = { this.!add }
   6 receiver D = {  } U = {  }
   7 methodCall D = { java.awt.Component.parent } U = { java.awt.Component.eventMask, java.awt.Component.parent, java.awt.Component.peer, shapeLabel$0, this.component, this.containerListener, this.layoutMgr } TO = java.awt.Container#add( java.awt.Component )
   8 actualOut D = { this.!add } U = {  }
   9 assignment D = { this.shapeCombo } U = { this.shapeCombo.!JComboBox<FigureIcon> }
  10 receiver D = {  } U = {  }
  11 constructorCall D = { javax.swing.DefaultComboBoxModel.objects, javax.swing.JComponent.inputVerifier, javax.swing.JComponent.listenerList, javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JComponent.verifyInputWhenFocusTarget, this.shapeCombo.actionCommand, this.shapeCombo.dataModel, this.shapeCombo.firingActionEvent, this.shapeCombo.isEditable, this.shapeCombo.keySelectionManager, this.shapeCombo.lightWeightPopupEnabled, this.shapeCombo.maximumRowCount, this.shapeCombo.selectedItemReminder, this.shapeCombo.selectingItem } U = { java.lang.Boolean.TRUE, javax.swing.JPopupMenu.defaultLWPopupEnabledKey, this.shapeCombo.dataModel } TO = javax.swing.JComboBox#JComboBox( )
  12 actualOut D = { this.shapeCombo.!JComboBox<FigureIcon> } U = {  }
  13 assignment D = {  } U = { this.!add }
  14 receiver D = {  } U = {  }
  15 methodCall D = { java.awt.Component.parent } U = { java.awt.Component.eventMask, java.awt.Component.parent, java.awt.Component.peer, this.component, this.containerListener, this.layoutMgr, this.shapeCombo } TO = java.awt.Container#add( java.awt.Component )
  16 actualOut D = { this.!add } U = {  }
  17 assignment D = {  } U = { this.shapeCombo.!addItem }
  18 receiver D = {  } U = { this.shapeCombo }
  19 methodCall D = {  } U = { CursorIcon.!CursorIcon, this.shapeCombo, this.shapeCombo.dataModel } TO = javax.swing.JComboBox#addItem( java.lang.Object )
  20 receiver D = {  } U = {  }
  21 constructorCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.CursorIcon#CursorIcon( )
  22 actualOut D = { CursorIcon.!CursorIcon } U = {  }
  23 actualOut D = { this.shapeCombo.!addItem } U = {  }
  24 assignment D = {  } U = { this.!addItems }
  25 receiver D = {  } U = {  }
  26 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureSelector#addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] )
  27 actualIn D = {  } U = { this.shapeCombo }
  28 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.FigureSelector.shapeComboIcons }
  29 actualOut D = { this.!addItems } U = {  }
  30 localDeclaration D = { colorLabel$1 } U = { colorLabel$1.!JLabel }
  31 receiver D = {  } U = {  }
  32 constructorCall D = { colorLabel$1.defaultIcon, colorLabel$1.disabledIcon, colorLabel$1.disabledIconSet, colorLabel$1.horizontalAlignment, colorLabel$1.horizontalTextPosition, colorLabel$1.iconTextGap, colorLabel$1.labelFor, colorLabel$1.mnemonic, colorLabel$1.mnemonicIndex, colorLabel$1.text, colorLabel$1.verticalAlignment, colorLabel$1.verticalTextPosition } U = { $java.lang.String } TO = javax.swing.JLabel#JLabel( java.lang.String )
  33 actualOut D = { colorLabel$1.!JLabel } U = {  }
  34 assignment D = {  } U = { this.!add }
  35 receiver D = {  } U = {  }
  36 methodCall D = { java.awt.Component.parent } U = { colorLabel$1, java.awt.Component.eventMask, java.awt.Component.parent, java.awt.Component.peer, this.component, this.containerListener, this.layoutMgr } TO = java.awt.Container#add( java.awt.Component )
  37 actualOut D = { this.!add } U = {  }
  38 assignment D = { this.colorCombo } U = { this.colorCombo.!JComboBox<FigureIcon> }
  39 receiver D = {  } U = {  }
  40 constructorCall D = { javax.swing.DefaultComboBoxModel.objects, javax.swing.JComponent.inputVerifier, javax.swing.JComponent.listenerList, javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JComponent.verifyInputWhenFocusTarget, this.colorCombo.actionCommand, this.colorCombo.dataModel, this.colorCombo.firingActionEvent, this.colorCombo.isEditable, this.colorCombo.keySelectionManager, this.colorCombo.lightWeightPopupEnabled, this.colorCombo.maximumRowCount, this.colorCombo.selectedItemReminder, this.colorCombo.selectingItem } U = { java.lang.Boolean.TRUE, javax.swing.JPopupMenu.defaultLWPopupEnabledKey, this.colorCombo.dataModel } TO = javax.swing.JComboBox#JComboBox( )
  41 actualOut D = { this.colorCombo.!JComboBox<FigureIcon> } U = {  }
  42 assignment D = {  } U = { this.!add }
  43 receiver D = {  } U = {  }
  44 methodCall D = { java.awt.Component.parent } U = { java.awt.Component.eventMask, java.awt.Component.parent, java.awt.Component.peer, this.colorCombo, this.component, this.containerListener, this.layoutMgr } TO = java.awt.Container#add( java.awt.Component )
  45 actualOut D = { this.!add } U = {  }
  46 assignment D = {  } U = { this.!addItems }
  47 receiver D = {  } U = {  }
  48 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureSelector#addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] )
  49 actualIn D = {  } U = { this.colorCombo }
  50 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.FigureSelector.colorComboIcons }
  51 actualOut D = { this.!addItems } U = {  }
  52 localDeclaration D = { lineWidthLabel$2 } U = { lineWidthLabel$2.!JLabel }
  53 receiver D = {  } U = {  }
  54 constructorCall D = { lineWidthLabel$2.defaultIcon, lineWidthLabel$2.disabledIcon, lineWidthLabel$2.disabledIconSet, lineWidthLabel$2.horizontalAlignment, lineWidthLabel$2.horizontalTextPosition, lineWidthLabel$2.iconTextGap, lineWidthLabel$2.labelFor, lineWidthLabel$2.mnemonic, lineWidthLabel$2.mnemonicIndex, lineWidthLabel$2.text, lineWidthLabel$2.verticalAlignment, lineWidthLabel$2.verticalTextPosition } U = { $java.lang.String } TO = javax.swing.JLabel#JLabel( java.lang.String )
  55 actualOut D = { lineWidthLabel$2.!JLabel } U = {  }
  56 assignment D = {  } U = { this.!add }
  57 receiver D = {  } U = {  }
  58 methodCall D = { java.awt.Component.parent } U = { java.awt.Component.eventMask, java.awt.Component.parent, java.awt.Component.peer, lineWidthLabel$2, this.component, this.containerListener, this.layoutMgr } TO = java.awt.Container#add( java.awt.Component )
  59 actualOut D = { this.!add } U = {  }
  60 assignment D = { this.widthCombo } U = { this.widthCombo.!JComboBox<FigureIcon> }
  61 receiver D = {  } U = {  }
  62 constructorCall D = { javax.swing.DefaultComboBoxModel.objects, javax.swing.JComponent.inputVerifier, javax.swing.JComponent.listenerList, javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JComponent.verifyInputWhenFocusTarget, this.widthCombo.actionCommand, this.widthCombo.dataModel, this.widthCombo.firingActionEvent, this.widthCombo.isEditable, this.widthCombo.keySelectionManager, this.widthCombo.lightWeightPopupEnabled, this.widthCombo.maximumRowCount, this.widthCombo.selectedItemReminder, this.widthCombo.selectingItem } U = { java.lang.Boolean.TRUE, javax.swing.JPopupMenu.defaultLWPopupEnabledKey, this.widthCombo.dataModel } TO = javax.swing.JComboBox#JComboBox( )
  63 actualOut D = { this.widthCombo.!JComboBox<FigureIcon> } U = {  }
  64 assignment D = {  } U = { this.!add }
  65 receiver D = {  } U = {  }
  66 methodCall D = { java.awt.Component.parent } U = { java.awt.Component.eventMask, java.awt.Component.parent, java.awt.Component.peer, this.component, this.containerListener, this.layoutMgr, this.widthCombo } TO = java.awt.Container#add( java.awt.Component )
  67 actualOut D = { this.!add } U = {  }
  68 assignment D = {  } U = { this.!addItems }
  69 receiver D = {  } U = {  }
  70 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureSelector#addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] )
  71 actualIn D = {  } U = { this.widthCombo }
  72 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.FigureSelector.widthComboIcons }
  73 actualOut D = { this.!addItems } U = {  }
  74 methodExit
  75 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ colorCombo ]
   1 fieldDeclaration D = { this.colorCombo } U = { this.colorCombo }
   2 fieldExit
--
   0 fieldEntry [ shapeCombo ]
   1 fieldDeclaration D = { this.shapeCombo } U = { this.shapeCombo }
   2 fieldExit
--
   0 methodEntry [ addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] ) ]
   1 formalIn D = { cb$0 } U = {  }
   2 formalIn D = { icons$1 } U = {  }
   3 localDeclaration D = { i$2 } U = {  }
   4 forSt D = {  } U = { i$2, icons$1, icons$1.length }
   5 assignment D = {  } U = { cb$0.!addItem }
   6 receiver D = {  } U = { cb$0 }
   7 methodCall D = {  } U = { cb$0, cb$0.dataModel, i$2, icons$1 } TO = javax.swing.JComboBox#addItem( java.lang.Object )
   8 actualOut D = { cb$0.!addItem } U = {  }
   9 assignment D = { i$2 } U = { i$2 }
  10 methodExit
  11 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ getShape( ) ]
   1 localDeclaration D = { icon$0 } U = { this.shapeCombo.!getSelectedItem }
   2 receiver D = {  } U = { this.shapeCombo }
   3 methodCall D = {  } U = { this.shapeCombo, this.shapeCombo.dataModel } TO = javax.swing.JComboBox#getSelectedItem( )
   4 actualOut D = { this.shapeCombo.!getSelectedItem } U = {  }
   5 returnSt D = { $_ } U = { icon$0.!getFigure, icon$0.!getFigure.ALLOWABLE_GAP_WHEN_GRABBED, icon$0.!getFigure.color, icon$0.!getFigure.dotted, icon$0.!getFigure.endX, icon$0.!getFigure.endY, icon$0.!getFigure.outlineWidth, icon$0.!getFigure.startX, icon$0.!getFigure.startY }
   6 receiver D = {  } U = { icon$0 }
   7 methodCall D = {  } U = { icon$0.figure, icon$0.figure.ALLOWABLE_GAP_WHEN_GRABBED, icon$0.figure.color, icon$0.figure.dotted, icon$0.figure.endX, icon$0.figure.endY, icon$0.figure.outlineWidth, icon$0.figure.startX, icon$0.figure.startY } TO = jp.ac.ritsumei.cs.draw.FigureIcon#getFigure( )
   8 actualOut D = { icon$0.!getFigure } U = {  }
   9 methodExit
  10 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ isGrabMode( ) ]
   1 returnSt D = { $_ } U = { this.!getShape }
   2 receiver D = {  } U = {  }
   3 methodCall D = {  } U = { this.shapeCombo } TO = jp.ac.ritsumei.cs.draw.FigureSelector#getShape( )
   4 actualOut D = { this.!getShape } U = {  }
   5 methodExit
   6 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ widthCombo ]
   1 fieldDeclaration D = { this.widthCombo } U = { this.widthCombo }
   2 fieldExit
--
   0: getColor( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 7 trueControlFlow
   3: 2 -> 3 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 1 trueControlFlow
   6: 5 -> 13 trueControlFlow
   7: 5 -> 13 fallThroughFlow
   8: 6 -> 10 trueControlFlow
   9: 7 -> 8 trueControlFlow
  10: 8 -> 9 trueControlFlow
  11: 9 -> 6 trueControlFlow
  12: 10 -> 11 trueControlFlow
  13: 11 -> 5 trueControlFlow
  14: 13 -> 12 trueControlFlow
--
   0: shapeComboIcons
   1: 0 -> 2 trueControlFlow
   2: 1 -> 37 trueControlFlow
   3: 2 -> 5 trueControlFlow
   4: 3 -> 8 trueControlFlow
   5: 4 -> 3 trueControlFlow
   6: 5 -> 6 trueControlFlow
   7: 6 -> 7 trueControlFlow
   8: 7 -> 4 trueControlFlow
   9: 8 -> 9 trueControlFlow
  10: 9 -> 12 trueControlFlow
  11: 10 -> 15 trueControlFlow
  12: 11 -> 10 trueControlFlow
  13: 12 -> 13 trueControlFlow
  14: 13 -> 14 trueControlFlow
  15: 14 -> 11 trueControlFlow
  16: 15 -> 16 trueControlFlow
  17: 16 -> 19 trueControlFlow
  18: 17 -> 22 trueControlFlow
  19: 18 -> 17 trueControlFlow
  20: 19 -> 20 trueControlFlow
  21: 20 -> 21 trueControlFlow
  22: 21 -> 18 trueControlFlow
  23: 22 -> 23 trueControlFlow
  24: 23 -> 26 trueControlFlow
  25: 24 -> 29 trueControlFlow
  26: 25 -> 24 trueControlFlow
  27: 26 -> 27 trueControlFlow
  28: 27 -> 28 trueControlFlow
  29: 28 -> 25 trueControlFlow
  30: 29 -> 30 trueControlFlow
  31: 30 -> 33 trueControlFlow
  32: 31 -> 36 trueControlFlow
  33: 32 -> 31 trueControlFlow
  34: 33 -> 34 trueControlFlow
  35: 34 -> 35 trueControlFlow
  36: 35 -> 32 trueControlFlow
  37: 36 -> 1 trueControlFlow
--
   0: createFigure( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 5 trueControlFlow
   3: 2 -> 3 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 1 trueControlFlow
   6: 5 -> 7 trueControlFlow
   7: 5 -> 18 falseControlFlow
   8: 6 -> 18 fallThroughFlow
   9: 6 -> 21 trueControlFlow
  10: 7 -> 10 trueControlFlow
  11: 8 -> 17 trueControlFlow
  12: 9 -> 14 trueControlFlow
  13: 10 -> 11 trueControlFlow
  14: 11 -> 12 trueControlFlow
  15: 12 -> 9 trueControlFlow
  16: 13 -> 8 trueControlFlow
  17: 14 -> 15 trueControlFlow
  18: 15 -> 16 trueControlFlow
  19: 16 -> 13 trueControlFlow
  20: 17 -> 6 trueControlFlow
  21: 18 -> 19 trueControlFlow
  22: 19 -> 21 trueControlFlow
  23: 19 -> 21 fallThroughFlow
  24: 21 -> 20 trueControlFlow
--
   0: FigureSelector( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 9 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 7 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 6 trueControlFlow
   7: 6 -> 3 trueControlFlow
   8: 7 -> 1 trueControlFlow
   9: 8 -> 13 trueControlFlow
  10: 9 -> 10 trueControlFlow
  11: 10 -> 11 trueControlFlow
  12: 11 -> 8 trueControlFlow
  13: 13 -> 12 trueControlFlow
--
   0: colorComboIcons
   1: 0 -> 2 trueControlFlow
   2: 1 -> 106 trueControlFlow
   3: 2 -> 5 trueControlFlow
   4: 3 -> 9 trueControlFlow
   5: 4 -> 3 trueControlFlow
   6: 5 -> 7 trueControlFlow
   7: 6 -> 8 trueControlFlow
   8: 7 -> 6 trueControlFlow
   9: 8 -> 4 trueControlFlow
  10: 9 -> 10 trueControlFlow
  11: 10 -> 13 trueControlFlow
  12: 11 -> 17 trueControlFlow
  13: 12 -> 11 trueControlFlow
  14: 13 -> 15 trueControlFlow
  15: 14 -> 16 trueControlFlow
  16: 15 -> 14 trueControlFlow
  17: 16 -> 12 trueControlFlow
  18: 17 -> 18 trueControlFlow
  19: 18 -> 21 trueControlFlow
  20: 19 -> 25 trueControlFlow
  21: 20 -> 19 trueControlFlow
  22: 21 -> 23 trueControlFlow
  23: 22 -> 24 trueControlFlow
  24: 23 -> 22 trueControlFlow
  25: 24 -> 20 trueControlFlow
  26: 25 -> 26 trueControlFlow
  27: 26 -> 29 trueControlFlow
  28: 27 -> 33 trueControlFlow
  29: 28 -> 27 trueControlFlow
  30: 29 -> 31 trueControlFlow
  31: 30 -> 32 trueControlFlow
  32: 31 -> 30 trueControlFlow
  33: 32 -> 28 trueControlFlow
  34: 33 -> 34 trueControlFlow
  35: 34 -> 37 trueControlFlow
  36: 35 -> 41 trueControlFlow
  37: 36 -> 35 trueControlFlow
  38: 37 -> 39 trueControlFlow
  39: 38 -> 40 trueControlFlow
  40: 39 -> 38 trueControlFlow
  41: 40 -> 36 trueControlFlow
  42: 41 -> 42 trueControlFlow
  43: 42 -> 45 trueControlFlow
  44: 43 -> 49 trueControlFlow
  45: 44 -> 43 trueControlFlow
  46: 45 -> 47 trueControlFlow
  47: 46 -> 48 trueControlFlow
  48: 47 -> 46 trueControlFlow
  49: 48 -> 44 trueControlFlow
  50: 49 -> 50 trueControlFlow
  51: 50 -> 53 trueControlFlow
  52: 51 -> 57 trueControlFlow
  53: 52 -> 51 trueControlFlow
  54: 53 -> 55 trueControlFlow
  55: 54 -> 56 trueControlFlow
  56: 55 -> 54 trueControlFlow
  57: 56 -> 52 trueControlFlow
  58: 57 -> 58 trueControlFlow
  59: 58 -> 61 trueControlFlow
  60: 59 -> 65 trueControlFlow
  61: 60 -> 59 trueControlFlow
  62: 61 -> 63 trueControlFlow
  63: 62 -> 64 trueControlFlow
  64: 63 -> 62 trueControlFlow
  65: 64 -> 60 trueControlFlow
  66: 65 -> 66 trueControlFlow
  67: 66 -> 69 trueControlFlow
  68: 67 -> 73 trueControlFlow
  69: 68 -> 67 trueControlFlow
  70: 69 -> 71 trueControlFlow
  71: 70 -> 72 trueControlFlow
  72: 71 -> 70 trueControlFlow
  73: 72 -> 68 trueControlFlow
  74: 73 -> 74 trueControlFlow
  75: 74 -> 77 trueControlFlow
  76: 75 -> 81 trueControlFlow
  77: 76 -> 75 trueControlFlow
  78: 77 -> 79 trueControlFlow
  79: 78 -> 80 trueControlFlow
  80: 79 -> 78 trueControlFlow
  81: 80 -> 76 trueControlFlow
  82: 81 -> 82 trueControlFlow
  83: 82 -> 85 trueControlFlow
  84: 83 -> 89 trueControlFlow
  85: 84 -> 83 trueControlFlow
  86: 85 -> 87 trueControlFlow
  87: 86 -> 88 trueControlFlow
  88: 87 -> 86 trueControlFlow
  89: 88 -> 84 trueControlFlow
  90: 89 -> 90 trueControlFlow
  91: 90 -> 93 trueControlFlow
  92: 91 -> 97 trueControlFlow
  93: 92 -> 91 trueControlFlow
  94: 93 -> 95 trueControlFlow
  95: 94 -> 96 trueControlFlow
  96: 95 -> 94 trueControlFlow
  97: 96 -> 92 trueControlFlow
  98: 97 -> 98 trueControlFlow
  99: 98 -> 101 trueControlFlow
 100: 99 -> 105 trueControlFlow
 101: 100 -> 99 trueControlFlow
 102: 101 -> 103 trueControlFlow
 103: 102 -> 104 trueControlFlow
 104: 103 -> 102 trueControlFlow
 105: 104 -> 100 trueControlFlow
 106: 105 -> 1 trueControlFlow
--
   0: serialVersionUID
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: getLineWidth( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 7 trueControlFlow
   3: 2 -> 3 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 1 trueControlFlow
   6: 5 -> 13 trueControlFlow
   7: 5 -> 13 fallThroughFlow
   8: 6 -> 10 trueControlFlow
   9: 7 -> 8 trueControlFlow
  10: 8 -> 9 trueControlFlow
  11: 9 -> 6 trueControlFlow
  12: 10 -> 11 trueControlFlow
  13: 11 -> 5 trueControlFlow
  14: 13 -> 12 trueControlFlow
--
   0: widthComboIcons
   1: 0 -> 2 trueControlFlow
   2: 1 -> 34 trueControlFlow
   3: 2 -> 5 trueControlFlow
   4: 3 -> 9 trueControlFlow
   5: 4 -> 3 trueControlFlow
   6: 5 -> 7 trueControlFlow
   7: 6 -> 8 trueControlFlow
   8: 7 -> 6 trueControlFlow
   9: 8 -> 4 trueControlFlow
  10: 9 -> 10 trueControlFlow
  11: 10 -> 13 trueControlFlow
  12: 11 -> 17 trueControlFlow
  13: 12 -> 11 trueControlFlow
  14: 13 -> 15 trueControlFlow
  15: 14 -> 16 trueControlFlow
  16: 15 -> 14 trueControlFlow
  17: 16 -> 12 trueControlFlow
  18: 17 -> 18 trueControlFlow
  19: 18 -> 21 trueControlFlow
  20: 19 -> 25 trueControlFlow
  21: 20 -> 19 trueControlFlow
  22: 21 -> 23 trueControlFlow
  23: 22 -> 24 trueControlFlow
  24: 23 -> 22 trueControlFlow
  25: 24 -> 20 trueControlFlow
  26: 25 -> 26 trueControlFlow
  27: 26 -> 29 trueControlFlow
  28: 27 -> 33 trueControlFlow
  29: 28 -> 27 trueControlFlow
  30: 29 -> 31 trueControlFlow
  31: 30 -> 32 trueControlFlow
  32: 31 -> 30 trueControlFlow
  33: 32 -> 28 trueControlFlow
  34: 33 -> 1 trueControlFlow
--
   0: createComboBoxes( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 6 trueControlFlow
   3: 2 -> 3 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 1 trueControlFlow
   6: 5 -> 10 trueControlFlow
   7: 6 -> 7 trueControlFlow
   8: 7 -> 8 trueControlFlow
   9: 8 -> 5 trueControlFlow
  10: 9 -> 14 trueControlFlow
  11: 10 -> 11 trueControlFlow
  12: 11 -> 12 trueControlFlow
  13: 12 -> 9 trueControlFlow
  14: 13 -> 18 trueControlFlow
  15: 14 -> 15 trueControlFlow
  16: 15 -> 16 trueControlFlow
  17: 16 -> 13 trueControlFlow
  18: 17 -> 25 trueControlFlow
  19: 18 -> 20 trueControlFlow
  20: 19 -> 23 trueControlFlow
  21: 20 -> 21 trueControlFlow
  22: 21 -> 22 trueControlFlow
  23: 22 -> 19 trueControlFlow
  24: 23 -> 17 trueControlFlow
  25: 24 -> 31 trueControlFlow
  26: 25 -> 27 trueControlFlow
  27: 26 -> 29 trueControlFlow
  28: 27 -> 28 trueControlFlow
  29: 28 -> 26 trueControlFlow
  30: 29 -> 24 trueControlFlow
  31: 30 -> 35 trueControlFlow
  32: 31 -> 32 trueControlFlow
  33: 32 -> 33 trueControlFlow
  34: 33 -> 30 trueControlFlow
  35: 34 -> 39 trueControlFlow
  36: 35 -> 36 trueControlFlow
  37: 36 -> 37 trueControlFlow
  38: 37 -> 34 trueControlFlow
  39: 38 -> 43 trueControlFlow
  40: 39 -> 40 trueControlFlow
  41: 40 -> 41 trueControlFlow
  42: 41 -> 38 trueControlFlow
  43: 42 -> 47 trueControlFlow
  44: 43 -> 44 trueControlFlow
  45: 44 -> 45 trueControlFlow
  46: 45 -> 42 trueControlFlow
  47: 46 -> 53 trueControlFlow
  48: 47 -> 49 trueControlFlow
  49: 48 -> 51 trueControlFlow
  50: 49 -> 50 trueControlFlow
  51: 50 -> 48 trueControlFlow
  52: 51 -> 46 trueControlFlow
  53: 52 -> 57 trueControlFlow
  54: 53 -> 54 trueControlFlow
  55: 54 -> 55 trueControlFlow
  56: 55 -> 52 trueControlFlow
  57: 56 -> 61 trueControlFlow
  58: 57 -> 58 trueControlFlow
  59: 58 -> 59 trueControlFlow
  60: 59 -> 56 trueControlFlow
  61: 60 -> 65 trueControlFlow
  62: 61 -> 62 trueControlFlow
  63: 62 -> 63 trueControlFlow
  64: 63 -> 60 trueControlFlow
  65: 64 -> 69 trueControlFlow
  66: 65 -> 66 trueControlFlow
  67: 66 -> 67 trueControlFlow
  68: 67 -> 64 trueControlFlow
  69: 68 -> 75 trueControlFlow
  70: 69 -> 71 trueControlFlow
  71: 70 -> 73 trueControlFlow
  72: 71 -> 72 trueControlFlow
  73: 72 -> 70 trueControlFlow
  74: 73 -> 68 trueControlFlow
  75: 75 -> 74 trueControlFlow
--
   0: colorCombo
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: shapeCombo
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: addItems( javax.swing.JComboBox jp.ac.ritsumei.cs.draw.FigureIcon[] )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 3 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 6 trueControlFlow
   6: 4 -> 11 falseControlFlow
   7: 5 -> 9 trueControlFlow
   8: 6 -> 7 trueControlFlow
   9: 7 -> 8 trueControlFlow
  10: 8 -> 5 trueControlFlow
  11: 9 -> 4 trueControlFlow (LC = 4)
  12: 11 -> 10 trueControlFlow
--
   0: getShape( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 6 trueControlFlow
   3: 2 -> 3 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 1 trueControlFlow
   6: 5 -> 10 trueControlFlow
   7: 5 -> 10 fallThroughFlow
   8: 6 -> 7 trueControlFlow
   9: 7 -> 8 trueControlFlow
  10: 8 -> 5 trueControlFlow
  11: 10 -> 9 trueControlFlow
--
   0: isGrabMode( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 6 trueControlFlow
   3: 1 -> 6 fallThroughFlow
   4: 2 -> 3 trueControlFlow
   5: 3 -> 4 trueControlFlow
   6: 4 -> 1 trueControlFlow
   7: 6 -> 5 trueControlFlow
--
   0: widthCombo
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
----- CCFG (to here) -----

