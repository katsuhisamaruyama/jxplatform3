----- CCFG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.DrawTool
   0 fieldEntry [ selector ]
   1 fieldDeclaration D = { this.selector } U = { this.selector }
   2 fieldExit
--
   0 methodEntry [ main( java.lang.String[] ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { args$0 } U = {  }
   3 assignment D = {  } U = { this.!setDefault( java.util.Locale ) }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = { Locale.ENGLISH, this.!java.util.Locale$1.$SwitchMap$java$util$Locale$Category, this.!java.util.Locale$Category.DISPLAY, this.!java.util.Locale$Category.FORMAT, this.!java.util.Locale.$assertionsDisabled } TO = java.util.Locale#setDefault( java.util.Locale )
   6 actualOut D = { this.!java.util.Locale.defaultDisplayLocale, this.!java.util.Locale.defaultFormatLocale, this.!java.util.Locale.defaultLocale, this.!setDefault( java.util.Locale ) } U = { this.!java.util.Locale$1.$SwitchMap$java$util$Locale$Category, this.!java.util.Locale$Category.DISPLAY, this.!java.util.Locale$Category.FORMAT, this.!java.util.Locale.$assertionsDisabled }
   7 localDeclaration D = { main$1 } U = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ) }
   8 receiver D = {  } U = {  }
   9 constructorCall D = {  } U = { BorderLayout.WEST, Color.white, File.separator, FlowLayout.RIGHT, JTabbedPane.TOP, KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK, KeyEvent.VK_DELETE, KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK, KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK, KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK, KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK, KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK, KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK, KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY, icons$1.length, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).autoSave, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).menu, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).menuBar, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).selector, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).tabbedCanvas, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).toolBar, jp.ac.ritsumei.cs.draw.DrawTool.contentPane$1.!java.awt.Component.parent, jp.ac.ritsumei.cs.draw.DrawTool.contentPane$1.!java.awt.Container.component, jp.ac.ritsumei.cs.draw.DrawTool.contentPane$1.!java.awt.Container.containerListener, jp.ac.ritsumei.cs.draw.DrawTool.contentPane$1.!java.awt.Container.eventMask, jp.ac.ritsumei.cs.draw.DrawTool.contentPane$1.!java.awt.Container.layoutMgr, jp.ac.ritsumei.cs.draw.DrawTool.contentPane$1.!java.awt.Container.peer, jp.ac.ritsumei.cs.draw.DrawTool.javax.swing.JPanel.!java.lang.Boolean.TRUE, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.Thread.group, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.Thread.threadStatus, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.destroyed, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.nUnstartedThreads, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.nthreads, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.threads, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.java.io.File.!java.io.File.fs, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.java.io.File.!java.io.File.path, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!java.awt.Component.focusTraversalKeysEnabled, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.JMenuBar.selectionModel, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.toolBar.!javax.swing.JToolBar.floatable, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.TabbedCanvas.java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA, jp.ac.ritsumei.cs.draw.DrawTool.menu.menuBar, jp.ac.ritsumei.cs.draw.DrawTool.menu.toolBar, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, jp.ac.ritsumei.cs.draw.FigureSelector.colorComboIcons, jp.ac.ritsumei.cs.draw.FigureSelector.shapeComboIcons, jp.ac.ritsumei.cs.draw.FigureSelector.widthComboIcons, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, panel$2.NORTH, selector$0.colorCombo, selector$0.shapeCombo, selector$0.widthCombo, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, tabbedCanvas$0.canvases, tabbedCanvas$0.menu, tabbedCanvas$0.selectedTab, tabbedCanvas$0.selector, tabbedCanvas$1.canvases, tabbedCanvas$1.menu, tabbedCanvas$1.selectedTab, tabbedCanvas$1.selector, this, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this.!java.awt.Component.background, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!java.awt.Container.dispatcher, this.!java.awt.Container.parent, this.!java.awt.Container.peer, this.!javax.swing.JFrame.rootPane, this.!javax.swing.JLayeredPane.FRAME_CONTENT_LAYER, this.!javax.swing.JRootPane.contentPane, this.!javax.swing.JRootPane.layeredPane, this.!javax.swing.JRootPane.menuBar, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.listenerList, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.canvas$1.figureManager, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.cb$0.!javax.swing.JComboBox.dataModel, this.closeItem$3.!javax.swing.AbstractButton.listenerList, this.closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.colorCombo, this.copyAction, this.copyItem$4.!javax.swing.AbstractButton.accessibleContext, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutAction, this.cutItem$3.!javax.swing.AbstractButton.accessibleContext, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteAction, this.deleteItem$6.!javax.swing.AbstractButton.accessibleContext, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.emptyListItem$9.!javax.swing.AbstractButton.model, this.exitItem$13.!javax.swing.AbstractButton.listenerList, this.figureManager.figures, this.figureManager.filename, this.fileListMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.fileMenu$1.!javax.swing.AbstractButton.model, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.fmanager$3.filename.!java.lang.String.coder, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.javax.swing.JComboBox.!java.lang.Boolean.TRUE, this.javax.swing.JComboBox.!javax.swing.JComboBox.dataModel, this.javax.swing.JComboBox.!javax.swing.JPopupMenu.defaultLWPopupEnabledKey, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.menu, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.newAction, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, this.newButton$1.!javax.swing.JComponent.clientProperties, this.newButton$1.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.newButton$1.!javax.swing.ToolTipManager.accessibilityKeyListener, this.newButton$1.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.newItem$1.!java.awt.Component.changeSupport, this.newItem$1.!java.awt.Component.height, this.newItem$1.!java.awt.Component.width, this.newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.newItem$1.!javax.swing.AbstractButton.accessibleContext, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openAction, this.openItem$2.!javax.swing.AbstractButton.accessibleContext, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.pasteAction, this.pasteItem$5.!javax.swing.AbstractButton.accessibleContext, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoAction, this.redoButton$8.!javax.swing.AbstractButton.model, this.redoItem$2.!javax.swing.AbstractButton.accessibleContext, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.saveAction, this.saveAsItem$6.!javax.swing.AbstractButton.listenerList, this.saveItem$5.!javax.swing.AbstractButton.accessibleContext, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator, this.selector, this.selector.EAST, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.shapeCombo, this.shapeCombo.!javax.swing.JComboBox.dataModel, this.tabbedCanvas.CENTER, this.tabbedCanvas.canvases, this.tabbedCanvas.menu, this.tabbedCanvas.selectedTab, this.tabbedCanvas.selector, this.undoAction, this.undoItem$1.!javax.swing.AbstractButton.accessibleContext, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.JMenuItem.accelerator, this.widthCombo, this.windowMenu$3.!javax.swing.JMenu.listenerList, tool$0.menu, tool$0.selector, tool$0.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawTool#DrawTool( java.lang.String )
  10 actualIn D = {  } U = { FigureManager.UNTITLED }
  11 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ), jp.ac.ritsumei.cs.draw.DrawTool.contentPane$1.!java.awt.Component.parent, jp.ac.ritsumei.cs.draw.DrawTool.contentPane$1.!java.awt.Container.layoutMgr, jp.ac.ritsumei.cs.draw.DrawTool.java.awt.BorderLayout.!java.awt.BorderLayout.hgap, jp.ac.ritsumei.cs.draw.DrawTool.java.awt.BorderLayout.!java.awt.BorderLayout.vgap, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.nUnstartedThreads, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.nthreads, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.threads, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.java.io.File.!java.io.File.path, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.java.io.File.!java.io.File.prefixLength, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.java.io.File.!java.io.File.status, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.java.util.ArrayList.!java.util.ArrayList.elementData, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!java.awt.Component.focusTraversalKeysEnabled, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.DefaultSingleSelectionModel.changeEvent, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.DefaultSingleSelectionModel.index, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.DefaultSingleSelectionModel.listenerList, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.JMenuBar.margin, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.JMenuBar.paintBorder, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.JMenuBar.selectionModel, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.toolBar.!javax.swing.JToolBar.floatable, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.FigureSelector.java.awt.FlowLayout.!java.awt.FlowLayout.hgap, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.FigureSelector.java.awt.FlowLayout.!java.awt.FlowLayout.serialVersionOnStream, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.FigureSelector.java.awt.FlowLayout.!java.awt.FlowLayout.vgap, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.TabbedCanvas.java.util.ArrayList.!java.util.AbstractList.modCount, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.TabbedCanvas.java.util.ArrayList.!java.util.ArrayList.elementData, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.TabbedCanvas.super.!javax.swing.JTabbedPane.changeEvent, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.TabbedCanvas.super.!javax.swing.JTabbedPane.changeListener, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.TabbedCanvas.super.!javax.swing.JTabbedPane.pages, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.TabbedCanvas.super.!javax.swing.JTabbedPane.tabPlacement, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.TabbedCanvas.super.!javax.swing.JTabbedPane.visComp, jp.ac.ritsumei.cs.draw.DrawTool.super.!java.awt.Frame.frameSerializedDataVersion, jp.ac.ritsumei.cs.draw.DrawTool.super.!java.awt.Frame.mbManagement, jp.ac.ritsumei.cs.draw.DrawTool.super.!java.awt.Frame.resizable, jp.ac.ritsumei.cs.draw.DrawTool.super.!java.awt.Frame.state, jp.ac.ritsumei.cs.draw.DrawTool.super.!java.awt.Frame.title, jp.ac.ritsumei.cs.draw.DrawTool.super.!java.awt.Frame.undecorated, jp.ac.ritsumei.cs.draw.DrawTool.super.!javax.swing.JFrame.accessibleContext, jp.ac.ritsumei.cs.draw.DrawTool.super.!javax.swing.JFrame.defaultCloseOperation, jp.ac.ritsumei.cs.draw.DrawTool.super.!javax.swing.JFrame.rootPaneCheckingEnabled, this.!java.awt.Component.background, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.newEventsOnly, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!java.awt.Container.layoutMgr, this.!javax.swing.JRootPane.menuBar, this.!javax.swing.JTabbedPane.haveRegistered, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.canvas$1.support.!java.util.Vector.modCount, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.description, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.height, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.location, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.width, this.javax.swing.JComboBox.!javax.swing.DefaultComboBoxModel.objects, this.javax.swing.JComboBox.!javax.swing.JComboBox.actionCommand, this.javax.swing.JComboBox.!javax.swing.JComboBox.dataModel, this.javax.swing.JComboBox.!javax.swing.JComboBox.firingActionEvent, this.javax.swing.JComboBox.!javax.swing.JComboBox.isEditable, this.javax.swing.JComboBox.!javax.swing.JComboBox.keySelectionManager, this.javax.swing.JComboBox.!javax.swing.JComboBox.lightWeightPopupEnabled, this.javax.swing.JComboBox.!javax.swing.JComboBox.maximumRowCount, this.javax.swing.JComboBox.!javax.swing.JComboBox.selectedItemReminder, this.javax.swing.JComboBox.!javax.swing.JComboBox.selectingItem, this.javax.swing.JComboBox.!javax.swing.JComponent.inputVerifier, this.javax.swing.JComboBox.!javax.swing.JComponent.listenerList, this.javax.swing.JComboBox.!javax.swing.JComponent.revalidateRunnableScheduled, this.javax.swing.JComboBox.!javax.swing.JComponent.verifyInputWhenFocusTarget, this.javax.swing.JLabel.!javax.swing.JLabel.defaultIcon, this.javax.swing.JLabel.!javax.swing.JLabel.disabledIcon, this.javax.swing.JLabel.!javax.swing.JLabel.disabledIconSet, this.javax.swing.JLabel.!javax.swing.JLabel.horizontalAlignment, this.javax.swing.JLabel.!javax.swing.JLabel.horizontalTextPosition, this.javax.swing.JLabel.!javax.swing.JLabel.iconTextGap, this.javax.swing.JLabel.!javax.swing.JLabel.labelFor, this.javax.swing.JLabel.!javax.swing.JLabel.mnemonic, this.javax.swing.JLabel.!javax.swing.JLabel.mnemonicIndex, this.javax.swing.JLabel.!javax.swing.JLabel.text, this.javax.swing.JLabel.!javax.swing.JLabel.verticalAlignment, this.javax.swing.JLabel.!javax.swing.JLabel.verticalTextPosition, this.javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, this.javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, this.javax.swing.JMenu.!javax.swing.JMenu.menuEvent, this.javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.inProgress, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.indexOfNextAdd, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.height, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.width, this.jp.ac.ritsumei.cs.draw.DrawCanvas.jp.ac.ritsumei.cs.draw.FigureManager.java.util.LinkedList.!java.util.LinkedList.size, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newButton$1.!javax.swing.JComponent.aaHint, this.newButton$1.!javax.swing.JComponent.lcdRenderingHint, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.JMenuItem.accelerator } U = { BorderLayout.WEST, Color.white, File.separator, FlowLayout.RIGHT, JTabbedPane.TOP, KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK, KeyEvent.VK_DELETE, KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK, KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK, KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK, KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK, KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK, KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK, KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY, icons$1.length, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).autoSave, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).menu, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).menuBar, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).selector, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).tabbedCanvas, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).toolBar, jp.ac.ritsumei.cs.draw.DrawTool.contentPane$1.!java.awt.Component.parent, jp.ac.ritsumei.cs.draw.DrawTool.contentPane$1.!java.awt.Container.component, jp.ac.ritsumei.cs.draw.DrawTool.contentPane$1.!java.awt.Container.containerListener, jp.ac.ritsumei.cs.draw.DrawTool.contentPane$1.!java.awt.Container.eventMask, jp.ac.ritsumei.cs.draw.DrawTool.contentPane$1.!java.awt.Container.layoutMgr, jp.ac.ritsumei.cs.draw.DrawTool.contentPane$1.!java.awt.Container.peer, jp.ac.ritsumei.cs.draw.DrawTool.javax.swing.JPanel.!java.lang.Boolean.TRUE, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.Thread.group, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.Thread.threadStatus, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.destroyed, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.nUnstartedThreads, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.nthreads, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.threads, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.java.io.File.!java.io.File.fs, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.java.io.File.!java.io.File.path, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!java.awt.Component.focusTraversalKeysEnabled, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.JMenuBar.selectionModel, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.DrawMenu.toolBar.!javax.swing.JToolBar.floatable, jp.ac.ritsumei.cs.draw.DrawTool.jp.ac.ritsumei.cs.draw.TabbedCanvas.java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA, jp.ac.ritsumei.cs.draw.DrawTool.menu.menuBar, jp.ac.ritsumei.cs.draw.DrawTool.menu.toolBar, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, jp.ac.ritsumei.cs.draw.FigureSelector.colorComboIcons, jp.ac.ritsumei.cs.draw.FigureSelector.shapeComboIcons, jp.ac.ritsumei.cs.draw.FigureSelector.widthComboIcons, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, panel$2.NORTH, selector$0.colorCombo, selector$0.shapeCombo, selector$0.widthCombo, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, tabbedCanvas$0.canvases, tabbedCanvas$0.menu, tabbedCanvas$0.selectedTab, tabbedCanvas$0.selector, tabbedCanvas$1.canvases, tabbedCanvas$1.menu, tabbedCanvas$1.selectedTab, tabbedCanvas$1.selector, this, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this.!java.awt.Component.background, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!java.awt.Container.dispatcher, this.!java.awt.Container.parent, this.!java.awt.Container.peer, this.!javax.swing.JFrame.rootPane, this.!javax.swing.JLayeredPane.FRAME_CONTENT_LAYER, this.!javax.swing.JRootPane.contentPane, this.!javax.swing.JRootPane.layeredPane, this.!javax.swing.JRootPane.menuBar, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.listenerList, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.canvas$1.figureManager, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.cb$0.!javax.swing.JComboBox.dataModel, this.closeItem$3.!javax.swing.AbstractButton.listenerList, this.closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.colorCombo, this.copyAction, this.copyItem$4.!javax.swing.AbstractButton.accessibleContext, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutAction, this.cutItem$3.!javax.swing.AbstractButton.accessibleContext, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteAction, this.deleteItem$6.!javax.swing.AbstractButton.accessibleContext, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.emptyListItem$9.!javax.swing.AbstractButton.model, this.exitItem$13.!javax.swing.AbstractButton.listenerList, this.figureManager.figures, this.figureManager.filename, this.fileListMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.fileMenu$1.!javax.swing.AbstractButton.model, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.fmanager$3.filename.!java.lang.String.coder, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.javax.swing.JComboBox.!java.lang.Boolean.TRUE, this.javax.swing.JComboBox.!javax.swing.JComboBox.dataModel, this.javax.swing.JComboBox.!javax.swing.JPopupMenu.defaultLWPopupEnabledKey, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.menu, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.newAction, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, this.newButton$1.!javax.swing.JComponent.clientProperties, this.newButton$1.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.newButton$1.!javax.swing.ToolTipManager.accessibilityKeyListener, this.newButton$1.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.newItem$1.!java.awt.Component.changeSupport, this.newItem$1.!java.awt.Component.height, this.newItem$1.!java.awt.Component.width, this.newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.newItem$1.!javax.swing.AbstractButton.accessibleContext, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openAction, this.openItem$2.!javax.swing.AbstractButton.accessibleContext, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.pasteAction, this.pasteItem$5.!javax.swing.AbstractButton.accessibleContext, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoAction, this.redoButton$8.!javax.swing.AbstractButton.model, this.redoItem$2.!javax.swing.AbstractButton.accessibleContext, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.saveAction, this.saveAsItem$6.!javax.swing.AbstractButton.listenerList, this.saveItem$5.!javax.swing.AbstractButton.accessibleContext, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator, this.selector, this.selector.EAST, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.shapeCombo, this.shapeCombo.!javax.swing.JComboBox.dataModel, this.tabbedCanvas.CENTER, this.tabbedCanvas.canvases, this.tabbedCanvas.menu, this.tabbedCanvas.selectedTab, this.tabbedCanvas.selector, this.undoAction, this.undoItem$1.!javax.swing.AbstractButton.accessibleContext, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.JMenuItem.accelerator, this.widthCombo, this.windowMenu$3.!javax.swing.JMenu.listenerList, tool$0.menu, tool$0.selector, tool$0.tabbedCanvas }
  12 assignment D = {  } U = { main$1.!addWindowListener( java.awt.event.WindowListener ) }
  13 receiver D = {  } U = { main$1 }
  14 methodCall D = {  } U = { .!WindowAdapter( ), jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Window.windowListener, main$1.!java.awt.Window.windowListener } TO = java.awt.Window#addWindowListener( java.awt.event.WindowListener )
  15 receiver D = {  } U = {  }
  16 constructorCall D = {  } U = {  } TO = java.awt.event.WindowAdapter#WindowAdapter( )
  17 actualOut D = { .!WindowAdapter( ) } U = {  }
  18 actualOut D = { main$1.!addWindowListener( java.awt.event.WindowListener ), main$1.!java.awt.Window.newEventsOnly, main$1.!java.awt.Window.windowListener } U = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Window.windowListener, main$1.!java.awt.Window.windowListener }
  19 assignment D = {  } U = { main$1.!pack( ) }
  20 receiver D = {  } U = { main$1 }
  21 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Container.component, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Container.peer, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Dimension.height, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Dimension.width, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Window.allWindows, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Window.beforeFirstShow, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Window.parent, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Window.peer, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Window.x, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Window.y, main$1.!java.awt.Container.component, main$1.!java.awt.Container.peer, main$1.!java.awt.Dimension.height, main$1.!java.awt.Dimension.width, main$1.!java.awt.Window.allWindows, main$1.!java.awt.Window.beforeFirstShow, main$1.!java.awt.Window.parent, main$1.!java.awt.Window.peer, main$1.!java.awt.Window.x, main$1.!java.awt.Window.y } TO = java.awt.Window#pack( )
  22 actualOut D = { main$1.!java.awt.Container.descendUnconditionallyWhenValidating, main$1.!java.awt.Container.dispatcher, main$1.!java.awt.Window.isPacked, main$1.!java.awt.Window.peer, main$1.!pack( ) } U = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Container.component, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Container.peer, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Dimension.height, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Dimension.width, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Window.allWindows, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Window.beforeFirstShow, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Window.parent, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Window.peer, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Window.x, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Window.y, main$1.!java.awt.Container.component, main$1.!java.awt.Container.peer, main$1.!java.awt.Dimension.height, main$1.!java.awt.Dimension.width, main$1.!java.awt.Window.allWindows, main$1.!java.awt.Window.beforeFirstShow, main$1.!java.awt.Window.parent, main$1.!java.awt.Window.peer, main$1.!java.awt.Window.x, main$1.!java.awt.Window.y }
  23 assignment D = {  } U = { main$1.!validate( ) }
  24 receiver D = {  } U = { main$1 }
  25 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Component.LOCK, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Component.peer, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Component.valid, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Container.component, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Container.descendUnconditionallyWhenValidating, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Container.peer, main$1.!java.awt.Component.LOCK, main$1.!java.awt.Component.peer, main$1.!java.awt.Component.valid, main$1.!java.awt.Container.component, main$1.!java.awt.Container.descendUnconditionallyWhenValidating, main$1.!java.awt.Container.peer } TO = java.awt.Container#validate( )
  26 actualOut D = { main$1.!validate( ) } U = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Component.LOCK, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Component.peer, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Component.valid, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Container.component, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Container.descendUnconditionallyWhenValidating, jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).!java.awt.Container.peer, main$1.!java.awt.Component.LOCK, main$1.!java.awt.Component.peer, main$1.!java.awt.Component.valid, main$1.!java.awt.Container.component, main$1.!java.awt.Container.descendUnconditionallyWhenValidating, main$1.!java.awt.Container.peer }
  27 assignment D = {  } U = { main$1.!setVisible( boolean ) }
  28 receiver D = {  } U = { main$1 }
  29 methodCall D = {  } U = {  } TO = java.awt.Window#setVisible( boolean )
  30 actualOut D = { main$1.!setVisible( boolean ) } U = {  }
  31 methodExit
  32 formalOut D = {  } U = { $_ }
  33 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).tabbedCanvas } U = {  }
  34 actualOut D = { this.changed } U = {  }
  35 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).figureManager } U = {  }
  36 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).figureManager } U = {  }
  37 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).menu } U = {  }
  38 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).selector } U = {  }
  39 actualOut D = { this.canvas$1.undoManager } U = {  }
  40 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).autoSave } U = {  }
  41 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).clipboard } U = {  }
  42 actualOut D = { this.copyAction } U = {  }
  43 actualOut D = { this.cutAction } U = {  }
  44 actualOut D = { this.deleteAction } U = {  }
  45 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).directory } U = {  }
  46 actualOut D = { this.fileListMenu } U = {  }
  47 actualOut D = { this.fileListener } U = {  }
  48 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).menuBar } U = {  }
  49 actualOut D = { this.newAction } U = {  }
  50 actualOut D = { this.openAction } U = {  }
  51 actualOut D = { this.pasteAction } U = {  }
  52 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).recentFiles } U = {  }
  53 actualOut D = { this.redoAction } U = {  }
  54 actualOut D = { this.saveAction } U = {  }
  55 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).tabbedCanvas } U = {  }
  56 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).tool } U = {  }
  57 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).toolBar } U = {  }
  58 actualOut D = { this.undoAction } U = {  }
  59 actualOut D = { this.windowListener } U = {  }
  60 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).menu } U = {  }
  61 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).selector } U = {  }
  62 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).tabbedCanvas } U = {  }
  63 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).figure } U = {  }
  64 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).figures } U = {  }
  65 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).figures } U = {  }
  66 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).filename } U = {  }
  67 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).filename } U = {  }
  68 actualOut D = { this.colorCombo } U = {  }
  69 actualOut D = { this.shapeCombo } U = {  }
  70 actualOut D = { this.widthCombo } U = {  }
  71 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).canvases } U = {  }
  72 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.tabbedCanvas.menu } U = {  }
  73 actualOut D = { this.selectedTab } U = {  }
  74 actualOut D = { jp.ac.ritsumei.cs.draw.DrawTool.!DrawTool( java.lang.String ).selector } U = {  }
--
   0 methodEntry [ closeWindow( ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 ifSt D = {  } U = { this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener }
   3 assignment D = {  } U = { this.menu.!closeFile( ) }
   4 receiver D = {  } U = { this.menu }
   5 methodCall D = {  } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, result$1.CANCEL_OPTION, result$1.YES_OPTION, result2$2.CANCEL_OPTION, this.!java.lang.Runtime.currentRuntime, this.!java.lang.String.COMPACT_STRINGS, this.!javax.accessibility.AccessibleState.SELECTED, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.JTabbedPane.visComp, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab, this.tabbedCanvas, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#closeFile( )
   6 actualOut D = { this.!javax.swing.JTabbedPane.visComp, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, this.canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.menu.!closeFile( ) } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, result$1.CANCEL_OPTION, result$1.YES_OPTION, result2$2.CANCEL_OPTION, this.!java.lang.Runtime.currentRuntime, this.!java.lang.String.COMPACT_STRINGS, this.!javax.accessibility.AccessibleState.SELECTED, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.JTabbedPane.visComp, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab, this.tabbedCanvas, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
   7 merge ifSt(2)
   8 methodExit
   9 formalOut D = {  } U = { $_ }
  10 actualOut D = { this.selectedTab } U = {  }
--
   0 constructorEntry [ DrawTool( java.lang.String ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { title$0 } U = {  }
   3 assignment D = {  } U = { super.!JFrame( java.lang.String ) }
   4 receiver D = {  } U = {  }
   5 constructorCall D = {  } U = { title$0 } TO = javax.swing.JFrame#JFrame( java.lang.String )
   6 actualOut D = { super.!JFrame( java.lang.String ), super.!java.awt.Frame.frameSerializedDataVersion, super.!java.awt.Frame.mbManagement, super.!java.awt.Frame.resizable, super.!java.awt.Frame.state, super.!java.awt.Frame.title, super.!java.awt.Frame.undecorated, super.!javax.swing.JFrame.accessibleContext, super.!javax.swing.JFrame.defaultCloseOperation, super.!javax.swing.JFrame.rootPaneCheckingEnabled } U = {  }
   7 localDeclaration D = { contentPane$1 } U = { this.!getContentPane( ) }
   8 receiver D = {  } U = {  }
   9 methodCall D = {  } U = { this.!javax.swing.JFrame.rootPane, this.!javax.swing.JRootPane.contentPane } TO = javax.swing.JFrame#getContentPane( )
  10 actualOut D = { this.!getContentPane( ) } U = { this.!javax.swing.JFrame.rootPane, this.!javax.swing.JRootPane.contentPane }
  11 assignment D = {  } U = { contentPane$1.!setLayout( java.awt.LayoutManager ) }
  12 receiver D = {  } U = { contentPane$1 }
  13 methodCall D = {  } U = { java.awt.BorderLayout.!BorderLayout( ) } TO = java.awt.Container#setLayout( java.awt.LayoutManager )
  14 receiver D = {  } U = {  }
  15 constructorCall D = {  } U = {  } TO = java.awt.BorderLayout#BorderLayout( )
  16 actualOut D = { java.awt.BorderLayout.!BorderLayout( ), java.awt.BorderLayout.!java.awt.BorderLayout.hgap, java.awt.BorderLayout.!java.awt.BorderLayout.vgap } U = {  }
  17 actualOut D = { contentPane$1.!java.awt.Container.layoutMgr, contentPane$1.!setLayout( java.awt.LayoutManager ) } U = {  }
  18 localDeclaration D = { panel$2 } U = { javax.swing.JPanel.!JPanel( java.awt.LayoutManager ) }
  19 receiver D = {  } U = {  }
  20 constructorCall D = {  } U = { java.awt.BorderLayout.!BorderLayout( ), javax.swing.JPanel.!java.lang.Boolean.TRUE } TO = javax.swing.JPanel#JPanel( java.awt.LayoutManager )
  21 receiver D = {  } U = {  }
  22 constructorCall D = {  } U = {  } TO = java.awt.BorderLayout#BorderLayout( )
  23 actualOut D = { java.awt.BorderLayout.!BorderLayout( ), java.awt.BorderLayout.!java.awt.BorderLayout.hgap, java.awt.BorderLayout.!java.awt.BorderLayout.vgap } U = {  }
  24 actualOut D = { javax.swing.JPanel.!JPanel( java.awt.LayoutManager ) } U = { javax.swing.JPanel.!java.lang.Boolean.TRUE }
  25 assignment D = {  } U = { contentPane$1.!add( java.awt.Component java.lang.Object ) }
  26 receiver D = {  } U = { contentPane$1 }
  27 methodCall D = {  } U = { contentPane$1.!java.awt.Component.parent, contentPane$1.!java.awt.Container.component, contentPane$1.!java.awt.Container.containerListener, contentPane$1.!java.awt.Container.eventMask, contentPane$1.!java.awt.Container.layoutMgr, contentPane$1.!java.awt.Container.peer, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).NORTH, panel$2, panel$2.NORTH, this.!getContentPane( ).!java.awt.Component.parent, this.!getContentPane( ).!java.awt.Container.component, this.!getContentPane( ).!java.awt.Container.containerListener, this.!getContentPane( ).!java.awt.Container.eventMask, this.!getContentPane( ).!java.awt.Container.layoutMgr, this.!getContentPane( ).!java.awt.Container.peer } TO = java.awt.Container#add( java.awt.Component java.lang.Object )
  28 actualOut D = { contentPane$1.!add( java.awt.Component java.lang.Object ), contentPane$1.!java.awt.Component.parent } U = { contentPane$1.!java.awt.Component.parent, contentPane$1.!java.awt.Container.component, contentPane$1.!java.awt.Container.containerListener, contentPane$1.!java.awt.Container.eventMask, contentPane$1.!java.awt.Container.layoutMgr, contentPane$1.!java.awt.Container.peer, this.!getContentPane( ).!java.awt.Component.parent, this.!getContentPane( ).!java.awt.Container.component, this.!getContentPane( ).!java.awt.Container.containerListener, this.!getContentPane( ).!java.awt.Container.eventMask, this.!getContentPane( ).!java.awt.Container.layoutMgr, this.!getContentPane( ).!java.awt.Container.peer }
  29 assignment D = { this.selector } U = { jp.ac.ritsumei.cs.draw.FigureSelector.!FigureSelector( ) }
  30 receiver D = {  } U = {  }
  31 constructorCall D = {  } U = { FlowLayout.RIGHT, f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY, icons$1.length, jp.ac.ritsumei.cs.draw.FigureSelector.colorComboIcons, jp.ac.ritsumei.cs.draw.FigureSelector.shapeComboIcons, jp.ac.ritsumei.cs.draw.FigureSelector.widthComboIcons, this.!java.awt.Component.parent, this.!java.awt.Container.component, this.!java.awt.Container.containerListener, this.!java.awt.Container.eventMask, this.!java.awt.Container.layoutMgr, this.!java.awt.Container.peer, this.cb$0.!javax.swing.JComboBox.dataModel, this.colorCombo, this.javax.swing.JComboBox.!java.lang.Boolean.TRUE, this.javax.swing.JComboBox.!javax.swing.JComboBox.dataModel, this.javax.swing.JComboBox.!javax.swing.JPopupMenu.defaultLWPopupEnabledKey, this.shapeCombo, this.shapeCombo.!javax.swing.JComboBox.dataModel, this.widthCombo } TO = jp.ac.ritsumei.cs.draw.FigureSelector#FigureSelector( )
  32 actualOut D = { jp.ac.ritsumei.cs.draw.FigureSelector.!FigureSelector( ), jp.ac.ritsumei.cs.draw.FigureSelector.java.awt.FlowLayout.!java.awt.FlowLayout.hgap, jp.ac.ritsumei.cs.draw.FigureSelector.java.awt.FlowLayout.!java.awt.FlowLayout.serialVersionOnStream, jp.ac.ritsumei.cs.draw.FigureSelector.java.awt.FlowLayout.!java.awt.FlowLayout.vgap, this.!java.awt.Component.parent, this.!java.awt.Container.layoutMgr, this.javax.swing.JComboBox.!javax.swing.DefaultComboBoxModel.objects, this.javax.swing.JComboBox.!javax.swing.JComboBox.actionCommand, this.javax.swing.JComboBox.!javax.swing.JComboBox.dataModel, this.javax.swing.JComboBox.!javax.swing.JComboBox.firingActionEvent, this.javax.swing.JComboBox.!javax.swing.JComboBox.isEditable, this.javax.swing.JComboBox.!javax.swing.JComboBox.keySelectionManager, this.javax.swing.JComboBox.!javax.swing.JComboBox.lightWeightPopupEnabled, this.javax.swing.JComboBox.!javax.swing.JComboBox.maximumRowCount, this.javax.swing.JComboBox.!javax.swing.JComboBox.selectedItemReminder, this.javax.swing.JComboBox.!javax.swing.JComboBox.selectingItem, this.javax.swing.JComboBox.!javax.swing.JComponent.inputVerifier, this.javax.swing.JComboBox.!javax.swing.JComponent.listenerList, this.javax.swing.JComboBox.!javax.swing.JComponent.revalidateRunnableScheduled, this.javax.swing.JComboBox.!javax.swing.JComponent.verifyInputWhenFocusTarget, this.javax.swing.JLabel.!javax.swing.JLabel.defaultIcon, this.javax.swing.JLabel.!javax.swing.JLabel.disabledIcon, this.javax.swing.JLabel.!javax.swing.JLabel.disabledIconSet, this.javax.swing.JLabel.!javax.swing.JLabel.horizontalAlignment, this.javax.swing.JLabel.!javax.swing.JLabel.horizontalTextPosition, this.javax.swing.JLabel.!javax.swing.JLabel.iconTextGap, this.javax.swing.JLabel.!javax.swing.JLabel.labelFor, this.javax.swing.JLabel.!javax.swing.JLabel.mnemonic, this.javax.swing.JLabel.!javax.swing.JLabel.mnemonicIndex, this.javax.swing.JLabel.!javax.swing.JLabel.text, this.javax.swing.JLabel.!javax.swing.JLabel.verticalAlignment, this.javax.swing.JLabel.!javax.swing.JLabel.verticalTextPosition } U = { FlowLayout.RIGHT, f$0.color, f$0.endX, f$0.endY, f$0.outlineWidth, f$0.startX, f$0.startY, icons$1.length, jp.ac.ritsumei.cs.draw.FigureSelector.colorComboIcons, jp.ac.ritsumei.cs.draw.FigureSelector.shapeComboIcons, jp.ac.ritsumei.cs.draw.FigureSelector.widthComboIcons, this.!java.awt.Component.parent, this.!java.awt.Container.component, this.!java.awt.Container.containerListener, this.!java.awt.Container.eventMask, this.!java.awt.Container.layoutMgr, this.!java.awt.Container.peer, this.cb$0.!javax.swing.JComboBox.dataModel, this.colorCombo, this.javax.swing.JComboBox.!java.lang.Boolean.TRUE, this.javax.swing.JComboBox.!javax.swing.JComboBox.dataModel, this.javax.swing.JComboBox.!javax.swing.JPopupMenu.defaultLWPopupEnabledKey, this.shapeCombo, this.shapeCombo.!javax.swing.JComboBox.dataModel, this.widthCombo }
  33 assignment D = {  } U = { panel$2.!add( java.awt.Component java.lang.Object ) }
  34 receiver D = {  } U = { panel$2 }
  35 methodCall D = {  } U = { javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Component.parent, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.component, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.containerListener, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.eventMask, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.layoutMgr, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.peer, jp.ac.ritsumei.cs.draw.FigureSelector.!FigureSelector( ).EAST, jp.ac.ritsumei.cs.draw.FigureSelector.!FigureSelector( ).colorCombo, jp.ac.ritsumei.cs.draw.FigureSelector.!FigureSelector( ).shapeCombo, jp.ac.ritsumei.cs.draw.FigureSelector.!FigureSelector( ).widthCombo, panel$2.!java.awt.Component.parent, panel$2.!java.awt.Container.component, panel$2.!java.awt.Container.containerListener, panel$2.!java.awt.Container.eventMask, panel$2.!java.awt.Container.layoutMgr, panel$2.!java.awt.Container.peer, this.selector, this.selector.EAST, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo } TO = java.awt.Container#add( java.awt.Component java.lang.Object )
  36 actualOut D = { panel$2.!add( java.awt.Component java.lang.Object ), panel$2.!java.awt.Component.parent } U = { javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Component.parent, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.component, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.containerListener, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.eventMask, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.layoutMgr, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.peer, panel$2.!java.awt.Component.parent, panel$2.!java.awt.Container.component, panel$2.!java.awt.Container.containerListener, panel$2.!java.awt.Container.eventMask, panel$2.!java.awt.Container.layoutMgr, panel$2.!java.awt.Container.peer }
  37 assignment D = { this.tabbedCanvas } U = { jp.ac.ritsumei.cs.draw.TabbedCanvas.!TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector ) }
  38 receiver D = {  } U = {  }
  39 constructorCall D = {  } U = { JTabbedPane.TOP, jp.ac.ritsumei.cs.draw.TabbedCanvas.java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA, selector$0.colorCombo, selector$0.shapeCombo, selector$0.widthCombo } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector )
  40 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.FigureSelector.!FigureSelector( ).colorCombo, jp.ac.ritsumei.cs.draw.FigureSelector.!FigureSelector( ).shapeCombo, jp.ac.ritsumei.cs.draw.FigureSelector.!FigureSelector( ).widthCombo, this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo }
  41 actualOut D = { jp.ac.ritsumei.cs.draw.TabbedCanvas.!TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector ), jp.ac.ritsumei.cs.draw.TabbedCanvas.java.util.ArrayList.!java.util.AbstractList.modCount, jp.ac.ritsumei.cs.draw.TabbedCanvas.java.util.ArrayList.!java.util.ArrayList.elementData, jp.ac.ritsumei.cs.draw.TabbedCanvas.super.!javax.swing.JTabbedPane.changeEvent, jp.ac.ritsumei.cs.draw.TabbedCanvas.super.!javax.swing.JTabbedPane.changeListener, jp.ac.ritsumei.cs.draw.TabbedCanvas.super.!javax.swing.JTabbedPane.pages, jp.ac.ritsumei.cs.draw.TabbedCanvas.super.!javax.swing.JTabbedPane.tabPlacement, jp.ac.ritsumei.cs.draw.TabbedCanvas.super.!javax.swing.JTabbedPane.visComp } U = { JTabbedPane.TOP, jp.ac.ritsumei.cs.draw.TabbedCanvas.java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA, selector$0.colorCombo, selector$0.shapeCombo, selector$0.widthCombo }
  42 assignment D = {  } U = { contentPane$1.!add( java.awt.Component java.lang.Object ) }
  43 receiver D = {  } U = { contentPane$1 }
  44 methodCall D = {  } U = { contentPane$1.!java.awt.Component.parent, contentPane$1.!java.awt.Container.component, contentPane$1.!java.awt.Container.containerListener, contentPane$1.!java.awt.Container.eventMask, contentPane$1.!java.awt.Container.layoutMgr, contentPane$1.!java.awt.Container.peer, jp.ac.ritsumei.cs.draw.TabbedCanvas.!TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector ).CENTER, jp.ac.ritsumei.cs.draw.TabbedCanvas.!TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector ).canvases, jp.ac.ritsumei.cs.draw.TabbedCanvas.!TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector ).menu, jp.ac.ritsumei.cs.draw.TabbedCanvas.!TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector ).selectedTab, jp.ac.ritsumei.cs.draw.TabbedCanvas.!TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector ).selector, this.!getContentPane( ).!java.awt.Component.parent, this.!getContentPane( ).!java.awt.Container.component, this.!getContentPane( ).!java.awt.Container.containerListener, this.!getContentPane( ).!java.awt.Container.eventMask, this.!getContentPane( ).!java.awt.Container.layoutMgr, this.!getContentPane( ).!java.awt.Container.peer, this.tabbedCanvas, this.tabbedCanvas.CENTER, this.tabbedCanvas.canvases, this.tabbedCanvas.menu, this.tabbedCanvas.selectedTab, this.tabbedCanvas.selector } TO = java.awt.Container#add( java.awt.Component java.lang.Object )
  45 actualOut D = { contentPane$1.!add( java.awt.Component java.lang.Object ), contentPane$1.!java.awt.Component.parent } U = { contentPane$1.!java.awt.Component.parent, contentPane$1.!java.awt.Container.component, contentPane$1.!java.awt.Container.containerListener, contentPane$1.!java.awt.Container.eventMask, contentPane$1.!java.awt.Container.layoutMgr, contentPane$1.!java.awt.Container.peer, this.!getContentPane( ).!java.awt.Component.parent, this.!getContentPane( ).!java.awt.Container.component, this.!getContentPane( ).!java.awt.Container.containerListener, this.!getContentPane( ).!java.awt.Container.eventMask, this.!getContentPane( ).!java.awt.Container.layoutMgr, this.!getContentPane( ).!java.awt.Container.peer }
  46 assignment D = { this.menu } U = { jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ) }
  47 receiver D = {  } U = {  }
  48 constructorCall D = {  } U = { KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK, KeyEvent.VK_DELETE, KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK, KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK, KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK, KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK, KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK, KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK, KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).autoSave, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).menuBar, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).toolBar, jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.Thread.group, jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.Thread.threadStatus, jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.destroyed, jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.nUnstartedThreads, jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.nthreads, jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.threads, jp.ac.ritsumei.cs.draw.DrawMenu.java.io.File.!java.io.File.fs, jp.ac.ritsumei.cs.draw.DrawMenu.java.io.File.!java.io.File.path, jp.ac.ritsumei.cs.draw.DrawMenu.java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA, jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!java.awt.Component.focusTraversalKeysEnabled, jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.JMenuBar.selectionModel, jp.ac.ritsumei.cs.draw.DrawMenu.toolBar.!javax.swing.JToolBar.floatable, tabbedCanvas$0.canvases, tabbedCanvas$0.menu, tabbedCanvas$0.selectedTab, tabbedCanvas$0.selector, tabbedCanvas$1.canvases, tabbedCanvas$1.menu, tabbedCanvas$1.selectedTab, tabbedCanvas$1.selector, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.closeItem$3.!javax.swing.AbstractButton.listenerList, this.closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.copyAction, this.copyItem$4.!javax.swing.AbstractButton.accessibleContext, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutAction, this.cutItem$3.!javax.swing.AbstractButton.accessibleContext, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteAction, this.deleteItem$6.!javax.swing.AbstractButton.accessibleContext, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.emptyListItem$9.!javax.swing.AbstractButton.model, this.exitItem$13.!javax.swing.AbstractButton.listenerList, this.fileListMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.fileMenu$1.!javax.swing.AbstractButton.model, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newAction, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, this.newButton$1.!javax.swing.JComponent.clientProperties, this.newButton$1.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.newButton$1.!javax.swing.ToolTipManager.accessibilityKeyListener, this.newButton$1.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.newItem$1.!java.awt.Component.changeSupport, this.newItem$1.!java.awt.Component.height, this.newItem$1.!java.awt.Component.width, this.newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.newItem$1.!javax.swing.AbstractButton.accessibleContext, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openAction, this.openItem$2.!javax.swing.AbstractButton.accessibleContext, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.pasteAction, this.pasteItem$5.!javax.swing.AbstractButton.accessibleContext, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoAction, this.redoButton$8.!javax.swing.AbstractButton.model, this.redoItem$2.!javax.swing.AbstractButton.accessibleContext, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.saveAction, this.saveAsItem$6.!javax.swing.AbstractButton.listenerList, this.saveItem$5.!javax.swing.AbstractButton.accessibleContext, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator, this.undoAction, this.undoItem$1.!javax.swing.AbstractButton.accessibleContext, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.JMenuItem.accelerator, this.windowMenu$3.!javax.swing.JMenu.listenerList, tool$0.menu, tool$0.selector, tool$0.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas )
  49 actualIn D = {  } U = { this }
  50 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.TabbedCanvas.!TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector ).canvases, jp.ac.ritsumei.cs.draw.TabbedCanvas.!TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector ).menu, jp.ac.ritsumei.cs.draw.TabbedCanvas.!TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector ).selectedTab, jp.ac.ritsumei.cs.draw.TabbedCanvas.!TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector ).selector, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.menu, this.tabbedCanvas.selectedTab, this.tabbedCanvas.selector }
  51 actualOut D = { jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ), jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.nUnstartedThreads, jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.nthreads, jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.threads, jp.ac.ritsumei.cs.draw.DrawMenu.java.io.File.!java.io.File.path, jp.ac.ritsumei.cs.draw.DrawMenu.java.io.File.!java.io.File.prefixLength, jp.ac.ritsumei.cs.draw.DrawMenu.java.io.File.!java.io.File.status, jp.ac.ritsumei.cs.draw.DrawMenu.java.util.ArrayList.!java.util.AbstractList.modCount, jp.ac.ritsumei.cs.draw.DrawMenu.java.util.ArrayList.!java.util.ArrayList.elementData, jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!java.awt.Component.focusTraversalKeysEnabled, jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.DefaultSingleSelectionModel.changeEvent, jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.DefaultSingleSelectionModel.index, jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.DefaultSingleSelectionModel.listenerList, jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.JComponent.inputVerifier, jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.JComponent.listenerList, jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.JComponent.revalidateRunnableScheduled, jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.JComponent.verifyInputWhenFocusTarget, jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.JMenuBar.margin, jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.JMenuBar.paintBorder, jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.JMenuBar.selectionModel, jp.ac.ritsumei.cs.draw.DrawMenu.toolBar.!javax.swing.JToolBar.floatable, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.description, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.height, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.location, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.width, this.javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, this.javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, this.javax.swing.JMenu.!javax.swing.JMenu.menuEvent, this.javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newButton$1.!javax.swing.JComponent.aaHint, this.newButton$1.!javax.swing.JComponent.lcdRenderingHint, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.JMenuItem.accelerator } U = { KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK, KeyEvent.VK_DELETE, KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK, KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK, KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK, KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK, KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK, KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK, KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).autoSave, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).menuBar, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).toolBar, jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.Thread.group, jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.Thread.threadStatus, jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.destroyed, jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.nUnstartedThreads, jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.nthreads, jp.ac.ritsumei.cs.draw.DrawMenu.autoSave.!java.lang.ThreadGroup.threads, jp.ac.ritsumei.cs.draw.DrawMenu.java.io.File.!java.io.File.fs, jp.ac.ritsumei.cs.draw.DrawMenu.java.io.File.!java.io.File.path, jp.ac.ritsumei.cs.draw.DrawMenu.java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA, jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!java.awt.Component.focusTraversalKeysEnabled, jp.ac.ritsumei.cs.draw.DrawMenu.javax.swing.JMenuBar.!javax.swing.JMenuBar.selectionModel, jp.ac.ritsumei.cs.draw.DrawMenu.toolBar.!javax.swing.JToolBar.floatable, tabbedCanvas$0.canvases, tabbedCanvas$0.menu, tabbedCanvas$0.selectedTab, tabbedCanvas$0.selector, tabbedCanvas$1.canvases, tabbedCanvas$1.menu, tabbedCanvas$1.selectedTab, tabbedCanvas$1.selector, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.closeItem$3.!javax.swing.AbstractButton.listenerList, this.closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.copyAction, this.copyItem$4.!javax.swing.AbstractButton.accessibleContext, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutAction, this.cutItem$3.!javax.swing.AbstractButton.accessibleContext, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteAction, this.deleteItem$6.!javax.swing.AbstractButton.accessibleContext, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.emptyListItem$9.!javax.swing.AbstractButton.model, this.exitItem$13.!javax.swing.AbstractButton.listenerList, this.fileListMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.fileMenu$1.!javax.swing.AbstractButton.model, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newAction, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, this.newButton$1.!javax.swing.JComponent.clientProperties, this.newButton$1.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.newButton$1.!javax.swing.ToolTipManager.accessibilityKeyListener, this.newButton$1.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.newItem$1.!java.awt.Component.changeSupport, this.newItem$1.!java.awt.Component.height, this.newItem$1.!java.awt.Component.width, this.newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.newItem$1.!javax.swing.AbstractButton.accessibleContext, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openAction, this.openItem$2.!javax.swing.AbstractButton.accessibleContext, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.pasteAction, this.pasteItem$5.!javax.swing.AbstractButton.accessibleContext, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoAction, this.redoButton$8.!javax.swing.AbstractButton.model, this.redoItem$2.!javax.swing.AbstractButton.accessibleContext, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.saveAction, this.saveAsItem$6.!javax.swing.AbstractButton.listenerList, this.saveItem$5.!javax.swing.AbstractButton.accessibleContext, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator, this.undoAction, this.undoItem$1.!javax.swing.AbstractButton.accessibleContext, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.JMenuItem.accelerator, this.windowMenu$3.!javax.swing.JMenu.listenerList, tool$0.menu, tool$0.selector, tool$0.tabbedCanvas }
  52 assignment D = {  } U = { this.!setJMenuBar( javax.swing.JMenuBar ) }
  53 receiver D = {  } U = {  }
  54 methodCall D = {  } U = { this.!javax.swing.JFrame.rootPane, this.!javax.swing.JLayeredPane.FRAME_CONTENT_LAYER, this.!javax.swing.JRootPane.layeredPane, this.!javax.swing.JRootPane.menuBar, this.menu.!getMenuBar( ) } TO = javax.swing.JFrame#setJMenuBar( javax.swing.JMenuBar )
  55 receiver D = {  } U = { this.menu }
  56 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).menuBar, this.menu.menuBar } TO = jp.ac.ritsumei.cs.draw.DrawMenu#getMenuBar( )
  57 actualOut D = { this.menu.!getMenuBar( ) } U = { jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).menuBar, this.menu.menuBar }
  58 actualOut D = { this.!javax.swing.JRootPane.menuBar, this.!setJMenuBar( javax.swing.JMenuBar ) } U = { this.!javax.swing.JFrame.rootPane, this.!javax.swing.JLayeredPane.FRAME_CONTENT_LAYER, this.!javax.swing.JRootPane.layeredPane, this.!javax.swing.JRootPane.menuBar }
  59 assignment D = {  } U = { panel$2.!add( java.awt.Component java.lang.Object ) }
  60 receiver D = {  } U = { panel$2 }
  61 methodCall D = {  } U = { BorderLayout.WEST, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Component.parent, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.component, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.containerListener, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.eventMask, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.layoutMgr, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.peer, panel$2.!java.awt.Component.parent, panel$2.!java.awt.Container.component, panel$2.!java.awt.Container.containerListener, panel$2.!java.awt.Container.eventMask, panel$2.!java.awt.Container.layoutMgr, panel$2.!java.awt.Container.peer, this.menu.!getToolBar( ) } TO = java.awt.Container#add( java.awt.Component java.lang.Object )
  62 receiver D = {  } U = { this.menu }
  63 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).toolBar, this.menu.toolBar } TO = jp.ac.ritsumei.cs.draw.DrawMenu#getToolBar( )
  64 actualOut D = { this.menu.!getToolBar( ) } U = { jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).toolBar, this.menu.toolBar }
  65 actualOut D = { panel$2.!add( java.awt.Component java.lang.Object ), panel$2.!java.awt.Component.parent } U = { javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Component.parent, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.component, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.containerListener, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.eventMask, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.layoutMgr, javax.swing.JPanel.!JPanel( java.awt.LayoutManager ).!java.awt.Container.peer, panel$2.!java.awt.Component.parent, panel$2.!java.awt.Container.component, panel$2.!java.awt.Container.containerListener, panel$2.!java.awt.Container.eventMask, panel$2.!java.awt.Container.layoutMgr, panel$2.!java.awt.Container.peer }
  66 assignment D = {  } U = { this.tabbedCanvas.!setDrawMenu( jp.ac.ritsumei.cs.draw.DrawMenu ) }
  67 receiver D = {  } U = { this.tabbedCanvas }
  68 methodCall D = {  } U = { menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#setDrawMenu( jp.ac.ritsumei.cs.draw.DrawMenu )
  69 actualIn D = {  } U = { jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).autoSave, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).clipboard, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).copyAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).cutAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).deleteAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).directory, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).fileListMenu, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).fileListener, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).menuBar, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).newAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).openAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).pasteAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).recentFiles, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).redoAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).saveAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).tabbedCanvas, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).tool, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).toolBar, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).undoAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).windowListener, this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener }
  70 actualOut D = { this.tabbedCanvas.!setDrawMenu( jp.ac.ritsumei.cs.draw.DrawMenu ) } U = { menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener }
  71 assignment D = {  } U = { this.tabbedCanvas.!init( ) }
  72 receiver D = {  } U = { this.tabbedCanvas }
  73 methodCall D = {  } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).autoSave, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).clipboard, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).copyAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).cutAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).deleteAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).directory, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).fileListMenu, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).fileListener, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).menuBar, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).newAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).openAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).pasteAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).recentFiles, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).redoAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).saveAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).tabbedCanvas, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).tool, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).toolBar, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).undoAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).windowListener, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, jp.ac.ritsumei.cs.draw.FigureSelector.!FigureSelector( ).colorCombo, jp.ac.ritsumei.cs.draw.FigureSelector.!FigureSelector( ).shapeCombo, jp.ac.ritsumei.cs.draw.FigureSelector.!FigureSelector( ).widthCombo, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!java.awt.Component.background, this.!java.awt.Component.height, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!java.awt.Component.width, this.!java.awt.Container.dispatcher, this.!java.awt.Container.parent, this.!java.awt.Container.peer, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.listenerList, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.event.EventListenerList.NULL_ARRAY, this.!javax.swing.event.EventListenerList.listenerList, this.canvas$1.figureManager, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.figureManager.figures, this.figureManager.filename, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.fmanager$3.filename.!java.lang.String.coder, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#init( )
  74 actualOut D = { this.!java.awt.Component.background, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.newEventsOnly, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.event.EventListenerList.listenerList, this.canvas$1.support.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.inProgress, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.indexOfNextAdd, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.height, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.width, this.jp.ac.ritsumei.cs.draw.DrawCanvas.jp.ac.ritsumei.cs.draw.FigureManager.java.util.LinkedList.!java.util.LinkedList.size, this.tabbedCanvas.!init( ) } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).autoSave, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).clipboard, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).copyAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).cutAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).deleteAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).directory, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).fileListMenu, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).fileListener, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).menuBar, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).newAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).openAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).pasteAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).recentFiles, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).redoAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).saveAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).tabbedCanvas, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).tool, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).toolBar, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).undoAction, jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).windowListener, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, jp.ac.ritsumei.cs.draw.FigureSelector.!FigureSelector( ).colorCombo, jp.ac.ritsumei.cs.draw.FigureSelector.!FigureSelector( ).shapeCombo, jp.ac.ritsumei.cs.draw.FigureSelector.!FigureSelector( ).widthCombo, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!java.awt.Component.background, this.!java.awt.Component.height, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!java.awt.Component.width, this.!java.awt.Container.dispatcher, this.!java.awt.Container.parent, this.!java.awt.Container.peer, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.listenerList, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.event.EventListenerList.NULL_ARRAY, this.!javax.swing.event.EventListenerList.listenerList, this.canvas$1.figureManager, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.figureManager.figures, this.figureManager.filename, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.fmanager$3.filename.!java.lang.String.coder, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo }
  75 constructorExit
  76 formalOut D = {  } U = { $_ }
  83 actualOut D = { jp.ac.ritsumei.cs.draw.FigureSelector.!FigureSelector( ).figure } U = {  }
  84 actualOut D = { this.colorCombo } U = {  }
  85 actualOut D = { this.shapeCombo } U = {  }
  86 actualOut D = { this.widthCombo } U = {  }
  87 actualOut D = { jp.ac.ritsumei.cs.draw.TabbedCanvas.!TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector ).canvases } U = {  }
  88 actualOut D = { jp.ac.ritsumei.cs.draw.TabbedCanvas.!TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector ).selector } U = {  }
  89 actualOut D = { jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).tabbedCanvas } U = {  }
  90 actualOut D = { jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).autoSave } U = {  }
  91 actualOut D = { jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).clipboard } U = {  }
  92 actualOut D = { this.copyAction } U = {  }
  93 actualOut D = { this.cutAction } U = {  }
  94 actualOut D = { this.deleteAction } U = {  }
  95 actualOut D = { jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).directory } U = {  }
  96 actualOut D = { this.fileListMenu } U = {  }
  97 actualOut D = { this.fileListener } U = {  }
  98 actualOut D = { jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).menuBar } U = {  }
  99 actualOut D = { this.newAction } U = {  }
 100 actualOut D = { this.openAction } U = {  }
 101 actualOut D = { this.pasteAction } U = {  }
 102 actualOut D = { jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).recentFiles } U = {  }
 103 actualOut D = { this.redoAction } U = {  }
 104 actualOut D = { this.saveAction } U = {  }
 105 actualOut D = { jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).tabbedCanvas } U = {  }
 106 actualOut D = { jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).tool } U = {  }
 107 actualOut D = { jp.ac.ritsumei.cs.draw.DrawMenu.!DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ).toolBar } U = {  }
 108 actualOut D = { this.undoAction } U = {  }
 109 actualOut D = { this.windowListener } U = {  }
 110 actualOut D = { this.tabbedCanvas.menu } U = {  }
 111 actualOut D = { this.changed } U = {  }
 112 actualOut D = { this.tabbedCanvas.!init( ).figureManager } U = {  }
 113 actualOut D = { this.tabbedCanvas.!init( ).figureManager } U = {  }
 114 actualOut D = { this.tabbedCanvas.!init( ).menu } U = {  }
 115 actualOut D = { this.tabbedCanvas.!init( ).selector } U = {  }
 116 actualOut D = { this.canvas$1.undoManager } U = {  }
 117 actualOut D = { this.tabbedCanvas.!init( ).figures } U = {  }
 118 actualOut D = { this.tabbedCanvas.!init( ).figures } U = {  }
 119 actualOut D = { this.tabbedCanvas.!init( ).filename } U = {  }
 120 actualOut D = { this.tabbedCanvas.!init( ).filename } U = {  }
 121 actualOut D = { this.selectedTab } U = {  }
--
   0 fieldEntry [ menu ]
   1 fieldDeclaration D = { this.menu } U = { this.menu }
   2 fieldExit
--
   0 methodEntry [ terminate( ) ]
   1 assignment D = {  } U = { this.!exit( int ) }
   2 receiver D = {  } U = {  }
   3 methodCall D = {  } U = { this.!java.lang.Runtime.currentRuntime } TO = java.lang.System#exit( int )
   4 actualOut D = { this.!exit( int ) } U = { this.!java.lang.Runtime.currentRuntime }
   5 methodExit
   6 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.DrawTool.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.DrawTool.serialVersionUID }
   2 fieldExit
--
   0 fieldEntry [ tabbedCanvas ]
   1 fieldDeclaration D = { this.tabbedCanvas } U = { this.tabbedCanvas }
   2 fieldExit
--
   0: selector
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: main( java.lang.String[] )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 31 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 8 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 6 trueControlFlow
   7: 6 -> 3 trueControlFlow
   8: 7 -> 13 trueControlFlow
   9: 8 -> 10 trueControlFlow
  10: 9 -> 1 exceptionCatchFlow
  11: 9 -> 33 trueControlFlow
  12: 10 -> 9 trueControlFlow
  13: 11 -> 7 trueControlFlow
  14: 12 -> 20 trueControlFlow
  15: 13 -> 15 trueControlFlow
  16: 14 -> 18 trueControlFlow
  17: 15 -> 16 trueControlFlow
  18: 16 -> 17 trueControlFlow
  19: 17 -> 14 trueControlFlow
  20: 18 -> 12 trueControlFlow
  21: 19 -> 24 trueControlFlow
  22: 20 -> 21 trueControlFlow
  23: 21 -> 22 trueControlFlow
  24: 22 -> 19 trueControlFlow
  25: 23 -> 28 trueControlFlow
  26: 24 -> 25 trueControlFlow
  27: 25 -> 26 trueControlFlow
  28: 26 -> 23 trueControlFlow
  29: 27 -> 32 trueControlFlow
  30: 28 -> 29 trueControlFlow
  31: 29 -> 30 trueControlFlow
  32: 30 -> 27 trueControlFlow
  33: 32 -> 31 trueControlFlow
  34: 33 -> 34 trueControlFlow
  35: 34 -> 35 trueControlFlow
  36: 35 -> 36 trueControlFlow
  37: 36 -> 37 trueControlFlow
  38: 37 -> 38 trueControlFlow
  39: 38 -> 39 trueControlFlow
  40: 39 -> 40 trueControlFlow
  41: 40 -> 41 trueControlFlow
  42: 41 -> 42 trueControlFlow
  43: 42 -> 43 trueControlFlow
  44: 43 -> 44 trueControlFlow
  45: 44 -> 45 trueControlFlow
  46: 45 -> 46 trueControlFlow
  47: 46 -> 47 trueControlFlow
  48: 47 -> 48 trueControlFlow
  49: 48 -> 49 trueControlFlow
  50: 49 -> 50 trueControlFlow
  51: 50 -> 51 trueControlFlow
  52: 51 -> 52 trueControlFlow
  53: 52 -> 53 trueControlFlow
  54: 53 -> 54 trueControlFlow
  55: 54 -> 55 trueControlFlow
  56: 55 -> 56 trueControlFlow
  57: 56 -> 57 trueControlFlow
  58: 57 -> 58 trueControlFlow
  59: 58 -> 59 trueControlFlow
  60: 59 -> 60 trueControlFlow
  61: 60 -> 61 trueControlFlow
  62: 61 -> 62 trueControlFlow
  63: 62 -> 63 trueControlFlow
  64: 63 -> 64 trueControlFlow
  65: 64 -> 65 trueControlFlow
  66: 65 -> 66 trueControlFlow
  67: 66 -> 67 trueControlFlow
  68: 67 -> 68 trueControlFlow
  69: 68 -> 69 trueControlFlow
  70: 69 -> 70 trueControlFlow
  71: 70 -> 71 trueControlFlow
  72: 71 -> 72 trueControlFlow
  73: 72 -> 73 trueControlFlow
  74: 73 -> 74 trueControlFlow
  75: 74 -> 11 trueControlFlow
--
   0: closeWindow( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 8 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 2 -> 7 falseControlFlow
   5: 3 -> 7 trueControlFlow
   6: 4 -> 5 trueControlFlow
   7: 5 -> 1 exceptionCatchFlow
   8: 5 -> 10 trueControlFlow
   9: 6 -> 3 trueControlFlow
  10: 7 -> 9 trueControlFlow
  11: 9 -> 8 trueControlFlow
  12: 10 -> 6 trueControlFlow
--
   0: DrawTool( java.lang.String )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 75 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 8 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 1 exceptionCatchFlow
   7: 5 -> 6 trueControlFlow
   8: 6 -> 3 trueControlFlow
   9: 7 -> 12 trueControlFlow
  10: 8 -> 9 trueControlFlow
  11: 9 -> 10 trueControlFlow
  12: 10 -> 7 trueControlFlow
  13: 11 -> 19 trueControlFlow
  14: 12 -> 14 trueControlFlow
  15: 13 -> 17 trueControlFlow
  16: 14 -> 15 trueControlFlow
  17: 15 -> 16 trueControlFlow
  18: 16 -> 13 trueControlFlow
  19: 17 -> 11 trueControlFlow
  20: 18 -> 26 trueControlFlow
  21: 19 -> 21 trueControlFlow
  22: 20 -> 24 trueControlFlow
  23: 21 -> 22 trueControlFlow
  24: 22 -> 23 trueControlFlow
  25: 23 -> 20 trueControlFlow
  26: 24 -> 18 trueControlFlow
  27: 25 -> 30 trueControlFlow
  28: 26 -> 27 trueControlFlow
  29: 27 -> 28 trueControlFlow
  30: 28 -> 25 trueControlFlow
  31: 29 -> 34 trueControlFlow
  32: 30 -> 31 trueControlFlow
  33: 31 -> 83 trueControlFlow
  34: 32 -> 29 trueControlFlow
  35: 33 -> 38 trueControlFlow
  36: 34 -> 35 trueControlFlow
  37: 35 -> 36 trueControlFlow
  38: 36 -> 33 trueControlFlow
  39: 37 -> 43 trueControlFlow
  40: 38 -> 40 trueControlFlow
  41: 39 -> 87 trueControlFlow
  42: 40 -> 39 trueControlFlow
  43: 41 -> 37 trueControlFlow
  44: 42 -> 47 trueControlFlow
  45: 43 -> 44 trueControlFlow
  46: 44 -> 45 trueControlFlow
  47: 45 -> 42 trueControlFlow
  48: 46 -> 53 trueControlFlow
  49: 47 -> 49 trueControlFlow
  50: 48 -> 89 trueControlFlow
  51: 49 -> 50 trueControlFlow
  52: 50 -> 48 trueControlFlow
  53: 51 -> 46 trueControlFlow
  54: 52 -> 60 trueControlFlow
  55: 53 -> 55 trueControlFlow
  56: 54 -> 58 trueControlFlow
  57: 55 -> 56 trueControlFlow
  58: 56 -> 57 trueControlFlow
  59: 57 -> 54 trueControlFlow
  60: 58 -> 52 trueControlFlow
  61: 59 -> 67 trueControlFlow
  62: 60 -> 62 trueControlFlow
  63: 61 -> 65 trueControlFlow
  64: 62 -> 63 trueControlFlow
  65: 63 -> 64 trueControlFlow
  66: 64 -> 61 trueControlFlow
  67: 65 -> 59 trueControlFlow
  68: 66 -> 72 trueControlFlow
  69: 67 -> 69 trueControlFlow
  70: 68 -> 110 trueControlFlow
  71: 69 -> 68 trueControlFlow
  72: 70 -> 66 trueControlFlow
  73: 71 -> 76 trueControlFlow
  74: 72 -> 73 trueControlFlow
  75: 73 -> 111 trueControlFlow
  76: 74 -> 71 trueControlFlow
  77: 76 -> 75 trueControlFlow
  78: 83 -> 84 trueControlFlow
  79: 84 -> 85 trueControlFlow
  80: 85 -> 86 trueControlFlow
  81: 86 -> 32 trueControlFlow
  82: 87 -> 88 trueControlFlow
  83: 88 -> 41 trueControlFlow
  84: 89 -> 90 trueControlFlow
  85: 90 -> 91 trueControlFlow
  86: 91 -> 92 trueControlFlow
  87: 92 -> 93 trueControlFlow
  88: 93 -> 94 trueControlFlow
  89: 94 -> 95 trueControlFlow
  90: 95 -> 96 trueControlFlow
  91: 96 -> 97 trueControlFlow
  92: 97 -> 98 trueControlFlow
  93: 98 -> 99 trueControlFlow
  94: 99 -> 100 trueControlFlow
  95: 100 -> 101 trueControlFlow
  96: 101 -> 102 trueControlFlow
  97: 102 -> 103 trueControlFlow
  98: 103 -> 104 trueControlFlow
  99: 104 -> 105 trueControlFlow
 100: 105 -> 106 trueControlFlow
 101: 106 -> 107 trueControlFlow
 102: 107 -> 108 trueControlFlow
 103: 108 -> 109 trueControlFlow
 104: 109 -> 51 trueControlFlow
 105: 110 -> 70 trueControlFlow
 106: 111 -> 112 trueControlFlow
 107: 112 -> 113 trueControlFlow
 108: 113 -> 114 trueControlFlow
 109: 114 -> 115 trueControlFlow
 110: 115 -> 116 trueControlFlow
 111: 116 -> 117 trueControlFlow
 112: 117 -> 118 trueControlFlow
 113: 118 -> 119 trueControlFlow
 114: 119 -> 120 trueControlFlow
 115: 120 -> 121 trueControlFlow
 116: 121 -> 74 trueControlFlow
--
   0: menu
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: terminate( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 6 trueControlFlow
   3: 2 -> 3 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 1 trueControlFlow
   6: 6 -> 5 trueControlFlow
--
   0: serialVersionUID
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: tabbedCanvas
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
----- CCFG (to here) -----

