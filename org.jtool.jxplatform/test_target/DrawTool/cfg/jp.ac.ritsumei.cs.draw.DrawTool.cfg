----- CCFG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.DrawTool
   0 fieldEntry [ selector ]
   1 fieldDeclaration D = { this.selector } U = { this.selector }
   2 fieldExit
--
   0 methodEntry [ main( java.lang.String[] ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { args$0 } U = {  }
   3 assignment D = {  } U = { this.!setDefault }
   4 receiver D = {  } U = {  }
   5 methodCall D = { this.defaultDisplayLocale, this.defaultFormatLocale, this.defaultLocale } U = { Locale.ENGLISH, java.lang.System.security, this$1.$SwitchMap$java$util$Locale$Category, this$Category.DISPLAY, this$Category.FORMAT, this.$assertionsDisabled } TO = java.util.Locale#setDefault( java.util.Locale )
   6 actualOut D = { this.!setDefault } U = {  }
   7 localDeclaration D = { main$1 } U = { main$1.!DrawTool }
   8 receiver D = {  } U = {  }
   9 constructorCall D = { main$1.menu, main$1.menu.autoSave, main$1.menu.autoSave.tabbedCanvas, main$1.menu.clipboard, main$1.menu.copyAction, main$1.menu.cutAction, main$1.menu.deleteAction, main$1.menu.directory, main$1.menu.fileListMenu, main$1.menu.fileListener, main$1.menu.menuBar, main$1.menu.newAction, main$1.menu.openAction, main$1.menu.pasteAction, main$1.menu.recentFiles, main$1.menu.redoAction, main$1.menu.saveAction, main$1.menu.tabbedCanvas, main$1.menu.tool, main$1.menu.toolBar, main$1.menu.undoAction, main$1.menu.windowListener, main$1.selector, main$1.selector.colorCombo, main$1.selector.shapeCombo, main$1.selector.widthCombo, main$1.tabbedCanvas, main$1.tabbedCanvas.canvases, main$1.tabbedCanvas.menu, main$1.tabbedCanvas.selectedTab, main$1.tabbedCanvas.selector } U = { main$1.menu, main$1.menu.autoSave, main$1.menu.copyAction, main$1.menu.cutAction, main$1.menu.deleteAction, main$1.menu.fileListMenu, main$1.menu.menuBar, main$1.menu.newAction, main$1.menu.openAction, main$1.menu.pasteAction, main$1.menu.redoAction, main$1.menu.saveAction, main$1.menu.toolBar, main$1.menu.undoAction, main$1.selector, main$1.selector.colorCombo, main$1.selector.shapeCombo, main$1.selector.widthCombo, main$1.tabbedCanvas, main$1.tabbedCanvas.canvases, main$1.tabbedCanvas.menu, main$1.tabbedCanvas.selector } TO = jp.ac.ritsumei.cs.draw.DrawTool#DrawTool( java.lang.String )
  10 actualIn D = {  } U = { FigureManager.UNTITLED }
  11 actualOut D = { main$1.!DrawTool } U = {  }
  12 assignment D = {  } U = { main$1.!addWindowListener }
  13 receiver D = {  } U = { main$1 }
  14 methodCall D = { java.awt.Component.newEventsOnly, main$1, main$1.windowListener } U = { .!, main$1, main$1.windowListener } TO = java.awt.Window#addWindowListener( java.awt.event.WindowListener )
  15 receiver D = {  } U = {  }
  16 constructorCall D = {  } U = {  } TO = java.awt.event.WindowAdapter#WindowAdapter( )
  17 actualOut D = { .! } U = {  }
  18 actualOut D = { main$1, main$1.!addWindowListener } U = { main$1 }
  19 assignment D = {  } U = { main$1.!pack }
  20 receiver D = {  } U = { main$1 }
  21 methodCall D = { java.awt.Component.isPacked, java.awt.Component.peer, java.awt.Container.descendUnconditionallyWhenValidating, java.awt.Container.dispatcher, main$1 } U = { java.awt.Component.LOCK, java.awt.Component.parent, java.awt.Component.peer, java.awt.Component.valid, java.awt.Component.x, java.awt.Component.y, java.awt.Container.component, java.awt.Container.descendUnconditionallyWhenValidating, java.awt.Dimension.height, java.awt.Dimension.width, main$1, main$1.allWindows, main$1.beforeFirstShow } TO = java.awt.Window#pack( )
  22 actualOut D = { main$1, main$1.!pack } U = { main$1 }
  23 assignment D = {  } U = { main$1.!validate }
  24 receiver D = {  } U = { main$1 }
  25 methodCall D = {  } U = { java.awt.Component.LOCK, java.awt.Component.peer, java.awt.Component.valid, main$1, main$1.component, main$1.descendUnconditionallyWhenValidating } TO = java.awt.Container#validate( )
  26 actualOut D = { main$1.!validate } U = {  }
  27 assignment D = {  } U = { main$1.!setVisible }
  28 receiver D = {  } U = { main$1 }
  29 methodCall D = {  } U = {  } TO = java.awt.Window#setVisible( boolean )
  30 actualOut D = { main$1.!setVisible } U = {  }
  31 methodExit
  32 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ closeWindow( ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 ifSt D = {  } U = { this.menu }
   3 assignment D = {  } U = { this.menu.!closeFile }
   4 receiver D = {  } U = { this.menu }
   5 methodCall D = { this.menu, this.menu.tabbedCanvas, this.menu.tabbedCanvas.selectedTab } U = { this.menu, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab, this.menu.tool } TO = jp.ac.ritsumei.cs.draw.DrawMenu#closeFile( )
   6 actualOut D = { this.menu, this.menu.!closeFile } U = { this.menu }
   7 merge ifSt(2)
   8 methodExit
   9 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ DrawTool( java.lang.String ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { title$0 } U = {  }
   3 assignment D = {  } U = {  }
   4 receiver D = {  } U = {  }
   5 constructorCall D = { java.awt.Frame.frameSerializedDataVersion, java.awt.Frame.mbManagement, java.awt.Frame.resizable, java.awt.Frame.state, java.awt.Frame.title, java.awt.Frame.undecorated, super.accessibleContext, super.defaultCloseOperation, super.rootPaneCheckingEnabled } U = { super.rootPane, title$0 } TO = javax.swing.JFrame#JFrame( java.lang.String )
   6 actualOut D = {  } U = {  }
   7 localDeclaration D = { contentPane$1 } U = { this.!getContentPane }
   8 receiver D = {  } U = {  }
   9 methodCall D = {  } U = { javax.swing.JRootPane.contentPane, this.rootPane } TO = javax.swing.JFrame#getContentPane( )
  10 actualOut D = { this.!getContentPane } U = {  }
  11 assignment D = {  } U = { contentPane$1.!setLayout }
  12 receiver D = {  } U = { contentPane$1, this.!getContentPane }
  13 methodCall D = { contentPane$1, contentPane$1.layoutMgr, this.!getContentPane } U = { BorderLayout.!BorderLayout } TO = java.awt.Container#setLayout( java.awt.LayoutManager )
  14 receiver D = {  } U = {  }
  15 constructorCall D = { BorderLayout.hgap, BorderLayout.vgap } U = {  } TO = java.awt.BorderLayout#BorderLayout( )
  16 actualOut D = { BorderLayout.!BorderLayout } U = {  }
  17 actualOut D = { contentPane$1, contentPane$1.!setLayout, this.!getContentPane } U = { contentPane$1, this.!getContentPane }
  18 localDeclaration D = { panel$2 } U = { panel$2.!JPanel }
  19 receiver D = {  } U = {  }
  20 constructorCall D = { java.awt.Container.layoutMgr, javax.swing.JComponent.inputVerifier, javax.swing.JComponent.listenerList, javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JComponent.verifyInputWhenFocusTarget } U = { java.lang.Boolean.TRUE, panel$2.!BorderLayout } TO = javax.swing.JPanel#JPanel( java.awt.LayoutManager )
  21 receiver D = {  } U = {  }
  22 constructorCall D = { panel$2.hgap, panel$2.vgap } U = {  } TO = java.awt.BorderLayout#BorderLayout( )
  23 actualOut D = { panel$2.!BorderLayout } U = {  }
  24 actualOut D = { panel$2.!JPanel } U = {  }
  25 assignment D = {  } U = { contentPane$1.!add }
  26 receiver D = {  } U = { contentPane$1 }
  27 methodCall D = { contentPane$1, java.awt.Component.parent } U = { contentPane$1, contentPane$1.component, contentPane$1.containerListener, contentPane$1.layoutMgr, java.awt.Component.eventMask, java.awt.Component.parent, java.awt.Component.peer, panel$2, panel$2.NORTH } TO = java.awt.Container#add( java.awt.Component java.lang.Object )
  28 actualOut D = { contentPane$1, contentPane$1.!add } U = { contentPane$1 }
  29 assignment D = { this.selector } U = { this.selector.!FigureSelector }
  30 receiver D = {  } U = {  }
  31 constructorCall D = { this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo } U = { this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo } TO = jp.ac.ritsumei.cs.draw.FigureSelector#FigureSelector( )
  32 actualOut D = { this.selector.!FigureSelector } U = {  }
  33 assignment D = {  } U = { panel$2.!add }
  34 receiver D = {  } U = { panel$2 }
  35 methodCall D = { java.awt.Component.parent, panel$2 } U = { java.awt.Component.eventMask, java.awt.Component.parent, java.awt.Component.peer, panel$2, panel$2.component, panel$2.containerListener, panel$2.layoutMgr, this.selector, this.selector.EAST } TO = java.awt.Container#add( java.awt.Component java.lang.Object )
  36 actualOut D = { panel$2, panel$2.!add } U = { panel$2 }
  37 assignment D = { this.tabbedCanvas } U = { this.tabbedCanvas.!TabbedCanvas }
  38 receiver D = {  } U = {  }
  39 constructorCall D = { this.tabbedCanvas.canvases, this.tabbedCanvas.selector } U = {  } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector )
  40 actualIn D = {  } U = { this.selector }
  41 actualOut D = { this.tabbedCanvas.!TabbedCanvas } U = {  }
  42 assignment D = {  } U = { contentPane$1.!add }
  43 receiver D = {  } U = { contentPane$1 }
  44 methodCall D = { contentPane$1, java.awt.Component.parent } U = { contentPane$1, contentPane$1.component, contentPane$1.containerListener, contentPane$1.layoutMgr, java.awt.Component.eventMask, java.awt.Component.parent, java.awt.Component.peer, this.tabbedCanvas, this.tabbedCanvas.CENTER } TO = java.awt.Container#add( java.awt.Component java.lang.Object )
  45 actualOut D = { contentPane$1, contentPane$1.!add } U = { contentPane$1 }
  46 assignment D = { this.menu } U = { this.menu.!DrawMenu }
  47 receiver D = {  } U = {  }
  48 constructorCall D = { this.menu.autoSave, this.menu.autoSave.tabbedCanvas, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener } U = { this.menu.autoSave, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.fileListMenu, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.redoAction, this.menu.saveAction, this.menu.toolBar, this.menu.undoAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas )
  49 actualIn D = {  } U = { this }
  50 actualIn D = {  } U = { this.tabbedCanvas }
  51 actualOut D = { this.menu.!DrawMenu } U = {  }
  52 assignment D = {  } U = { this.!setJMenuBar }
  53 receiver D = {  } U = {  }
  54 methodCall D = { java.awt.Component.parent, javax.swing.JRootPane.menuBar } U = { java.awt.Component.eventMask, java.awt.Component.parent, java.awt.Component.peer, java.awt.Container.component, java.awt.Container.containerListener, java.awt.Container.layoutMgr, javax.swing.JLayeredPane.FRAME_CONTENT_LAYER, javax.swing.JRootPane.layeredPane, javax.swing.JRootPane.menuBar, this.menu.!getMenuBar, this.rootPane } TO = javax.swing.JFrame#setJMenuBar( javax.swing.JMenuBar )
  55 receiver D = {  } U = { this.menu }
  56 methodCall D = {  } U = { this.menu.menuBar } TO = jp.ac.ritsumei.cs.draw.DrawMenu#getMenuBar( )
  57 actualOut D = { this.menu.!getMenuBar } U = {  }
  58 actualOut D = { this.!setJMenuBar } U = {  }
  59 assignment D = {  } U = { panel$2.!add }
  60 receiver D = {  } U = { panel$2 }
  61 methodCall D = { java.awt.Component.parent, panel$2 } U = { java.awt.Component.eventMask, java.awt.Component.parent, java.awt.Component.peer, panel$2, panel$2.component, panel$2.containerListener, panel$2.layoutMgr, this.menu.!getToolBar, this.menu.!getToolBar.WEST } TO = java.awt.Container#add( java.awt.Component java.lang.Object )
  62 receiver D = {  } U = { this.menu }
  63 methodCall D = {  } U = { this.menu.toolBar } TO = jp.ac.ritsumei.cs.draw.DrawMenu#getToolBar( )
  64 actualOut D = { this.menu.!getToolBar } U = {  }
  65 actualOut D = { panel$2, panel$2.!add } U = { panel$2 }
  66 assignment D = {  } U = { this.tabbedCanvas.!setDrawMenu }
  67 receiver D = {  } U = { this.tabbedCanvas }
  68 methodCall D = { this.tabbedCanvas.menu } U = {  } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#setDrawMenu( jp.ac.ritsumei.cs.draw.DrawMenu )
  69 actualIn D = {  } U = { this.menu }
  70 actualOut D = { this.tabbedCanvas.!setDrawMenu } U = {  }
  71 assignment D = {  } U = { this.tabbedCanvas.!init }
  72 receiver D = {  } U = { this.tabbedCanvas }
  73 methodCall D = { this.tabbedCanvas, this.tabbedCanvas.selectedTab } U = { this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.menu, this.tabbedCanvas.selector } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#init( )
  74 actualOut D = { this.tabbedCanvas, this.tabbedCanvas.!init } U = { this.tabbedCanvas }
  75 constructorExit
  76 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ menu ]
   1 fieldDeclaration D = { this.menu } U = { this.menu }
   2 fieldExit
--
   0 methodEntry [ terminate( ) ]
   1 assignment D = {  } U = { this.!exit }
   2 receiver D = {  } U = {  }
   3 methodCall D = {  } U = { java.lang.Runtime.currentRuntime, this.security } TO = java.lang.System#exit( int )
   4 actualOut D = { this.!exit } U = {  }
   5 methodExit
   6 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.DrawTool.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.DrawTool.serialVersionUID }
   2 fieldExit
--
   0 fieldEntry [ tabbedCanvas ]
   1 fieldDeclaration D = { this.tabbedCanvas } U = { this.tabbedCanvas }
   2 fieldExit
--
   0: selector
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: main( java.lang.String[] )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 31 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 8 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 6 trueControlFlow
   7: 6 -> 3 trueControlFlow
   8: 7 -> 13 trueControlFlow
   9: 8 -> 10 trueControlFlow
  10: 9 -> 1 exceptionCatchFlow
  11: 9 -> 11 trueControlFlow
  12: 10 -> 9 trueControlFlow
  13: 11 -> 7 trueControlFlow
  14: 12 -> 20 trueControlFlow
  15: 13 -> 15 trueControlFlow
  16: 14 -> 18 trueControlFlow
  17: 15 -> 16 trueControlFlow
  18: 16 -> 17 trueControlFlow
  19: 17 -> 14 trueControlFlow
  20: 18 -> 12 trueControlFlow
  21: 19 -> 24 trueControlFlow
  22: 20 -> 21 trueControlFlow
  23: 21 -> 22 trueControlFlow
  24: 22 -> 19 trueControlFlow
  25: 23 -> 28 trueControlFlow
  26: 24 -> 25 trueControlFlow
  27: 25 -> 26 trueControlFlow
  28: 26 -> 23 trueControlFlow
  29: 27 -> 32 trueControlFlow
  30: 28 -> 29 trueControlFlow
  31: 29 -> 30 trueControlFlow
  32: 30 -> 27 trueControlFlow
  33: 32 -> 31 trueControlFlow
--
   0: closeWindow( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 8 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 2 -> 7 falseControlFlow
   5: 3 -> 7 trueControlFlow
   6: 4 -> 5 trueControlFlow
   7: 5 -> 1 exceptionCatchFlow
   8: 5 -> 6 trueControlFlow
   9: 6 -> 3 trueControlFlow
  10: 7 -> 9 trueControlFlow
  11: 9 -> 8 trueControlFlow
--
   0: DrawTool( java.lang.String )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 75 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 8 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 1 exceptionCatchFlow
   7: 5 -> 6 trueControlFlow
   8: 6 -> 3 trueControlFlow
   9: 7 -> 12 trueControlFlow
  10: 8 -> 9 trueControlFlow
  11: 9 -> 10 trueControlFlow
  12: 10 -> 7 trueControlFlow
  13: 11 -> 19 trueControlFlow
  14: 12 -> 14 trueControlFlow
  15: 13 -> 17 trueControlFlow
  16: 14 -> 15 trueControlFlow
  17: 15 -> 16 trueControlFlow
  18: 16 -> 13 trueControlFlow
  19: 17 -> 11 trueControlFlow
  20: 18 -> 26 trueControlFlow
  21: 19 -> 21 trueControlFlow
  22: 20 -> 24 trueControlFlow
  23: 21 -> 22 trueControlFlow
  24: 22 -> 23 trueControlFlow
  25: 23 -> 20 trueControlFlow
  26: 24 -> 18 trueControlFlow
  27: 25 -> 30 trueControlFlow
  28: 26 -> 27 trueControlFlow
  29: 27 -> 28 trueControlFlow
  30: 28 -> 25 trueControlFlow
  31: 29 -> 34 trueControlFlow
  32: 30 -> 31 trueControlFlow
  33: 31 -> 32 trueControlFlow
  34: 32 -> 29 trueControlFlow
  35: 33 -> 38 trueControlFlow
  36: 34 -> 35 trueControlFlow
  37: 35 -> 36 trueControlFlow
  38: 36 -> 33 trueControlFlow
  39: 37 -> 43 trueControlFlow
  40: 38 -> 40 trueControlFlow
  41: 39 -> 41 trueControlFlow
  42: 40 -> 39 trueControlFlow
  43: 41 -> 37 trueControlFlow
  44: 42 -> 47 trueControlFlow
  45: 43 -> 44 trueControlFlow
  46: 44 -> 45 trueControlFlow
  47: 45 -> 42 trueControlFlow
  48: 46 -> 53 trueControlFlow
  49: 47 -> 49 trueControlFlow
  50: 48 -> 51 trueControlFlow
  51: 49 -> 50 trueControlFlow
  52: 50 -> 48 trueControlFlow
  53: 51 -> 46 trueControlFlow
  54: 52 -> 60 trueControlFlow
  55: 53 -> 55 trueControlFlow
  56: 54 -> 58 trueControlFlow
  57: 55 -> 56 trueControlFlow
  58: 56 -> 57 trueControlFlow
  59: 57 -> 54 trueControlFlow
  60: 58 -> 52 trueControlFlow
  61: 59 -> 67 trueControlFlow
  62: 60 -> 62 trueControlFlow
  63: 61 -> 65 trueControlFlow
  64: 62 -> 63 trueControlFlow
  65: 63 -> 64 trueControlFlow
  66: 64 -> 61 trueControlFlow
  67: 65 -> 59 trueControlFlow
  68: 66 -> 72 trueControlFlow
  69: 67 -> 69 trueControlFlow
  70: 68 -> 70 trueControlFlow
  71: 69 -> 68 trueControlFlow
  72: 70 -> 66 trueControlFlow
  73: 71 -> 76 trueControlFlow
  74: 72 -> 73 trueControlFlow
  75: 73 -> 74 trueControlFlow
  76: 74 -> 71 trueControlFlow
  77: 76 -> 75 trueControlFlow
--
   0: menu
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: terminate( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 6 trueControlFlow
   3: 2 -> 3 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 1 trueControlFlow
   6: 6 -> 5 trueControlFlow
--
   0: serialVersionUID
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: tabbedCanvas
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
----- CCFG (to here) -----

