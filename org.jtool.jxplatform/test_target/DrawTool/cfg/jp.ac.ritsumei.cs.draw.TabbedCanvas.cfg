----- CCFG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.TabbedCanvas
   0 methodEntry [ closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 formalIn D = { canvas$0 } U = {  }
   2 assignment D = {  } U = { this.!selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.!javax.swing.JTabbedPane.model } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
   5 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
   6 actualOut D = { this.!selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.!javax.swing.JTabbedPane.model }
   7 assignment D = {  } U = { canvas$0.!getFigureManager( ).!clear( ) }
   8 receiver D = {  } U = { canvas$0.!getFigureManager( ) }
   9 receiver D = {  } U = { canvas$0 }
  10 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  11 actualOut D = { canvas$0.!getFigureManager( ) } U = {  }
  12 methodCall D = {  } U = { canvas$0.!getFigureManager( ).figures } TO = jp.ac.ritsumei.cs.draw.FigureManager#clear( )
  13 actualOut D = { canvas$0.!getFigureManager( ).!clear( ) } U = { canvas$0.!getFigureManager( ).figures }
  14 assignment D = {  } U = { this.canvases.!remove( int ) }
  15 receiver D = {  } U = { this.canvases }
  16 methodCall D = {  } U = { this.selectedTab } TO = java.util.List#remove( int )
  17 actualOut D = { this.canvases.!remove( int ) } U = {  }
  18 assignment D = {  } U = { this.!remove( int ) }
  19 receiver D = {  } U = {  }
  20 methodCall D = {  } U = { this.!javax.accessibility.AccessibleState.SELECTED, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.JTabbedPane.visComp, this.selectedTab } TO = javax.swing.JTabbedPane#remove( int )
* actualOut D = { this.!javax.swing.JTabbedPane.visComp, this.!remove( int ) } U = { this.!javax.accessibility.AccessibleState.SELECTED, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.JTabbedPane.visComp }
  22 methodExit
  23 formalOut D = {  } U = { $_ }
* actualOut D = { this.selectedTab } U = {  }
--
   0 fieldEntry [ serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.TabbedCanvas.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.TabbedCanvas.serialVersionUID }
   2 fieldExit
--
   0 constructorEntry [ TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector ) ]
   1 formalIn D = { selector$0 } U = {  }
   2 assignment D = {  } U = { super.!JTabbedPane( int ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = { JTabbedPane.TOP } TO = javax.swing.JTabbedPane#JTabbedPane( int )
* actualOut D = { super.!JTabbedPane( int ), super.!javax.swing.JTabbedPane.changeEvent, super.!javax.swing.JTabbedPane.changeListener, super.!javax.swing.JTabbedPane.pages, super.!javax.swing.JTabbedPane.tabPlacement, super.!javax.swing.JTabbedPane.visComp } U = {  }
   6 assignment D = { this.selector } U = { selector$0, selector$0.colorCombo, selector$0.shapeCombo, selector$0.widthCombo }
   7 assignment D = { this.canvases } U = { java.util.ArrayList.!ArrayList( ) }
   8 receiver D = {  } U = {  }
   9 constructorCall D = {  } U = { java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA } TO = java.util.ArrayList#ArrayList( )
* actualOut D = { java.util.ArrayList.!ArrayList( ), java.util.ArrayList.!java.util.AbstractList.modCount, java.util.ArrayList.!java.util.ArrayList.elementData } U = { java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA }
  11 constructorExit
  12 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ getAllCanvases( ) ]
   1 returnSt D = { $_ } U = { this.canvases }
   2 methodExit
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ openTab( java.lang.String ) ]
   1 formalIn D = { filename$0 } U = {  }
   2 returnSt D = { $_ } U = { this.!newTab( java.lang.String ) }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!java.awt.Component.background, this.!java.awt.Component.height, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!java.awt.Component.width, this.!java.awt.Container.dispatcher, this.!java.awt.Container.parent, this.!java.awt.Container.peer, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.canvas$1.figureManager, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.figureManager.figures, this.figureManager.filename, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.fmanager$3.filename.!java.lang.String.coder, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#newTab( java.lang.String )
   5 actualIn D = {  } U = { filename$0 }
* actualOut D = { this.!java.awt.Component.background, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.newEventsOnly, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!javax.swing.JTabbedPane.haveRegistered, this.!newTab( java.lang.String ), this.canvas$1.support.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.inProgress, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.indexOfNextAdd, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.height, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.width, this.jp.ac.ritsumei.cs.draw.DrawCanvas.jp.ac.ritsumei.cs.draw.FigureManager.java.util.LinkedList.!java.util.LinkedList.size } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!java.awt.Component.background, this.!java.awt.Component.height, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!java.awt.Component.width, this.!java.awt.Container.dispatcher, this.!java.awt.Container.parent, this.!java.awt.Container.peer, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.canvas$1.figureManager, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.figureManager.figures, this.figureManager.filename, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.fmanager$3.filename.!java.lang.String.coder, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo }
   7 methodExit
   8 formalOut D = {  } U = { $_ }
* actualOut D = { this.changed } U = {  }
* actualOut D = { $_.figureManager } U = {  }
* actualOut D = { $_.figureManager } U = {  }
* actualOut D = { $_.menu } U = {  }
* actualOut D = { $_.selector } U = {  }
* actualOut D = { this.canvas$1.undoManager } U = {  }
* actualOut D = { $_.figures } U = {  }
* actualOut D = { $_.figures } U = {  }
* actualOut D = { $_.filename } U = {  }
* actualOut D = { $_.filename } U = {  }
* actualOut D = { this.selectedTab } U = {  }
--
   0 methodEntry [ selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 formalIn D = { canvas$0 } U = {  }
   2 assignment D = {  } U = { this.!setSelectedComponent( java.awt.Component ) }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager } TO = javax.swing.JTabbedPane#setSelectedComponent( java.awt.Component )
   5 actualOut D = { this.!setSelectedComponent( java.awt.Component ) } U = {  }
   6 assignment D = { this.selectedTab } U = { this.!getSelectedIndex( ) }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = { this.!javax.swing.JTabbedPane.model } TO = javax.swing.JTabbedPane#getSelectedIndex( )
   9 actualOut D = { this.!getSelectedIndex( ) } U = { this.!javax.swing.JTabbedPane.model }
  10 methodExit
  11 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ init( ) ]
   1 assignment D = {  } U = { this.!newTab( java.lang.String ) }
   2 receiver D = {  } U = {  }
   3 methodCall D = {  } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!java.awt.Component.background, this.!java.awt.Component.height, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!java.awt.Component.width, this.!java.awt.Container.dispatcher, this.!java.awt.Container.parent, this.!java.awt.Container.peer, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.canvas$1.figureManager, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.figureManager.figures, this.figureManager.filename, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.fmanager$3.filename.!java.lang.String.coder, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#newTab( java.lang.String )
   4 actualIn D = {  } U = {  }
* actualOut D = { this.!java.awt.Component.background, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.newEventsOnly, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!javax.swing.JTabbedPane.haveRegistered, this.!newTab( java.lang.String ), this.canvas$1.support.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.inProgress, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.indexOfNextAdd, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.height, this.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.width, this.jp.ac.ritsumei.cs.draw.DrawCanvas.jp.ac.ritsumei.cs.draw.FigureManager.java.util.LinkedList.!java.util.LinkedList.size } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!java.awt.Component.background, this.!java.awt.Component.height, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!java.awt.Component.width, this.!java.awt.Container.dispatcher, this.!java.awt.Container.parent, this.!java.awt.Container.peer, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.model, this.!javax.swing.JTabbedPane.pages, this.canvas$1.figureManager, this.canvas$1.support, this.canvas$1.support.!java.util.Vector.elementCount, this.canvas$1.support.!java.util.Vector.elementData, this.canvas$1.support.!java.util.Vector.modCount, this.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.canvases, this.figureManager.figures, this.figureManager.filename, this.fmanager$3.filename, this.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.fmanager$3.filename.!java.lang.String.coder, this.fmanager$3.filename.!java.lang.String.value, this.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo }
   6 assignment D = {  } U = { this.!addChangeListener( javax.swing.event.ChangeListener ) }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = { this, this.!javax.swing.JTabbedPane.listenerList, this.!javax.swing.event.EventListenerList.NULL_ARRAY, this.!javax.swing.event.EventListenerList.listenerList } TO = javax.swing.JTabbedPane#addChangeListener( javax.swing.event.ChangeListener )
* actualOut D = { this.!addChangeListener( javax.swing.event.ChangeListener ), this.!javax.swing.event.EventListenerList.listenerList } U = { this.!javax.swing.JTabbedPane.listenerList, this.!javax.swing.event.EventListenerList.NULL_ARRAY, this.!javax.swing.event.EventListenerList.listenerList }
  10 methodExit
  11 formalOut D = {  } U = { $_ }
* actualOut D = { this.changed } U = {  }
* actualOut D = { this.!newTab( java.lang.String ).figureManager } U = {  }
* actualOut D = { this.!newTab( java.lang.String ).figureManager } U = {  }
* actualOut D = { this.!newTab( java.lang.String ).menu } U = {  }
* actualOut D = { this.!newTab( java.lang.String ).selector } U = {  }
* actualOut D = { this.canvas$1.undoManager } U = {  }
* actualOut D = { this.!newTab( java.lang.String ).figures } U = {  }
* actualOut D = { this.!newTab( java.lang.String ).figures } U = {  }
* actualOut D = { this.!newTab( java.lang.String ).filename } U = {  }
* actualOut D = { this.!newTab( java.lang.String ).filename } U = {  }
* actualOut D = { this.selectedTab } U = {  }
--
   0 fieldEntry [ canvases ]
   1 fieldDeclaration D = { this.canvases } U = { this.canvases }
   2 fieldExit
--
   0 methodEntry [ getCurrentCanvas( ) ]
   1 ifSt D = {  } U = { this.canvases.!size( ), this.selectedTab }
   2 receiver D = {  } U = { this.canvases }
   3 methodCall D = {  } U = {  } TO = java.util.List#size( )
   4 actualOut D = { this.canvases.!size( ) } U = {  }
   5 receiver D = {  } U = { this.canvases }
   6 methodCall D = {  } U = {  } TO = java.util.List#size( )
   7 actualOut D = { this.canvases.!size( ) } U = {  }
   8 returnSt D = { $_ } U = { this.canvases.!get( int ) }
   9 receiver D = {  } U = { this.canvases }
  10 methodCall D = {  } U = { this.selectedTab } TO = java.util.List#get( int )
  11 actualOut D = { this.canvases.!get( int ) } U = {  }
  12 merge ifSt(1)
  13 returnSt D = { $_ } U = {  }
  14 methodExit
  15 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ setDrawMenu( jp.ac.ritsumei.cs.draw.DrawMenu ) ]
   1 formalIn D = { menu$0 } U = {  }
   2 assignment D = { this.menu } U = { menu$0, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener }
   3 methodExit
   4 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ stateChanged( javax.swing.event.ChangeEvent ) ]
   1 formalIn D = { evt$0 } U = {  }
   2 localDeclaration D = { src$1 } U = { evt$0.!getSource( ) }
   3 receiver D = {  } U = { evt$0 }
   4 methodCall D = {  } U = { evt$0.!java.util.EventObject.source } TO = java.util.EventObject#getSource( )
   5 actualOut D = { evt$0.!getSource( ) } U = { evt$0.!java.util.EventObject.source }
   6 assignment D = { this.selectedTab } U = { src$1.!getSelectedIndex( ) }
   7 receiver D = {  } U = { src$1 }
   8 methodCall D = {  } U = { src$1.!javax.swing.JTabbedPane.model } TO = javax.swing.JTabbedPane#getSelectedIndex( )
   9 actualOut D = { src$1.!getSelectedIndex( ) } U = { src$1.!javax.swing.JTabbedPane.model }
  10 assignment D = {  } U = { this.menu.!updateUndoState( ) }
  11 receiver D = {  } U = { this.menu }
  12 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.menu.canvas$0.undoManager, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab, this.menu.undoAction, this.menu.undoManager$1.!javax.swing.undo.UndoManager.edits, this.menu.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.menu.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateUndoState( )
  13 actualOut D = { this.menu.!updateUndoState( ) } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.menu.canvas$0.undoManager, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab, this.menu.undoAction, this.menu.undoManager$1.!javax.swing.undo.UndoManager.edits, this.menu.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.menu.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd }
  14 methodExit
  15 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ selectedTab ]
   1 fieldDeclaration D = { this.selectedTab } U = { this.selectedTab }
   2 fieldExit
--
   0 fieldEntry [ selector ]
   1 fieldDeclaration D = { this.selector } U = { this.selector }
   2 fieldExit
--
   0 methodEntry [ newTab( java.lang.String ) ]
   1 formalIn D = { filename$0 } U = {  }
   2 localDeclaration D = { canvas$1 } U = { jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = { Color.white, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!java.awt.Component.background, this.!java.awt.Component.height, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!java.awt.Component.width, this.!java.awt.Container.dispatcher, this.!java.awt.Container.parent, this.!java.awt.Container.peer } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String )
   5 actualIn D = {  } U = { this.menu, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener }
   6 actualIn D = {  } U = { this.selector, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo }
   7 actualIn D = {  } U = { filename$0 }
* actualOut D = { jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ), jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.height, jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.width, jp.ac.ritsumei.cs.draw.DrawCanvas.jp.ac.ritsumei.cs.draw.FigureManager.java.util.LinkedList.!java.util.LinkedList.size, this.!java.awt.Component.background, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.newEventsOnly, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet } U = { Color.white, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.!java.awt.Component.background, this.!java.awt.Component.height, this.!java.awt.Component.mouseListener, this.!java.awt.Component.mouseMotionListener, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.prefSize, this.!java.awt.Component.prefSizeSet, this.!java.awt.Component.width, this.!java.awt.Container.dispatcher, this.!java.awt.Container.parent, this.!java.awt.Container.peer }
   9 localDeclaration D = { undoManager$2 } U = { javax.swing.undo.UndoManager.!UndoManager( ) }
  10 receiver D = {  } U = {  }
  11 constructorCall D = {  } U = { javax.swing.undo.UndoManager.!java.util.Vector.elementData, javax.swing.undo.UndoManager.!java.util.Vector.modCount, javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit } TO = javax.swing.undo.UndoManager#UndoManager( )
* actualOut D = { javax.swing.undo.UndoManager.!UndoManager( ), javax.swing.undo.UndoManager.!java.util.Vector.modCount, javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.edits, javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.inProgress, javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.indexOfNextAdd, javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit } U = { javax.swing.undo.UndoManager.!java.util.Vector.elementData, javax.swing.undo.UndoManager.!java.util.Vector.modCount, javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit }
  13 assignment D = {  } U = { canvas$1.!addUndoableEditListener( javax.swing.event.UndoableEditListener ) }
  14 receiver D = {  } U = { canvas$1 }
  15 methodCall D = {  } U = { canvas$1.support, canvas$1.support.!java.util.Vector.elementCount, canvas$1.support.!java.util.Vector.elementData, canvas$1.support.!java.util.Vector.modCount, canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support.!java.util.Vector.elementCount, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support.!java.util.Vector.elementData, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support.!java.util.Vector.modCount, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support.!javax.swing.undo.UndoableEditSupport.listeners } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#addUndoableEditListener( javax.swing.event.UndoableEditListener )
  16 actualIn D = {  } U = { undoManager$2 }
* actualOut D = { canvas$1.!addUndoableEditListener( javax.swing.event.UndoableEditListener ), canvas$1.support.!java.util.Vector.modCount } U = { canvas$1.support, canvas$1.support.!java.util.Vector.elementCount, canvas$1.support.!java.util.Vector.elementData, canvas$1.support.!java.util.Vector.modCount, canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support.!java.util.Vector.elementCount, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support.!java.util.Vector.elementData, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support.!java.util.Vector.modCount, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support.!javax.swing.undo.UndoableEditSupport.listeners }
  18 assignment D = {  } U = { canvas$1.!setUndoManager( javax.swing.undo.UndoManager ) }
  19 receiver D = {  } U = { canvas$1 }
  20 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setUndoManager( javax.swing.undo.UndoManager )
  21 actualIn D = {  } U = { undoManager$2 }
  22 actualOut D = { canvas$1.!setUndoManager( javax.swing.undo.UndoManager ) } U = {  }
  23 localDeclaration D = { fmanager$3 } U = { canvas$1.!getFigureManager( ) }
  24 receiver D = {  } U = { canvas$1 }
  25 methodCall D = {  } U = { canvas$1.figureManager, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager, this.figureManager.figures, this.figureManager.filename } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  26 actualOut D = { canvas$1.!getFigureManager( ) } U = { canvas$1.figureManager, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager, this.figureManager.figures, this.figureManager.filename }
  27 assignment D = {  } U = { this.!addTab( java.lang.String javax.swing.Icon java.awt.Component java.lang.String ) }
  28 receiver D = {  } U = {  }
  29 methodCall D = {  } U = { canvas$1, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, fmanager$3.!getFilename( ), fmanager$3.!getTitle( ), jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).changed, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).curX, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).curY, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).currentFigure, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).grabbedFigure, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).isGrabMode, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).menu, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).selector, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).undoManager, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.pages } TO = javax.swing.JTabbedPane#addTab( java.lang.String javax.swing.Icon java.awt.Component java.lang.String )
  30 receiver D = {  } U = { fmanager$3 }
  31 methodCall D = {  } U = { File.separator, canvas$1.!getFigureManager( ).filename, canvas$1.!getFigureManager( ).filename.!java.lang.String.COMPACT_STRINGS, canvas$1.!getFigureManager( ).filename.!java.lang.String.coder, canvas$1.!getFigureManager( ).filename.!java.lang.String.value, fmanager$3.filename, fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, fmanager$3.filename.!java.lang.String.coder, fmanager$3.filename.!java.lang.String.value } TO = jp.ac.ritsumei.cs.draw.FigureManager#getTitle( )
  32 actualOut D = { fmanager$3.!getTitle( ) } U = { File.separator, canvas$1.!getFigureManager( ).filename, canvas$1.!getFigureManager( ).filename.!java.lang.String.COMPACT_STRINGS, canvas$1.!getFigureManager( ).filename.!java.lang.String.coder, canvas$1.!getFigureManager( ).filename.!java.lang.String.value, fmanager$3.filename, fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, fmanager$3.filename.!java.lang.String.coder, fmanager$3.filename.!java.lang.String.value }
  33 receiver D = {  } U = { fmanager$3 }
  34 methodCall D = {  } U = { canvas$1.!getFigureManager( ).filename, fmanager$3.filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
  35 actualOut D = { fmanager$3.!getFilename( ) } U = { canvas$1.!getFigureManager( ).filename, fmanager$3.filename }
* actualOut D = { this.!addTab( java.lang.String javax.swing.Icon java.awt.Component java.lang.String ), this.!javax.swing.JTabbedPane.haveRegistered } U = { this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.pages }
  37 assignment D = {  } U = { this.canvases.!add( java.lang.Object ) }
  38 receiver D = {  } U = { this.canvases }
  39 methodCall D = {  } U = { canvas$1, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).changed, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).curX, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).curY, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).currentFigure, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).grabbedFigure, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).isGrabMode, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).menu, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).selector, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).undoManager } TO = java.util.List#add( java.lang.Object )
  40 actualOut D = { this.canvases.!add( java.lang.Object ) } U = {  }
  41 assignment D = {  } U = { this.!selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
  42 receiver D = {  } U = {  }
  43 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.!javax.swing.JTabbedPane.model } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
  44 actualIn D = {  } U = { canvas$1, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).changed, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).curX, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).curY, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).currentFigure, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).grabbedFigure, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).isGrabMode, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).menu, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).selector, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).undoManager }
  45 actualOut D = { this.!selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.!javax.swing.JTabbedPane.model }
  46 returnSt D = { $_ } U = { canvas$1, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.support.!java.util.Vector.modCount, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).changed, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).curX, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).curY, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).currentFigure, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).grabbedFigure, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).isGrabMode, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).menu, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).selector, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).support, jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).undoManager }
  47 methodExit
  48 formalOut D = {  } U = { $_ }
* actualOut D = { this.changed } U = {  }
* actualOut D = { jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager } U = {  }
* actualOut D = { jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figureManager } U = {  }
* actualOut D = { jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).menu } U = {  }
* actualOut D = { jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).selector } U = {  }
* actualOut D = { jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figures } U = {  }
* actualOut D = { jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).figures } U = {  }
* actualOut D = { jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).filename } U = {  }
* actualOut D = { jp.ac.ritsumei.cs.draw.DrawCanvas.!DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String ).filename } U = {  }
* actualOut D = { canvas$1.undoManager } U = {  }
* actualOut D = { this.selectedTab } U = {  }
--
   0 methodEntry [ getOpenFileNum( ) ]
   1 returnSt D = { $_ } U = { this.canvases.!size( ) }
   2 receiver D = {  } U = { this.canvases }
   3 methodCall D = {  } U = {  } TO = java.util.List#size( )
   4 actualOut D = { this.canvases.!size( ) } U = {  }
   5 methodExit
   6 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 formalIn D = { canvas$0 } U = {  }
   2 assignment D = {  } U = { this.!setTitleAt( int java.lang.String ) }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { canvas$0.!getFigureManager( ).!getTitle( ), this.!java.awt.Component.height, this.!java.awt.Component.width, this.!java.lang.String.value, this.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.!javax.swing.JComponent.revalidateRunnableScheduled, this.!javax.swing.JTabbedPane$Page.title, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.pages, this.selectedTab } TO = javax.swing.JTabbedPane#setTitleAt( int java.lang.String )
   5 receiver D = {  } U = { canvas$0.!getFigureManager( ) }
   6 receiver D = {  } U = { canvas$0 }
   7 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
   8 actualOut D = { canvas$0.!getFigureManager( ) } U = {  }
   9 methodCall D = {  } U = { File.separator, canvas$0.!getFigureManager( ).filename, canvas$0.!getFigureManager( ).filename.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).filename.!java.lang.String.coder, canvas$0.!getFigureManager( ).filename.!java.lang.String.value } TO = jp.ac.ritsumei.cs.draw.FigureManager#getTitle( )
  10 actualOut D = { canvas$0.!getFigureManager( ).!getTitle( ) } U = { File.separator, canvas$0.!getFigureManager( ).filename, canvas$0.!getFigureManager( ).filename.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).filename.!java.lang.String.coder, canvas$0.!getFigureManager( ).filename.!java.lang.String.value }
* actualOut D = { this.!javax.swing.JTabbedPane$Page.title, this.!setTitleAt( int java.lang.String ) } U = { this.!java.awt.Component.height, this.!java.awt.Component.width, this.!java.lang.String.value, this.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.!javax.swing.JComponent.revalidateRunnableScheduled, this.!javax.swing.JTabbedPane$Page.title, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.pages }
  12 assignment D = {  } U = { this.!setToolTipTextAt( int java.lang.String ) }
  13 receiver D = {  } U = {  }
  14 methodCall D = {  } U = { canvas$0.!getFigureManager( ).!getFilename( ), this.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.!javax.swing.JTabbedPane$Page.tip, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.!javax.swing.ToolTipManager.accessibilityKeyListener, this.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.selectedTab } TO = javax.swing.JTabbedPane#setToolTipTextAt( int java.lang.String )
  15 receiver D = {  } U = { canvas$0.!getFigureManager( ) }
  16 receiver D = {  } U = { canvas$0 }
  17 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  18 actualOut D = { canvas$0.!getFigureManager( ) } U = {  }
  19 methodCall D = {  } U = { canvas$0.!getFigureManager( ).filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
  20 actualOut D = { canvas$0.!getFigureManager( ).!getFilename( ) } U = { canvas$0.!getFigureManager( ).filename }
* actualOut D = { this.!javax.swing.JTabbedPane$Page.tip, this.!javax.swing.JTabbedPane.haveRegistered, this.!setToolTipTextAt( int java.lang.String ) } U = { this.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.!javax.swing.JTabbedPane$Page.tip, this.!javax.swing.JTabbedPane.accessibleContext, this.!javax.swing.JTabbedPane.haveRegistered, this.!javax.swing.JTabbedPane.pages, this.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.!javax.swing.ToolTipManager.accessibilityKeyListener, this.!javax.swing.ToolTipManager.moveBeforeEnterListener }
  22 methodExit
  23 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ getCanvas( java.lang.String ) ]
   1 formalIn D = { filename$0 } U = {  }
   2 enhancedForSt D = { canvas$1 } U = { this.canvases }
   3 ifSt D = {  } U = { canvas$1.!getFigureManager( ).!getFilename( ).!equals( java.lang.Object ) }
   4 receiver D = {  } U = { canvas$1.!getFigureManager( ).!getFilename( ) }
   5 receiver D = {  } U = { canvas$1.!getFigureManager( ) }
   6 receiver D = {  } U = { canvas$1 }
   7 methodCall D = {  } U = { canvas$1.figureManager, this.figureManager.figures, this.figureManager.filename } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
   8 actualOut D = { canvas$1.!getFigureManager( ) } U = { canvas$1.figureManager, this.figureManager.figures, this.figureManager.filename }
   9 methodCall D = {  } U = { canvas$1.!getFigureManager( ).filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
  10 actualOut D = { canvas$1.!getFigureManager( ).!getFilename( ) } U = { canvas$1.!getFigureManager( ).filename }
  11 methodCall D = {  } U = { canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, filename$0 } TO = java.lang.String#equals( java.lang.Object )
  12 actualOut D = { canvas$1.!getFigureManager( ).!getFilename( ).!equals( java.lang.Object ) } U = { canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value }
  13 returnSt D = { $_ } U = { canvas$1, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager }
  14 merge ifSt(3)
  15 returnSt D = { $_ } U = {  }
  16 methodExit
  17 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ menu ]
   1 fieldDeclaration D = { this.menu } U = { this.menu }
   2 fieldExit
--
   0: closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    9 trueControlFlow
   4:    3 ->    5 trueControlFlow
   5:    4 -> * trueControlFlow
   6:    5 ->    4 trueControlFlow
   7:    6 ->    2 trueControlFlow
   8:    7 ->   15 trueControlFlow
   9:    8 ->   12 trueControlFlow
  10:    9 ->   10 trueControlFlow
  11:   10 ->   11 trueControlFlow
  12:   11 ->    8 trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->    7 trueControlFlow
  15:   14 ->   19 trueControlFlow
  16:   15 ->   16 trueControlFlow
  17:   16 ->   17 trueControlFlow
  18:   17 ->   14 trueControlFlow
  19:   18 ->   23 trueControlFlow
  20:   19 ->   20 trueControlFlow
  21:   20 -> * trueControlFlow
  22: * ->   18 trueControlFlow
  23:   23 ->   22 trueControlFlow
  24: * ->    6 trueControlFlow
--
   0: serialVersionUID
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    6 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 -> * trueControlFlow
   6: * ->    2 trueControlFlow
   7:    6 ->    8 trueControlFlow
   8:    7 ->   12 trueControlFlow
   9:    8 ->    9 trueControlFlow
  10:    9 -> * trueControlFlow
  11: * ->    7 trueControlFlow
  12:   12 ->   11 trueControlFlow
--
   0: getAllCanvases( )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    1 ->    3 fallThroughFlow
   4:    3 ->    2 trueControlFlow
--
   0: openTab( java.lang.String )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    8 trueControlFlow
   4:    2 ->    8 fallThroughFlow
   5:    3 ->    5 trueControlFlow
   6:    4 -> * trueControlFlow
   7:    5 ->    4 trueControlFlow
   8: * ->    2 trueControlFlow
   9:    8 ->    7 trueControlFlow
  10: * -> * trueControlFlow
  11: * -> * trueControlFlow
  12: * -> * trueControlFlow
  13: * -> * trueControlFlow
  14: * -> * trueControlFlow
  15: * -> * trueControlFlow
  16: * -> * trueControlFlow
  17: * -> * trueControlFlow
  18: * -> * trueControlFlow
  19: * -> * trueControlFlow
  20: * -> * trueControlFlow
--
   0: selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    7 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    2 trueControlFlow
   7:    6 ->   11 trueControlFlow
   8:    7 ->    8 trueControlFlow
   9:    8 ->    9 trueControlFlow
  10:    9 ->    6 trueControlFlow
  11:   11 ->   10 trueControlFlow
--
   0: init( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    7 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 -> * trueControlFlow
   5:    4 ->    3 trueControlFlow
   6: * ->    1 trueControlFlow
   7:    6 ->   11 trueControlFlow
   8:    7 ->    8 trueControlFlow
   9:    8 -> * trueControlFlow
  10: * ->    6 trueControlFlow
  11:   11 ->   10 trueControlFlow
  12: * -> * trueControlFlow
  13: * -> * trueControlFlow
  14: * -> * trueControlFlow
  15: * -> * trueControlFlow
  16: * -> * trueControlFlow
  17: * -> * trueControlFlow
  18: * -> * trueControlFlow
  19: * -> * trueControlFlow
  20: * -> * trueControlFlow
  21: * -> * trueControlFlow
  22: * -> * trueControlFlow
--
   0: canvases
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: getCurrentCanvas( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    9 trueControlFlow
   3:    1 ->   12 falseControlFlow
   4:    2 ->    3 trueControlFlow
   5:    3 ->    4 trueControlFlow
   6:    4 ->    5 trueControlFlow
   7:    5 ->    6 trueControlFlow
   8:    6 ->    7 trueControlFlow
   9:    7 ->    1 trueControlFlow
  10:    8 ->   12 fallThroughFlow
  11:    8 ->   15 trueControlFlow
  12:    9 ->   10 trueControlFlow
  13:   10 ->   11 trueControlFlow
  14:   11 ->    8 trueControlFlow
  15:   12 ->   13 trueControlFlow
  16:   13 ->   15 trueControlFlow
  17:   13 ->   15 fallThroughFlow
  18:   15 ->   14 trueControlFlow
--
   0: setDrawMenu( jp.ac.ritsumei.cs.draw.DrawMenu )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    4 ->    3 trueControlFlow
--
   0: stateChanged( javax.swing.event.ChangeEvent )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    7 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    2 trueControlFlow
   7:    6 ->   11 trueControlFlow
   8:    7 ->    8 trueControlFlow
   9:    8 ->    9 trueControlFlow
  10:    9 ->    6 trueControlFlow
  11:   10 ->   15 trueControlFlow
  12:   11 ->   12 trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   10 trueControlFlow
  15:   15 ->   14 trueControlFlow
--
   0: selectedTab
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: selector
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: newTab( java.lang.String )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->   10 trueControlFlow
   4:    3 ->    5 trueControlFlow
   5:    4 -> * trueControlFlow
   6:    5 ->    6 trueControlFlow
   7:    6 ->    7 trueControlFlow
   8:    7 ->    4 trueControlFlow
   9: * ->    2 trueControlFlow
  10:    9 ->   14 trueControlFlow
  11:   10 ->   11 trueControlFlow
  12:   11 -> * trueControlFlow
  13: * ->    9 trueControlFlow
  14:   13 ->   19 trueControlFlow
  15:   14 ->   16 trueControlFlow
  16:   15 -> * trueControlFlow
  17:   16 ->   15 trueControlFlow
  18: * ->   13 trueControlFlow
  19:   18 ->   24 trueControlFlow
  20:   19 ->   21 trueControlFlow
  21:   20 -> * trueControlFlow
  22:   21 ->   20 trueControlFlow
  23:   22 ->   18 trueControlFlow
  24:   23 ->   28 trueControlFlow
  25:   24 ->   25 trueControlFlow
  26:   25 ->   26 trueControlFlow
  27:   26 ->   23 trueControlFlow
  28:   27 ->   38 trueControlFlow
  29:   28 ->   30 trueControlFlow
  30:   29 -> * trueControlFlow
  31:   30 ->   31 trueControlFlow
  32:   31 ->   32 trueControlFlow
  33:   32 ->   33 trueControlFlow
  34:   33 ->   34 trueControlFlow
  35:   34 ->   35 trueControlFlow
  36:   35 ->   29 trueControlFlow
  37: * ->   27 trueControlFlow
  38:   37 ->   42 trueControlFlow
  39:   38 ->   39 trueControlFlow
  40:   39 ->   40 trueControlFlow
  41:   40 ->   37 trueControlFlow
  42:   41 ->   46 trueControlFlow
  43:   42 ->   44 trueControlFlow
  44:   43 -> * trueControlFlow
  45:   44 ->   43 trueControlFlow
  46:   45 ->   41 trueControlFlow
  47:   46 ->   48 trueControlFlow
  48:   46 ->   48 fallThroughFlow
  49:   48 ->   47 trueControlFlow
  50: * -> * trueControlFlow
  51: * -> * trueControlFlow
  52: * -> * trueControlFlow
  53: * -> * trueControlFlow
  54: * -> * trueControlFlow
  55: * -> * trueControlFlow
  56: * -> * trueControlFlow
  57: * -> * trueControlFlow
  58: * -> * trueControlFlow
  59: * ->   22 trueControlFlow
  60: * ->   45 trueControlFlow
--
   0: getOpenFileNum( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    6 trueControlFlow
   3:    1 ->    6 fallThroughFlow
   4:    2 ->    3 trueControlFlow
   5:    3 ->    4 trueControlFlow
   6:    4 ->    1 trueControlFlow
   7:    6 ->    5 trueControlFlow
--
   0: updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->   13 trueControlFlow
   4:    3 ->    6 trueControlFlow
   5:    4 -> * trueControlFlow
   6:    5 ->    9 trueControlFlow
   7:    6 ->    7 trueControlFlow
   8:    7 ->    8 trueControlFlow
   9:    8 ->    5 trueControlFlow
  10:    9 ->   10 trueControlFlow
  11:   10 ->    4 trueControlFlow
  12: * ->    2 trueControlFlow
  13:   12 ->   23 trueControlFlow
  14:   13 ->   16 trueControlFlow
  15:   14 -> * trueControlFlow
  16:   15 ->   19 trueControlFlow
  17:   16 ->   17 trueControlFlow
  18:   17 ->   18 trueControlFlow
  19:   18 ->   15 trueControlFlow
  20:   19 ->   20 trueControlFlow
  21:   20 ->   14 trueControlFlow
  22: * ->   12 trueControlFlow
  23:   23 ->   22 trueControlFlow
--
   0: getCanvas( java.lang.String )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
   3:    2 ->    6 trueControlFlow
   4:    2 ->   15 falseControlFlow
   5:    3 ->   13 trueControlFlow
   6:    3 ->   14 falseControlFlow
   7:    4 ->   11 trueControlFlow
   8:    5 ->    9 trueControlFlow
   9:    6 ->    7 trueControlFlow
  10:    7 ->    8 trueControlFlow
  11:    8 ->    5 trueControlFlow
  12:    9 ->   10 trueControlFlow
  13:   10 ->    4 trueControlFlow
  14:   11 ->   12 trueControlFlow
  15:   12 ->    3 trueControlFlow
  16:   13 ->   14 fallThroughFlow
  17:   13 ->   17 trueControlFlow
  18:   14 ->    2 trueControlFlow (LC =    2)
  19:   15 ->   17 trueControlFlow
  20:   15 ->   17 fallThroughFlow
  21:   17 ->   16 trueControlFlow
--
   0: menu
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
----- CCFG (to here) -----

