----- CCFG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.DrawMenu$4
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu$4#actionPerformed( java.awt.event.ActionEvent ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 throwsClause D = {  } U = { $java.lang.NumberFormatException }
   3 formalIn D = { evt$3 } U = {  }
   4 ifSt D = {  } U = { this.!openFile( ) }
   5 receiver D = {  } U = {  }
   6 methodCall D = {  } U = { System.err, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, confirm$2.NO_OPTION, figure$17.color, figure$17.endX, figure$17.endY, figure$17.outlineWidth, figure$17.startX, figure$17.startY, result$2.APPROVE_OPTION, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.lock, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).figures, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, this.canvas$1.!getFigureManager( ).st$6.!java.lang.String.value, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.str, this.canvas$1.!java.awt.Component.height, this.canvas$1.!java.awt.Component.parent, this.canvas$1.!java.awt.Component.peer, this.canvas$1.!java.awt.Component.width, this.canvas$1.!java.awt.Component.x, this.canvas$1.!java.awt.Component.y, this.canvas$1.changed, this.canvas$1.figureManager, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.figureManager.figures, this.figureManager.filename, this.file$3.!java.io.File.path, this.tabbedCanvas, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvases, this.tool, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title, this.tool.YES_NO_OPTION, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#openFile( )
   7 actualOut D = { this.!openFile( ), this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.cs, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.falpha, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.frgbvalue, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.fvalue, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.value, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.markedChar, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.markedSkipLF, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.nChars, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.readAheadLimit, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).java.io.FileReader.!java.io.InputStreamReader.sd, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.delimiters, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.hasSurrogates, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.maxPosition, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.newPosition, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.retDelims, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.str, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessibleContext, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonMnemonic, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonToolTipText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.controlsShown, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.currentDirectory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialog, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogTitle, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogType, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dragEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSelectionMode, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSystemView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.filters, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.multiSelectionEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.selectedFile, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.showFilesListener, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useAcceptAllFileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useFileHiding, this.tool.!java.awt.Frame.title } U = { System.err, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, confirm$2.NO_OPTION, figure$17.color, figure$17.endX, figure$17.endY, figure$17.outlineWidth, figure$17.startX, figure$17.startY, result$2.APPROVE_OPTION, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.lock, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).figures, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, this.canvas$1.!getFigureManager( ).st$6.!java.lang.String.value, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.str, this.canvas$1.!java.awt.Component.height, this.canvas$1.!java.awt.Component.parent, this.canvas$1.!java.awt.Component.peer, this.canvas$1.!java.awt.Component.width, this.canvas$1.!java.awt.Component.x, this.canvas$1.!java.awt.Component.y, this.canvas$1.changed, this.canvas$1.figureManager, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.figureManager.figures, this.figureManager.filename, this.file$3.!java.io.File.path, this.tabbedCanvas, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvases, this.tool, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title, this.tool.YES_NO_OPTION, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
   8 assignment D = {  } U = { this.!buildRecentFileMenu( ) }
   9 receiver D = {  } U = {  }
  10 methodCall D = {  } U = { this.fileItem$2.!javax.swing.AbstractButton.listenerList, this.fileItem$2.!javax.swing.event.EventListenerList.NULL_ARRAY, this.fileItem$2.!javax.swing.event.EventListenerList.listenerList, this.fileListMenu, this.fileListMenu.!java.awt.Container.component, this.fileListMenu.!java.awt.Container.containerListener, this.fileListMenu.!java.awt.Container.descendantsCount, this.fileListMenu.!java.awt.Container.eventMask, this.fileListMenu.!java.awt.Container.layoutMgr, this.fileListMenu.!java.awt.Container.listeningBoundsChildren, this.fileListMenu.!java.awt.Container.listeningChildren, this.fileListMenu.!java.awt.Container.peer, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.fileListener, this.recentFiles } TO = jp.ac.ritsumei.cs.draw.DrawMenu#buildRecentFileMenu( )
  11 actualOut D = { this.!buildRecentFileMenu( ), this.fileItem$2.!javax.swing.event.EventListenerList.listenerList, this.fileListMenu.!java.awt.Component.parent, this.fileListMenu.!javax.swing.JMenu.popupListener, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged } U = { this.fileItem$2.!javax.swing.AbstractButton.listenerList, this.fileItem$2.!javax.swing.event.EventListenerList.NULL_ARRAY, this.fileItem$2.!javax.swing.event.EventListenerList.listenerList, this.fileListMenu, this.fileListMenu.!java.awt.Container.component, this.fileListMenu.!java.awt.Container.containerListener, this.fileListMenu.!java.awt.Container.descendantsCount, this.fileListMenu.!java.awt.Container.eventMask, this.fileListMenu.!java.awt.Container.layoutMgr, this.fileListMenu.!java.awt.Container.listeningBoundsChildren, this.fileListMenu.!java.awt.Container.listeningChildren, this.fileListMenu.!java.awt.Container.peer, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.fileListener, this.recentFiles }
  12 assignment D = {  } U = { this.!updateUndoState( ) }
  13 receiver D = {  } U = {  }
  14 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoAction, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateUndoState( )
  15 actualOut D = { this.!updateUndoState( ) } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoAction, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd }
  16 assignment D = {  } U = { this.!updateRedoState( ) }
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.redoAction, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateRedoState( )
  19 actualOut D = { this.!updateRedoState( ) } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.redoAction, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd }
  20 merge ifSt(4)
  21 methodExit
  22 formalOut D = {  } U = { $_ }
   6+ actualOutByFieldAccess D = { this.canvas$1.changed } U = {  }
   6+ actualOutByFieldAccess D = { this.directory } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu$4#serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.DrawMenu$4.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.DrawMenu$4.serialVersionUID }
   2 fieldExit
--
   0: actionPerformed( java.awt.event.ActionEvent )
   1:    0 ->    3 trueControlFlow
   2:    1 ->   21 trueControlFlow
   3:    2 ->   21 trueControlFlow
   4:    3 ->    5 trueControlFlow
   5:    4 ->    9 trueControlFlow
   6:    4 ->   20 falseControlFlow
   7:    5 ->    6 trueControlFlow
   8:    6 ->    1 exceptionCatchFlow
   9:    6 ->    2 exceptionCatchFlow
  10:    6 ->    6+ trueControlFlow
  11:    7 ->    4 trueControlFlow
  12:    8 ->   13 trueControlFlow
  13:    9 ->   10 trueControlFlow
  14:   10 ->   11 trueControlFlow
  15:   11 ->    8 trueControlFlow
  16:   12 ->   17 trueControlFlow
  17:   13 ->   14 trueControlFlow
  18:   14 ->   15 trueControlFlow
  19:   15 ->   12 trueControlFlow
  20:   16 ->   20 trueControlFlow
  21:   17 ->   18 trueControlFlow
  22:   18 ->   19 trueControlFlow
  23:   19 ->   16 trueControlFlow
  24:   20 ->   22 trueControlFlow
  25:   22 ->   21 trueControlFlow
  26:    6+ ->    6+ trueControlFlow
  27:    6+ ->    7 trueControlFlow
--
   0: serialVersionUID
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
----- CCFG (to here) -----


