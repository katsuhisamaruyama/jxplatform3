----- CCFG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.AutoSave
   0 fieldEntry [ SAVE_PERIOD ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.AutoSave.SAVE_PERIOD } U = { jp.ac.ritsumei.cs.draw.AutoSave.SAVE_PERIOD }
   2 fieldExit
--
   0 fieldEntry [ tabbedCanvas ]
   1 fieldDeclaration D = { this.tabbedCanvas } U = { this.tabbedCanvas }
   2 fieldExit
--
   0 methodEntry [ terminate( ) ]
   1 assignment D = { this.isRunning } U = {  }
   2 methodExit
   3 formalOut D = {  } U = { $_, this.isRunning }
--
   0 fieldEntry [ isRunning ]
   1 fieldDeclaration D = { this.isRunning } U = { this.isRunning }
   2 fieldExit
--
   0 constructorEntry [ AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ) ]
   1 formalIn D = { tabbedCanvas$0 } U = {  }
   2 assignment D = { this.tabbedCanvas } U = { tabbedCanvas$0, this }
   3 constructorExit
   4 formalOut D = {  } U = { $_, this.tabbedCanvas }
--
   0 methodEntry [ run( ) ]
   1 assignment D = { this.isRunning } U = {  }
   2 whileSt D = {  } U = { this.isRunning }
   3 trySt D = {  } U = {  }
   4 assignment D = {  } U = { this.!sleep }
   5 receiver D = {  } U = {  }
   6 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.AutoSave.SAVE_PERIOD } TO = java.lang.Thread#sleep( long )
   7 actualOut D = { this.!sleep } U = {  }
   8 merge trySt(3)
   9 catchClause D = { e$0 } U = {  }
  10 forSt D = {  } U = { canvas$1, this.tabbedCanvas.!getAllCanvases }
  11 receiver D = {  } U = { this.tabbedCanvas }
  12 methodCall D = {  } U = { this.tabbedCanvas.canvases } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getAllCanvases( )
  13 actualOut D = { this.tabbedCanvas.!getAllCanvases } U = { this.tabbedCanvas.canvases }
  14 assignment D = {  } U = { canvas$1.!autoSave }
  15 receiver D = {  } U = { canvas$1 }
  16 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#autoSave( )
  17 actualOut D = { canvas$1.!autoSave } U = {  }
  18 methodExit
  19 formalOut D = {  } U = { $_, this.isRunning }
--
   0: SAVE_PERIOD
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: tabbedCanvas
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: terminate( )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 3 -> 2 trueControlFlow
--
   0: isRunning
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 4 -> 3 trueControlFlow
--
   0: run( )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 3 trueControlFlow
   4: 2 -> 19 falseControlFlow
   5: 3 -> 5 trueControlFlow
   6: 3 -> 8 fallThroughFlow
   7: 4 -> 8 trueControlFlow
   8: 5 -> 6 trueControlFlow
   9: 6 -> 7 trueControlFlow
  10: 6 -> 9 exceptionCatchFlow
  11: 7 -> 4 trueControlFlow
  12: 8 -> 11 trueControlFlow
  13: 9 -> 8 trueControlFlow
  14: 10 -> 2 falseControlFlow (LC = 2)
  15: 10 -> 15 trueControlFlow
  16: 11 -> 12 trueControlFlow
  17: 12 -> 13 trueControlFlow
  18: 13 -> 10 trueControlFlow
  19: 14 -> 10 trueControlFlow (LC = 10)
  20: 15 -> 16 trueControlFlow
  21: 16 -> 17 trueControlFlow
  22: 17 -> 14 trueControlFlow
  23: 19 -> 18 trueControlFlow
--
----- CCFG (to here) -----

