----- CCFG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.FigureMoved
   0 fieldEntry [ serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.FigureMoved.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.FigureMoved.serialVersionUID }
   2 fieldExit
--
   0 fieldEntry [ undoFigure ]
   1 fieldDeclaration D = { this.undoFigure } U = { this.undoFigure }
   2 fieldExit
--
   0 constructorEntry [ FigureMoved( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ undo( ) ]
   1 throwsClause D = {  } U = { $javax.swing.undo.CannotUndoException }
   2 assignment D = {  } U = { super.!undo }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureEdit#undo( )
   5 actualOut D = { super.!undo } U = {  }
   6 assignment D = {  } U = { this.figure.!replace }
   7 receiver D = {  } U = { this.figure }
   8 methodCall D = { this.figure.endX, this.figure.endY, this.figure.startX, this.figure.startY } U = { this.figure.endX, this.figure.endY, this.figure.startX, this.figure.startY } TO = jp.ac.ritsumei.cs.draw.Figure#replace( jp.ac.ritsumei.cs.draw.Figure )
   9 actualIn D = {  } U = { this.undoFigure }
  10 actualOut D = { this.figure.!replace, this.figure.endX, this.figure.endY, this.figure.startX, this.figure.startY } U = { this.figure.endX, this.figure.endY, this.figure.startX, this.figure.startY }
  11 assignment D = {  } U = { this.canvas.!repaint }
  12 receiver D = {  } U = { this.canvas }
  13 methodCall D = {  } U = { this.canvas, this.canvas.height, this.canvas.parent, this.canvas.peer, this.canvas.width, this.canvas.x, this.canvas.y } TO = java.awt.Component#repaint( )
  14 actualOut D = { this.canvas.!repaint } U = { this.canvas.height, this.canvas.parent, this.canvas.peer, this.canvas.width, this.canvas.x, this.canvas.y }
  15 methodExit
  16 formalOut D = {  } U = { $_, this.figure.endX, this.figure.endY, this.figure.startX, this.figure.startY }
--
   0 fieldEntry [ redoFigure ]
   1 fieldDeclaration D = { this.redoFigure } U = { this.redoFigure }
   2 fieldExit
--
   0 constructorEntry [ FigureMoved( jp.ac.ritsumei.cs.draw.DrawCanvas jp.ac.ritsumei.cs.draw.Figure jp.ac.ritsumei.cs.draw.Figure ) ]
   1 formalIn D = { canvas$0 } U = {  }
   2 formalIn D = { figure$1 } U = {  }
   3 formalIn D = { prevFigure$2 } U = {  }
   4 assignment D = {  } U = {  }
   5 receiver D = {  } U = {  }
   6 constructorCall D = { super.canvas, super.figure } U = { super.canvas, super.figure } TO = jp.ac.ritsumei.cs.draw.FigureEdit#FigureEdit( jp.ac.ritsumei.cs.draw.DrawCanvas jp.ac.ritsumei.cs.draw.Figure )
   7 actualIn D = {  } U = { canvas$0 }
   8 actualIn D = {  } U = { figure$1 }
   9 actualOut D = { , super.canvas, super.figure } U = { super.canvas, super.figure }
  10 assignment D = { this.undoFigure } U = { prevFigure$2 }
  11 assignment D = { this.redoFigure } U = { figure$1.!createClone }
  12 receiver D = {  } U = { figure$1 }
  13 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.Figure#createClone( )
  14 actualOut D = { figure$1.!createClone } U = {  }
  15 constructorExit
  16 formalOut D = {  } U = { $_, super.canvas, super.figure, this.redoFigure, this.undoFigure }
--
   0 methodEntry [ redo( ) ]
   1 throwsClause D = {  } U = { $javax.swing.undo.CannotUndoException }
   2 throwsClause D = {  } U = { $javax.swing.undo.CannotRedoException }
   3 assignment D = {  } U = { super.!redo }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.FigureEdit#redo( )
   6 actualOut D = { super.!redo } U = {  }
   7 assignment D = {  } U = { this.figure.!replace }
   8 receiver D = {  } U = { this.figure }
   9 methodCall D = { this.figure.endX, this.figure.endY, this.figure.startX, this.figure.startY } U = { this.figure.endX, this.figure.endY, this.figure.startX, this.figure.startY } TO = jp.ac.ritsumei.cs.draw.Figure#replace( jp.ac.ritsumei.cs.draw.Figure )
  10 actualIn D = {  } U = { this.redoFigure }
  11 actualOut D = { this.figure.!replace, this.figure.endX, this.figure.endY, this.figure.startX, this.figure.startY } U = { this.figure.endX, this.figure.endY, this.figure.startX, this.figure.startY }
  12 assignment D = {  } U = { this.canvas.!repaint }
  13 receiver D = {  } U = { this.canvas }
  14 methodCall D = {  } U = { this.canvas, this.canvas.height, this.canvas.parent, this.canvas.peer, this.canvas.width, this.canvas.x, this.canvas.y } TO = java.awt.Component#repaint( )
  15 actualOut D = { this.canvas.!repaint } U = { this.canvas.height, this.canvas.parent, this.canvas.peer, this.canvas.width, this.canvas.x, this.canvas.y }
  16 methodExit
  17 formalOut D = {  } U = { $_, this.figure.endX, this.figure.endY, this.figure.startX, this.figure.startY }
--
   0: serialVersionUID
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: undoFigure
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: FigureMoved( )
   1: 0 -> 2 trueControlFlow
   2: 2 -> 1 trueControlFlow
--
   0: undo( )
   1: 0 -> 3 trueControlFlow
   2: 1 -> 15 trueControlFlow
   3: 2 -> 7 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 1 exceptionCatchFlow
   6: 4 -> 1 exceptionCatchFlow
   7: 4 -> 5 trueControlFlow
   8: 5 -> 2 trueControlFlow
   9: 6 -> 12 trueControlFlow
  10: 7 -> 9 trueControlFlow
  11: 8 -> 10 trueControlFlow
  12: 9 -> 8 trueControlFlow
  13: 10 -> 6 trueControlFlow
  14: 11 -> 16 trueControlFlow
  15: 12 -> 13 trueControlFlow
  16: 13 -> 14 trueControlFlow
  17: 14 -> 11 trueControlFlow
  18: 16 -> 15 trueControlFlow
--
   0: redoFigure
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: FigureMoved( jp.ac.ritsumei.cs.draw.DrawCanvas jp.ac.ritsumei.cs.draw.Figure jp.ac.ritsumei.cs.draw.Figure )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 3 trueControlFlow
   4: 3 -> 5 trueControlFlow
   5: 4 -> 10 trueControlFlow
   6: 5 -> 7 trueControlFlow
   7: 6 -> 9 trueControlFlow
   8: 7 -> 8 trueControlFlow
   9: 8 -> 6 trueControlFlow
  10: 9 -> 4 trueControlFlow
  11: 10 -> 12 trueControlFlow
  12: 11 -> 16 trueControlFlow
  13: 12 -> 13 trueControlFlow
  14: 13 -> 14 trueControlFlow
  15: 14 -> 11 trueControlFlow
  16: 16 -> 15 trueControlFlow
--
   0: redo( )
   1: 0 -> 4 trueControlFlow
   2: 1 -> 16 trueControlFlow
   3: 2 -> 16 trueControlFlow
   4: 3 -> 8 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 1 exceptionCatchFlow
   7: 5 -> 2 exceptionCatchFlow
   8: 5 -> 6 trueControlFlow
   9: 6 -> 3 trueControlFlow
  10: 7 -> 13 trueControlFlow
  11: 8 -> 10 trueControlFlow
  12: 9 -> 11 trueControlFlow
  13: 10 -> 9 trueControlFlow
  14: 11 -> 7 trueControlFlow
  15: 12 -> 17 trueControlFlow
  16: 13 -> 14 trueControlFlow
  17: 14 -> 15 trueControlFlow
  18: 15 -> 12 trueControlFlow
  19: 17 -> 16 trueControlFlow
--
----- CCFG (to here) -----

