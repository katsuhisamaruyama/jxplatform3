----- CCFG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.TabbedCanvas
   0 methodEntry [ closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 formalIn D = { canvas$0 } U = {  }
   2 assignment D = {  } U = { this.!selectTab }
   3 receiver D = {  } U = {  }
   4 methodCall D = { this.selectedTab } U = { this.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
   5 actualIn D = {  } U = { canvas$0 }
   6 actualOut D = { this.!selectTab, this.selectedTab } U = { this.selectedTab }
   7 assignment D = {  } U = { canvas$0.!getFigureManager.!clear }
   8 receiver D = {  } U = { canvas$0.!getFigureManager }
   9 receiver D = {  } U = { canvas$0 }
  10 methodCall D = {  } U = { canvas$0.figureManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  11 actualOut D = { canvas$0.!getFigureManager } U = { canvas$0.figureManager }
  12 methodCall D = {  } U = { canvas$0.!getFigureManager.figures } TO = jp.ac.ritsumei.cs.draw.FigureManager#clear( )
  13 actualOut D = { canvas$0.!getFigureManager.!clear } U = { canvas$0.!getFigureManager.figures }
  14 assignment D = {  } U = { this.canvases.!remove }
  15 receiver D = {  } U = { this.canvases }
  16 methodCall D = {  } U = { this.selectedTab } TO = java.util.List#remove( int )
  17 actualOut D = { this.canvases.!remove } U = {  }
  18 assignment D = {  } U = { this.!remove }
  19 receiver D = {  } U = {  }
  20 methodCall D = { this.visComp } U = { java.awt.Component.accessibleContext, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleState.SELECTED, this.model, this.pages, this.selectedTab, this.visComp } TO = javax.swing.JTabbedPane#remove( int )
  21 actualOut D = { this.!remove, this.visComp } U = { java.awt.Component.accessibleContext, java.awt.Component.height, java.awt.Component.width, javax.accessibility.AccessibleState.SELECTED, this.model, this.pages, this.visComp }
  22 methodExit
  23 formalOut D = {  } U = { $_, this.selectedTab, this.visComp }
--
   0 fieldEntry [ serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.TabbedCanvas.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.TabbedCanvas.serialVersionUID }
   2 fieldExit
--
   0 constructorEntry [ TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector ) ]
   1 formalIn D = { selector$0 } U = {  }
   2 assignment D = {  } U = {  }
   3 receiver D = {  } U = {  }
   4 constructorCall D = { super.changeEvent, super.changeListener, super.pages, super.tabPlacement, super.visComp } U = { JTabbedPane.TOP } TO = javax.swing.JTabbedPane#JTabbedPane( int )
   5 actualOut D = { , super.changeEvent, super.changeListener, super.pages, super.tabPlacement, super.visComp } U = {  }
   6 assignment D = { this.selector } U = { selector$0, this }
   7 assignment D = { this.canvases } U = { this.canvases.!ArrayList<DrawCanvas> }
   8 receiver D = {  } U = {  }
   9 constructorCall D = { java.util.AbstractList.modCount, this.canvases.elementData } U = { this.canvases.DEFAULTCAPACITY_EMPTY_ELEMENTDATA } TO = java.util.ArrayList#ArrayList( )
  10 actualOut D = { java.util.AbstractList.modCount, this.canvases.!ArrayList<DrawCanvas>, this.canvases.elementData } U = { this.canvases.DEFAULTCAPACITY_EMPTY_ELEMENTDATA }
  11 constructorExit
  12 formalOut D = {  } U = { $_, java.util.AbstractList.modCount, super.changeEvent, super.changeListener, super.pages, super.tabPlacement, super.visComp, this.canvases, this.canvases.elementData, this.selector }
--
   0 methodEntry [ getAllCanvases( ) ]
   1 returnSt D = { $_ } U = { this.canvases }
   2 methodExit
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ openTab( java.lang.String ) ]
   1 formalIn D = { filename$0 } U = {  }
   2 returnSt D = { $_ } U = { this.!newTab }
   3 receiver D = {  } U = {  }
   4 methodCall D = { this.selectedTab } U = { this.canvases, this.menu, this.selectedTab, this.selector } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#newTab( java.lang.String )
   5 actualIn D = {  } U = { filename$0 }
   6 actualOut D = { this.!newTab, this.selectedTab } U = { this.canvases, this.menu, this.selectedTab, this.selector }
   7 methodExit
   8 formalOut D = {  } U = { $_, this.selectedTab }
--
   0 methodEntry [ selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 formalIn D = { canvas$0 } U = {  }
   2 assignment D = {  } U = { this.!setSelectedComponent }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { canvas$0 } TO = javax.swing.JTabbedPane#setSelectedComponent( java.awt.Component )
   5 actualOut D = { this.!setSelectedComponent } U = {  }
   6 assignment D = { this.selectedTab } U = { this.!getSelectedIndex }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = { this.model } TO = javax.swing.JTabbedPane#getSelectedIndex( )
   9 actualOut D = { this.!getSelectedIndex } U = { this.model }
  10 methodExit
  11 formalOut D = {  } U = { $_, this.selectedTab }
--
   0 methodEntry [ init( ) ]
   1 assignment D = {  } U = { this.!newTab }
   2 receiver D = {  } U = {  }
   3 methodCall D = { this.selectedTab } U = { this.canvases, this.menu, this.selectedTab, this.selector } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#newTab( java.lang.String )
   4 actualIn D = {  } U = {  }
   5 actualOut D = { this.!newTab, this.selectedTab } U = { this.canvases, this.menu, this.selectedTab, this.selector }
   6 assignment D = {  } U = { this.!addChangeListener }
   7 receiver D = {  } U = {  }
   8 methodCall D = { javax.swing.event.EventListenerList.listenerList } U = { javax.swing.JComponent.listenerList, javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.event.EventListenerList.listenerList, this } TO = javax.swing.JTabbedPane#addChangeListener( javax.swing.event.ChangeListener )
   9 actualOut D = { javax.swing.event.EventListenerList.listenerList, this.!addChangeListener } U = { javax.swing.JComponent.listenerList, javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.event.EventListenerList.listenerList }
  10 methodExit
  11 formalOut D = {  } U = { $_, javax.swing.event.EventListenerList.listenerList, this.selectedTab }
--
   0 fieldEntry [ canvases ]
   1 fieldDeclaration D = { this.canvases } U = { this.canvases }
   2 fieldExit
--
   0 methodEntry [ getCurrentCanvas( ) ]
   1 ifSt D = {  } U = { this.canvases.!size, this.selectedTab }
   2 receiver D = {  } U = { this.canvases }
   3 methodCall D = {  } U = {  } TO = java.util.List#size( )
   4 actualOut D = { this.canvases.!size } U = {  }
   5 receiver D = {  } U = { this.canvases }
   6 methodCall D = {  } U = {  } TO = java.util.List#size( )
   7 actualOut D = { this.canvases.!size } U = {  }
   8 returnSt D = { $_ } U = { this.canvases.!get }
   9 receiver D = {  } U = { this.canvases }
  10 methodCall D = {  } U = { this.selectedTab } TO = java.util.List#get( int )
  11 actualOut D = { this.canvases.!get } U = {  }
  12 merge ifSt(1)
  13 returnSt D = { $_ } U = {  }
  14 methodExit
  15 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ setDrawMenu( jp.ac.ritsumei.cs.draw.DrawMenu ) ]
   1 formalIn D = { menu$0 } U = {  }
   2 assignment D = { this.menu } U = { menu$0, this }
   3 methodExit
   4 formalOut D = {  } U = { $_, this.menu }
--
   0 methodEntry [ stateChanged( javax.swing.event.ChangeEvent ) ]
   1 formalIn D = { evt$0 } U = {  }
   2 localDeclaration D = { src$1 } U = { evt$0.!getSource }
   3 receiver D = {  } U = { evt$0 }
   4 methodCall D = {  } U = { evt$0, evt$0.source } TO = java.util.EventObject#getSource( )
   5 actualOut D = { evt$0.!getSource } U = { evt$0.source }
   6 assignment D = { this.selectedTab } U = { src$1.!getSelectedIndex }
   7 receiver D = {  } U = { src$1 }
   8 methodCall D = {  } U = { src$1, src$1.model } TO = javax.swing.JTabbedPane#getSelectedIndex( )
   9 actualOut D = { src$1.!getSelectedIndex } U = { src$1.model }
  10 assignment D = {  } U = { this.menu.!updateUndoState }
  11 receiver D = {  } U = { this.menu }
  12 methodCall D = {  } U = { this.menu, this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab, this.menu.undoAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateUndoState( )
  13 actualOut D = { this.menu.!updateUndoState } U = { this.menu.tabbedCanvas, this.menu.tabbedCanvas.canvases, this.menu.tabbedCanvas.selectedTab, this.menu.undoAction }
  14 methodExit
  15 formalOut D = {  } U = { $_, this.selectedTab }
--
   0 fieldEntry [ selectedTab ]
   1 fieldDeclaration D = { this.selectedTab } U = { this.selectedTab }
   2 fieldExit
--
   0 fieldEntry [ selector ]
   1 fieldDeclaration D = { this.selector } U = { this.selector }
   2 fieldExit
--
   0 methodEntry [ newTab( java.lang.String ) ]
   1 formalIn D = { filename$0 } U = {  }
   2 localDeclaration D = { canvas$1 } U = { canvas$1.!DrawCanvas }
   3 receiver D = {  } U = {  }
   4 constructorCall D = { canvas$1.changed, canvas$1.figureManager, canvas$1.figureManager.figures, canvas$1.figureManager.filename, canvas$1.menu, canvas$1.selector } U = { canvas$1.changed, canvas$1.figureManager, canvas$1.figureManager.figures, canvas$1.figureManager.filename, canvas$1.menu, canvas$1.selector } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#DrawCanvas( jp.ac.ritsumei.cs.draw.DrawMenu jp.ac.ritsumei.cs.draw.FigureSelector java.lang.String )
   5 actualIn D = {  } U = { this.menu }
   6 actualIn D = {  } U = { this.selector }
   7 actualIn D = {  } U = { filename$0 }
   8 actualOut D = { canvas$1.!DrawCanvas, canvas$1.changed, canvas$1.figureManager, canvas$1.figureManager.figures, canvas$1.figureManager.filename, canvas$1.menu, canvas$1.selector } U = { canvas$1.changed, canvas$1.figureManager, canvas$1.figureManager.figures, canvas$1.figureManager.filename, canvas$1.menu, canvas$1.selector }
   9 localDeclaration D = { undoManager$2 } U = { undoManager$2.!UndoManager }
  10 receiver D = {  } U = {  }
  11 constructorCall D = { java.util.AbstractList.modCount, javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, undoManager$2.indexOfNextAdd, undoManager$2.limit } U = { java.util.AbstractList.modCount, java.util.Vector.elementData, javax.swing.undo.CompoundEdit.edits, undoManager$2.limit } TO = javax.swing.undo.UndoManager#UndoManager( )
  12 actualOut D = { java.util.AbstractList.modCount, javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, undoManager$2.!UndoManager, undoManager$2.indexOfNextAdd, undoManager$2.limit } U = { java.util.AbstractList.modCount, java.util.Vector.elementData, javax.swing.undo.CompoundEdit.edits, undoManager$2.limit }
  13 assignment D = {  } U = { canvas$1.!addUndoableEditListener }
  14 receiver D = {  } U = { canvas$1 }
  15 methodCall D = { canvas$1, canvas$1.support } U = { canvas$1, canvas$1.support } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#addUndoableEditListener( javax.swing.event.UndoableEditListener )
  16 actualIn D = {  } U = { undoManager$2 }
  17 actualOut D = { canvas$1, canvas$1.!addUndoableEditListener, canvas$1.support } U = { canvas$1, canvas$1.support }
  18 assignment D = {  } U = { canvas$1.!setUndoManager }
  19 receiver D = {  } U = { canvas$1 }
  20 methodCall D = { canvas$1.undoManager } U = { canvas$1.undoManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setUndoManager( javax.swing.undo.UndoManager )
  21 actualIn D = {  } U = { undoManager$2 }
  22 actualOut D = { canvas$1.!setUndoManager, canvas$1.undoManager } U = { canvas$1.undoManager }
  23 localDeclaration D = { fmanager$3 } U = { canvas$1.!getFigureManager }
  24 receiver D = {  } U = { canvas$1 }
  25 methodCall D = {  } U = { canvas$1.figureManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  26 actualOut D = { canvas$1.!getFigureManager } U = { canvas$1.figureManager }
  27 assignment D = {  } U = { this.!addTab }
  28 receiver D = {  } U = {  }
  29 methodCall D = { this.haveRegistered } U = { canvas$1, canvas$1.!getFigureManager.!getFilename, canvas$1.!getFigureManager.!getTitle, fmanager$3.!getFilename, fmanager$3.!getTitle, java.awt.Component.accessibleContext, java.awt.Component.height, java.awt.Component.width, this.haveRegistered, this.model, this.pages } TO = javax.swing.JTabbedPane#addTab( java.lang.String javax.swing.Icon java.awt.Component java.lang.String )
  30 receiver D = {  } U = { canvas$1.!getFigureManager, fmanager$3 }
  31 methodCall D = {  } U = { canvas$1.!getFigureManager, canvas$1.!getFigureManager.filename, fmanager$3, fmanager$3.filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getTitle( )
  32 actualOut D = { fmanager$3.!getTitle } U = { canvas$1.!getFigureManager.filename, fmanager$3.filename }
  33 receiver D = {  } U = { canvas$1.!getFigureManager, fmanager$3 }
  34 methodCall D = {  } U = { canvas$1.!getFigureManager.filename, fmanager$3.filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
  35 actualOut D = { fmanager$3.!getFilename } U = { canvas$1.!getFigureManager.filename, fmanager$3.filename }
  36 actualOut D = { this.!addTab, this.haveRegistered } U = { java.awt.Component.accessibleContext, java.awt.Component.height, java.awt.Component.width, this.haveRegistered, this.model, this.pages }
  37 assignment D = {  } U = { this.canvases.!add }
  38 receiver D = {  } U = { this.canvases }
  39 methodCall D = {  } U = { canvas$1 } TO = java.util.List#add( java.lang.Object )
  40 actualOut D = { this.canvases.!add } U = {  }
  41 assignment D = {  } U = { this.!selectTab }
  42 receiver D = {  } U = {  }
  43 methodCall D = { this.selectedTab } U = { this.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
  44 actualIn D = {  } U = { canvas$1 }
  45 actualOut D = { this.!selectTab, this.selectedTab } U = { this.selectedTab }
  46 returnSt D = { $_ } U = { canvas$1 }
  47 methodExit
  48 formalOut D = {  } U = { $_, canvas$1.changed, canvas$1.figureManager, canvas$1.figureManager.figures, canvas$1.figureManager.filename, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, java.util.AbstractList.modCount, javax.swing.undo.CompoundEdit.edits, javax.swing.undo.CompoundEdit.inProgress, this.haveRegistered, this.selectedTab, undoManager$2.indexOfNextAdd, undoManager$2.limit }
--
   0 methodEntry [ getOpenFileNum( ) ]
   1 returnSt D = { $_ } U = { this.canvases.!size }
   2 receiver D = {  } U = { this.canvases }
   3 methodCall D = {  } U = {  } TO = java.util.List#size( )
   4 actualOut D = { this.canvases.!size } U = {  }
   5 methodExit
   6 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 formalIn D = { canvas$0 } U = {  }
   2 assignment D = {  } U = { this.!setTitleAt }
   3 receiver D = {  } U = {  }
   4 methodCall D = { this$Page.title } U = { canvas$0.!getFigureManager.!getTitle, java.awt.Component.accessibleContext, java.awt.Component.height, java.awt.Component.width, java.lang.String.COMPACT_STRINGS, java.lang.String.coder, java.lang.String.value, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, this$Page.title, this.pages, this.selectedTab } TO = javax.swing.JTabbedPane#setTitleAt( int java.lang.String )
   5 receiver D = {  } U = { canvas$0.!getFigureManager }
   6 receiver D = {  } U = { canvas$0 }
   7 methodCall D = {  } U = { canvas$0.figureManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
   8 actualOut D = { canvas$0.!getFigureManager } U = { canvas$0.figureManager }
   9 methodCall D = {  } U = { canvas$0.!getFigureManager, canvas$0.!getFigureManager.filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getTitle( )
  10 actualOut D = { canvas$0.!getFigureManager.!getTitle } U = { canvas$0.!getFigureManager.filename }
  11 actualOut D = { this$Page.title, this.!setTitleAt } U = { java.awt.Component.accessibleContext, java.awt.Component.height, java.awt.Component.width, java.lang.String.COMPACT_STRINGS, java.lang.String.coder, java.lang.String.value, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.JComponent.revalidateRunnableScheduled, this$Page.title, this.pages }
  12 assignment D = {  } U = { this.!setToolTipTextAt }
  13 receiver D = {  } U = {  }
  14 methodCall D = { java.awt.Component.mouseListener, java.awt.Component.mouseMotionListener, java.awt.Component.newEventsOnly, this$Page.tip, this.haveRegistered } U = { canvas$0.!getFigureManager.!getFilename, java.awt.Component.accessibleContext, java.awt.Component.mouseListener, java.awt.Component.mouseMotionListener, java.awt.Component.parent, java.awt.Component.peer, java.awt.Container.dispatcher, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener, this$Page.tip, this.haveRegistered, this.pages, this.selectedTab } TO = javax.swing.JTabbedPane#setToolTipTextAt( int java.lang.String )
  15 receiver D = {  } U = { canvas$0.!getFigureManager }
  16 receiver D = {  } U = { canvas$0 }
  17 methodCall D = {  } U = { canvas$0.figureManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  18 actualOut D = { canvas$0.!getFigureManager } U = { canvas$0.figureManager }
  19 methodCall D = {  } U = { canvas$0.!getFigureManager.filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
  20 actualOut D = { canvas$0.!getFigureManager.!getFilename } U = { canvas$0.!getFigureManager.filename }
  21 actualOut D = { java.awt.Component.mouseListener, java.awt.Component.mouseMotionListener, java.awt.Component.newEventsOnly, this$Page.tip, this.!setToolTipTextAt, this.haveRegistered } U = { java.awt.Component.accessibleContext, java.awt.Component.mouseListener, java.awt.Component.mouseMotionListener, java.awt.Component.parent, java.awt.Component.peer, java.awt.Container.dispatcher, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, javax.swing.ToolTipManager.accessibilityKeyListener, javax.swing.ToolTipManager.moveBeforeEnterListener, this$Page.tip, this.haveRegistered, this.pages }
  22 methodExit
  23 formalOut D = {  } U = { $_, java.awt.Component.mouseListener, java.awt.Component.mouseMotionListener, java.awt.Component.newEventsOnly, this$Page.tip, this$Page.title, this.haveRegistered }
--
   0 methodEntry [ getCanvas( java.lang.String ) ]
   1 formalIn D = { filename$0 } U = {  }
   2 forSt D = {  } U = { canvas$1, this.canvases }
   3 ifSt D = {  } U = { canvas$1.!getFigureManager.!getFilename.!equals }
   4 receiver D = {  } U = { canvas$1.!getFigureManager.!getFilename }
   5 receiver D = {  } U = { canvas$1.!getFigureManager }
   6 receiver D = {  } U = { canvas$1 }
   7 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
   8 actualOut D = { canvas$1.!getFigureManager } U = {  }
   9 methodCall D = {  } U = { canvas$1.!getFigureManager.filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
  10 actualOut D = { canvas$1.!getFigureManager.!getFilename } U = { canvas$1.!getFigureManager.filename }
  11 methodCall D = {  } U = { canvas$1.!getFigureManager.!getFilename, canvas$1.!getFigureManager.!getFilename.COMPACT_STRINGS, canvas$1.!getFigureManager.!getFilename.coder, canvas$1.!getFigureManager.!getFilename.value, filename$0 } TO = java.lang.String#equals( java.lang.Object )
  12 actualOut D = { canvas$1.!getFigureManager.!getFilename.!equals } U = { canvas$1.!getFigureManager.!getFilename.COMPACT_STRINGS, canvas$1.!getFigureManager.!getFilename.coder, canvas$1.!getFigureManager.!getFilename.value }
  13 returnSt D = { $_ } U = { canvas$1 }
  14 merge ifSt(3)
  15 returnSt D = { $_ } U = {  }
  16 methodExit
  17 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ menu ]
   1 fieldDeclaration D = { this.menu } U = { this.menu }
   2 fieldExit
--
   0: closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 2 -> 9 trueControlFlow
   4: 3 -> 5 trueControlFlow
   5: 4 -> 6 trueControlFlow
   6: 5 -> 4 trueControlFlow
   7: 6 -> 2 trueControlFlow
   8: 7 -> 15 trueControlFlow
   9: 8 -> 12 trueControlFlow
  10: 9 -> 10 trueControlFlow
  11: 10 -> 11 trueControlFlow
  12: 11 -> 8 trueControlFlow
  13: 12 -> 13 trueControlFlow
  14: 13 -> 7 trueControlFlow
  15: 14 -> 19 trueControlFlow
  16: 15 -> 16 trueControlFlow
  17: 16 -> 17 trueControlFlow
  18: 17 -> 14 trueControlFlow
  19: 18 -> 23 trueControlFlow
  20: 19 -> 20 trueControlFlow
  21: 20 -> 21 trueControlFlow
  22: 21 -> 18 trueControlFlow
  23: 23 -> 22 trueControlFlow
--
   0: serialVersionUID
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: TabbedCanvas( jp.ac.ritsumei.cs.draw.FigureSelector )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 2 -> 6 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 2 trueControlFlow
   7: 6 -> 8 trueControlFlow
   8: 7 -> 12 trueControlFlow
   9: 8 -> 9 trueControlFlow
  10: 9 -> 10 trueControlFlow
  11: 10 -> 7 trueControlFlow
  12: 12 -> 11 trueControlFlow
--
   0: getAllCanvases( )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 1 -> 3 fallThroughFlow
   4: 3 -> 2 trueControlFlow
--
   0: openTab( java.lang.String )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 2 -> 8 trueControlFlow
   4: 2 -> 8 fallThroughFlow
   5: 3 -> 5 trueControlFlow
   6: 4 -> 6 trueControlFlow
   7: 5 -> 4 trueControlFlow
   8: 6 -> 2 trueControlFlow
   9: 8 -> 7 trueControlFlow
--
   0: selectTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 2 -> 7 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 2 trueControlFlow
   7: 6 -> 11 trueControlFlow
   8: 7 -> 8 trueControlFlow
   9: 8 -> 9 trueControlFlow
  10: 9 -> 6 trueControlFlow
  11: 11 -> 10 trueControlFlow
--
   0: init( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 7 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 5 trueControlFlow
   5: 4 -> 3 trueControlFlow
   6: 5 -> 1 trueControlFlow
   7: 6 -> 11 trueControlFlow
   8: 7 -> 8 trueControlFlow
   9: 8 -> 9 trueControlFlow
  10: 9 -> 6 trueControlFlow
  11: 11 -> 10 trueControlFlow
--
   0: canvases
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: getCurrentCanvas( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 9 trueControlFlow
   3: 1 -> 12 falseControlFlow
   4: 2 -> 3 trueControlFlow
   5: 3 -> 4 trueControlFlow
   6: 4 -> 5 trueControlFlow
   7: 5 -> 6 trueControlFlow
   8: 6 -> 7 trueControlFlow
   9: 7 -> 1 trueControlFlow
  10: 8 -> 12 fallThroughFlow
  11: 8 -> 15 trueControlFlow
  12: 9 -> 10 trueControlFlow
  13: 10 -> 11 trueControlFlow
  14: 11 -> 8 trueControlFlow
  15: 12 -> 13 trueControlFlow
  16: 13 -> 15 trueControlFlow
  17: 13 -> 15 fallThroughFlow
  18: 15 -> 14 trueControlFlow
--
   0: setDrawMenu( jp.ac.ritsumei.cs.draw.DrawMenu )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 4 -> 3 trueControlFlow
--
   0: stateChanged( javax.swing.event.ChangeEvent )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 2 -> 7 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 2 trueControlFlow
   7: 6 -> 11 trueControlFlow
   8: 7 -> 8 trueControlFlow
   9: 8 -> 9 trueControlFlow
  10: 9 -> 6 trueControlFlow
  11: 10 -> 15 trueControlFlow
  12: 11 -> 12 trueControlFlow
  13: 12 -> 13 trueControlFlow
  14: 13 -> 10 trueControlFlow
  15: 15 -> 14 trueControlFlow
--
   0: selectedTab
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: selector
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: newTab( java.lang.String )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 2 -> 10 trueControlFlow
   4: 3 -> 5 trueControlFlow
   5: 4 -> 8 trueControlFlow
   6: 5 -> 6 trueControlFlow
   7: 6 -> 7 trueControlFlow
   8: 7 -> 4 trueControlFlow
   9: 8 -> 2 trueControlFlow
  10: 9 -> 14 trueControlFlow
  11: 10 -> 11 trueControlFlow
  12: 11 -> 12 trueControlFlow
  13: 12 -> 9 trueControlFlow
  14: 13 -> 19 trueControlFlow
  15: 14 -> 16 trueControlFlow
  16: 15 -> 17 trueControlFlow
  17: 16 -> 15 trueControlFlow
  18: 17 -> 13 trueControlFlow
  19: 18 -> 24 trueControlFlow
  20: 19 -> 21 trueControlFlow
  21: 20 -> 22 trueControlFlow
  22: 21 -> 20 trueControlFlow
  23: 22 -> 18 trueControlFlow
  24: 23 -> 28 trueControlFlow
  25: 24 -> 25 trueControlFlow
  26: 25 -> 26 trueControlFlow
  27: 26 -> 23 trueControlFlow
  28: 27 -> 38 trueControlFlow
  29: 28 -> 30 trueControlFlow
  30: 29 -> 36 trueControlFlow
  31: 30 -> 31 trueControlFlow
  32: 31 -> 32 trueControlFlow
  33: 32 -> 33 trueControlFlow
  34: 33 -> 34 trueControlFlow
  35: 34 -> 35 trueControlFlow
  36: 35 -> 29 trueControlFlow
  37: 36 -> 27 trueControlFlow
  38: 37 -> 42 trueControlFlow
  39: 38 -> 39 trueControlFlow
  40: 39 -> 40 trueControlFlow
  41: 40 -> 37 trueControlFlow
  42: 41 -> 46 trueControlFlow
  43: 42 -> 44 trueControlFlow
  44: 43 -> 45 trueControlFlow
  45: 44 -> 43 trueControlFlow
  46: 45 -> 41 trueControlFlow
  47: 46 -> 48 trueControlFlow
  48: 46 -> 48 fallThroughFlow
  49: 48 -> 47 trueControlFlow
--
   0: getOpenFileNum( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 6 trueControlFlow
   3: 1 -> 6 fallThroughFlow
   4: 2 -> 3 trueControlFlow
   5: 3 -> 4 trueControlFlow
   6: 4 -> 1 trueControlFlow
   7: 6 -> 5 trueControlFlow
--
   0: updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 2 -> 13 trueControlFlow
   4: 3 -> 6 trueControlFlow
   5: 4 -> 11 trueControlFlow
   6: 5 -> 9 trueControlFlow
   7: 6 -> 7 trueControlFlow
   8: 7 -> 8 trueControlFlow
   9: 8 -> 5 trueControlFlow
  10: 9 -> 10 trueControlFlow
  11: 10 -> 4 trueControlFlow
  12: 11 -> 2 trueControlFlow
  13: 12 -> 23 trueControlFlow
  14: 13 -> 16 trueControlFlow
  15: 14 -> 21 trueControlFlow
  16: 15 -> 19 trueControlFlow
  17: 16 -> 17 trueControlFlow
  18: 17 -> 18 trueControlFlow
  19: 18 -> 15 trueControlFlow
  20: 19 -> 20 trueControlFlow
  21: 20 -> 14 trueControlFlow
  22: 21 -> 12 trueControlFlow
  23: 23 -> 22 trueControlFlow
--
   0: getCanvas( java.lang.String )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 6 trueControlFlow
   4: 2 -> 15 falseControlFlow
   5: 3 -> 13 trueControlFlow
   6: 3 -> 14 falseControlFlow
   7: 4 -> 11 trueControlFlow
   8: 5 -> 9 trueControlFlow
   9: 6 -> 7 trueControlFlow
  10: 7 -> 8 trueControlFlow
  11: 8 -> 5 trueControlFlow
  12: 9 -> 10 trueControlFlow
  13: 10 -> 4 trueControlFlow
  14: 11 -> 12 trueControlFlow
  15: 12 -> 3 trueControlFlow
  16: 13 -> 14 fallThroughFlow
  17: 13 -> 17 trueControlFlow
  18: 14 -> 2 trueControlFlow (LC = 2)
  19: 15 -> 17 trueControlFlow
  20: 15 -> 17 fallThroughFlow
  21: 17 -> 16 trueControlFlow
--
   0: menu
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
----- CCFG (to here) -----
