----- CCFG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.DrawMenu
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.DrawMenu.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.DrawMenu.serialVersionUID }
   2 fieldExit
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#toolBar ]
   1 fieldDeclaration D = { this.toolBar } U = { this.toolBar }
   2 fieldExit
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#copyAction ]
   1 fieldDeclaration D = { this.copyAction } U = { this.copyAction }
   2 fieldExit
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#initFileActions( ) ]
   1 assignment D = { this.newAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
   6 receiver D = {  } U = {  }
   7 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
   8 receiver D = {  } U = { this.!getClass( ) }
   9 receiver D = {  } U = {  }
  10 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  11 actualOut D = { this.!getClass( ) } U = {  }
  12 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  13 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
  14 actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  15 actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  16 assignment D = { this.openAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
  17 receiver D = {  } U = {  }
  18 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  19 actualIn D = {  } U = { $java.lang.String }
  20 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
  21 receiver D = {  } U = {  }
  22 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  23 receiver D = {  } U = { this.!getClass( ) }
  24 receiver D = {  } U = {  }
  25 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  26 actualOut D = { this.!getClass( ) } U = {  }
  27 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  28 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
  29 actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  30 actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  31 assignment D = { this.saveAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
  32 receiver D = {  } U = {  }
  33 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  34 actualIn D = {  } U = { $java.lang.String }
  35 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
  36 receiver D = {  } U = {  }
  37 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  38 receiver D = {  } U = { this.!getClass( ) }
  39 receiver D = {  } U = {  }
  40 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  41 actualOut D = { this.!getClass( ) } U = {  }
  42 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  43 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
  44 actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  45 actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  46 methodExit
  47 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#createPopup( javax.swing.JPopupMenu ) ]
   1 formalIn D = { popup$0 } U = {  }
   2 localDeclaration D = { undoMenuItem$1 } U = { popup$0.!add( javax.swing.Action ) }
   3 receiver D = {  } U = { popup$0 }
   4 methodCall D = {  } U = { popup$0.!javax.swing.AbstractButton.action, popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.undoAction } TO = javax.swing.JPopupMenu#add( javax.swing.Action )
   5 actualOut D = { popup$0.!add( javax.swing.Action ), popup$0.!javax.swing.AbstractButton.action, popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { popup$0.!javax.swing.AbstractButton.action, popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
   6 assignment D = {  } U = { undoMenuItem$1.!setIcon( javax.swing.Icon ) }
   7 receiver D = {  } U = { undoMenuItem$1 }
   8 methodCall D = {  } U = { popup$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, popup$0.!add( javax.swing.Action ).!java.awt.Component.height, popup$0.!add( javax.swing.Action ).!java.awt.Component.width, popup$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, popup$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, undoMenuItem$1.!java.awt.Component.changeSupport, undoMenuItem$1.!java.awt.Component.height, undoMenuItem$1.!java.awt.Component.width, undoMenuItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, undoMenuItem$1.!javax.swing.AbstractButton.accessibleContext, undoMenuItem$1.!javax.swing.AbstractButton.defaultIcon, undoMenuItem$1.!javax.swing.AbstractButton.disabledIcon, undoMenuItem$1.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
   9 actualOut D = { undoMenuItem$1.!javax.swing.AbstractButton.defaultIcon, undoMenuItem$1.!javax.swing.AbstractButton.disabledIcon, undoMenuItem$1.!setIcon( javax.swing.Icon ) } U = { popup$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, popup$0.!add( javax.swing.Action ).!java.awt.Component.height, popup$0.!add( javax.swing.Action ).!java.awt.Component.width, popup$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, popup$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, undoMenuItem$1.!java.awt.Component.changeSupport, undoMenuItem$1.!java.awt.Component.height, undoMenuItem$1.!java.awt.Component.width, undoMenuItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, undoMenuItem$1.!javax.swing.AbstractButton.accessibleContext, undoMenuItem$1.!javax.swing.AbstractButton.defaultIcon, undoMenuItem$1.!javax.swing.AbstractButton.disabledIcon, undoMenuItem$1.!javax.swing.JComponent.revalidateRunnableScheduled }
  10 assignment D = {  } U = { popup$0.!add( javax.swing.JMenuItem ) }
  11 receiver D = {  } U = { popup$0 }
  12 methodCall D = {  } U = { undoMenuItem$1 } TO = javax.swing.JPopupMenu#add( javax.swing.JMenuItem )
  13 actualOut D = { popup$0.!add( javax.swing.JMenuItem ) } U = {  }
  14 localDeclaration D = { redoMenuItem$2 } U = { popup$0.!add( javax.swing.Action ) }
  15 receiver D = {  } U = { popup$0 }
  16 methodCall D = {  } U = { popup$0.!javax.swing.AbstractButton.action, popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.redoAction } TO = javax.swing.JPopupMenu#add( javax.swing.Action )
  17 actualOut D = { popup$0.!add( javax.swing.Action ), popup$0.!javax.swing.AbstractButton.action, popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { popup$0.!javax.swing.AbstractButton.action, popup$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  18 assignment D = {  } U = { redoMenuItem$2.!setIcon( javax.swing.Icon ) }
  19 receiver D = {  } U = { redoMenuItem$2 }
  20 methodCall D = {  } U = { popup$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, popup$0.!add( javax.swing.Action ).!java.awt.Component.height, popup$0.!add( javax.swing.Action ).!java.awt.Component.width, popup$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, popup$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, redoMenuItem$2.!java.awt.Component.changeSupport, redoMenuItem$2.!java.awt.Component.height, redoMenuItem$2.!java.awt.Component.width, redoMenuItem$2.!javax.accessibility.AccessibleContext.accessibleChangeSupport, redoMenuItem$2.!javax.swing.AbstractButton.accessibleContext, redoMenuItem$2.!javax.swing.AbstractButton.defaultIcon, redoMenuItem$2.!javax.swing.AbstractButton.disabledIcon, redoMenuItem$2.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  21 actualOut D = { redoMenuItem$2.!javax.swing.AbstractButton.defaultIcon, redoMenuItem$2.!javax.swing.AbstractButton.disabledIcon, redoMenuItem$2.!setIcon( javax.swing.Icon ) } U = { popup$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, popup$0.!add( javax.swing.Action ).!java.awt.Component.height, popup$0.!add( javax.swing.Action ).!java.awt.Component.width, popup$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, popup$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, popup$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, redoMenuItem$2.!java.awt.Component.changeSupport, redoMenuItem$2.!java.awt.Component.height, redoMenuItem$2.!java.awt.Component.width, redoMenuItem$2.!javax.accessibility.AccessibleContext.accessibleChangeSupport, redoMenuItem$2.!javax.swing.AbstractButton.accessibleContext, redoMenuItem$2.!javax.swing.AbstractButton.defaultIcon, redoMenuItem$2.!javax.swing.AbstractButton.disabledIcon, redoMenuItem$2.!javax.swing.JComponent.revalidateRunnableScheduled }
  22 assignment D = {  } U = { popup$0.!add( javax.swing.JMenuItem ) }
  23 receiver D = {  } U = { popup$0 }
  24 methodCall D = {  } U = { redoMenuItem$2 } TO = javax.swing.JPopupMenu#add( javax.swing.JMenuItem )
  25 actualOut D = { popup$0.!add( javax.swing.JMenuItem ) } U = {  }
  26 methodExit
  27 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#getFileName( boolean ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { open$0 } U = {  }
   3 localDeclaration D = { chooser$1 } U = { javax.swing.JFileChooser.!JFileChooser( ) }
   4 receiver D = {  } U = {  }
   5 constructorCall D = {  } U = {  } TO = javax.swing.JFileChooser#JFileChooser( )
   6 actualOut D = { javax.swing.JFileChooser.!JFileChooser( ), javax.swing.JFileChooser.!javax.swing.JFileChooser.accessibleContext, javax.swing.JFileChooser.!javax.swing.JFileChooser.accessory, javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonMnemonic, javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonText, javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonToolTipText, javax.swing.JFileChooser.!javax.swing.JFileChooser.controlsShown, javax.swing.JFileChooser.!javax.swing.JFileChooser.currentDirectory, javax.swing.JFileChooser.!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogTitle, javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogType, javax.swing.JFileChooser.!javax.swing.JFileChooser.dragEnabled, javax.swing.JFileChooser.!javax.swing.JFileChooser.fileFilter, javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSelectionMode, javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSystemView, javax.swing.JFileChooser.!javax.swing.JFileChooser.fileView, javax.swing.JFileChooser.!javax.swing.JFileChooser.filters, javax.swing.JFileChooser.!javax.swing.JFileChooser.multiSelectionEnabled, javax.swing.JFileChooser.!javax.swing.JFileChooser.returnValue, javax.swing.JFileChooser.!javax.swing.JFileChooser.selectedFile, javax.swing.JFileChooser.!javax.swing.JFileChooser.showFilesListener, javax.swing.JFileChooser.!javax.swing.JFileChooser.useAcceptAllFileFilter, javax.swing.JFileChooser.!javax.swing.JFileChooser.useFileHiding } U = {  }
   7 assignment D = {  } U = { chooser$1.!setDialogTitle( java.lang.String ) }
   8 receiver D = {  } U = { chooser$1 }
   9 methodCall D = {  } U = { $java.lang.String, chooser$1.!java.awt.Component.changeSupport, chooser$1.!java.awt.Dialog.peer, chooser$1.!java.awt.Dialog.title, chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogTitle, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Component.changeSupport, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Dialog.peer, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Dialog.title, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialogTitle } TO = javax.swing.JFileChooser#setDialogTitle( java.lang.String )
  10 actualOut D = { chooser$1.!java.awt.Dialog.title, chooser$1.!javax.swing.JFileChooser.dialogTitle, chooser$1.!setDialogTitle( java.lang.String ) } U = { chooser$1.!java.awt.Component.changeSupport, chooser$1.!java.awt.Dialog.peer, chooser$1.!java.awt.Dialog.title, chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogTitle, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Component.changeSupport, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Dialog.peer, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Dialog.title, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialogTitle }
  11 assignment D = {  } U = { chooser$1.!setCurrentDirectory( java.io.File ) }
  12 receiver D = {  } U = { chooser$1 }
  13 methodCall D = {  } U = { chooser$1.!java.awt.Component.changeSupport, chooser$1.!java.io.File.fs, chooser$1.!java.io.File.path, chooser$1.!javax.swing.JFileChooser.currentDirectory, chooser$1.!javax.swing.JFileChooser.fileSystemView, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Component.changeSupport, javax.swing.JFileChooser.!JFileChooser( ).!java.io.File.fs, javax.swing.JFileChooser.!JFileChooser( ).!java.io.File.path, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.currentDirectory, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.fileSystemView, this.directory } TO = javax.swing.JFileChooser#setCurrentDirectory( java.io.File )
  14 actualOut D = { chooser$1.!javax.swing.JFileChooser.currentDirectory, chooser$1.!setCurrentDirectory( java.io.File ) } U = { chooser$1.!java.awt.Component.changeSupport, chooser$1.!java.io.File.fs, chooser$1.!java.io.File.path, chooser$1.!javax.swing.JFileChooser.currentDirectory, chooser$1.!javax.swing.JFileChooser.fileSystemView, javax.swing.JFileChooser.!JFileChooser( ).!java.awt.Component.changeSupport, javax.swing.JFileChooser.!JFileChooser( ).!java.io.File.fs, javax.swing.JFileChooser.!JFileChooser( ).!java.io.File.path, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.currentDirectory, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.fileSystemView }
  15 localDeclaration D = { result$2 } U = {  }
  16 ifSt D = {  } U = { open$0 }
  17 assignment D = { result$2 } U = { chooser$1.!showOpenDialog( java.awt.Component ) }
  18 receiver D = {  } U = { chooser$1 }
  19 methodCall D = {  } U = { chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogType, chooser$1.!javax.swing.JFileChooser.returnValue, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialogType, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.returnValue, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JFileChooser#showOpenDialog( java.awt.Component )
  20 actualOut D = { chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogType, chooser$1.!javax.swing.JFileChooser.returnValue, chooser$1.!showOpenDialog( java.awt.Component ) } U = { chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogType, chooser$1.!javax.swing.JFileChooser.returnValue, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialogType, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.returnValue }
  21 assignment D = { result$2 } U = { chooser$1.!showSaveDialog( java.awt.Component ) }
  22 receiver D = {  } U = { chooser$1 }
  23 methodCall D = {  } U = { chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogType, chooser$1.!javax.swing.JFileChooser.returnValue, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialogType, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.returnValue, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JFileChooser#showSaveDialog( java.awt.Component )
  24 actualOut D = { chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogType, chooser$1.!javax.swing.JFileChooser.returnValue, chooser$1.!showSaveDialog( java.awt.Component ) } U = { chooser$1.!javax.swing.JFileChooser.dialog, chooser$1.!javax.swing.JFileChooser.dialogType, chooser$1.!javax.swing.JFileChooser.returnValue, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialog, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.dialogType, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.returnValue }
  25 merge ifSt(16)
  26 localDeclaration D = { file$3 } U = { chooser$1.!getSelectedFile( ) }
  27 receiver D = {  } U = { chooser$1 }
  28 methodCall D = {  } U = { chooser$1.!javax.swing.JFileChooser.selectedFile, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.selectedFile } TO = javax.swing.JFileChooser#getSelectedFile( )
  29 actualOut D = { chooser$1.!getSelectedFile( ) } U = { chooser$1.!javax.swing.JFileChooser.selectedFile, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.selectedFile }
  30 ifSt D = {  } U = { file$3, result$2, result$2.APPROVE_OPTION }
  31 assignment D = { this.directory } U = { chooser$1.!getCurrentDirectory( ) }
  32 receiver D = {  } U = { chooser$1 }
  33 methodCall D = {  } U = { chooser$1.!javax.swing.JFileChooser.currentDirectory, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.currentDirectory } TO = javax.swing.JFileChooser#getCurrentDirectory( )
  34 actualOut D = { chooser$1.!getCurrentDirectory( ) } U = { chooser$1.!javax.swing.JFileChooser.currentDirectory, javax.swing.JFileChooser.!JFileChooser( ).!javax.swing.JFileChooser.currentDirectory }
  35 returnSt D = { $_ } U = { file$3.!getPath( ) }
  36 receiver D = {  } U = { file$3 }
  37 methodCall D = {  } U = { chooser$1.!getSelectedFile( ).!java.io.File.path, file$3.!java.io.File.path } TO = java.io.File#getPath( )
  38 actualOut D = { file$3.!getPath( ) } U = { chooser$1.!getSelectedFile( ).!java.io.File.path, file$3.!java.io.File.path }
  39 merge ifSt(30)
  40 returnSt D = { $_ } U = {  }
  41 methodExit
  42 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas ) ]
   1 formalIn D = { tool$0 } U = {  }
   2 formalIn D = { tabbedCanvas$1 } U = {  }
   3 assignment D = { this.tool } U = { tool$0, tool$0.menu, tool$0.selector, tool$0.tabbedCanvas }
   4 assignment D = { this.tabbedCanvas } U = { tabbedCanvas$1, tabbedCanvas$1.canvases, tabbedCanvas$1.menu, tabbedCanvas$1.selectedTab, tabbedCanvas$1.selector }
   5 assignment D = { this.menuBar } U = { javax.swing.JMenuBar.!JMenuBar( ) }
   6 receiver D = {  } U = {  }
   7 constructorCall D = {  } U = { javax.swing.JMenuBar.!java.awt.Component.focusTraversalKeysEnabled, javax.swing.JMenuBar.!javax.swing.JMenuBar.selectionModel } TO = javax.swing.JMenuBar#JMenuBar( )
   8 actualOut D = { javax.swing.JMenuBar.!JMenuBar( ), javax.swing.JMenuBar.!java.awt.Component.focusTraversalKeysEnabled, javax.swing.JMenuBar.!javax.swing.DefaultSingleSelectionModel.changeEvent, javax.swing.JMenuBar.!javax.swing.DefaultSingleSelectionModel.index, javax.swing.JMenuBar.!javax.swing.DefaultSingleSelectionModel.listenerList, javax.swing.JMenuBar.!javax.swing.JComponent.inputVerifier, javax.swing.JMenuBar.!javax.swing.JComponent.listenerList, javax.swing.JMenuBar.!javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JMenuBar.!javax.swing.JComponent.verifyInputWhenFocusTarget, javax.swing.JMenuBar.!javax.swing.JMenuBar.margin, javax.swing.JMenuBar.!javax.swing.JMenuBar.paintBorder, javax.swing.JMenuBar.!javax.swing.JMenuBar.selectionModel } U = { javax.swing.JMenuBar.!java.awt.Component.focusTraversalKeysEnabled, javax.swing.JMenuBar.!javax.swing.JMenuBar.selectionModel }
   9 assignment D = {  } U = { this.!initMenuBar( javax.swing.JMenuBar ) }
  10 receiver D = {  } U = {  }
  11 methodCall D = {  } U = { KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK, KeyEvent.VK_DELETE, KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK, KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK, KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK, KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK, KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK, KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK, KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.closeItem$3.!javax.swing.AbstractButton.listenerList, this.closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.copyAction, this.copyItem$4.!javax.swing.AbstractButton.accessibleContext, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutAction, this.cutItem$3.!javax.swing.AbstractButton.accessibleContext, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteAction, this.deleteItem$6.!javax.swing.AbstractButton.accessibleContext, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.emptyListItem$9.!javax.swing.AbstractButton.model, this.exitItem$13.!javax.swing.AbstractButton.listenerList, this.fileListMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.fileMenu$1.!javax.swing.AbstractButton.model, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newAction, this.newItem$1.!java.awt.Component.changeSupport, this.newItem$1.!java.awt.Component.height, this.newItem$1.!java.awt.Component.width, this.newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.newItem$1.!javax.swing.AbstractButton.accessibleContext, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openAction, this.openItem$2.!javax.swing.AbstractButton.accessibleContext, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.pasteAction, this.pasteItem$5.!javax.swing.AbstractButton.accessibleContext, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoAction, this.redoItem$2.!javax.swing.AbstractButton.accessibleContext, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.saveAction, this.saveAsItem$6.!javax.swing.AbstractButton.listenerList, this.saveItem$5.!javax.swing.AbstractButton.accessibleContext, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator, this.undoAction, this.undoItem$1.!javax.swing.AbstractButton.accessibleContext, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.JMenuItem.accelerator, this.windowMenu$3.!javax.swing.JMenu.listenerList } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initMenuBar( javax.swing.JMenuBar )
  12 actualIn D = {  } U = { this.menuBar }
  13 actualOut D = { this.!initMenuBar( javax.swing.JMenuBar ), this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.description, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.height, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.location, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.width, this.javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, this.javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, this.javax.swing.JMenu.!javax.swing.JMenu.menuEvent, this.javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.JMenuItem.accelerator } U = { KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK, KeyEvent.VK_DELETE, KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK, KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK, KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK, KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK, KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK, KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK, KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.closeItem$3.!javax.swing.AbstractButton.listenerList, this.closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.copyAction, this.copyItem$4.!javax.swing.AbstractButton.accessibleContext, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutAction, this.cutItem$3.!javax.swing.AbstractButton.accessibleContext, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteAction, this.deleteItem$6.!javax.swing.AbstractButton.accessibleContext, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.emptyListItem$9.!javax.swing.AbstractButton.model, this.exitItem$13.!javax.swing.AbstractButton.listenerList, this.fileListMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.fileMenu$1.!javax.swing.AbstractButton.model, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newAction, this.newItem$1.!java.awt.Component.changeSupport, this.newItem$1.!java.awt.Component.height, this.newItem$1.!java.awt.Component.width, this.newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.newItem$1.!javax.swing.AbstractButton.accessibleContext, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openAction, this.openItem$2.!javax.swing.AbstractButton.accessibleContext, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.pasteAction, this.pasteItem$5.!javax.swing.AbstractButton.accessibleContext, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoAction, this.redoItem$2.!javax.swing.AbstractButton.accessibleContext, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.saveAction, this.saveAsItem$6.!javax.swing.AbstractButton.listenerList, this.saveItem$5.!javax.swing.AbstractButton.accessibleContext, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator, this.undoAction, this.undoItem$1.!javax.swing.AbstractButton.accessibleContext, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.JMenuItem.accelerator, this.windowMenu$3.!javax.swing.JMenu.listenerList }
  14 assignment D = { this.toolBar } U = { javax.swing.JToolBar.!JToolBar( ) }
  15 receiver D = {  } U = {  }
  16 constructorCall D = {  } U = {  } TO = javax.swing.JToolBar#JToolBar( )
  17 actualOut D = { javax.swing.JToolBar.!JToolBar( ) } U = {  }
  18 assignment D = {  } U = { this.toolBar.!setFloatable( boolean ) }
  19 receiver D = {  } U = { this.toolBar }
  20 methodCall D = {  } U = { javax.swing.JToolBar.!JToolBar( ).!java.awt.Component.height, javax.swing.JToolBar.!JToolBar( ).!java.awt.Component.width, javax.swing.JToolBar.!JToolBar( ).!javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JToolBar.!JToolBar( ).!javax.swing.JToolBar.floatable, this.toolBar.!java.awt.Component.height, this.toolBar.!java.awt.Component.width, this.toolBar.!javax.swing.JComponent.revalidateRunnableScheduled, this.toolBar.!javax.swing.JToolBar.floatable } TO = javax.swing.JToolBar#setFloatable( boolean )
  21 actualOut D = { this.toolBar.!javax.swing.JToolBar.floatable, this.toolBar.!setFloatable( boolean ) } U = { javax.swing.JToolBar.!JToolBar( ).!java.awt.Component.height, javax.swing.JToolBar.!JToolBar( ).!java.awt.Component.width, javax.swing.JToolBar.!JToolBar( ).!javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JToolBar.!JToolBar( ).!javax.swing.JToolBar.floatable, this.toolBar.!java.awt.Component.height, this.toolBar.!java.awt.Component.width, this.toolBar.!javax.swing.JComponent.revalidateRunnableScheduled, this.toolBar.!javax.swing.JToolBar.floatable }
  22 assignment D = {  } U = { this.!initToolBar( javax.swing.JToolBar ) }
  23 receiver D = {  } U = {  }
  24 methodCall D = {  } U = { this.copyAction, this.cutAction, this.newAction, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, this.newButton$1.!javax.swing.JComponent.clientProperties, this.newButton$1.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.newButton$1.!javax.swing.ToolTipManager.accessibilityKeyListener, this.newButton$1.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.openAction, this.pasteAction, this.redoAction, this.redoButton$8.!javax.swing.AbstractButton.model, this.saveAction, this.toolBar$0.!javax.swing.AbstractButton.action, this.toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.undoAction } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initToolBar( javax.swing.JToolBar )
  25 actualIn D = {  } U = { this.toolBar }
  26 actualOut D = { this.!initToolBar( javax.swing.JToolBar ), this.newButton$1.!javax.swing.JComponent.aaHint, this.newButton$1.!javax.swing.JComponent.lcdRenderingHint, this.toolBar$0.!javax.swing.AbstractButton.action, this.toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { this.copyAction, this.cutAction, this.newAction, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, this.newButton$1.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, this.newButton$1.!javax.swing.JComponent.clientProperties, this.newButton$1.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.newButton$1.!javax.swing.ToolTipManager.accessibilityKeyListener, this.newButton$1.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.openAction, this.pasteAction, this.redoAction, this.redoButton$8.!javax.swing.AbstractButton.model, this.saveAction, this.toolBar$0.!javax.swing.AbstractButton.action, this.toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.undoAction }
  27 assignment D = { this.directory } U = { java.io.File.!File( java.lang.String ) }
  28 receiver D = {  } U = {  }
  29 constructorCall D = {  } U = { $java.lang.String, java.io.File.!java.io.File.fs, java.io.File.!java.io.File.path } TO = java.io.File#File( java.lang.String )
  30 actualOut D = { java.io.File.!File( java.lang.String ), java.io.File.!java.io.File.path, java.io.File.!java.io.File.prefixLength, java.io.File.!java.io.File.status } U = { java.io.File.!java.io.File.fs, java.io.File.!java.io.File.path }
  31 assignment D = { this.recentFiles } U = { java.util.ArrayList.!ArrayList( ) }
  32 receiver D = {  } U = {  }
  33 constructorCall D = {  } U = { java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA } TO = java.util.ArrayList#ArrayList( )
  34 actualOut D = { java.util.ArrayList.!ArrayList( ), java.util.ArrayList.!java.util.AbstractList.modCount, java.util.ArrayList.!java.util.ArrayList.elementData } U = { java.util.ArrayList.!java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA }
  35 assignment D = { this.clipboard } U = {  }
  36 assignment D = { this.autoSave } U = { jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ) }
  37 receiver D = {  } U = {  }
  38 constructorCall D = {  } U = { tabbedCanvas$0.canvases, tabbedCanvas$0.menu, tabbedCanvas$0.selectedTab, tabbedCanvas$0.selector } TO = jp.ac.ritsumei.cs.draw.AutoSave#AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas )
  39 actualIn D = {  } U = { tabbedCanvas$1, tabbedCanvas$1.canvases, tabbedCanvas$1.menu, tabbedCanvas$1.selectedTab, tabbedCanvas$1.selector, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.menu, this.tabbedCanvas.selectedTab, this.tabbedCanvas.selector }
  40 actualOut D = { jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ) } U = { tabbedCanvas$0.canvases, tabbedCanvas$0.menu, tabbedCanvas$0.selectedTab, tabbedCanvas$0.selector }
  41 assignment D = {  } U = { this.autoSave.!start( ) }
  42 receiver D = {  } U = { this.autoSave }
  43 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.Thread.group, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.Thread.threadStatus, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.destroyed, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.nUnstartedThreads, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.nthreads, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.threads, this.autoSave.!java.lang.Thread.group, this.autoSave.!java.lang.Thread.threadStatus, this.autoSave.!java.lang.ThreadGroup.destroyed, this.autoSave.!java.lang.ThreadGroup.nUnstartedThreads, this.autoSave.!java.lang.ThreadGroup.nthreads, this.autoSave.!java.lang.ThreadGroup.threads } TO = java.lang.Thread#start( )
  44 actualOut D = { this.autoSave.!java.lang.ThreadGroup.nUnstartedThreads, this.autoSave.!java.lang.ThreadGroup.nthreads, this.autoSave.!java.lang.ThreadGroup.threads, this.autoSave.!start( ) } U = { jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.Thread.group, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.Thread.threadStatus, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.destroyed, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.nUnstartedThreads, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.nthreads, jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).!java.lang.ThreadGroup.threads, this.autoSave.!java.lang.Thread.group, this.autoSave.!java.lang.Thread.threadStatus, this.autoSave.!java.lang.ThreadGroup.destroyed, this.autoSave.!java.lang.ThreadGroup.nUnstartedThreads, this.autoSave.!java.lang.ThreadGroup.nthreads, this.autoSave.!java.lang.ThreadGroup.threads }
  45 constructorExit
  46 formalOut D = {  } U = { $_ }
  11+ actualOutByFieldAccess D = { this.copyAction } U = {  }
  11+ actualOutByFieldAccess D = { this.cutAction } U = {  }
  11+ actualOutByFieldAccess D = { this.deleteAction } U = {  }
  11+ actualOutByFieldAccess D = { this.fileListMenu } U = {  }
  11+ actualOutByFieldAccess D = { this.fileListener } U = {  }
  11+ actualOutByFieldAccess D = { this.newAction } U = {  }
  11+ actualOutByFieldAccess D = { this.openAction } U = {  }
  11+ actualOutByFieldAccess D = { this.pasteAction } U = {  }
  11+ actualOutByFieldAccess D = { this.redoAction } U = {  }
  11+ actualOutByFieldAccess D = { this.saveAction } U = {  }
  11+ actualOutByFieldAccess D = { this.undoAction } U = {  }
  11+ actualOutByFieldAccess D = { this.windowListener } U = {  }
  38+ actualOutByFieldAccess D = { jp.ac.ritsumei.cs.draw.AutoSave.!AutoSave( jp.ac.ritsumei.cs.draw.TabbedCanvas ).tabbedCanvas } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#tool ]
   1 fieldDeclaration D = { this.tool } U = { this.tool }
   2 fieldExit
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#updateEditState( boolean ) ]
   1 formalIn D = { grabbed$0 } U = {  }
   2 assignment D = {  } U = { this.cutAction.!setEnabled( boolean ) }
   3 receiver D = {  } U = { this.cutAction }
   4 methodCall D = {  } U = { grabbed$0 } TO = javax.swing.Action#setEnabled( boolean )
   5 actualOut D = { this.cutAction.!setEnabled( boolean ) } U = {  }
   6 assignment D = {  } U = { this.copyAction.!setEnabled( boolean ) }
   7 receiver D = {  } U = { this.copyAction }
   8 methodCall D = {  } U = { grabbed$0 } TO = javax.swing.Action#setEnabled( boolean )
   9 actualOut D = { this.copyAction.!setEnabled( boolean ) } U = {  }
  10 ifSt D = {  } U = { this.clipboard, this.clipboard.color, this.clipboard.endX, this.clipboard.endY, this.clipboard.outlineWidth, this.clipboard.startX, this.clipboard.startY }
  11 assignment D = {  } U = { this.pasteAction.!setEnabled( boolean ) }
  12 receiver D = {  } U = { this.pasteAction }
  13 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  14 actualOut D = { this.pasteAction.!setEnabled( boolean ) } U = {  }
  15 assignment D = {  } U = { this.pasteAction.!setEnabled( boolean ) }
  16 receiver D = {  } U = { this.pasteAction }
  17 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  18 actualOut D = { this.pasteAction.!setEnabled( boolean ) } U = {  }
  19 merge ifSt(10)
  20 assignment D = {  } U = { this.deleteAction.!setEnabled( boolean ) }
  21 receiver D = {  } U = { this.deleteAction }
  22 methodCall D = {  } U = { grabbed$0 } TO = javax.swing.Action#setEnabled( boolean )
  23 actualOut D = { this.deleteAction.!setEnabled( boolean ) } U = {  }
  24 methodExit
  25 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#recentFiles ]
   1 fieldDeclaration D = { this.recentFiles } U = { this.recentFiles }
   2 fieldExit
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#cutAction ]
   1 fieldDeclaration D = { this.cutAction } U = { this.cutAction }
   2 fieldExit
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#undoAction ]
   1 fieldDeclaration D = { this.undoAction } U = { this.undoAction }
   2 fieldExit
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#saveTempFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 formalIn D = { canvas$0 } U = {  }
   2 localDeclaration D = { tempName$1 } U = { $java.lang.String, canvas$0.!getFigureManager( ).!getFilename( ) }
   3 receiver D = {  } U = { canvas$0.!getFigureManager( ) }
   4 receiver D = {  } U = { canvas$0 }
   5 methodCall D = {  } U = { canvas$0.figureManager, this.figureManager.figures, this.figureManager.filename } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
   6 actualOut D = { canvas$0.!getFigureManager( ) } U = { canvas$0.figureManager, this.figureManager.figures, this.figureManager.filename }
   7 methodCall D = {  } U = { canvas$0.!getFigureManager( ).filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
   8 actualOut D = { canvas$0.!getFigureManager( ).!getFilename( ) } U = { canvas$0.!getFigureManager( ).filename }
   9 returnSt D = { $_ } U = { canvas$0.!getFigureManager( ).!store( java.lang.String ) }
  10 receiver D = {  } U = { canvas$0.!getFigureManager( ) }
  11 receiver D = {  } U = { canvas$0 }
  12 methodCall D = {  } U = { canvas$0.figureManager, this.figureManager.figures, this.figureManager.filename } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  13 actualOut D = { canvas$0.!getFigureManager( ) } U = { canvas$0.figureManager, this.figureManager.figures, this.figureManager.filename }
  14 methodCall D = {  } U = { System.err, canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, canvas$0.!getFigureManager( ).figures, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY } TO = jp.ac.ritsumei.cs.draw.FigureManager#store( java.lang.String )
  15 actualIn D = {  } U = { tempName$1 }
  16 actualOut D = { canvas$0.!getFigureManager( ).!store( java.lang.String ), canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count } U = { System.err, canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, canvas$0.!getFigureManager( ).figures, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY }
  17 methodExit
  18 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#deleteAction ]
   1 fieldDeclaration D = { this.deleteAction } U = { this.deleteAction }
   2 fieldExit
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { canvas$0 } U = {  }
   3 ifSt D = {  } U = { canvas$0.!hasChanged( ) }
   4 receiver D = {  } U = { canvas$0 }
   5 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#hasChanged( )
   6 actualOut D = { canvas$0.!hasChanged( ) } U = {  }
   7 localDeclaration D = { result$1 } U = { this.!showConfirmDialog( java.awt.Component java.lang.Object ) }
   8 receiver D = {  } U = {  }
   9 methodCall D = {  } U = { $java.lang.String, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showConfirmDialog( java.awt.Component java.lang.Object )
  10 actualOut D = { this.!showConfirmDialog( java.awt.Component java.lang.Object ) } U = {  }
  11 ifSt D = {  } U = { result$1, result$1.CANCEL_OPTION }
  12 returnSt D = { $_ } U = {  }
  13 ifSt D = {  } U = { result$1, result$1.YES_OPTION }
  14 ifSt D = {  } U = { this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
  15 receiver D = {  } U = {  }
  16 methodCall D = {  } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
  17 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
  18 actualOut D = { this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas ), this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, this.canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  19 localDeclaration D = { result2$2 } U = { this.!showConfirmDialog( java.awt.Component java.lang.Object ) }
  20 receiver D = {  } U = {  }
  21 methodCall D = {  } U = { $java.lang.String, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showConfirmDialog( java.awt.Component java.lang.Object )
  22 actualOut D = { this.!showConfirmDialog( java.awt.Component java.lang.Object ) } U = {  }
  23 ifSt D = {  } U = { result2$2, result2$2.CANCEL_OPTION }
  24 returnSt D = { $_ } U = {  }
  25 merge ifSt(23)
  26 merge ifSt(14)
  27 merge ifSt(13)
  28 merge ifSt(11)
  29 merge ifSt(3)
  30 assignment D = {  } U = { this.tabbedCanvas.!closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
  31 receiver D = {  } U = { this.tabbedCanvas }
  32 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.tabbedCanvas.!javax.accessibility.AccessibleState.SELECTED, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.!javax.swing.JTabbedPane.visComp, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
  33 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
  34 actualOut D = { this.tabbedCanvas.!closeTab( jp.ac.ritsumei.cs.draw.DrawCanvas ), this.tabbedCanvas.!javax.swing.JTabbedPane.visComp } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.tabbedCanvas.!javax.accessibility.AccessibleState.SELECTED, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.!javax.swing.JTabbedPane.visComp, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
  35 ifSt D = {  } U = { this.tabbedCanvas.!getOpenFileNum( ) }
  36 receiver D = {  } U = { this.tabbedCanvas }
  37 methodCall D = {  } U = { this.tabbedCanvas.canvases } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getOpenFileNum( )
  38 actualOut D = { this.tabbedCanvas.!getOpenFileNum( ) } U = { this.tabbedCanvas.canvases }
  39 assignment D = {  } U = { this.tool.!terminate( ) }
  40 receiver D = {  } U = { this.tool }
  41 methodCall D = {  } U = { this.tool.!java.lang.Runtime.currentRuntime } TO = jp.ac.ritsumei.cs.draw.DrawTool#terminate( )
  42 actualOut D = { this.tool.!terminate( ) } U = { this.tool.!java.lang.Runtime.currentRuntime }
  43 merge ifSt(35)
  44 returnSt D = { $_ } U = {  }
  45 methodExit
  46 formalOut D = {  } U = { $_ }
  32+ actualOutByFieldAccess D = { this.tabbedCanvas.selectedTab } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#newAction ]
   1 fieldDeclaration D = { this.newAction } U = { this.newAction }
   2 fieldExit
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#newFile( ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 localDeclaration D = { filename$0 } U = { this.!getFileName( boolean ) }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { result$2.APPROVE_OPTION, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#getFileName( boolean )
   5 actualIn D = {  } U = {  }
   6 actualOut D = { this.!getFileName( boolean ), this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessibleContext, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonMnemonic, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonToolTipText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.controlsShown, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.currentDirectory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialog, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogTitle, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogType, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dragEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSelectionMode, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSystemView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.filters, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.multiSelectionEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.selectedFile, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.showFilesListener, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useAcceptAllFileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useFileHiding } U = { result$2.APPROVE_OPTION, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
   7 ifSt D = {  } U = { filename$0 }
   8 returnSt D = { $_ } U = {  }
   9 merge ifSt(7)
  10 ifSt D = {  } U = { this.!fileExists( java.lang.String ) }
  11 receiver D = {  } U = {  }
  12 methodCall D = {  } U = { this.file$1.!java.io.File$PathStatus.CHECKED, this.file$1.!java.io.File$PathStatus.INVALID, this.file$1.!java.io.File.fs, this.file$1.!java.io.File.path, this.file$1.!java.io.File.status, this.file$1.!java.lang.System.security, this.java.io.File.!java.io.File.fs, this.java.io.File.!java.io.File.path } TO = jp.ac.ritsumei.cs.draw.DrawMenu#fileExists( java.lang.String )
  13 actualIn D = {  } U = { filename$0 }
  14 actualOut D = { this.!fileExists( java.lang.String ), this.file$1.!java.io.File.status, this.java.io.File.!java.io.File.path, this.java.io.File.!java.io.File.prefixLength, this.java.io.File.!java.io.File.status } U = { this.file$1.!java.io.File$PathStatus.CHECKED, this.file$1.!java.io.File$PathStatus.INVALID, this.file$1.!java.io.File.fs, this.file$1.!java.io.File.path, this.file$1.!java.io.File.status, this.file$1.!java.lang.System.security, this.java.io.File.!java.io.File.fs, this.java.io.File.!java.io.File.path }
  15 assignment D = {  } U = { this.!showMessageDialog( java.awt.Component java.lang.Object ) }
  16 receiver D = {  } U = {  }
  17 methodCall D = {  } U = { $java.lang.String, filename$0, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showMessageDialog( java.awt.Component java.lang.Object )
  18 actualOut D = { this.!showMessageDialog( java.awt.Component java.lang.Object ) } U = {  }
  19 returnSt D = { $_ } U = {  }
  20 merge ifSt(10)
  21 localDeclaration D = { canvas$1 } U = { this.tabbedCanvas.!openTab( java.lang.String ) }
  22 receiver D = {  } U = { this.tabbedCanvas }
  23 methodCall D = {  } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.figureManager.figures, this.figureManager.filename, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvas$1.support, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementCount, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementData, this.tabbedCanvas.canvas$1.support.!java.util.Vector.modCount, this.tabbedCanvas.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.tabbedCanvas.canvases, this.tabbedCanvas.fmanager$3.filename, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.coder, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.value, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.height, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.peer, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.width, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.dispatcher, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.peer, this.tabbedCanvas.menu, this.tabbedCanvas.selector } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#openTab( java.lang.String )
  24 actualIn D = {  } U = { filename$0 }
  25 actualOut D = { this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!openTab( java.lang.String ), this.tabbedCanvas.canvas$1.support.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.edits, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.inProgress, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.indexOfNextAdd, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.newEventsOnly, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.height, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.width, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.jp.ac.ritsumei.cs.draw.FigureManager.java.util.LinkedList.!java.util.LinkedList.size } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.figureManager.figures, this.figureManager.filename, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvas$1.support, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementCount, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementData, this.tabbedCanvas.canvas$1.support.!java.util.Vector.modCount, this.tabbedCanvas.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.tabbedCanvas.canvases, this.tabbedCanvas.fmanager$3.filename, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.coder, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.value, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.height, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.peer, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.width, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.dispatcher, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.peer, this.tabbedCanvas.menu, this.tabbedCanvas.selector }
  26 assignment D = {  } U = { this.!addRecentFile( java.lang.String ) }
  27 receiver D = {  } U = {  }
  28 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES, this.recentFiles } TO = jp.ac.ritsumei.cs.draw.DrawMenu#addRecentFile( java.lang.String )
  29 actualIn D = {  } U = { filename$0 }
  30 actualOut D = { this.!addRecentFile( java.lang.String ) } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES, this.recentFiles }
  31 assignment D = {  } U = { this.tool.!setTitle( java.lang.String ) }
  32 receiver D = {  } U = { this.tool }
  33 methodCall D = {  } U = { filename$0, this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title } TO = java.awt.Frame#setTitle( java.lang.String )
  34 actualOut D = { this.tool.!java.awt.Frame.title, this.tool.!setTitle( java.lang.String ) } U = { this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title }
  35 assignment D = {  } U = { canvas$1.!repaint( ) }
  36 receiver D = {  } U = { canvas$1 }
  37 methodCall D = {  } U = { canvas$1.!java.awt.Component.height, canvas$1.!java.awt.Component.parent, canvas$1.!java.awt.Component.peer, canvas$1.!java.awt.Component.width, canvas$1.!java.awt.Component.x, canvas$1.!java.awt.Component.y, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.height, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.parent, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.peer, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.width, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.x, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.y } TO = java.awt.Component#repaint( )
  38 actualOut D = { canvas$1.!repaint( ) } U = { canvas$1.!java.awt.Component.height, canvas$1.!java.awt.Component.parent, canvas$1.!java.awt.Component.peer, canvas$1.!java.awt.Component.width, canvas$1.!java.awt.Component.x, canvas$1.!java.awt.Component.y, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.height, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.parent, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.peer, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.width, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.x, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.y }
  39 returnSt D = { $_ } U = {  }
  40 methodExit
  41 formalOut D = {  } U = { $_ }
   4+ actualOutByFieldAccess D = { this.directory } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.changed } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).figureManager } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).figureManager } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).menu } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).selector } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.canvas$1.undoManager } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).figures } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).figures } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).filename } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).filename } U = {  }
  23+ actualOutByFieldAccess D = { this.tabbedCanvas.selectedTab } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#windowListener ]
   1 fieldDeclaration D = { this.windowListener } U = { this.windowListener }
   2 fieldExit
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#saveAsFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { canvas$0 } U = {  }
   3 localDeclaration D = { filename$1 } U = { this.!getFileName( boolean ) }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = { result$2.APPROVE_OPTION, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#getFileName( boolean )
   6 actualIn D = {  } U = {  }
   7 actualOut D = { this.!getFileName( boolean ), this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessibleContext, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonMnemonic, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonToolTipText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.controlsShown, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.currentDirectory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialog, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogTitle, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogType, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dragEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSelectionMode, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSystemView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.filters, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.multiSelectionEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.selectedFile, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.showFilesListener, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useAcceptAllFileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useFileHiding } U = { result$2.APPROVE_OPTION, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
   8 ifSt D = {  } U = { filename$1 }
   9 returnSt D = { $_ } U = {  }
  10 merge ifSt(8)
  11 ifSt D = {  } U = { this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String ) }
  12 receiver D = {  } U = {  }
  13 methodCall D = {  } U = { System.err, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String )
  14 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
  15 actualIn D = {  } U = { filename$1 }
  16 actualOut D = { this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String ), this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, this.canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count } U = { System.err, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  17 assignment D = {  } U = { this.tabbedCanvas.!updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
  18 receiver D = {  } U = { this.tabbedCanvas }
  19 methodCall D = {  } U = { File.separator, this.tabbedCanvas.!java.awt.Component.height, this.tabbedCanvas.!java.awt.Component.width, this.tabbedCanvas.!java.lang.String.value, this.tabbedCanvas.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.tabbedCanvas.!javax.swing.JComponent.revalidateRunnableScheduled, this.tabbedCanvas.!javax.swing.JTabbedPane$Page.tip, this.tabbedCanvas.!javax.swing.JTabbedPane$Page.title, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.tabbedCanvas.!javax.swing.ToolTipManager.accessibilityKeyListener, this.tabbedCanvas.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.coder, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.value, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas )
  20 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
  21 actualOut D = { this.tabbedCanvas.!javax.swing.JTabbedPane$Page.tip, this.tabbedCanvas.!javax.swing.JTabbedPane$Page.title, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!updateTab( jp.ac.ritsumei.cs.draw.DrawCanvas ) } U = { File.separator, this.tabbedCanvas.!java.awt.Component.height, this.tabbedCanvas.!java.awt.Component.width, this.tabbedCanvas.!java.lang.String.value, this.tabbedCanvas.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.tabbedCanvas.!javax.swing.JComponent.revalidateRunnableScheduled, this.tabbedCanvas.!javax.swing.JTabbedPane$Page.tip, this.tabbedCanvas.!javax.swing.JTabbedPane$Page.title, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, this.tabbedCanvas.!javax.swing.ToolTipManager.accessibilityKeyListener, this.tabbedCanvas.!javax.swing.ToolTipManager.moveBeforeEnterListener, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.coder, this.tabbedCanvas.canvas$0.!getFigureManager( ).filename.!java.lang.String.value, this.tabbedCanvas.selectedTab }
  22 assignment D = {  } U = { this.!addRecentFile( java.lang.String ) }
  23 receiver D = {  } U = {  }
  24 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES, this.recentFiles } TO = jp.ac.ritsumei.cs.draw.DrawMenu#addRecentFile( java.lang.String )
  25 actualIn D = {  } U = { filename$1 }
  26 actualOut D = { this.!addRecentFile( java.lang.String ) } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES, this.recentFiles }
  27 assignment D = {  } U = { this.tool.!setTitle( java.lang.String ) }
  28 receiver D = {  } U = { this.tool }
  29 methodCall D = {  } U = { filename$1, this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title } TO = java.awt.Frame#setTitle( java.lang.String )
  30 actualOut D = { this.tool.!java.awt.Frame.title, this.tool.!setTitle( java.lang.String ) } U = { this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title }
  31 returnSt D = { $_ } U = {  }
  32 merge ifSt(11)
  33 returnSt D = { $_ } U = {  }
  34 methodExit
  35 formalOut D = {  } U = { $_ }
   5+ actualOutByFieldAccess D = { this.directory } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#menuBar ]
   1 fieldDeclaration D = { this.menuBar } U = { this.menuBar }
   2 fieldExit
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#getToolBar( ) ]
   1 returnSt D = { $_ } U = { this.toolBar }
   2 methodExit
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#closeAllFiles( ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 enhancedForSt D = { canvas$0 } U = { this.tabbedCanvas.!getAllCanvases( ) }
   3 receiver D = {  } U = { this.tabbedCanvas }
   4 methodCall D = {  } U = { this.tabbedCanvas.canvases } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getAllCanvases( )
   5 actualOut D = { this.tabbedCanvas.!getAllCanvases( ) } U = { this.tabbedCanvas.canvases }
   6 ifSt D = {  } U = { this.!closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, result$1.CANCEL_OPTION, result$1.YES_OPTION, result2$2.CANCEL_OPTION, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tabbedCanvas, this.tabbedCanvas.!javax.accessibility.AccessibleState.SELECTED, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.!javax.swing.JTabbedPane.visComp, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.tool, this.tool.!java.lang.Runtime.currentRuntime, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   9 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
  10 actualOut D = { this.!closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas ), this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, this.canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.tabbedCanvas.!javax.swing.JTabbedPane.visComp } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, result$1.CANCEL_OPTION, result$1.YES_OPTION, result2$2.CANCEL_OPTION, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tabbedCanvas, this.tabbedCanvas.!javax.accessibility.AccessibleState.SELECTED, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.!javax.swing.JTabbedPane.visComp, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.tool, this.tool.!java.lang.Runtime.currentRuntime, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  11 returnSt D = {  } U = {  }
  12 merge ifSt(6)
  13 methodExit
  14 formalOut D = {  } U = { $_ }
   8+ actualOutByFieldAccess D = { this.tabbedCanvas.selectedTab } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#redoAction ]
   1 fieldDeclaration D = { this.redoAction } U = { this.redoAction }
   2 fieldExit
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#getMenuBar( ) ]
   1 returnSt D = { $_ } U = { this.menuBar }
   2 methodExit
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#openFile( ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 throwsClause D = {  } U = { $java.lang.NumberFormatException }
   3 localDeclaration D = { filename$0 } U = { this.!getFileName( boolean ) }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = { result$2.APPROVE_OPTION, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#getFileName( boolean )
   6 actualIn D = {  } U = {  }
   7 actualOut D = { this.!getFileName( boolean ), this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessibleContext, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.accessory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonMnemonic, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.approveButtonToolTipText, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.controlsShown, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.currentDirectory, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialog, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogTitle, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dialogType, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.dragEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSelectionMode, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileSystemView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.fileView, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.filters, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.multiSelectionEnabled, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.returnValue, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.selectedFile, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.showFilesListener, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useAcceptAllFileFilter, this.javax.swing.JFileChooser.!javax.swing.JFileChooser.useFileHiding } U = { result$2.APPROVE_OPTION, this.chooser$1.!java.awt.Component.changeSupport, this.chooser$1.!java.awt.Dialog.peer, this.chooser$1.!java.awt.Dialog.title, this.chooser$1.!java.io.File.fs, this.chooser$1.!java.io.File.path, this.chooser$1.!javax.swing.JFileChooser.currentDirectory, this.chooser$1.!javax.swing.JFileChooser.dialog, this.chooser$1.!javax.swing.JFileChooser.dialogTitle, this.chooser$1.!javax.swing.JFileChooser.dialogType, this.chooser$1.!javax.swing.JFileChooser.fileSystemView, this.chooser$1.!javax.swing.JFileChooser.returnValue, this.chooser$1.!javax.swing.JFileChooser.selectedFile, this.directory, this.file$3.!java.io.File.path, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
   8 ifSt D = {  } U = { filename$0 }
   9 returnSt D = { $_ } U = {  }
  10 merge ifSt(8)
  11 returnSt D = { $_ } U = { this.!openFile( java.lang.String ) }
  12 receiver D = {  } U = {  }
  13 methodCall D = {  } U = { Color.white, File.separator, FilledOval.name, FilledRect.name, Line.name, Oval.name, Rect.name, System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, confirm$2.NO_OPTION, figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY, figure$17.color, figure$17.endX, figure$17.endY, figure$17.outlineWidth, figure$17.startX, figure$17.startY, figure$7.color, figure$7.endX, figure$7.endY, figure$7.outlineWidth, figure$7.startX, figure$7.startY, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.lock, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).figures, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, this.canvas$1.!getFigureManager( ).kind$0.!java.lang.String.value, this.canvas$1.!getFigureManager( ).st$6.!java.lang.String.value, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.str, this.canvas$1.!java.awt.Component.height, this.canvas$1.!java.awt.Component.parent, this.canvas$1.!java.awt.Component.peer, this.canvas$1.!java.awt.Component.width, this.canvas$1.!java.awt.Component.x, this.canvas$1.!java.awt.Component.y, this.canvas$1.changed, this.figureManager.figures, this.figureManager.filename, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.tabbedCanvas, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvas$1.support, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementCount, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementData, this.tabbedCanvas.canvas$1.support.!java.util.Vector.modCount, this.tabbedCanvas.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.tabbedCanvas.canvases, this.tabbedCanvas.fmanager$3.filename, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.value, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.height, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.peer, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.width, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.dispatcher, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.peer, this.tabbedCanvas.menu, this.tabbedCanvas.selector, this.tool, this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title, this.tool.YES_NO_OPTION, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#openFile( java.lang.String )
  14 actualIn D = {  } U = { filename$0 }
  15 actualOut D = { this.!openFile( java.lang.String ), this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.cs, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.falpha, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.frgbvalue, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.fvalue, this.canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.value, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.markedChar, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.markedSkipLF, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.nChars, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.readAheadLimit, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).java.io.FileReader.!java.io.InputStreamReader.sd, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.delimiters, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.hasSurrogates, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.maxPosition, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.newPosition, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.retDelims, this.canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.str, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.canvas$1.support.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.edits, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.inProgress, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.indexOfNextAdd, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.newEventsOnly, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.height, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.width, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.jp.ac.ritsumei.cs.draw.FigureManager.java.util.LinkedList.!java.util.LinkedList.size, this.tool.!java.awt.Frame.title } U = { Color.white, File.separator, FilledOval.name, FilledRect.name, Line.name, Oval.name, Rect.name, System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, confirm$2.NO_OPTION, figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY, figure$17.color, figure$17.endX, figure$17.endY, figure$17.outlineWidth, figure$17.startX, figure$17.startY, figure$7.color, figure$7.endX, figure$7.endY, figure$7.outlineWidth, figure$7.startX, figure$7.startY, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.lock, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.canvas$1.!getFigureManager( ).figures, this.canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, this.canvas$1.!getFigureManager( ).kind$0.!java.lang.String.value, this.canvas$1.!getFigureManager( ).st$6.!java.lang.String.value, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, this.canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.str, this.canvas$1.!java.awt.Component.height, this.canvas$1.!java.awt.Component.parent, this.canvas$1.!java.awt.Component.peer, this.canvas$1.!java.awt.Component.width, this.canvas$1.!java.awt.Component.x, this.canvas$1.!java.awt.Component.y, this.canvas$1.changed, this.figureManager.figures, this.figureManager.filename, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.tabbedCanvas, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvas$1.support, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementCount, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementData, this.tabbedCanvas.canvas$1.support.!java.util.Vector.modCount, this.tabbedCanvas.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.tabbedCanvas.canvases, this.tabbedCanvas.fmanager$3.filename, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.value, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.height, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.peer, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.width, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.dispatcher, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.peer, this.tabbedCanvas.menu, this.tabbedCanvas.selector, this.tool, this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title, this.tool.YES_NO_OPTION, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  16 methodExit
  17 formalOut D = {  } U = { $_ }
   5+ actualOutByFieldAccess D = { this.directory } U = {  }
  13+ actualOutByFieldAccess D = { this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.changed } U = {  }
  13+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).figureManager } U = {  }
  13+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).figureManager } U = {  }
  13+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).menu } U = {  }
  13+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).selector } U = {  }
  13+ actualOutByFieldAccess D = { this.tabbedCanvas.canvas$1.undoManager } U = {  }
  13+ actualOutByFieldAccess D = { this.canvas$1.!getFigureManager( ).figure$7.endX } U = {  }
  13+ actualOutByFieldAccess D = { this.canvas$1.!getFigureManager( ).figure$7.endY } U = {  }
  13+ actualOutByFieldAccess D = { this.canvas$1.!getFigureManager( ).figure$7.startX } U = {  }
  13+ actualOutByFieldAccess D = { this.canvas$1.!getFigureManager( ).figure$7.startY } U = {  }
  13+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).figures } U = {  }
  13+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).figures } U = {  }
  13+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).filename } U = {  }
  13+ actualOutByFieldAccess D = { this.!openFile( java.lang.String ).filename } U = {  }
  13+ actualOutByFieldAccess D = { this.tabbedCanvas.selectedTab } U = {  }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#fileExists( java.lang.String ) ]
   1 formalIn D = { name$0 } U = {  }
   2 localDeclaration D = { file$1 } U = { java.io.File.!File( java.lang.String ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = { java.io.File.!java.io.File.fs, java.io.File.!java.io.File.path, name$0 } TO = java.io.File#File( java.lang.String )
   5 actualOut D = { java.io.File.!File( java.lang.String ), java.io.File.!java.io.File.path, java.io.File.!java.io.File.prefixLength, java.io.File.!java.io.File.status } U = { java.io.File.!java.io.File.fs, java.io.File.!java.io.File.path }
   6 returnSt D = { $_ } U = { file$1.!exists( ) }
   7 receiver D = {  } U = { file$1 }
   8 methodCall D = {  } U = { file$1.!java.io.File$PathStatus.CHECKED, file$1.!java.io.File$PathStatus.INVALID, file$1.!java.io.File.fs, file$1.!java.io.File.path, file$1.!java.io.File.status, file$1.!java.lang.System.security, java.io.File.!File( java.lang.String ).!java.io.File$PathStatus.CHECKED, java.io.File.!File( java.lang.String ).!java.io.File$PathStatus.INVALID, java.io.File.!File( java.lang.String ).!java.io.File.fs, java.io.File.!File( java.lang.String ).!java.io.File.path, java.io.File.!File( java.lang.String ).!java.io.File.status, java.io.File.!File( java.lang.String ).!java.lang.System.security } TO = java.io.File#exists( )
   9 actualOut D = { file$1.!exists( ), file$1.!java.io.File.status } U = { file$1.!java.io.File$PathStatus.CHECKED, file$1.!java.io.File$PathStatus.INVALID, file$1.!java.io.File.fs, file$1.!java.io.File.path, file$1.!java.io.File.status, file$1.!java.lang.System.security, java.io.File.!File( java.lang.String ).!java.io.File$PathStatus.CHECKED, java.io.File.!File( java.lang.String ).!java.io.File$PathStatus.INVALID, java.io.File.!File( java.lang.String ).!java.io.File.fs, java.io.File.!File( java.lang.String ).!java.io.File.path, java.io.File.!File( java.lang.String ).!java.io.File.status, java.io.File.!File( java.lang.String ).!java.lang.System.security }
  10 methodExit
  11 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#initToolBar( javax.swing.JToolBar ) ]
   1 formalIn D = { toolBar$0 } U = {  }
   2 localDeclaration D = { newButton$1 } U = { toolBar$0.!add( javax.swing.Action ) }
   3 receiver D = {  } U = { toolBar$0 }
   4 methodCall D = {  } U = { this.newAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
   5 actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
   6 assignment D = {  } U = { newButton$1.!setToolTipText( java.lang.String ) }
   7 receiver D = {  } U = { newButton$1 }
   8 methodCall D = {  } U = { $java.lang.String, newButton$1.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, newButton$1.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, newButton$1.!javax.swing.JComponent.clientProperties, newButton$1.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, newButton$1.!javax.swing.ToolTipManager.accessibilityKeyListener, newButton$1.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
   9 actualOut D = { newButton$1.!javax.swing.JComponent.aaHint, newButton$1.!javax.swing.JComponent.lcdRenderingHint, newButton$1.!setToolTipText( java.lang.String ) } U = { newButton$1.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, newButton$1.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, newButton$1.!javax.swing.JComponent.clientProperties, newButton$1.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, newButton$1.!javax.swing.ToolTipManager.accessibilityKeyListener, newButton$1.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  10 localDeclaration D = { openButton$2 } U = { toolBar$0.!add( javax.swing.Action ) }
  11 receiver D = {  } U = { toolBar$0 }
  12 methodCall D = {  } U = { this.openAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
  13 actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  14 assignment D = {  } U = { openButton$2.!setToolTipText( java.lang.String ) }
  15 receiver D = {  } U = { openButton$2 }
  16 methodCall D = {  } U = { $java.lang.String, openButton$2.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, openButton$2.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, openButton$2.!javax.swing.JComponent.clientProperties, openButton$2.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, openButton$2.!javax.swing.ToolTipManager.accessibilityKeyListener, openButton$2.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  17 actualOut D = { openButton$2.!javax.swing.JComponent.aaHint, openButton$2.!javax.swing.JComponent.lcdRenderingHint, openButton$2.!setToolTipText( java.lang.String ) } U = { openButton$2.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, openButton$2.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, openButton$2.!javax.swing.JComponent.clientProperties, openButton$2.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, openButton$2.!javax.swing.ToolTipManager.accessibilityKeyListener, openButton$2.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  18 localDeclaration D = { saveButton$3 } U = { toolBar$0.!add( javax.swing.Action ) }
  19 receiver D = {  } U = { toolBar$0 }
  20 methodCall D = {  } U = { this.saveAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
  21 actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  22 assignment D = {  } U = { saveButton$3.!setToolTipText( java.lang.String ) }
  23 receiver D = {  } U = { saveButton$3 }
  24 methodCall D = {  } U = { $java.lang.String, saveButton$3.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, saveButton$3.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, saveButton$3.!javax.swing.JComponent.clientProperties, saveButton$3.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, saveButton$3.!javax.swing.ToolTipManager.accessibilityKeyListener, saveButton$3.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  25 actualOut D = { saveButton$3.!javax.swing.JComponent.aaHint, saveButton$3.!javax.swing.JComponent.lcdRenderingHint, saveButton$3.!setToolTipText( java.lang.String ) } U = { saveButton$3.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, saveButton$3.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, saveButton$3.!javax.swing.JComponent.clientProperties, saveButton$3.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, saveButton$3.!javax.swing.ToolTipManager.accessibilityKeyListener, saveButton$3.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  26 assignment D = {  } U = { toolBar$0.!addSeparator( ) }
  27 receiver D = {  } U = { toolBar$0 }
  28 methodCall D = {  } U = {  } TO = javax.swing.JToolBar#addSeparator( )
  29 actualOut D = { toolBar$0.!addSeparator( ) } U = {  }
  30 localDeclaration D = { cutButton$4 } U = { toolBar$0.!add( javax.swing.Action ) }
  31 receiver D = {  } U = { toolBar$0 }
  32 methodCall D = {  } U = { this.cutAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
  33 actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  34 assignment D = {  } U = { cutButton$4.!setToolTipText( java.lang.String ) }
  35 receiver D = {  } U = { cutButton$4 }
  36 methodCall D = {  } U = { $java.lang.String, cutButton$4.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, cutButton$4.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, cutButton$4.!javax.swing.JComponent.clientProperties, cutButton$4.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, cutButton$4.!javax.swing.ToolTipManager.accessibilityKeyListener, cutButton$4.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  37 actualOut D = { cutButton$4.!javax.swing.JComponent.aaHint, cutButton$4.!javax.swing.JComponent.lcdRenderingHint, cutButton$4.!setToolTipText( java.lang.String ) } U = { cutButton$4.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, cutButton$4.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, cutButton$4.!javax.swing.JComponent.clientProperties, cutButton$4.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, cutButton$4.!javax.swing.ToolTipManager.accessibilityKeyListener, cutButton$4.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  38 localDeclaration D = { copyButton$5 } U = { toolBar$0.!add( javax.swing.Action ) }
  39 receiver D = {  } U = { toolBar$0 }
  40 methodCall D = {  } U = { this.copyAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
  41 actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  42 assignment D = {  } U = { copyButton$5.!setToolTipText( java.lang.String ) }
  43 receiver D = {  } U = { copyButton$5 }
  44 methodCall D = {  } U = { $java.lang.String, copyButton$5.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, copyButton$5.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, copyButton$5.!javax.swing.JComponent.clientProperties, copyButton$5.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, copyButton$5.!javax.swing.ToolTipManager.accessibilityKeyListener, copyButton$5.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  45 actualOut D = { copyButton$5.!javax.swing.JComponent.aaHint, copyButton$5.!javax.swing.JComponent.lcdRenderingHint, copyButton$5.!setToolTipText( java.lang.String ) } U = { copyButton$5.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, copyButton$5.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, copyButton$5.!javax.swing.JComponent.clientProperties, copyButton$5.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, copyButton$5.!javax.swing.ToolTipManager.accessibilityKeyListener, copyButton$5.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  46 localDeclaration D = { pasteButton$6 } U = { toolBar$0.!add( javax.swing.Action ) }
  47 receiver D = {  } U = { toolBar$0 }
  48 methodCall D = {  } U = { this.pasteAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
  49 actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  50 assignment D = {  } U = { pasteButton$6.!setToolTipText( java.lang.String ) }
  51 receiver D = {  } U = { pasteButton$6 }
  52 methodCall D = {  } U = { $java.lang.String, pasteButton$6.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, pasteButton$6.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, pasteButton$6.!javax.swing.JComponent.clientProperties, pasteButton$6.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, pasteButton$6.!javax.swing.ToolTipManager.accessibilityKeyListener, pasteButton$6.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  53 actualOut D = { pasteButton$6.!javax.swing.JComponent.aaHint, pasteButton$6.!javax.swing.JComponent.lcdRenderingHint, pasteButton$6.!setToolTipText( java.lang.String ) } U = { pasteButton$6.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, pasteButton$6.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, pasteButton$6.!javax.swing.JComponent.clientProperties, pasteButton$6.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, pasteButton$6.!javax.swing.ToolTipManager.accessibilityKeyListener, pasteButton$6.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  54 assignment D = {  } U = { toolBar$0.!addSeparator( ) }
  55 receiver D = {  } U = { toolBar$0 }
  56 methodCall D = {  } U = {  } TO = javax.swing.JToolBar#addSeparator( )
  57 actualOut D = { toolBar$0.!addSeparator( ) } U = {  }
  58 localDeclaration D = { undoButton$7 } U = { toolBar$0.!add( javax.swing.Action ) }
  59 receiver D = {  } U = { toolBar$0 }
  60 methodCall D = {  } U = { this.undoAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
  61 actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  62 assignment D = {  } U = { undoButton$7.!setToolTipText( java.lang.String ) }
  63 receiver D = {  } U = { undoButton$7 }
  64 methodCall D = {  } U = { $java.lang.String, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener, undoButton$7.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, undoButton$7.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, undoButton$7.!javax.swing.JComponent.clientProperties, undoButton$7.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, undoButton$7.!javax.swing.ToolTipManager.accessibilityKeyListener, undoButton$7.!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  65 actualOut D = { undoButton$7.!javax.swing.JComponent.aaHint, undoButton$7.!javax.swing.JComponent.lcdRenderingHint, undoButton$7.!setToolTipText( java.lang.String ) } U = { toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener, undoButton$7.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, undoButton$7.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, undoButton$7.!javax.swing.JComponent.clientProperties, undoButton$7.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, undoButton$7.!javax.swing.ToolTipManager.accessibilityKeyListener, undoButton$7.!javax.swing.ToolTipManager.moveBeforeEnterListener }
  66 assignment D = {  } U = { this.undoAction.!setEnabled( boolean ) }
  67 receiver D = {  } U = { this.undoAction }
  68 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  69 actualOut D = { this.undoAction.!setEnabled( boolean ) } U = {  }
  70 localDeclaration D = { redoButton$8 } U = { toolBar$0.!add( javax.swing.Action ) }
  71 receiver D = {  } U = { toolBar$0 }
  72 methodCall D = {  } U = { this.redoAction, toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } TO = javax.swing.JToolBar#add( javax.swing.Action )
  73 actualOut D = { toolBar$0.!add( javax.swing.Action ), toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { toolBar$0.!javax.swing.AbstractButton.action, toolBar$0.!javax.swing.AbstractButton.actionPropertyChangeListener }
  74 assignment D = {  } U = { redoButton$8.!setToolTipText( java.lang.String ) }
  75 receiver D = {  } U = { redoButton$8 }
  76 methodCall D = {  } U = { $java.lang.String, redoButton$8.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, redoButton$8.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, redoButton$8.!javax.swing.JComponent.clientProperties, redoButton$8.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, redoButton$8.!javax.swing.ToolTipManager.accessibilityKeyListener, redoButton$8.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener } TO = javax.swing.JComponent#setToolTipText( java.lang.String )
  77 actualOut D = { redoButton$8.!javax.swing.JComponent.aaHint, redoButton$8.!javax.swing.JComponent.lcdRenderingHint, redoButton$8.!setToolTipText( java.lang.String ) } U = { redoButton$8.!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, redoButton$8.!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, redoButton$8.!javax.swing.JComponent.clientProperties, redoButton$8.!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, redoButton$8.!javax.swing.ToolTipManager.accessibilityKeyListener, redoButton$8.!javax.swing.ToolTipManager.moveBeforeEnterListener, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, toolBar$0.!add( javax.swing.Action ).!java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST, toolBar$0.!add( javax.swing.Action ).!javax.swing.JComponent.clientProperties, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.TOOL_TIP_MANAGER_KEY, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.accessibilityKeyListener, toolBar$0.!add( javax.swing.Action ).!javax.swing.ToolTipManager.moveBeforeEnterListener }
  78 assignment D = {  } U = { redoButton$8.!setEnabled( boolean ) }
  79 receiver D = {  } U = { redoButton$8 }
  80 methodCall D = {  } U = { redoButton$8.!javax.swing.AbstractButton.model, toolBar$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setEnabled( boolean )
  81 actualOut D = { redoButton$8.!setEnabled( boolean ) } U = { redoButton$8.!javax.swing.AbstractButton.model, toolBar$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
  82 methodExit
  83 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#RECENT_FILES ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES }
   2 fieldExit
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#addRecentFile( java.lang.String ) ]
   1 formalIn D = { filename$0 } U = {  }
   2 localDeclaration D = { offset$1 } U = { this.recentFiles.!indexOf( java.lang.Object ) }
   3 receiver D = {  } U = { this.recentFiles }
   4 methodCall D = {  } U = { filename$0 } TO = java.util.List#indexOf( java.lang.Object )
   5 actualOut D = { this.recentFiles.!indexOf( java.lang.Object ) } U = {  }
   6 ifSt D = {  } U = { offset$1 }
   7 assignment D = {  } U = { this.recentFiles.!add( int java.lang.Object ) }
   8 receiver D = {  } U = { this.recentFiles }
   9 methodCall D = {  } U = { filename$0 } TO = java.util.List#add( int java.lang.Object )
  10 actualOut D = { this.recentFiles.!add( int java.lang.Object ) } U = {  }
  11 ifSt D = {  } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES, this.recentFiles.!size( ) }
  12 receiver D = {  } U = { this.recentFiles }
  13 methodCall D = {  } U = {  } TO = java.util.List#size( )
  14 actualOut D = { this.recentFiles.!size( ) } U = {  }
  15 assignment D = {  } U = { this.recentFiles.!remove( int ) }
  16 receiver D = {  } U = { this.recentFiles }
  17 methodCall D = {  } U = { jp.ac.ritsumei.cs.draw.DrawMenu.RECENT_FILES } TO = java.util.List#remove( int )
  18 actualOut D = { this.recentFiles.!remove( int ) } U = {  }
  19 merge ifSt(11)
  20 assignment D = {  } U = { this.recentFiles.!remove( int ) }
  21 receiver D = {  } U = { this.recentFiles }
  22 methodCall D = {  } U = { offset$1 } TO = java.util.List#remove( int )
  23 actualOut D = { this.recentFiles.!remove( int ) } U = {  }
  24 assignment D = {  } U = { this.recentFiles.!add( int java.lang.Object ) }
  25 receiver D = {  } U = { this.recentFiles }
  26 methodCall D = {  } U = { filename$0 } TO = java.util.List#add( int java.lang.Object )
  27 actualOut D = { this.recentFiles.!add( int java.lang.Object ) } U = {  }
  28 merge ifSt(6)
  29 methodExit
  30 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#fileListMenu ]
   1 fieldDeclaration D = { this.fileListMenu } U = { this.fileListMenu }
   2 fieldExit
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { canvas$0 } U = {  }
   3 formalIn D = { filename$1 } U = {  }
   4 localDeclaration D = { result$2 } U = { canvas$0.!getFigureManager( ).!store( java.lang.String ) }
   5 receiver D = {  } U = { canvas$0.!getFigureManager( ) }
   6 receiver D = {  } U = { canvas$0 }
   7 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
   8 actualOut D = { canvas$0.!getFigureManager( ) } U = {  }
   9 methodCall D = {  } U = { System.err, canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, canvas$0.!getFigureManager( ).figures, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY } TO = jp.ac.ritsumei.cs.draw.FigureManager#store( java.lang.String )
  10 actualIn D = {  } U = { filename$1 }
  11 actualOut D = { canvas$0.!getFigureManager( ).!store( java.lang.String ), canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count } U = { System.err, canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, canvas$0.!getFigureManager( ).figures, canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY }
  12 ifSt D = {  } U = { result$2 }
  13 assignment D = {  } U = { this.!showMessageDialog( java.awt.Component java.lang.Object ) }
  14 receiver D = {  } U = {  }
  15 methodCall D = {  } U = { $java.lang.String, filename$1, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showMessageDialog( java.awt.Component java.lang.Object )
  16 actualOut D = { this.!showMessageDialog( java.awt.Component java.lang.Object ) } U = {  }
  17 returnSt D = { $_ } U = {  }
  18 merge ifSt(12)
  19 assignment D = {  } U = { canvas$0.!setChanged( boolean ) }
  20 receiver D = {  } U = { canvas$0 }
  21 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setChanged( boolean )
  22 actualIn D = {  } U = {  }
  23 actualOut D = { canvas$0.!setChanged( boolean ) } U = {  }
  24 returnSt D = { $_ } U = {  }
  25 methodExit
  26 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#clipboard ]
   1 fieldDeclaration D = { this.clipboard } U = { this.clipboard }
   2 fieldExit
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#initEditActions( ) ]
   1 assignment D = { this.undoAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
   2 receiver D = {  } U = {  }
   3 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
   4 actualIn D = {  } U = { $java.lang.String }
   5 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
   6 receiver D = {  } U = {  }
   7 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
   8 receiver D = {  } U = { this.!getClass( ) }
   9 receiver D = {  } U = {  }
  10 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  11 actualOut D = { this.!getClass( ) } U = {  }
  12 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  13 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
  14 actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  15 actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  16 assignment D = { this.redoAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
  17 receiver D = {  } U = {  }
  18 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  19 actualIn D = {  } U = { $java.lang.String }
  20 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
  21 receiver D = {  } U = {  }
  22 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  23 receiver D = {  } U = { this.!getClass( ) }
  24 receiver D = {  } U = {  }
  25 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  26 actualOut D = { this.!getClass( ) } U = {  }
  27 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  28 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
  29 actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  30 actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  31 assignment D = { this.cutAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
  32 receiver D = {  } U = {  }
  33 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  34 actualIn D = {  } U = { $java.lang.String }
  35 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
  36 receiver D = {  } U = {  }
  37 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  38 receiver D = {  } U = { this.!getClass( ) }
  39 receiver D = {  } U = {  }
  40 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  41 actualOut D = { this.!getClass( ) } U = {  }
  42 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  43 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
  44 actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  45 actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  46 assignment D = { this.copyAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
  47 receiver D = {  } U = {  }
  48 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  49 actualIn D = {  } U = { $java.lang.String }
  50 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
  51 receiver D = {  } U = {  }
  52 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  53 receiver D = {  } U = { this.!getClass( ) }
  54 receiver D = {  } U = {  }
  55 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  56 actualOut D = { this.!getClass( ) } U = {  }
  57 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  58 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
  59 actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  60 actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  61 assignment D = { this.pasteAction } U = { .!AbstractAction( java.lang.String javax.swing.Icon ) }
  62 receiver D = {  } U = {  }
  63 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String javax.swing.Icon )
  64 actualIn D = {  } U = { $java.lang.String }
  65 actualIn D = {  } U = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ) }
  66 receiver D = {  } U = {  }
  67 constructorCall D = {  } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.!getClass( ).!getResource( java.lang.String ) } TO = javax.swing.ImageIcon#ImageIcon( java.net.URL )
  68 receiver D = {  } U = { this.!getClass( ) }
  69 receiver D = {  } U = {  }
  70 methodCall D = {  } U = {  } TO = java.lang.Object#getClass( )
  71 actualOut D = { this.!getClass( ) } U = {  }
  72 methodCall D = {  } U = { $java.lang.String, this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name } TO = java.lang.Class#getResource( java.lang.String )
  73 actualOut D = { this.!getClass( ).!getResource( java.lang.String ) } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name }
  74 actualOut D = { javax.swing.ImageIcon.!ImageIcon( java.net.URL ), javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, javax.swing.ImageIcon.!javax.swing.ImageIcon.description, javax.swing.ImageIcon.!javax.swing.ImageIcon.height, javax.swing.ImageIcon.!javax.swing.ImageIcon.image, javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, javax.swing.ImageIcon.!javax.swing.ImageIcon.location, javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { javax.swing.ImageIcon.!java.net.URL.handler, javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  75 actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String javax.swing.Icon ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  76 assignment D = { this.deleteAction } U = { .!AbstractAction( java.lang.String ) }
  77 receiver D = {  } U = {  }
  78 constructorCall D = {  } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled } TO = javax.swing.AbstractAction#AbstractAction( java.lang.String )
  79 actualIn D = {  } U = { $java.lang.String }
  80 actualOut D = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled, .!AbstractAction( java.lang.String ) } U = { !javax.swing.AbstractAction.arrayTable, !javax.swing.AbstractAction.enabled }
  81 methodExit
  82 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#updateRedoState( ) ]
   1 localDeclaration D = { canvas$0 } U = { this.tabbedCanvas.!getCurrentCanvas( ) }
   2 receiver D = {  } U = { this.tabbedCanvas }
   3 methodCall D = {  } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCurrentCanvas( )
   4 actualOut D = { this.tabbedCanvas.!getCurrentCanvas( ) } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
   5 ifSt D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).changed, this.tabbedCanvas.!getCurrentCanvas( ).curX, this.tabbedCanvas.!getCurrentCanvas( ).curY, this.tabbedCanvas.!getCurrentCanvas( ).currentFigure, this.tabbedCanvas.!getCurrentCanvas( ).figureManager, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure, this.tabbedCanvas.!getCurrentCanvas( ).isGrabMode, this.tabbedCanvas.!getCurrentCanvas( ).menu, this.tabbedCanvas.!getCurrentCanvas( ).selector, this.tabbedCanvas.!getCurrentCanvas( ).support, this.tabbedCanvas.!getCurrentCanvas( ).undoManager }
   6 returnSt D = {  } U = {  }
   7 merge ifSt(5)
   8 localDeclaration D = { undoManager$1 } U = { canvas$0.!getUndoManager( ) }
   9 receiver D = {  } U = { canvas$0 }
  10 methodCall D = {  } U = { canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).undoManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getUndoManager( )
  11 actualOut D = { canvas$0.!getUndoManager( ) } U = { canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).undoManager }
  12 ifSt D = {  } U = { undoManager$1, undoManager$1.!canRedo( ) }
  13 receiver D = {  } U = { undoManager$1 }
  14 methodCall D = {  } U = { canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.edits, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.inProgress, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.indexOfNextAdd, undoManager$1.!javax.swing.undo.UndoManager.edits, undoManager$1.!javax.swing.undo.UndoManager.inProgress, undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd } TO = javax.swing.undo.UndoManager#canRedo( )
  15 actualOut D = { undoManager$1.!canRedo( ) } U = { canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.edits, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.inProgress, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.indexOfNextAdd, undoManager$1.!javax.swing.undo.UndoManager.edits, undoManager$1.!javax.swing.undo.UndoManager.inProgress, undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd }
  16 assignment D = {  } U = { this.redoAction.!setEnabled( boolean ) }
  17 receiver D = {  } U = { this.redoAction }
  18 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  19 actualOut D = { this.redoAction.!setEnabled( boolean ) } U = {  }
  20 assignment D = {  } U = { this.redoAction.!setEnabled( boolean ) }
  21 receiver D = {  } U = { this.redoAction }
  22 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  23 actualOut D = { this.redoAction.!setEnabled( boolean ) } U = {  }
  24 merge ifSt(12)
  25 methodExit
  26 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#directory ]
   1 fieldDeclaration D = { this.directory } U = { this.directory }
   2 fieldExit
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#tabbedCanvas ]
   1 fieldDeclaration D = { this.tabbedCanvas } U = { this.tabbedCanvas }
   2 fieldExit
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#fileListener ]
   1 fieldDeclaration D = { this.fileListener } U = { this.fileListener }
   2 fieldExit
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#autoSave ]
   1 fieldDeclaration D = { this.autoSave } U = { this.autoSave }
   2 fieldExit
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#saveAction ]
   1 fieldDeclaration D = { this.saveAction } U = { this.saveAction }
   2 fieldExit
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#initMenuBar( javax.swing.JMenuBar ) ]
   1 formalIn D = { menuBar$0 } U = {  }
   2 localDeclaration D = { fileMenu$1 } U = { javax.swing.JMenu.!JMenu( java.lang.String ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenu#JMenu( java.lang.String )
   5 actualOut D = { javax.swing.JMenu.!JMenu( java.lang.String ), javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, javax.swing.JMenu.!javax.swing.JMenu.menuEvent } U = {  }
   6 assignment D = {  } U = { fileMenu$1.!setMnemonic( char ) }
   7 receiver D = {  } U = { fileMenu$1 }
   8 methodCall D = {  } U = { fileMenu$1.!javax.swing.AbstractButton.model, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
   9 actualOut D = { fileMenu$1.!setMnemonic( char ) } U = { fileMenu$1.!javax.swing.AbstractButton.model, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model }
  10 assignment D = {  } U = { menuBar$0.!add( javax.swing.JMenu ) }
  11 receiver D = {  } U = { menuBar$0 }
  12 methodCall D = {  } U = { fileMenu$1 } TO = javax.swing.JMenuBar#add( javax.swing.JMenu )
  13 actualOut D = { menuBar$0.!add( javax.swing.JMenu ) } U = {  }
  14 assignment D = {  } U = { this.!initFileActions( ) }
  15 receiver D = {  } U = {  }
  16 methodCall D = {  } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initFileActions( )
  17 actualOut D = { this.!initFileActions( ), this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.description, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.height, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.location, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  18 assignment D = {  } U = { this.!initFileMenu( javax.swing.JMenu ) }
  19 receiver D = {  } U = {  }
  20 methodCall D = {  } U = { KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK, KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK, KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK, this.closeItem$3.!javax.swing.AbstractButton.listenerList, this.closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.emptyListItem$9.!javax.swing.AbstractButton.model, this.exitItem$13.!javax.swing.AbstractButton.listenerList, this.fileListMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newAction, this.newItem$1.!java.awt.Component.changeSupport, this.newItem$1.!java.awt.Component.height, this.newItem$1.!java.awt.Component.width, this.newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.newItem$1.!javax.swing.AbstractButton.accessibleContext, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.AbstractButton.model, this.newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openAction, this.openItem$2.!javax.swing.AbstractButton.accessibleContext, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.saveAction, this.saveAsItem$6.!javax.swing.AbstractButton.listenerList, this.saveItem$5.!javax.swing.AbstractButton.accessibleContext, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initFileMenu( javax.swing.JMenu )
  21 actualIn D = {  } U = { fileMenu$1 }
  22 actualOut D = { this.!initFileMenu( javax.swing.JMenu ), this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, this.javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, this.javax.swing.JMenu.!javax.swing.JMenu.menuEvent, this.javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator } U = { KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK, KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK, KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK, this.closeItem$3.!javax.swing.AbstractButton.listenerList, this.closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, this.closeItem$3.!javax.swing.event.EventListenerList.listenerList, this.emptyListItem$9.!javax.swing.AbstractButton.model, this.exitItem$13.!javax.swing.AbstractButton.listenerList, this.fileListMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.newAction, this.newItem$1.!java.awt.Component.changeSupport, this.newItem$1.!java.awt.Component.height, this.newItem$1.!java.awt.Component.width, this.newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.newItem$1.!javax.swing.AbstractButton.accessibleContext, this.newItem$1.!javax.swing.AbstractButton.defaultIcon, this.newItem$1.!javax.swing.AbstractButton.disabledIcon, this.newItem$1.!javax.swing.AbstractButton.model, this.newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.newItem$1.!javax.swing.JMenuItem.accelerator, this.openAction, this.openItem$2.!javax.swing.AbstractButton.accessibleContext, this.openItem$2.!javax.swing.AbstractButton.defaultIcon, this.openItem$2.!javax.swing.AbstractButton.disabledIcon, this.openItem$2.!javax.swing.JMenuItem.accelerator, this.saveAction, this.saveAsItem$6.!javax.swing.AbstractButton.listenerList, this.saveItem$5.!javax.swing.AbstractButton.accessibleContext, this.saveItem$5.!javax.swing.AbstractButton.defaultIcon, this.saveItem$5.!javax.swing.AbstractButton.disabledIcon, this.saveItem$5.!javax.swing.JMenuItem.accelerator }
  23 localDeclaration D = { editMenu$2 } U = { javax.swing.JMenu.!JMenu( java.lang.String ) }
  24 receiver D = {  } U = {  }
  25 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenu#JMenu( java.lang.String )
  26 actualOut D = { javax.swing.JMenu.!JMenu( java.lang.String ), javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, javax.swing.JMenu.!javax.swing.JMenu.menuEvent } U = {  }
  27 assignment D = {  } U = { editMenu$2.!setMnemonic( char ) }
  28 receiver D = {  } U = { editMenu$2 }
  29 methodCall D = {  } U = { editMenu$2.!javax.swing.AbstractButton.model, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  30 actualOut D = { editMenu$2.!setMnemonic( char ) } U = { editMenu$2.!javax.swing.AbstractButton.model, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model }
  31 assignment D = {  } U = { menuBar$0.!add( javax.swing.JMenu ) }
  32 receiver D = {  } U = { menuBar$0 }
  33 methodCall D = {  } U = { editMenu$2 } TO = javax.swing.JMenuBar#add( javax.swing.JMenu )
  34 actualOut D = { menuBar$0.!add( javax.swing.JMenu ) } U = {  }
  35 assignment D = {  } U = { this.!initEditActions( ) }
  36 receiver D = {  } U = {  }
  37 methodCall D = {  } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initEditActions( )
  38 actualOut D = { this.!initEditActions( ), this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.accessibleContext, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.description, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.height, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.loadStatus, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.location, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.width } U = { this.!getClass( ).!java.lang.Class.classLoader, this.!getClass( ).!java.lang.Class.module, this.!getClass( ).!java.lang.ClassLoader.parent, this.!getClass( ).!java.lang.Module.name, this..!javax.swing.AbstractAction.arrayTable, this..!javax.swing.AbstractAction.enabled, this.javax.swing.ImageIcon.!java.net.URL.handler, this.javax.swing.ImageIcon.!javax.swing.ImageIcon.image }
  39 assignment D = {  } U = { this.!initEditMenu( javax.swing.JMenu ) }
  40 receiver D = {  } U = {  }
  41 methodCall D = {  } U = { KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK, KeyEvent.VK_DELETE, KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK, KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK, KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK, KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK, this.copyAction, this.copyItem$4.!javax.swing.AbstractButton.accessibleContext, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutAction, this.cutItem$3.!javax.swing.AbstractButton.accessibleContext, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.AbstractButton.model, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteAction, this.deleteItem$6.!javax.swing.AbstractButton.accessibleContext, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.pasteAction, this.pasteItem$5.!javax.swing.AbstractButton.accessibleContext, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoAction, this.redoItem$2.!javax.swing.AbstractButton.accessibleContext, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.undoAction, this.undoItem$1.!java.awt.Component.changeSupport, this.undoItem$1.!java.awt.Component.height, this.undoItem$1.!java.awt.Component.width, this.undoItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.undoItem$1.!javax.swing.AbstractButton.accessibleContext, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.AbstractButton.model, this.undoItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.undoItem$1.!javax.swing.JMenuItem.accelerator } TO = jp.ac.ritsumei.cs.draw.DrawMenu#initEditMenu( javax.swing.JMenu )
  42 actualIn D = {  } U = { editMenu$2 }
  43 actualOut D = { this.!initEditMenu( javax.swing.JMenu ), this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.JMenuItem.accelerator } U = { KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK, KeyEvent.VK_DELETE, KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK, KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK, KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK, KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK, this.copyAction, this.copyItem$4.!javax.swing.AbstractButton.accessibleContext, this.copyItem$4.!javax.swing.AbstractButton.defaultIcon, this.copyItem$4.!javax.swing.AbstractButton.disabledIcon, this.copyItem$4.!javax.swing.JMenuItem.accelerator, this.cutAction, this.cutItem$3.!javax.swing.AbstractButton.accessibleContext, this.cutItem$3.!javax.swing.AbstractButton.defaultIcon, this.cutItem$3.!javax.swing.AbstractButton.disabledIcon, this.cutItem$3.!javax.swing.AbstractButton.model, this.cutItem$3.!javax.swing.JMenuItem.accelerator, this.deleteAction, this.deleteItem$6.!javax.swing.AbstractButton.accessibleContext, this.deleteItem$6.!javax.swing.AbstractButton.defaultIcon, this.deleteItem$6.!javax.swing.AbstractButton.disabledIcon, this.deleteItem$6.!javax.swing.JMenuItem.accelerator, this.menu$0.!javax.swing.AbstractButton.action, this.menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, this.menu$0.!javax.swing.JMenu.popupMenu, this.pasteAction, this.pasteItem$5.!javax.swing.AbstractButton.accessibleContext, this.pasteItem$5.!javax.swing.AbstractButton.defaultIcon, this.pasteItem$5.!javax.swing.AbstractButton.disabledIcon, this.pasteItem$5.!javax.swing.JMenuItem.accelerator, this.redoAction, this.redoItem$2.!javax.swing.AbstractButton.accessibleContext, this.redoItem$2.!javax.swing.AbstractButton.defaultIcon, this.redoItem$2.!javax.swing.AbstractButton.disabledIcon, this.redoItem$2.!javax.swing.JMenuItem.accelerator, this.undoAction, this.undoItem$1.!java.awt.Component.changeSupport, this.undoItem$1.!java.awt.Component.height, this.undoItem$1.!java.awt.Component.width, this.undoItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, this.undoItem$1.!javax.swing.AbstractButton.accessibleContext, this.undoItem$1.!javax.swing.AbstractButton.defaultIcon, this.undoItem$1.!javax.swing.AbstractButton.disabledIcon, this.undoItem$1.!javax.swing.AbstractButton.model, this.undoItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, this.undoItem$1.!javax.swing.JMenuItem.accelerator }
  44 localDeclaration D = { windowMenu$3 } U = { javax.swing.JMenu.!JMenu( java.lang.String ) }
  45 receiver D = {  } U = {  }
  46 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenu#JMenu( java.lang.String )
  47 actualOut D = { javax.swing.JMenu.!JMenu( java.lang.String ), javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, javax.swing.JMenu.!javax.swing.JMenu.menuEvent } U = {  }
  48 assignment D = {  } U = { windowMenu$3.!setMnemonic( char ) }
  49 receiver D = {  } U = { windowMenu$3 }
  50 methodCall D = {  } U = { javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model, windowMenu$3.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  51 actualOut D = { windowMenu$3.!setMnemonic( char ) } U = { javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model, windowMenu$3.!javax.swing.AbstractButton.model }
  52 assignment D = {  } U = { menuBar$0.!add( javax.swing.JMenu ) }
  53 receiver D = {  } U = { menuBar$0 }
  54 methodCall D = {  } U = { windowMenu$3 } TO = javax.swing.JMenuBar#add( javax.swing.JMenu )
  55 actualOut D = { menuBar$0.!add( javax.swing.JMenu ) } U = {  }
  56 assignment D = { this.windowListener } U = { .!ActionListener( ) }
  57 receiver D = {  } U = {  }
  58 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
  59 actualOut D = { .!ActionListener( ) } U = {  }
  60 assignment D = {  } U = { windowMenu$3.!addMenuListener( javax.swing.event.MenuListener ) }
  61 receiver D = {  } U = { windowMenu$3 }
  62 methodCall D = {  } U = { .!MenuListener( ), javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.JMenu.listenerList, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.event.EventListenerList.listenerList, windowMenu$3.!javax.swing.JMenu.listenerList, windowMenu$3.!javax.swing.event.EventListenerList.NULL_ARRAY, windowMenu$3.!javax.swing.event.EventListenerList.listenerList } TO = javax.swing.JMenu#addMenuListener( javax.swing.event.MenuListener )
  63 receiver D = {  } U = {  }
  64 constructorCall D = {  } U = {  } TO = javax.swing.event.MenuListener#MenuListener( )
  65 actualOut D = { .!MenuListener( ) } U = {  }
  66 actualOut D = { windowMenu$3.!addMenuListener( javax.swing.event.MenuListener ), windowMenu$3.!javax.swing.event.EventListenerList.listenerList } U = { javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.JMenu.listenerList, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.event.EventListenerList.listenerList, windowMenu$3.!javax.swing.JMenu.listenerList, windowMenu$3.!javax.swing.event.EventListenerList.NULL_ARRAY, windowMenu$3.!javax.swing.event.EventListenerList.listenerList }
  67 methodExit
  68 formalOut D = {  } U = { $_ }
  16+ actualOutByFieldAccess D = { this.newAction } U = {  }
  16+ actualOutByFieldAccess D = { this.openAction } U = {  }
  16+ actualOutByFieldAccess D = { this.saveAction } U = {  }
  20+ actualOutByFieldAccess D = { this.fileListMenu } U = {  }
  20+ actualOutByFieldAccess D = { this.fileListener } U = {  }
  37+ actualOutByFieldAccess D = { this.copyAction } U = {  }
  37+ actualOutByFieldAccess D = { this.cutAction } U = {  }
  37+ actualOutByFieldAccess D = { this.deleteAction } U = {  }
  37+ actualOutByFieldAccess D = { this.pasteAction } U = {  }
  37+ actualOutByFieldAccess D = { this.redoAction } U = {  }
  37+ actualOutByFieldAccess D = { this.undoAction } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#pasteAction ]
   1 fieldDeclaration D = { this.pasteAction } U = { this.pasteAction }
   2 fieldExit
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#initFileMenu( javax.swing.JMenu ) ]
   1 formalIn D = { menu$0 } U = {  }
   2 localDeclaration D = { newItem$1 } U = { menu$0.!add( javax.swing.Action ) }
   3 receiver D = {  } U = { menu$0 }
   4 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.newAction } TO = javax.swing.JMenu#add( javax.swing.Action )
   5 actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
   6 assignment D = {  } U = { newItem$1.!setMnemonic( char ) }
   7 receiver D = {  } U = { newItem$1 }
   8 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, newItem$1.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
   9 actualOut D = { newItem$1.!setMnemonic( char ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, newItem$1.!javax.swing.AbstractButton.model }
  10 assignment D = {  } U = { newItem$1.!setIcon( javax.swing.Icon ) }
  11 receiver D = {  } U = { newItem$1 }
  12 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, newItem$1.!java.awt.Component.changeSupport, newItem$1.!java.awt.Component.height, newItem$1.!java.awt.Component.width, newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, newItem$1.!javax.swing.AbstractButton.accessibleContext, newItem$1.!javax.swing.AbstractButton.defaultIcon, newItem$1.!javax.swing.AbstractButton.disabledIcon, newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  13 actualOut D = { newItem$1.!javax.swing.AbstractButton.defaultIcon, newItem$1.!javax.swing.AbstractButton.disabledIcon, newItem$1.!setIcon( javax.swing.Icon ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, newItem$1.!java.awt.Component.changeSupport, newItem$1.!java.awt.Component.height, newItem$1.!java.awt.Component.width, newItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, newItem$1.!javax.swing.AbstractButton.accessibleContext, newItem$1.!javax.swing.AbstractButton.defaultIcon, newItem$1.!javax.swing.AbstractButton.disabledIcon, newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled }
  14 assignment D = {  } U = { newItem$1.!setAccelerator( javax.swing.KeyStroke ) }
  15 receiver D = {  } U = { newItem$1 }
  16 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, newItem$1.!java.awt.Component.changeSupport, newItem$1.!java.awt.Component.height, newItem$1.!java.awt.Component.width, newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, newItem$1.!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { KeyEvent.VK_N, KeyEvent.VK_N.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  19 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
  20 actualOut D = { newItem$1.!javax.swing.JMenuItem.accelerator, newItem$1.!setAccelerator( javax.swing.KeyStroke ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, newItem$1.!java.awt.Component.changeSupport, newItem$1.!java.awt.Component.height, newItem$1.!java.awt.Component.width, newItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, newItem$1.!javax.swing.JMenuItem.accelerator }
  21 localDeclaration D = { openItem$2 } U = { menu$0.!add( javax.swing.Action ) }
  22 receiver D = {  } U = { menu$0 }
  23 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.openAction } TO = javax.swing.JMenu#add( javax.swing.Action )
  24 actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
  25 assignment D = {  } U = { openItem$2.!setMnemonic( char ) }
  26 receiver D = {  } U = { openItem$2 }
  27 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, openItem$2.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  28 actualOut D = { openItem$2.!setMnemonic( char ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, openItem$2.!javax.swing.AbstractButton.model }
  29 assignment D = {  } U = { openItem$2.!setIcon( javax.swing.Icon ) }
  30 receiver D = {  } U = { openItem$2 }
  31 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, openItem$2.!java.awt.Component.changeSupport, openItem$2.!java.awt.Component.height, openItem$2.!java.awt.Component.width, openItem$2.!javax.accessibility.AccessibleContext.accessibleChangeSupport, openItem$2.!javax.swing.AbstractButton.accessibleContext, openItem$2.!javax.swing.AbstractButton.defaultIcon, openItem$2.!javax.swing.AbstractButton.disabledIcon, openItem$2.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  32 actualOut D = { openItem$2.!javax.swing.AbstractButton.defaultIcon, openItem$2.!javax.swing.AbstractButton.disabledIcon, openItem$2.!setIcon( javax.swing.Icon ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, openItem$2.!java.awt.Component.changeSupport, openItem$2.!java.awt.Component.height, openItem$2.!java.awt.Component.width, openItem$2.!javax.accessibility.AccessibleContext.accessibleChangeSupport, openItem$2.!javax.swing.AbstractButton.accessibleContext, openItem$2.!javax.swing.AbstractButton.defaultIcon, openItem$2.!javax.swing.AbstractButton.disabledIcon, openItem$2.!javax.swing.JComponent.revalidateRunnableScheduled }
  33 assignment D = {  } U = { openItem$2.!setAccelerator( javax.swing.KeyStroke ) }
  34 receiver D = {  } U = { openItem$2 }
  35 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, openItem$2.!java.awt.Component.changeSupport, openItem$2.!java.awt.Component.height, openItem$2.!java.awt.Component.width, openItem$2.!javax.swing.JComponent.revalidateRunnableScheduled, openItem$2.!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  36 receiver D = {  } U = {  }
  37 methodCall D = {  } U = { KeyEvent.VK_O, KeyEvent.VK_O.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  38 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
  39 actualOut D = { openItem$2.!javax.swing.JMenuItem.accelerator, openItem$2.!setAccelerator( javax.swing.KeyStroke ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, openItem$2.!java.awt.Component.changeSupport, openItem$2.!java.awt.Component.height, openItem$2.!java.awt.Component.width, openItem$2.!javax.swing.JComponent.revalidateRunnableScheduled, openItem$2.!javax.swing.JMenuItem.accelerator }
  40 localDeclaration D = { closeItem$3 } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ) }
  41 receiver D = {  } U = {  }
  42 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
  43 actualOut D = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ), javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged } U = {  }
  44 assignment D = {  } U = { closeItem$3.!setMnemonic( char ) }
  45 receiver D = {  } U = { closeItem$3 }
  46 methodCall D = {  } U = { closeItem$3.!javax.swing.AbstractButton.model, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  47 actualOut D = { closeItem$3.!setMnemonic( char ) } U = { closeItem$3.!javax.swing.AbstractButton.model, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model }
  48 assignment D = {  } U = { menu$0.!add( javax.swing.JMenuItem ) }
  49 receiver D = {  } U = { menu$0 }
  50 methodCall D = {  } U = { closeItem$3, menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
  51 actualOut D = { menu$0.!add( javax.swing.JMenuItem ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
  52 assignment D = {  } U = { closeItem$3.!addActionListener( java.awt.event.ActionListener ) }
  53 receiver D = {  } U = { closeItem$3 }
  54 methodCall D = {  } U = { .!ActionListener( ), closeItem$3.!javax.swing.AbstractButton.listenerList, closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, closeItem$3.!javax.swing.event.EventListenerList.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList } TO = javax.swing.AbstractButton#addActionListener( java.awt.event.ActionListener )
  55 receiver D = {  } U = {  }
  56 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
  57 actualOut D = { .!ActionListener( ) } U = {  }
  58 actualOut D = { closeItem$3.!addActionListener( java.awt.event.ActionListener ), closeItem$3.!javax.swing.event.EventListenerList.listenerList } U = { closeItem$3.!javax.swing.AbstractButton.listenerList, closeItem$3.!javax.swing.event.EventListenerList.NULL_ARRAY, closeItem$3.!javax.swing.event.EventListenerList.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList }
  59 assignment D = {  } U = { menu$0.!addSeparator( ) }
  60 receiver D = {  } U = { menu$0 }
  61 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#addSeparator( )
  62 actualOut D = { menu$0.!addSeparator( ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
  63 localDeclaration D = { saveItem$5 } U = { menu$0.!add( javax.swing.Action ) }
  64 receiver D = {  } U = { menu$0 }
  65 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.saveAction } TO = javax.swing.JMenu#add( javax.swing.Action )
  66 actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
  67 assignment D = {  } U = { saveItem$5.!setMnemonic( char ) }
  68 receiver D = {  } U = { saveItem$5 }
  69 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, saveItem$5.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  70 actualOut D = { saveItem$5.!setMnemonic( char ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, saveItem$5.!javax.swing.AbstractButton.model }
  71 assignment D = {  } U = { saveItem$5.!setIcon( javax.swing.Icon ) }
  72 receiver D = {  } U = { saveItem$5 }
  73 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, saveItem$5.!java.awt.Component.changeSupport, saveItem$5.!java.awt.Component.height, saveItem$5.!java.awt.Component.width, saveItem$5.!javax.accessibility.AccessibleContext.accessibleChangeSupport, saveItem$5.!javax.swing.AbstractButton.accessibleContext, saveItem$5.!javax.swing.AbstractButton.defaultIcon, saveItem$5.!javax.swing.AbstractButton.disabledIcon, saveItem$5.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  74 actualOut D = { saveItem$5.!javax.swing.AbstractButton.defaultIcon, saveItem$5.!javax.swing.AbstractButton.disabledIcon, saveItem$5.!setIcon( javax.swing.Icon ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, saveItem$5.!java.awt.Component.changeSupport, saveItem$5.!java.awt.Component.height, saveItem$5.!java.awt.Component.width, saveItem$5.!javax.accessibility.AccessibleContext.accessibleChangeSupport, saveItem$5.!javax.swing.AbstractButton.accessibleContext, saveItem$5.!javax.swing.AbstractButton.defaultIcon, saveItem$5.!javax.swing.AbstractButton.disabledIcon, saveItem$5.!javax.swing.JComponent.revalidateRunnableScheduled }
  75 assignment D = {  } U = { saveItem$5.!setAccelerator( javax.swing.KeyStroke ) }
  76 receiver D = {  } U = { saveItem$5 }
  77 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, saveItem$5.!java.awt.Component.changeSupport, saveItem$5.!java.awt.Component.height, saveItem$5.!java.awt.Component.width, saveItem$5.!javax.swing.JComponent.revalidateRunnableScheduled, saveItem$5.!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  78 receiver D = {  } U = {  }
  79 methodCall D = {  } U = { KeyEvent.VK_S, KeyEvent.VK_S.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  80 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
  81 actualOut D = { saveItem$5.!javax.swing.JMenuItem.accelerator, saveItem$5.!setAccelerator( javax.swing.KeyStroke ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, saveItem$5.!java.awt.Component.changeSupport, saveItem$5.!java.awt.Component.height, saveItem$5.!java.awt.Component.width, saveItem$5.!javax.swing.JComponent.revalidateRunnableScheduled, saveItem$5.!javax.swing.JMenuItem.accelerator }
  82 localDeclaration D = { saveAsItem$6 } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ) }
  83 receiver D = {  } U = {  }
  84 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
  85 actualOut D = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ), javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged } U = {  }
  86 assignment D = {  } U = { saveAsItem$6.!setMnemonic( char ) }
  87 receiver D = {  } U = { saveAsItem$6 }
  88 methodCall D = {  } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model, saveAsItem$6.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  89 actualOut D = { saveAsItem$6.!setMnemonic( char ) } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model, saveAsItem$6.!javax.swing.AbstractButton.model }
  90 assignment D = {  } U = { menu$0.!add( javax.swing.JMenuItem ) }
  91 receiver D = {  } U = { menu$0 }
  92 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu, saveAsItem$6 } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
  93 actualOut D = { menu$0.!add( javax.swing.JMenuItem ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
  94 assignment D = {  } U = { saveAsItem$6.!addActionListener( java.awt.event.ActionListener ) }
  95 receiver D = {  } U = { saveAsItem$6 }
  96 methodCall D = {  } U = { .!ActionListener( ), javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList, saveAsItem$6.!javax.swing.AbstractButton.listenerList, saveAsItem$6.!javax.swing.event.EventListenerList.NULL_ARRAY, saveAsItem$6.!javax.swing.event.EventListenerList.listenerList } TO = javax.swing.AbstractButton#addActionListener( java.awt.event.ActionListener )
  97 receiver D = {  } U = {  }
  98 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
  99 actualOut D = { .!ActionListener( ) } U = {  }
 100 actualOut D = { saveAsItem$6.!addActionListener( java.awt.event.ActionListener ), saveAsItem$6.!javax.swing.event.EventListenerList.listenerList } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList, saveAsItem$6.!javax.swing.AbstractButton.listenerList, saveAsItem$6.!javax.swing.event.EventListenerList.NULL_ARRAY, saveAsItem$6.!javax.swing.event.EventListenerList.listenerList }
 101 assignment D = {  } U = { menu$0.!addSeparator( ) }
 102 receiver D = {  } U = { menu$0 }
 103 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#addSeparator( )
 104 actualOut D = { menu$0.!addSeparator( ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
 105 assignment D = { this.fileListMenu } U = { javax.swing.JMenu.!JMenu( java.lang.String ) }
 106 receiver D = {  } U = {  }
 107 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenu#JMenu( java.lang.String )
 108 actualOut D = { javax.swing.JMenu.!JMenu( java.lang.String ), javax.swing.JMenu.!javax.swing.JMenu.customMenuLocation, javax.swing.JMenu.!javax.swing.JMenu.menuChangeListener, javax.swing.JMenu.!javax.swing.JMenu.menuEvent } U = {  }
 109 assignment D = {  } U = { this.fileListMenu.!setMnemonic( char ) }
 110 receiver D = {  } U = { this.fileListMenu }
 111 methodCall D = {  } U = { javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model, this.fileListMenu.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
 112 actualOut D = { this.fileListMenu.!setMnemonic( char ) } U = { javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.AbstractButton.model, this.fileListMenu.!javax.swing.AbstractButton.model }
 113 assignment D = {  } U = { menu$0.!add( javax.swing.JMenuItem ) }
 114 receiver D = {  } U = { menu$0 }
 115 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu, this.fileListMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
 116 actualOut D = { menu$0.!add( javax.swing.JMenuItem ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
 117 localDeclaration D = { emptyListItem$9 } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ) }
 118 receiver D = {  } U = {  }
 119 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
 120 actualOut D = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ), javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged } U = {  }
 121 assignment D = {  } U = { emptyListItem$9.!setEnabled( boolean ) }
 122 receiver D = {  } U = { emptyListItem$9 }
 123 methodCall D = {  } U = { emptyListItem$9.!javax.swing.AbstractButton.model, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model } TO = javax.swing.JMenuItem#setEnabled( boolean )
 124 actualOut D = { emptyListItem$9.!setEnabled( boolean ) } U = { emptyListItem$9.!javax.swing.AbstractButton.model, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model }
 125 assignment D = {  } U = { this.fileListMenu.!add( javax.swing.JMenuItem ) }
 126 receiver D = {  } U = { this.fileListMenu }
 127 methodCall D = {  } U = { emptyListItem$9, javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.JMenu.popupMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
 128 actualOut D = { this.fileListMenu.!add( javax.swing.JMenuItem ), this.fileListMenu.!javax.swing.JMenu.popupListener, this.fileListMenu.!javax.swing.JMenu.popupMenu } U = { javax.swing.JMenu.!JMenu( java.lang.String ).!javax.swing.JMenu.popupMenu, this.fileListMenu.!javax.swing.JMenu.popupMenu }
 129 assignment D = { this.fileListener } U = { .!ActionListener( ) }
 130 receiver D = {  } U = {  }
 131 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
 132 actualOut D = { .!ActionListener( ) } U = {  }
 133 assignment D = {  } U = { menu$0.!addSeparator( ) }
 134 receiver D = {  } U = { menu$0 }
 135 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#addSeparator( )
 136 actualOut D = { menu$0.!addSeparator( ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
 137 localDeclaration D = { exitItem$13 } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ) }
 138 receiver D = {  } U = {  }
 139 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
 140 actualOut D = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ), javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged } U = {  }
 141 assignment D = {  } U = { exitItem$13.!setMnemonic( char ) }
 142 receiver D = {  } U = { exitItem$13 }
 143 methodCall D = {  } U = { exitItem$13.!javax.swing.AbstractButton.model, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
 144 actualOut D = { exitItem$13.!setMnemonic( char ) } U = { exitItem$13.!javax.swing.AbstractButton.model, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.model }
 145 assignment D = {  } U = { menu$0.!add( javax.swing.JMenuItem ) }
 146 receiver D = {  } U = { menu$0 }
 147 methodCall D = {  } U = { exitItem$13, menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
 148 actualOut D = { menu$0.!add( javax.swing.JMenuItem ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
 149 assignment D = {  } U = { exitItem$13.!addActionListener( java.awt.event.ActionListener ) }
 150 receiver D = {  } U = { exitItem$13 }
 151 methodCall D = {  } U = { .!ActionListener( ), exitItem$13.!javax.swing.AbstractButton.listenerList, exitItem$13.!javax.swing.event.EventListenerList.NULL_ARRAY, exitItem$13.!javax.swing.event.EventListenerList.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList } TO = javax.swing.AbstractButton#addActionListener( java.awt.event.ActionListener )
 152 receiver D = {  } U = {  }
 153 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
 154 actualOut D = { .!ActionListener( ) } U = {  }
 155 actualOut D = { exitItem$13.!addActionListener( java.awt.event.ActionListener ), exitItem$13.!javax.swing.event.EventListenerList.listenerList } U = { exitItem$13.!javax.swing.AbstractButton.listenerList, exitItem$13.!javax.swing.event.EventListenerList.NULL_ARRAY, exitItem$13.!javax.swing.event.EventListenerList.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList }
 156 methodExit
 157 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#updateUndoState( ) ]
   1 localDeclaration D = { canvas$0 } U = { this.tabbedCanvas.!getCurrentCanvas( ) }
   2 receiver D = {  } U = { this.tabbedCanvas }
   3 methodCall D = {  } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCurrentCanvas( )
   4 actualOut D = { this.tabbedCanvas.!getCurrentCanvas( ) } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
   5 ifSt D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).changed, this.tabbedCanvas.!getCurrentCanvas( ).curX, this.tabbedCanvas.!getCurrentCanvas( ).curY, this.tabbedCanvas.!getCurrentCanvas( ).currentFigure, this.tabbedCanvas.!getCurrentCanvas( ).figureManager, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure, this.tabbedCanvas.!getCurrentCanvas( ).isGrabMode, this.tabbedCanvas.!getCurrentCanvas( ).menu, this.tabbedCanvas.!getCurrentCanvas( ).selector, this.tabbedCanvas.!getCurrentCanvas( ).support, this.tabbedCanvas.!getCurrentCanvas( ).undoManager }
   6 returnSt D = {  } U = {  }
   7 merge ifSt(5)
   8 localDeclaration D = { undoManager$1 } U = { canvas$0.!getUndoManager( ) }
   9 receiver D = {  } U = { canvas$0 }
  10 methodCall D = {  } U = { canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).undoManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getUndoManager( )
  11 actualOut D = { canvas$0.!getUndoManager( ) } U = { canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).undoManager }
  12 ifSt D = {  } U = { undoManager$1, undoManager$1.!canUndo( ) }
  13 receiver D = {  } U = { undoManager$1 }
  14 methodCall D = {  } U = { canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.edits, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.inProgress, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.indexOfNextAdd, undoManager$1.!javax.swing.undo.UndoManager.edits, undoManager$1.!javax.swing.undo.UndoManager.inProgress, undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd } TO = javax.swing.undo.UndoManager#canUndo( )
  15 actualOut D = { undoManager$1.!canUndo( ) } U = { canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.edits, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.inProgress, canvas$0.!getUndoManager( ).!javax.swing.undo.UndoManager.indexOfNextAdd, undoManager$1.!javax.swing.undo.UndoManager.edits, undoManager$1.!javax.swing.undo.UndoManager.inProgress, undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd }
  16 assignment D = {  } U = { this.undoAction.!setEnabled( boolean ) }
  17 receiver D = {  } U = { this.undoAction }
  18 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  19 actualOut D = { this.undoAction.!setEnabled( boolean ) } U = {  }
  20 assignment D = {  } U = { this.undoAction.!setEnabled( boolean ) }
  21 receiver D = {  } U = { this.undoAction }
  22 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  23 actualOut D = { this.undoAction.!setEnabled( boolean ) } U = {  }
  24 merge ifSt(12)
  25 methodExit
  26 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { canvas$0 } U = {  }
   3 returnSt D = { $_ } U = { this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String ) }
   4 receiver D = {  } U = {  }
   5 methodCall D = {  } U = { System.err, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String )
   6 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager }
   7 actualIn D = {  } U = { canvas$0.!getFigureManager( ).!getFilename( ) }
   8 receiver D = {  } U = { canvas$0.!getFigureManager( ) }
   9 receiver D = {  } U = { canvas$0 }
  10 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  11 actualOut D = { canvas$0.!getFigureManager( ) } U = {  }
  12 methodCall D = {  } U = { canvas$0.!getFigureManager( ).filename } TO = jp.ac.ritsumei.cs.draw.FigureManager#getFilename( )
  13 actualOut D = { canvas$0.!getFigureManager( ).!getFilename( ) } U = { canvas$0.!getFigureManager( ).filename }
  14 actualOut D = { this.!saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String ), this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, this.canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count } U = { System.err, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  15 methodExit
  16 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#buildRecentFileMenu( ) ]
   1 assignment D = {  } U = { this.fileListMenu.!removeAll( ) }
   2 receiver D = {  } U = { this.fileListMenu }
   3 methodCall D = {  } U = { this.fileListMenu.!java.awt.Container.component, this.fileListMenu.!java.awt.Container.containerListener, this.fileListMenu.!java.awt.Container.descendantsCount, this.fileListMenu.!java.awt.Container.eventMask, this.fileListMenu.!java.awt.Container.layoutMgr, this.fileListMenu.!java.awt.Container.listeningBoundsChildren, this.fileListMenu.!java.awt.Container.listeningChildren, this.fileListMenu.!java.awt.Container.peer, this.fileListMenu.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#removeAll( )
   4 actualOut D = { this.fileListMenu.!java.awt.Component.parent, this.fileListMenu.!removeAll( ) } U = { this.fileListMenu.!java.awt.Container.component, this.fileListMenu.!java.awt.Container.containerListener, this.fileListMenu.!java.awt.Container.descendantsCount, this.fileListMenu.!java.awt.Container.eventMask, this.fileListMenu.!java.awt.Container.layoutMgr, this.fileListMenu.!java.awt.Container.listeningBoundsChildren, this.fileListMenu.!java.awt.Container.listeningChildren, this.fileListMenu.!java.awt.Container.peer, this.fileListMenu.!javax.swing.JMenu.popupMenu }
   5 enhancedForSt D = { filename$0 } U = { this.recentFiles }
   6 localDeclaration D = { fileItem$2 } U = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ) }
   7 receiver D = {  } U = {  }
   8 constructorCall D = {  } U = { filename$0 } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
   9 actualOut D = { javax.swing.JMenuItem.!JMenuItem( java.lang.String ), javax.swing.JMenuItem.!javax.swing.JMenuItem.isMouseDragged } U = {  }
  10 assignment D = {  } U = { this.fileListMenu.!add( javax.swing.JMenuItem ) }
  11 receiver D = {  } U = { this.fileListMenu }
  12 methodCall D = {  } U = { fileItem$2, this.fileListMenu.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
  13 actualOut D = { this.fileListMenu.!add( javax.swing.JMenuItem ), this.fileListMenu.!javax.swing.JMenu.popupListener, this.fileListMenu.!javax.swing.JMenu.popupMenu } U = { this.fileListMenu.!javax.swing.JMenu.popupMenu }
  14 assignment D = {  } U = { fileItem$2.!addActionListener( java.awt.event.ActionListener ) }
  15 receiver D = {  } U = { fileItem$2 }
  16 methodCall D = {  } U = { fileItem$2.!javax.swing.AbstractButton.listenerList, fileItem$2.!javax.swing.event.EventListenerList.NULL_ARRAY, fileItem$2.!javax.swing.event.EventListenerList.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList, this.fileListener } TO = javax.swing.AbstractButton#addActionListener( java.awt.event.ActionListener )
  17 actualOut D = { fileItem$2.!addActionListener( java.awt.event.ActionListener ), fileItem$2.!javax.swing.event.EventListenerList.listenerList } U = { fileItem$2.!javax.swing.AbstractButton.listenerList, fileItem$2.!javax.swing.event.EventListenerList.NULL_ARRAY, fileItem$2.!javax.swing.event.EventListenerList.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JMenuItem.!JMenuItem( java.lang.String ).!javax.swing.event.EventListenerList.listenerList }
  18 methodExit
  19 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#openFile( java.lang.String ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 throwsClause D = {  } U = { $java.lang.NumberFormatException }
   3 formalIn D = { filename$0 } U = {  }
   4 localDeclaration D = { canvas$1 } U = { this.tabbedCanvas.!getCanvas( java.lang.String ) }
   5 receiver D = {  } U = { this.tabbedCanvas }
   6 methodCall D = {  } U = { canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvases } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCanvas( java.lang.String )
   7 actualIn D = {  } U = { filename$0 }
   8 actualOut D = { this.tabbedCanvas.!getCanvas( java.lang.String ) } U = { canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvases }
   9 ifSt D = {  } U = { this.tabbedCanvas.!getCanvas( java.lang.String ) }
  10 receiver D = {  } U = { this.tabbedCanvas }
  11 methodCall D = {  } U = { canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.!getCanvas( java.lang.String ).changed, this.tabbedCanvas.!getCanvas( java.lang.String ).curX, this.tabbedCanvas.!getCanvas( java.lang.String ).curY, this.tabbedCanvas.!getCanvas( java.lang.String ).currentFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager, this.tabbedCanvas.!getCanvas( java.lang.String ).grabbedFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).isGrabMode, this.tabbedCanvas.!getCanvas( java.lang.String ).menu, this.tabbedCanvas.!getCanvas( java.lang.String ).selector, this.tabbedCanvas.!getCanvas( java.lang.String ).support, this.tabbedCanvas.!getCanvas( java.lang.String ).undoManager, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvases, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).filename, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCanvas( java.lang.String )
  12 actualIn D = {  } U = { filename$0 }
  13 actualOut D = { this.tabbedCanvas.!getCanvas( java.lang.String ) } U = { canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.!getCanvas( java.lang.String ).changed, this.tabbedCanvas.!getCanvas( java.lang.String ).curX, this.tabbedCanvas.!getCanvas( java.lang.String ).curY, this.tabbedCanvas.!getCanvas( java.lang.String ).currentFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager, this.tabbedCanvas.!getCanvas( java.lang.String ).grabbedFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).isGrabMode, this.tabbedCanvas.!getCanvas( java.lang.String ).menu, this.tabbedCanvas.!getCanvas( java.lang.String ).selector, this.tabbedCanvas.!getCanvas( java.lang.String ).support, this.tabbedCanvas.!getCanvas( java.lang.String ).undoManager, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.canvas$1.!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.canvas$1.!getFigureManager( ).filename, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvases, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).!getFilename( ).!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).!getFilename( ).!java.lang.String.coder, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).!getFilename( ).!java.lang.String.value, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).!getFigureManager( ).filename, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager }
  14 ifSt D = {  } U = { canvas$1.!hasChanged( ) }
  15 receiver D = {  } U = { canvas$1 }
  16 methodCall D = {  } U = { canvas$1.changed } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#hasChanged( )
  17 actualOut D = { canvas$1.!hasChanged( ) } U = { canvas$1.changed }
  18 assignment D = {  } U = { this.!showMessageDialog( java.awt.Component java.lang.Object ) }
  19 receiver D = {  } U = {  }
  20 methodCall D = {  } U = { $java.lang.String, filename$0, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showMessageDialog( java.awt.Component java.lang.Object )
  21 actualOut D = { this.!showMessageDialog( java.awt.Component java.lang.Object ) } U = {  }
  22 returnSt D = { $_ } U = {  }
  23 localDeclaration D = { confirm$2 } U = { this.!showConfirmDialog( java.awt.Component java.lang.Object java.lang.String int ) }
  24 receiver D = {  } U = {  }
  25 methodCall D = {  } U = { $java.lang.String, this.tool, this.tool.YES_NO_OPTION, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showConfirmDialog( java.awt.Component java.lang.Object java.lang.String int )
  26 actualOut D = { this.!showConfirmDialog( java.awt.Component java.lang.Object java.lang.String int ) } U = {  }
  27 ifSt D = {  } U = { confirm$2, confirm$2.NO_OPTION }
  28 returnSt D = { $_ } U = {  }
  29 merge ifSt(27)
  30 merge ifSt(14)
  31 assignment D = { canvas$1 } U = { this.tabbedCanvas.!openTab( java.lang.String ) }
  32 receiver D = {  } U = { this.tabbedCanvas }
  33 methodCall D = {  } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.figureManager.figures, this.figureManager.filename, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.tabbedCanvas.!getCanvas( java.lang.String ).changed, this.tabbedCanvas.!getCanvas( java.lang.String ).curX, this.tabbedCanvas.!getCanvas( java.lang.String ).curY, this.tabbedCanvas.!getCanvas( java.lang.String ).currentFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager, this.tabbedCanvas.!getCanvas( java.lang.String ).grabbedFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).isGrabMode, this.tabbedCanvas.!getCanvas( java.lang.String ).menu, this.tabbedCanvas.!getCanvas( java.lang.String ).selector, this.tabbedCanvas.!getCanvas( java.lang.String ).support, this.tabbedCanvas.!getCanvas( java.lang.String ).undoManager, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvas$1.support, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementCount, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementData, this.tabbedCanvas.canvas$1.support.!java.util.Vector.modCount, this.tabbedCanvas.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.tabbedCanvas.canvases, this.tabbedCanvas.fmanager$3.filename, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.coder, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.value, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.height, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.peer, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.width, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.dispatcher, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.peer, this.tabbedCanvas.menu, this.tabbedCanvas.selector, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!java.util.Vector.elementCount, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!java.util.Vector.elementData, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!java.util.Vector.modCount, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!javax.swing.undo.UndoableEditSupport.listeners } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#openTab( java.lang.String )
  34 actualIn D = {  } U = { filename$0 }
  35 actualOut D = { this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!openTab( java.lang.String ), this.tabbedCanvas.canvas$1.support.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.edits, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.CompoundEdit.inProgress, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.indexOfNextAdd, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.newEventsOnly, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.height, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.java.awt.Dimension.!java.awt.Dimension.width, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.jp.ac.ritsumei.cs.draw.FigureManager.java.util.LinkedList.!java.util.LinkedList.size } U = { Color.white, File.separator, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$1.changed, canvas$1.curX, canvas$1.curY, canvas$1.currentFigure, canvas$1.figureManager, canvas$1.grabbedFigure, canvas$1.isGrabMode, canvas$1.menu, canvas$1.selector, canvas$1.support, canvas$1.undoManager, jp.ac.ritsumei.cs.draw.FigureManager.UNTITLED, menu$0.autoSave, menu$0.clipboard, menu$0.copyAction, menu$0.cutAction, menu$0.deleteAction, menu$0.directory, menu$0.fileListMenu, menu$0.fileListener, menu$0.menuBar, menu$0.newAction, menu$0.openAction, menu$0.pasteAction, menu$0.recentFiles, menu$0.redoAction, menu$0.saveAction, menu$0.tabbedCanvas, menu$0.tool, menu$0.toolBar, menu$0.undoAction, menu$0.windowListener, selector$1.colorCombo, selector$1.shapeCombo, selector$1.widthCombo, this, this.figureManager.figures, this.figureManager.filename, this.menu.autoSave, this.menu.clipboard, this.menu.copyAction, this.menu.cutAction, this.menu.deleteAction, this.menu.directory, this.menu.fileListMenu, this.menu.fileListener, this.menu.menuBar, this.menu.newAction, this.menu.openAction, this.menu.pasteAction, this.menu.recentFiles, this.menu.redoAction, this.menu.saveAction, this.menu.tabbedCanvas, this.menu.tool, this.menu.toolBar, this.menu.undoAction, this.menu.windowListener, this.selector.colorCombo, this.selector.shapeCombo, this.selector.widthCombo, this.tabbedCanvas.!getCanvas( java.lang.String ).changed, this.tabbedCanvas.!getCanvas( java.lang.String ).curX, this.tabbedCanvas.!getCanvas( java.lang.String ).curY, this.tabbedCanvas.!getCanvas( java.lang.String ).currentFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager, this.tabbedCanvas.!getCanvas( java.lang.String ).grabbedFigure, this.tabbedCanvas.!getCanvas( java.lang.String ).isGrabMode, this.tabbedCanvas.!getCanvas( java.lang.String ).menu, this.tabbedCanvas.!getCanvas( java.lang.String ).selector, this.tabbedCanvas.!getCanvas( java.lang.String ).support, this.tabbedCanvas.!getCanvas( java.lang.String ).undoManager, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.haveRegistered, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.canvas$1.figureManager, this.tabbedCanvas.canvas$1.support, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementCount, this.tabbedCanvas.canvas$1.support.!java.util.Vector.elementData, this.tabbedCanvas.canvas$1.support.!java.util.Vector.modCount, this.tabbedCanvas.canvas$1.support.!javax.swing.undo.UndoableEditSupport.listeners, this.tabbedCanvas.canvases, this.tabbedCanvas.fmanager$3.filename, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.coder, this.tabbedCanvas.fmanager$3.filename.!java.lang.String.value, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.elementData, this.tabbedCanvas.javax.swing.undo.UndoManager.!java.util.Vector.modCount, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.edits, this.tabbedCanvas.javax.swing.undo.UndoManager.!javax.swing.undo.UndoManager.limit, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.background, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.height, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.mouseMotionListener, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.peer, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSize, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.prefSizeSet, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Component.width, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.dispatcher, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.parent, this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.!java.awt.Container.peer, this.tabbedCanvas.menu, this.tabbedCanvas.selector, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).figureManager, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!java.util.Vector.elementCount, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!java.util.Vector.elementData, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!java.util.Vector.modCount, this.tabbedCanvas.this.tabbedCanvas.!getCanvas( java.lang.String ).support.!javax.swing.undo.UndoableEditSupport.listeners }
  36 merge ifSt(9)
  37 localDeclaration D = { result$3 } U = { canvas$1.!getFigureManager( ).!load( java.lang.String ) }
  38 receiver D = {  } U = { canvas$1.!getFigureManager( ) }
  39 receiver D = {  } U = { canvas$1 }
  40 methodCall D = {  } U = { canvas$1.figureManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.!openTab( java.lang.String ).figureManager } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#getFigureManager( )
  41 actualOut D = { canvas$1.!getFigureManager( ) } U = { canvas$1.figureManager, this.figureManager.figures, this.figureManager.filename, this.tabbedCanvas.!openTab( java.lang.String ).figureManager }
  42 methodCall D = {  } U = { Color.black, FilledOval.name, FilledRect.name, Line.name, Oval.name, Rect.name, System.err, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.out, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.lock, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, canvas$1.!getFigureManager( ).figures, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, canvas$1.!getFigureManager( ).kind$0.!java.lang.String.COMPACT_STRINGS, canvas$1.!getFigureManager( ).kind$0.!java.lang.String.coder, canvas$1.!getFigureManager( ).kind$0.!java.lang.String.value, canvas$1.!getFigureManager( ).st$6.!java.lang.String.value, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.str, figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY, figure$17.color, figure$17.endX, figure$17.endY, figure$17.outlineWidth, figure$17.startX, figure$17.startY, figure$7.color, figure$7.endX, figure$7.endY, figure$7.outlineWidth, figure$7.startX, figure$7.startY, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.out, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.lock, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).figures, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).kind$0.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).kind$0.!java.lang.String.coder, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).kind$0.!java.lang.String.value, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.lang.String.value, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.str } TO = jp.ac.ritsumei.cs.draw.FigureManager#load( java.lang.String )
  43 actualIn D = {  } U = { filename$0 }
  44 actualOut D = { canvas$1.!getFigureManager( ).!load( java.lang.String ), canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.cs, canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.falpha, canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.frgbvalue, canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.fvalue, canvas$1.!getFigureManager( ).java.awt.Color.!java.awt.Color.value, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.cb, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.in, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.markedChar, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.markedSkipLF, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.nChars, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.nextChar, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.readAheadLimit, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.skipLF, canvas$1.!getFigureManager( ).java.io.FileReader.!java.io.InputStreamReader.sd, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.currentPosition, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.delimiters, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.delimsChanged, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.hasSurrogates, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.maxPosition, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.newPosition, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.retDelims, canvas$1.!getFigureManager( ).java.util.StringTokenizer.!java.util.StringTokenizer.str, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition } U = { Color.black, FilledOval.name, FilledRect.name, Line.name, Oval.name, Rect.name, System.err, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.out, canvas$1.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.cb, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.in, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.lock, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, canvas$1.!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, canvas$1.!getFigureManager( ).figures, canvas$1.!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, canvas$1.!getFigureManager( ).kind$0.!java.lang.String.COMPACT_STRINGS, canvas$1.!getFigureManager( ).kind$0.!java.lang.String.coder, canvas$1.!getFigureManager( ).kind$0.!java.lang.String.value, canvas$1.!getFigureManager( ).st$6.!java.lang.String.value, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, canvas$1.!getFigureManager( ).st$6.!java.util.StringTokenizer.str, figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY, figure$17.color, figure$17.endX, figure$17.endY, figure$17.outlineWidth, figure$17.startX, figure$17.startY, figure$7.color, figure$7.endX, figure$7.endY, figure$7.outlineWidth, figure$7.startX, figure$7.startY, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.out, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.cb, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.defaultExpectedLineLength, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.in, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.lock, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.nChars, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.nextChar, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).br$1.!java.io.BufferedReader.skipLF, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).figures, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).kind$0.!java.lang.String.COMPACT_STRINGS, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).kind$0.!java.lang.String.coder, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).kind$0.!java.lang.String.value, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.lang.String.value, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.currentPosition, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.delimiters, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.delimsChanged, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.hasSurrogates, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.maxDelimCodePoint, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.maxPosition, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.newPosition, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.retDelims, this.tabbedCanvas.!openTab( java.lang.String ).!getFigureManager( ).st$6.!java.util.StringTokenizer.str }
  45 ifSt D = {  } U = { result$3 }
  46 assignment D = {  } U = { this.!showMessageDialog( java.awt.Component java.lang.Object ) }
  47 receiver D = {  } U = {  }
  48 methodCall D = {  } U = { $java.lang.String, filename$0, this.tool, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = javax.swing.JOptionPane#showMessageDialog( java.awt.Component java.lang.Object )
  49 actualOut D = { this.!showMessageDialog( java.awt.Component java.lang.Object ) } U = {  }
  50 returnSt D = { $_ } U = {  }
  51 merge ifSt(45)
  52 assignment D = {  } U = { canvas$1.!setChanged( boolean ) }
  53 receiver D = {  } U = { canvas$1 }
  54 methodCall D = {  } U = {  } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#setChanged( boolean )
  55 actualIn D = {  } U = {  }
  56 actualOut D = { canvas$1.!setChanged( boolean ) } U = {  }
  57 assignment D = {  } U = { this.tool.!setTitle( java.lang.String ) }
  58 receiver D = {  } U = { this.tool }
  59 methodCall D = {  } U = { filename$0, this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title } TO = java.awt.Frame#setTitle( java.lang.String )
  60 actualOut D = { this.tool.!java.awt.Frame.title, this.tool.!setTitle( java.lang.String ) } U = { this.tool.!java.awt.Component.changeSupport, this.tool.!java.awt.Frame.peer, this.tool.!java.awt.Frame.title }
  61 assignment D = {  } U = { canvas$1.!repaint( ) }
  62 receiver D = {  } U = { canvas$1 }
  63 methodCall D = {  } U = { canvas$1.!java.awt.Component.height, canvas$1.!java.awt.Component.parent, canvas$1.!java.awt.Component.peer, canvas$1.!java.awt.Component.width, canvas$1.!java.awt.Component.x, canvas$1.!java.awt.Component.y, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.height, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.parent, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.peer, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.width, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.x, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.y } TO = java.awt.Component#repaint( )
  64 actualOut D = { canvas$1.!repaint( ) } U = { canvas$1.!java.awt.Component.height, canvas$1.!java.awt.Component.parent, canvas$1.!java.awt.Component.peer, canvas$1.!java.awt.Component.width, canvas$1.!java.awt.Component.x, canvas$1.!java.awt.Component.y, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.height, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.parent, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.peer, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.width, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.x, this.tabbedCanvas.!openTab( java.lang.String ).!java.awt.Component.y }
  65 returnSt D = { $_ } U = {  }
  66 methodExit
  67 formalOut D = {  } U = { $_ }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.jp.ac.ritsumei.cs.draw.DrawCanvas.changed } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).figureManager } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).figureManager } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).menu } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).selector } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.canvas$1.undoManager } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).figures } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).figures } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).filename } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.!openTab( java.lang.String ).filename } U = {  }
  33+ actualOutByFieldAccess D = { this.tabbedCanvas.selectedTab } U = {  }
  42+ actualOutByFieldAccess D = { canvas$1.!getFigureManager( ).figure$7.endX } U = {  }
  42+ actualOutByFieldAccess D = { canvas$1.!getFigureManager( ).figure$7.endY } U = {  }
  42+ actualOutByFieldAccess D = { canvas$1.!getFigureManager( ).figure$7.startX } U = {  }
  42+ actualOutByFieldAccess D = { canvas$1.!getFigureManager( ).figure$7.startY } U = {  }
  54+ actualOutByFieldAccess D = { canvas$1.changed } U = {  }
--
   0 fieldEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#openAction ]
   1 fieldDeclaration D = { this.openAction } U = { this.openAction }
   2 fieldExit
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#closeFile( ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 localDeclaration D = { canvas$0 } U = { this.tabbedCanvas.!getCurrentCanvas( ) }
   3 receiver D = {  } U = { this.tabbedCanvas }
   4 methodCall D = {  } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCurrentCanvas( )
   5 actualOut D = { this.tabbedCanvas.!getCurrentCanvas( ) } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
   6 assignment D = {  } U = { this.!closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas ) }
   7 receiver D = {  } U = {  }
   8 methodCall D = {  } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, result$1.CANCEL_OPTION, result$1.YES_OPTION, result2$2.CANCEL_OPTION, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tabbedCanvas, this.tabbedCanvas.!getCurrentCanvas( ).changed, this.tabbedCanvas.!getCurrentCanvas( ).curX, this.tabbedCanvas.!getCurrentCanvas( ).curY, this.tabbedCanvas.!getCurrentCanvas( ).currentFigure, this.tabbedCanvas.!getCurrentCanvas( ).figureManager, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure, this.tabbedCanvas.!getCurrentCanvas( ).isGrabMode, this.tabbedCanvas.!getCurrentCanvas( ).menu, this.tabbedCanvas.!getCurrentCanvas( ).selector, this.tabbedCanvas.!getCurrentCanvas( ).support, this.tabbedCanvas.!getCurrentCanvas( ).undoManager, this.tabbedCanvas.!javax.accessibility.AccessibleState.SELECTED, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.!javax.swing.JTabbedPane.visComp, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.tabbedCanvas.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).figures, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.out, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).figures, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).filename, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.!java.lang.Runtime.currentRuntime, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas } TO = jp.ac.ritsumei.cs.draw.DrawMenu#closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   9 actualIn D = {  } U = { canvas$0, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).changed, this.tabbedCanvas.!getCurrentCanvas( ).curX, this.tabbedCanvas.!getCurrentCanvas( ).curY, this.tabbedCanvas.!getCurrentCanvas( ).currentFigure, this.tabbedCanvas.!getCurrentCanvas( ).figureManager, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure, this.tabbedCanvas.!getCurrentCanvas( ).isGrabMode, this.tabbedCanvas.!getCurrentCanvas( ).menu, this.tabbedCanvas.!getCurrentCanvas( ).selector, this.tabbedCanvas.!getCurrentCanvas( ).support, this.tabbedCanvas.!getCurrentCanvas( ).undoManager }
  10 actualOut D = { this.!closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas ), this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.trouble, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.cb, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nChars, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.out, this.canvas$0.!getFigureManager( ).java.io.FileWriter.!java.io.OutputStreamWriter.se, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.autoFlush, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.psOut, this.canvas$0.!getFigureManager( ).java.io.PrintWriter.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.AbstractStringBuilder.value, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.trouble, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.tabbedCanvas.!javax.swing.JTabbedPane.visComp } U = { System.err, canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, figure$4.color, figure$4.endX, figure$4.endY, figure$4.outlineWidth, figure$4.startX, figure$4.startY, result$1.CANCEL_OPTION, result$1.YES_OPTION, result2$2.CANCEL_OPTION, this.canvas$0.!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.out, this.canvas$0.!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.canvas$0.!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.canvas$0.!getFigureManager( ).figures, this.canvas$0.!getFigureManager( ).filename, this.canvas$0.!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.canvas$0.!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.canvas$0.!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.canvas$0.!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tabbedCanvas, this.tabbedCanvas.!getCurrentCanvas( ).changed, this.tabbedCanvas.!getCurrentCanvas( ).curX, this.tabbedCanvas.!getCurrentCanvas( ).curY, this.tabbedCanvas.!getCurrentCanvas( ).currentFigure, this.tabbedCanvas.!getCurrentCanvas( ).figureManager, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure, this.tabbedCanvas.!getCurrentCanvas( ).isGrabMode, this.tabbedCanvas.!getCurrentCanvas( ).menu, this.tabbedCanvas.!getCurrentCanvas( ).selector, this.tabbedCanvas.!getCurrentCanvas( ).support, this.tabbedCanvas.!getCurrentCanvas( ).undoManager, this.tabbedCanvas.!javax.accessibility.AccessibleState.SELECTED, this.tabbedCanvas.!javax.swing.JTabbedPane.accessibleContext, this.tabbedCanvas.!javax.swing.JTabbedPane.model, this.tabbedCanvas.!javax.swing.JTabbedPane.pages, this.tabbedCanvas.!javax.swing.JTabbedPane.visComp, this.tabbedCanvas.canvas$0.!getFigureManager( ).figures, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.tabbedCanvas.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).figures, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).!java.lang.String.COMPACT_STRINGS, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.autoFlush, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.charOut, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.out, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).System.err.!java.io.PrintStream.textOut, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).figure$4.color.!java.awt.Color.value, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).figures, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).filename, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).java.lang.StringBuilder.!java.lang.String.COMPACT_STRINGS, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).pw$1.!java.io.PrintWriter.lock, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).pw$1.!java.io.PrintWriter.out, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.coder, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.AbstractStringBuilder.count, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.String.COMPACT_STRINGS, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.StringBuilder.count, this.this.tabbedCanvas.!getCurrentCanvas( ).!getFigureManager( ).sb$6.!java.lang.StringBuilder.value, this.tool, this.tool.!java.lang.Runtime.currentRuntime, this.tool.menu, this.tool.selector, this.tool.tabbedCanvas }
  11 methodExit
  12 formalOut D = {  } U = { $_ }
   8+ actualOutByFieldAccess D = { this.tabbedCanvas.selectedTab } U = {  }
--
   0 methodEntry [ jp.ac.ritsumei.cs.draw.DrawMenu#initEditMenu( javax.swing.JMenu ) ]
   1 formalIn D = { menu$0 } U = {  }
   2 localDeclaration D = { undoItem$1 } U = { menu$0.!add( javax.swing.Action ) }
   3 receiver D = {  } U = { menu$0 }
   4 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.undoAction } TO = javax.swing.JMenu#add( javax.swing.Action )
   5 actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
   6 assignment D = {  } U = { undoItem$1.!setMnemonic( char ) }
   7 receiver D = {  } U = { undoItem$1 }
   8 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, undoItem$1.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
   9 actualOut D = { undoItem$1.!setMnemonic( char ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, undoItem$1.!javax.swing.AbstractButton.model }
  10 assignment D = {  } U = { undoItem$1.!setIcon( javax.swing.Icon ) }
  11 receiver D = {  } U = { undoItem$1 }
  12 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, undoItem$1.!java.awt.Component.changeSupport, undoItem$1.!java.awt.Component.height, undoItem$1.!java.awt.Component.width, undoItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, undoItem$1.!javax.swing.AbstractButton.accessibleContext, undoItem$1.!javax.swing.AbstractButton.defaultIcon, undoItem$1.!javax.swing.AbstractButton.disabledIcon, undoItem$1.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  13 actualOut D = { undoItem$1.!javax.swing.AbstractButton.defaultIcon, undoItem$1.!javax.swing.AbstractButton.disabledIcon, undoItem$1.!setIcon( javax.swing.Icon ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, undoItem$1.!java.awt.Component.changeSupport, undoItem$1.!java.awt.Component.height, undoItem$1.!java.awt.Component.width, undoItem$1.!javax.accessibility.AccessibleContext.accessibleChangeSupport, undoItem$1.!javax.swing.AbstractButton.accessibleContext, undoItem$1.!javax.swing.AbstractButton.defaultIcon, undoItem$1.!javax.swing.AbstractButton.disabledIcon, undoItem$1.!javax.swing.JComponent.revalidateRunnableScheduled }
  14 assignment D = {  } U = { undoItem$1.!setAccelerator( javax.swing.KeyStroke ) }
  15 receiver D = {  } U = { undoItem$1 }
  16 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ), undoItem$1.!java.awt.Component.changeSupport, undoItem$1.!java.awt.Component.height, undoItem$1.!java.awt.Component.width, undoItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, undoItem$1.!javax.swing.JMenuItem.accelerator } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  17 receiver D = {  } U = {  }
  18 methodCall D = {  } U = { KeyEvent.VK_Z, KeyEvent.VK_Z.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  19 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
  20 actualOut D = { undoItem$1.!javax.swing.JMenuItem.accelerator, undoItem$1.!setAccelerator( javax.swing.KeyStroke ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, undoItem$1.!java.awt.Component.changeSupport, undoItem$1.!java.awt.Component.height, undoItem$1.!java.awt.Component.width, undoItem$1.!javax.swing.JComponent.revalidateRunnableScheduled, undoItem$1.!javax.swing.JMenuItem.accelerator }
  21 assignment D = {  } U = { this.undoAction.!setEnabled( boolean ) }
  22 receiver D = {  } U = { this.undoAction }
  23 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  24 actualOut D = { this.undoAction.!setEnabled( boolean ) } U = {  }
  25 localDeclaration D = { redoItem$2 } U = { menu$0.!add( javax.swing.Action ) }
  26 receiver D = {  } U = { menu$0 }
  27 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.redoAction } TO = javax.swing.JMenu#add( javax.swing.Action )
  28 actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
  29 assignment D = {  } U = { redoItem$2.!setMnemonic( char ) }
  30 receiver D = {  } U = { redoItem$2 }
  31 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, redoItem$2.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  32 actualOut D = { redoItem$2.!setMnemonic( char ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, redoItem$2.!javax.swing.AbstractButton.model }
  33 assignment D = {  } U = { redoItem$2.!setIcon( javax.swing.Icon ) }
  34 receiver D = {  } U = { redoItem$2 }
  35 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, redoItem$2.!java.awt.Component.changeSupport, redoItem$2.!java.awt.Component.height, redoItem$2.!java.awt.Component.width, redoItem$2.!javax.accessibility.AccessibleContext.accessibleChangeSupport, redoItem$2.!javax.swing.AbstractButton.accessibleContext, redoItem$2.!javax.swing.AbstractButton.defaultIcon, redoItem$2.!javax.swing.AbstractButton.disabledIcon, redoItem$2.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  36 actualOut D = { redoItem$2.!javax.swing.AbstractButton.defaultIcon, redoItem$2.!javax.swing.AbstractButton.disabledIcon, redoItem$2.!setIcon( javax.swing.Icon ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, redoItem$2.!java.awt.Component.changeSupport, redoItem$2.!java.awt.Component.height, redoItem$2.!java.awt.Component.width, redoItem$2.!javax.accessibility.AccessibleContext.accessibleChangeSupport, redoItem$2.!javax.swing.AbstractButton.accessibleContext, redoItem$2.!javax.swing.AbstractButton.defaultIcon, redoItem$2.!javax.swing.AbstractButton.disabledIcon, redoItem$2.!javax.swing.JComponent.revalidateRunnableScheduled }
  37 assignment D = {  } U = { redoItem$2.!setAccelerator( javax.swing.KeyStroke ) }
  38 receiver D = {  } U = { redoItem$2 }
  39 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, redoItem$2.!java.awt.Component.changeSupport, redoItem$2.!java.awt.Component.height, redoItem$2.!java.awt.Component.width, redoItem$2.!javax.swing.JComponent.revalidateRunnableScheduled, redoItem$2.!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  40 receiver D = {  } U = {  }
  41 methodCall D = {  } U = { KeyEvent.VK_Y, KeyEvent.VK_Y.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  42 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
  43 actualOut D = { redoItem$2.!javax.swing.JMenuItem.accelerator, redoItem$2.!setAccelerator( javax.swing.KeyStroke ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, redoItem$2.!java.awt.Component.changeSupport, redoItem$2.!java.awt.Component.height, redoItem$2.!java.awt.Component.width, redoItem$2.!javax.swing.JComponent.revalidateRunnableScheduled, redoItem$2.!javax.swing.JMenuItem.accelerator }
  44 assignment D = {  } U = { this.redoAction.!setEnabled( boolean ) }
  45 receiver D = {  } U = { this.redoAction }
  46 methodCall D = {  } U = {  } TO = javax.swing.Action#setEnabled( boolean )
  47 actualOut D = { this.redoAction.!setEnabled( boolean ) } U = {  }
  48 assignment D = {  } U = { menu$0.!addSeparator( ) }
  49 receiver D = {  } U = { menu$0 }
  50 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#addSeparator( )
  51 actualOut D = { menu$0.!addSeparator( ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
  52 localDeclaration D = { cutItem$3 } U = { menu$0.!add( javax.swing.Action ) }
  53 receiver D = {  } U = { menu$0 }
  54 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.cutAction } TO = javax.swing.JMenu#add( javax.swing.Action )
  55 actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
  56 assignment D = {  } U = { cutItem$3.!setMnemonic( char ) }
  57 receiver D = {  } U = { cutItem$3 }
  58 methodCall D = {  } U = { cutItem$3.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  59 actualOut D = { cutItem$3.!setMnemonic( char ) } U = { cutItem$3.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
  60 assignment D = {  } U = { cutItem$3.!setIcon( javax.swing.Icon ) }
  61 receiver D = {  } U = { cutItem$3 }
  62 methodCall D = {  } U = { cutItem$3.!java.awt.Component.changeSupport, cutItem$3.!java.awt.Component.height, cutItem$3.!java.awt.Component.width, cutItem$3.!javax.accessibility.AccessibleContext.accessibleChangeSupport, cutItem$3.!javax.swing.AbstractButton.accessibleContext, cutItem$3.!javax.swing.AbstractButton.defaultIcon, cutItem$3.!javax.swing.AbstractButton.disabledIcon, cutItem$3.!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  63 actualOut D = { cutItem$3.!javax.swing.AbstractButton.defaultIcon, cutItem$3.!javax.swing.AbstractButton.disabledIcon, cutItem$3.!setIcon( javax.swing.Icon ) } U = { cutItem$3.!java.awt.Component.changeSupport, cutItem$3.!java.awt.Component.height, cutItem$3.!java.awt.Component.width, cutItem$3.!javax.accessibility.AccessibleContext.accessibleChangeSupport, cutItem$3.!javax.swing.AbstractButton.accessibleContext, cutItem$3.!javax.swing.AbstractButton.defaultIcon, cutItem$3.!javax.swing.AbstractButton.disabledIcon, cutItem$3.!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled }
  64 assignment D = {  } U = { cutItem$3.!setAccelerator( javax.swing.KeyStroke ) }
  65 receiver D = {  } U = { cutItem$3 }
  66 methodCall D = {  } U = { cutItem$3.!java.awt.Component.changeSupport, cutItem$3.!java.awt.Component.height, cutItem$3.!java.awt.Component.width, cutItem$3.!javax.swing.JComponent.revalidateRunnableScheduled, cutItem$3.!javax.swing.JMenuItem.accelerator, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  67 receiver D = {  } U = {  }
  68 methodCall D = {  } U = { KeyEvent.VK_X, KeyEvent.VK_X.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  69 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
  70 actualOut D = { cutItem$3.!javax.swing.JMenuItem.accelerator, cutItem$3.!setAccelerator( javax.swing.KeyStroke ) } U = { cutItem$3.!java.awt.Component.changeSupport, cutItem$3.!java.awt.Component.height, cutItem$3.!java.awt.Component.width, cutItem$3.!javax.swing.JComponent.revalidateRunnableScheduled, cutItem$3.!javax.swing.JMenuItem.accelerator, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator }
  71 assignment D = {  } U = { cutItem$3.!setEnabled( boolean ) }
  72 receiver D = {  } U = { cutItem$3 }
  73 methodCall D = {  } U = { cutItem$3.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.JMenuItem#setEnabled( boolean )
  74 actualOut D = { cutItem$3.!setEnabled( boolean ) } U = { cutItem$3.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
  75 localDeclaration D = { copyItem$4 } U = { menu$0.!add( javax.swing.Action ) }
  76 receiver D = {  } U = { menu$0 }
  77 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.copyAction } TO = javax.swing.JMenu#add( javax.swing.Action )
  78 actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
  79 assignment D = {  } U = { copyItem$4.!setMnemonic( char ) }
  80 receiver D = {  } U = { copyItem$4 }
  81 methodCall D = {  } U = { copyItem$4.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
  82 actualOut D = { copyItem$4.!setMnemonic( char ) } U = { copyItem$4.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
  83 assignment D = {  } U = { copyItem$4.!setIcon( javax.swing.Icon ) }
  84 receiver D = {  } U = { copyItem$4 }
  85 methodCall D = {  } U = { copyItem$4.!java.awt.Component.changeSupport, copyItem$4.!java.awt.Component.height, copyItem$4.!java.awt.Component.width, copyItem$4.!javax.accessibility.AccessibleContext.accessibleChangeSupport, copyItem$4.!javax.swing.AbstractButton.accessibleContext, copyItem$4.!javax.swing.AbstractButton.defaultIcon, copyItem$4.!javax.swing.AbstractButton.disabledIcon, copyItem$4.!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
  86 actualOut D = { copyItem$4.!javax.swing.AbstractButton.defaultIcon, copyItem$4.!javax.swing.AbstractButton.disabledIcon, copyItem$4.!setIcon( javax.swing.Icon ) } U = { copyItem$4.!java.awt.Component.changeSupport, copyItem$4.!java.awt.Component.height, copyItem$4.!java.awt.Component.width, copyItem$4.!javax.accessibility.AccessibleContext.accessibleChangeSupport, copyItem$4.!javax.swing.AbstractButton.accessibleContext, copyItem$4.!javax.swing.AbstractButton.defaultIcon, copyItem$4.!javax.swing.AbstractButton.disabledIcon, copyItem$4.!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled }
  87 assignment D = {  } U = { copyItem$4.!setAccelerator( javax.swing.KeyStroke ) }
  88 receiver D = {  } U = { copyItem$4 }
  89 methodCall D = {  } U = { copyItem$4.!java.awt.Component.changeSupport, copyItem$4.!java.awt.Component.height, copyItem$4.!java.awt.Component.width, copyItem$4.!javax.swing.JComponent.revalidateRunnableScheduled, copyItem$4.!javax.swing.JMenuItem.accelerator, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
  90 receiver D = {  } U = {  }
  91 methodCall D = {  } U = { KeyEvent.VK_C, KeyEvent.VK_C.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
  92 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
  93 actualOut D = { copyItem$4.!javax.swing.JMenuItem.accelerator, copyItem$4.!setAccelerator( javax.swing.KeyStroke ) } U = { copyItem$4.!java.awt.Component.changeSupport, copyItem$4.!java.awt.Component.height, copyItem$4.!java.awt.Component.width, copyItem$4.!javax.swing.JComponent.revalidateRunnableScheduled, copyItem$4.!javax.swing.JMenuItem.accelerator, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator }
  94 assignment D = {  } U = { copyItem$4.!setEnabled( boolean ) }
  95 receiver D = {  } U = { copyItem$4 }
  96 methodCall D = {  } U = { copyItem$4.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.JMenuItem#setEnabled( boolean )
  97 actualOut D = { copyItem$4.!setEnabled( boolean ) } U = { copyItem$4.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
  98 localDeclaration D = { pasteItem$5 } U = { menu$0.!add( javax.swing.Action ) }
  99 receiver D = {  } U = { menu$0 }
 100 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.pasteAction } TO = javax.swing.JMenu#add( javax.swing.Action )
 101 actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
 102 assignment D = {  } U = { pasteItem$5.!setMnemonic( char ) }
 103 receiver D = {  } U = { pasteItem$5 }
 104 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, pasteItem$5.!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
 105 actualOut D = { pasteItem$5.!setMnemonic( char ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, pasteItem$5.!javax.swing.AbstractButton.model }
 106 assignment D = {  } U = { pasteItem$5.!setIcon( javax.swing.Icon ) }
 107 receiver D = {  } U = { pasteItem$5 }
 108 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, pasteItem$5.!java.awt.Component.changeSupport, pasteItem$5.!java.awt.Component.height, pasteItem$5.!java.awt.Component.width, pasteItem$5.!javax.accessibility.AccessibleContext.accessibleChangeSupport, pasteItem$5.!javax.swing.AbstractButton.accessibleContext, pasteItem$5.!javax.swing.AbstractButton.defaultIcon, pasteItem$5.!javax.swing.AbstractButton.disabledIcon, pasteItem$5.!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
 109 actualOut D = { pasteItem$5.!javax.swing.AbstractButton.defaultIcon, pasteItem$5.!javax.swing.AbstractButton.disabledIcon, pasteItem$5.!setIcon( javax.swing.Icon ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, pasteItem$5.!java.awt.Component.changeSupport, pasteItem$5.!java.awt.Component.height, pasteItem$5.!java.awt.Component.width, pasteItem$5.!javax.accessibility.AccessibleContext.accessibleChangeSupport, pasteItem$5.!javax.swing.AbstractButton.accessibleContext, pasteItem$5.!javax.swing.AbstractButton.defaultIcon, pasteItem$5.!javax.swing.AbstractButton.disabledIcon, pasteItem$5.!javax.swing.JComponent.revalidateRunnableScheduled }
 110 assignment D = {  } U = { pasteItem$5.!setAccelerator( javax.swing.KeyStroke ) }
 111 receiver D = {  } U = { pasteItem$5 }
 112 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, pasteItem$5.!java.awt.Component.changeSupport, pasteItem$5.!java.awt.Component.height, pasteItem$5.!java.awt.Component.width, pasteItem$5.!javax.swing.JComponent.revalidateRunnableScheduled, pasteItem$5.!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
 113 receiver D = {  } U = {  }
 114 methodCall D = {  } U = { KeyEvent.VK_V, KeyEvent.VK_V.CTRL_MASK } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
 115 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
 116 actualOut D = { pasteItem$5.!javax.swing.JMenuItem.accelerator, pasteItem$5.!setAccelerator( javax.swing.KeyStroke ) } U = { menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, pasteItem$5.!java.awt.Component.changeSupport, pasteItem$5.!java.awt.Component.height, pasteItem$5.!java.awt.Component.width, pasteItem$5.!javax.swing.JComponent.revalidateRunnableScheduled, pasteItem$5.!javax.swing.JMenuItem.accelerator }
 117 assignment D = {  } U = { pasteItem$5.!setEnabled( boolean ) }
 118 receiver D = {  } U = { pasteItem$5 }
 119 methodCall D = {  } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, pasteItem$5.!javax.swing.AbstractButton.model } TO = javax.swing.JMenuItem#setEnabled( boolean )
 120 actualOut D = { pasteItem$5.!setEnabled( boolean ) } U = { menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model, pasteItem$5.!javax.swing.AbstractButton.model }
 121 assignment D = {  } U = { menu$0.!addSeparator( ) }
 122 receiver D = {  } U = { menu$0 }
 123 methodCall D = {  } U = { menu$0.!javax.swing.JMenu.popupMenu } TO = javax.swing.JMenu#addSeparator( )
 124 actualOut D = { menu$0.!addSeparator( ), menu$0.!javax.swing.JMenu.popupListener, menu$0.!javax.swing.JMenu.popupMenu } U = { menu$0.!javax.swing.JMenu.popupMenu }
 125 localDeclaration D = { deleteItem$6 } U = { menu$0.!add( javax.swing.Action ) }
 126 receiver D = {  } U = { menu$0 }
 127 methodCall D = {  } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu, this.deleteAction } TO = javax.swing.JMenu#add( javax.swing.Action )
 128 actualOut D = { menu$0.!add( javax.swing.Action ), menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener } U = { menu$0.!javax.swing.AbstractButton.action, menu$0.!javax.swing.AbstractButton.actionPropertyChangeListener, menu$0.!javax.swing.JMenu.popupMenu }
 129 assignment D = {  } U = { deleteItem$6.!setMnemonic( char ) }
 130 receiver D = {  } U = { deleteItem$6 }
 131 methodCall D = {  } U = { deleteItem$6.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.AbstractButton#setMnemonic( char )
 132 actualOut D = { deleteItem$6.!setMnemonic( char ) } U = { deleteItem$6.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
 133 assignment D = {  } U = { deleteItem$6.!setIcon( javax.swing.Icon ) }
 134 receiver D = {  } U = { deleteItem$6 }
 135 methodCall D = {  } U = { deleteItem$6.!java.awt.Component.changeSupport, deleteItem$6.!java.awt.Component.height, deleteItem$6.!java.awt.Component.width, deleteItem$6.!javax.accessibility.AccessibleContext.accessibleChangeSupport, deleteItem$6.!javax.swing.AbstractButton.accessibleContext, deleteItem$6.!javax.swing.AbstractButton.defaultIcon, deleteItem$6.!javax.swing.AbstractButton.disabledIcon, deleteItem$6.!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled } TO = javax.swing.AbstractButton#setIcon( javax.swing.Icon )
 136 actualOut D = { deleteItem$6.!javax.swing.AbstractButton.defaultIcon, deleteItem$6.!javax.swing.AbstractButton.disabledIcon, deleteItem$6.!setIcon( javax.swing.Icon ) } U = { deleteItem$6.!java.awt.Component.changeSupport, deleteItem$6.!java.awt.Component.height, deleteItem$6.!java.awt.Component.width, deleteItem$6.!javax.accessibility.AccessibleContext.accessibleChangeSupport, deleteItem$6.!javax.swing.AbstractButton.accessibleContext, deleteItem$6.!javax.swing.AbstractButton.defaultIcon, deleteItem$6.!javax.swing.AbstractButton.disabledIcon, deleteItem$6.!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.accessibility.AccessibleContext.accessibleChangeSupport, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.accessibleContext, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.defaultIcon, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.disabledIcon, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled }
 137 assignment D = {  } U = { deleteItem$6.!setAccelerator( javax.swing.KeyStroke ) }
 138 receiver D = {  } U = { deleteItem$6 }
 139 methodCall D = {  } U = { deleteItem$6.!java.awt.Component.changeSupport, deleteItem$6.!java.awt.Component.height, deleteItem$6.!java.awt.Component.width, deleteItem$6.!javax.swing.JComponent.revalidateRunnableScheduled, deleteItem$6.!javax.swing.JMenuItem.accelerator, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator, this.!getKeyStroke( int int boolean ) } TO = javax.swing.JMenuItem#setAccelerator( javax.swing.KeyStroke )
 140 receiver D = {  } U = {  }
 141 methodCall D = {  } U = { KeyEvent.VK_DELETE } TO = javax.swing.KeyStroke#getKeyStroke( int int boolean )
 142 actualOut D = { this.!getKeyStroke( int int boolean ) } U = {  }
 143 actualOut D = { deleteItem$6.!javax.swing.JMenuItem.accelerator, deleteItem$6.!setAccelerator( javax.swing.KeyStroke ) } U = { deleteItem$6.!java.awt.Component.changeSupport, deleteItem$6.!java.awt.Component.height, deleteItem$6.!java.awt.Component.width, deleteItem$6.!javax.swing.JComponent.revalidateRunnableScheduled, deleteItem$6.!javax.swing.JMenuItem.accelerator, menu$0.!add( javax.swing.Action ).!java.awt.Component.changeSupport, menu$0.!add( javax.swing.Action ).!java.awt.Component.height, menu$0.!add( javax.swing.Action ).!java.awt.Component.width, menu$0.!add( javax.swing.Action ).!javax.swing.JComponent.revalidateRunnableScheduled, menu$0.!add( javax.swing.Action ).!javax.swing.JMenuItem.accelerator }
 144 assignment D = {  } U = { deleteItem$6.!setEnabled( boolean ) }
 145 receiver D = {  } U = { deleteItem$6 }
 146 methodCall D = {  } U = { deleteItem$6.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model } TO = javax.swing.JMenuItem#setEnabled( boolean )
 147 actualOut D = { deleteItem$6.!setEnabled( boolean ) } U = { deleteItem$6.!javax.swing.AbstractButton.model, menu$0.!add( javax.swing.Action ).!javax.swing.AbstractButton.model }
 148 methodExit
 149 formalOut D = {  } U = { $_ }
--
   0: serialVersionUID
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: toolBar
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: copyAction
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: initFileActions( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->   17 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->   15 trueControlFlow
   5:    4 ->    6 trueControlFlow
   6:    5 ->    3 trueControlFlow
   7:    6 ->    9 trueControlFlow
   8:    7 ->   14 trueControlFlow
   9:    8 ->   12 trueControlFlow
  10:    9 ->   10 trueControlFlow
  11:   10 ->   11 trueControlFlow
  12:   11 ->    8 trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->    7 trueControlFlow
  15:   14 ->    5 trueControlFlow
  16:   15 ->    1 trueControlFlow
  17:   16 ->   32 trueControlFlow
  18:   17 ->   19 trueControlFlow
  19:   18 ->   30 trueControlFlow
  20:   19 ->   21 trueControlFlow
  21:   20 ->   18 trueControlFlow
  22:   21 ->   24 trueControlFlow
  23:   22 ->   29 trueControlFlow
  24:   23 ->   27 trueControlFlow
  25:   24 ->   25 trueControlFlow
  26:   25 ->   26 trueControlFlow
  27:   26 ->   23 trueControlFlow
  28:   27 ->   28 trueControlFlow
  29:   28 ->   22 trueControlFlow
  30:   29 ->   20 trueControlFlow
  31:   30 ->   16 trueControlFlow
  32:   31 ->   47 trueControlFlow
  33:   32 ->   34 trueControlFlow
  34:   33 ->   45 trueControlFlow
  35:   34 ->   36 trueControlFlow
  36:   35 ->   33 trueControlFlow
  37:   36 ->   39 trueControlFlow
  38:   37 ->   44 trueControlFlow
  39:   38 ->   42 trueControlFlow
  40:   39 ->   40 trueControlFlow
  41:   40 ->   41 trueControlFlow
  42:   41 ->   38 trueControlFlow
  43:   42 ->   43 trueControlFlow
  44:   43 ->   37 trueControlFlow
  45:   44 ->   35 trueControlFlow
  46:   45 ->   31 trueControlFlow
  47:   47 ->   46 trueControlFlow
--
   0: createPopup( javax.swing.JPopupMenu )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    7 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    2 trueControlFlow
   7:    6 ->   11 trueControlFlow
   8:    7 ->    8 trueControlFlow
   9:    8 ->    9 trueControlFlow
  10:    9 ->    6 trueControlFlow
  11:   10 ->   15 trueControlFlow
  12:   11 ->   12 trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   10 trueControlFlow
  15:   14 ->   19 trueControlFlow
  16:   15 ->   16 trueControlFlow
  17:   16 ->   17 trueControlFlow
  18:   17 ->   14 trueControlFlow
  19:   18 ->   23 trueControlFlow
  20:   19 ->   20 trueControlFlow
  21:   20 ->   21 trueControlFlow
  22:   21 ->   18 trueControlFlow
  23:   22 ->   27 trueControlFlow
  24:   23 ->   24 trueControlFlow
  25:   24 ->   25 trueControlFlow
  26:   25 ->   22 trueControlFlow
  27:   27 ->   26 trueControlFlow
--
   0: getFileName( boolean )
   1:    0 ->    2 trueControlFlow
   2:    1 ->   41 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    8 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    6 trueControlFlow
   7:    6 ->    3 trueControlFlow
   8:    7 ->   12 trueControlFlow
   9:    8 ->    9 trueControlFlow
  10:    9 ->   10 trueControlFlow
  11:   10 ->    7 trueControlFlow
  12:   11 ->   15 trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   14 trueControlFlow
  15:   14 ->   11 trueControlFlow
  16:   15 ->   16 trueControlFlow
  17:   16 ->   18 trueControlFlow
  18:   16 ->   22 falseControlFlow
  19:   17 ->   25 trueControlFlow
  20:   18 ->   19 trueControlFlow
  21:   19 ->    1 exceptionCatchFlow
  22:   19 ->   20 trueControlFlow
  23:   20 ->   17 trueControlFlow
  24:   21 ->   25 trueControlFlow
  25:   22 ->   23 trueControlFlow
  26:   23 ->    1 exceptionCatchFlow
  27:   23 ->   24 trueControlFlow
  28:   24 ->   21 trueControlFlow
  29:   25 ->   27 trueControlFlow
  30:   26 ->   30 trueControlFlow
  31:   27 ->   28 trueControlFlow
  32:   28 ->   29 trueControlFlow
  33:   29 ->   26 trueControlFlow
  34:   30 ->   32 trueControlFlow
  35:   30 ->   39 falseControlFlow
  36:   31 ->   36 trueControlFlow
  37:   32 ->   33 trueControlFlow
  38:   33 ->   34 trueControlFlow
  39:   34 ->   31 trueControlFlow
  40:   35 ->   39 fallThroughFlow
  41:   35 ->   42 trueControlFlow
  42:   36 ->   37 trueControlFlow
  43:   37 ->   38 trueControlFlow
  44:   38 ->   35 trueControlFlow
  45:   39 ->   40 trueControlFlow
  46:   40 ->   42 fallThroughFlow
  47:   40 ->   42 trueControlFlow
  48:   42 ->   41 trueControlFlow
--
   0: DrawMenu( jp.ac.ritsumei.cs.draw.DrawTool jp.ac.ritsumei.cs.draw.TabbedCanvas )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
   3:    2 ->    3 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    6 trueControlFlow
   6:    5 ->   10 trueControlFlow
   7:    6 ->    7 trueControlFlow
   8:    7 ->    8 trueControlFlow
   9:    8 ->    5 trueControlFlow
  10:    9 ->   15 trueControlFlow
  11:   10 ->   12 trueControlFlow
  12:   11 ->   11+ trueControlFlow
  13:   12 ->   11 trueControlFlow
  14:   13 ->    9 trueControlFlow
  15:   14 ->   19 trueControlFlow
  16:   15 ->   16 trueControlFlow
  17:   16 ->   17 trueControlFlow
  18:   17 ->   14 trueControlFlow
  19:   18 ->   23 trueControlFlow
  20:   19 ->   20 trueControlFlow
  21:   20 ->   21 trueControlFlow
  22:   21 ->   18 trueControlFlow
  23:   22 ->   28 trueControlFlow
  24:   23 ->   25 trueControlFlow
  25:   24 ->   26 trueControlFlow
  26:   25 ->   24 trueControlFlow
  27:   26 ->   22 trueControlFlow
  28:   27 ->   32 trueControlFlow
  29:   28 ->   29 trueControlFlow
  30:   29 ->   30 trueControlFlow
  31:   30 ->   27 trueControlFlow
  32:   31 ->   35 trueControlFlow
  33:   32 ->   33 trueControlFlow
  34:   33 ->   34 trueControlFlow
  35:   34 ->   31 trueControlFlow
  36:   35 ->   37 trueControlFlow
  37:   36 ->   42 trueControlFlow
  38:   37 ->   39 trueControlFlow
  39:   38 ->   38+ trueControlFlow
  40:   39 ->   38 trueControlFlow
  41:   40 ->   36 trueControlFlow
  42:   41 ->   46 trueControlFlow
  43:   42 ->   43 trueControlFlow
  44:   43 ->   44 trueControlFlow
  45:   44 ->   41 trueControlFlow
  46:   46 ->   45 trueControlFlow
  47:   11+ ->   11+ trueControlFlow
  48:   11+ ->   11+ trueControlFlow
  49:   11+ ->   11+ trueControlFlow
  50:   11+ ->   11+ trueControlFlow
  51:   11+ ->   11+ trueControlFlow
  52:   11+ ->   11+ trueControlFlow
  53:   11+ ->   11+ trueControlFlow
  54:   11+ ->   11+ trueControlFlow
  55:   11+ ->   11+ trueControlFlow
  56:   11+ ->   11+ trueControlFlow
  57:   11+ ->   11+ trueControlFlow
  58:   11+ ->   13 trueControlFlow
  59:   38+ ->   40 trueControlFlow
--
   0: tool
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: updateEditState( boolean )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    7 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    2 trueControlFlow
   7:    6 ->   10 trueControlFlow
   8:    7 ->    8 trueControlFlow
   9:    8 ->    9 trueControlFlow
  10:    9 ->    6 trueControlFlow
  11:   10 ->   12 trueControlFlow
  12:   10 ->   16 falseControlFlow
  13:   11 ->   19 trueControlFlow
  14:   12 ->   13 trueControlFlow
  15:   13 ->   14 trueControlFlow
  16:   14 ->   11 trueControlFlow
  17:   15 ->   19 trueControlFlow
  18:   16 ->   17 trueControlFlow
  19:   17 ->   18 trueControlFlow
  20:   18 ->   15 trueControlFlow
  21:   19 ->   21 trueControlFlow
  22:   20 ->   25 trueControlFlow
  23:   21 ->   22 trueControlFlow
  24:   22 ->   23 trueControlFlow
  25:   23 ->   20 trueControlFlow
  26:   25 ->   24 trueControlFlow
--
   0: recentFiles
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: cutAction
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: undoAction
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: saveTempFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    4 trueControlFlow
   3:    2 ->   11 trueControlFlow
   4:    3 ->    7 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    6 trueControlFlow
   7:    6 ->    3 trueControlFlow
   8:    7 ->    8 trueControlFlow
   9:    8 ->    2 trueControlFlow
  10:    9 ->   18 fallThroughFlow
  11:    9 ->   18 trueControlFlow
  12:   10 ->   15 trueControlFlow
  13:   11 ->   12 trueControlFlow
  14:   12 ->   13 trueControlFlow
  15:   13 ->   10 trueControlFlow
  16:   14 ->   16 trueControlFlow
  17:   15 ->   14 trueControlFlow
  18:   16 ->    9 trueControlFlow
  19:   18 ->   17 trueControlFlow
--
   0: deleteAction
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: closeFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1:    0 ->    2 trueControlFlow
   2:    1 ->   45 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    8 trueControlFlow
   5:    3 ->   29 falseControlFlow
   6:    4 ->    5 trueControlFlow
   7:    5 ->    6 trueControlFlow
   8:    6 ->    3 trueControlFlow
   9:    7 ->   11 trueControlFlow
  10:    8 ->    9 trueControlFlow
  11:    9 ->    1 exceptionCatchFlow
  12:    9 ->   10 trueControlFlow
  13:   10 ->    7 trueControlFlow
  14:   11 ->   12 trueControlFlow
  15:   11 ->   13 falseControlFlow
  16:   12 ->   13 fallThroughFlow
  17:   12 ->   28 trueControlFlow
  18:   13 ->   15 trueControlFlow
  19:   13 ->   27 falseControlFlow
  20:   14 ->   20 trueControlFlow
  21:   14 ->   26 falseControlFlow
  22:   15 ->   17 trueControlFlow
  23:   16 ->    1 exceptionCatchFlow
  24:   16 ->   18 trueControlFlow
  25:   17 ->   16 trueControlFlow
  26:   18 ->   14 trueControlFlow
  27:   19 ->   23 trueControlFlow
  28:   20 ->   21 trueControlFlow
  29:   21 ->    1 exceptionCatchFlow
  30:   21 ->   22 trueControlFlow
  31:   22 ->   19 trueControlFlow
  32:   23 ->   24 trueControlFlow
  33:   23 ->   25 falseControlFlow
  34:   24 ->   25 fallThroughFlow
  35:   24 ->   46 trueControlFlow
  36:   25 ->   26 trueControlFlow
  37:   26 ->   27 trueControlFlow
  38:   27 ->   28 trueControlFlow
  39:   28 ->   29 trueControlFlow
  40:   29 ->   31 trueControlFlow
  41:   30 ->   36 trueControlFlow
  42:   31 ->   33 trueControlFlow
  43:   32 ->   32+ trueControlFlow
  44:   33 ->   32 trueControlFlow
  45:   34 ->   30 trueControlFlow
  46:   35 ->   40 trueControlFlow
  47:   35 ->   43 falseControlFlow
  48:   36 ->   37 trueControlFlow
  49:   37 ->   38 trueControlFlow
  50:   38 ->   35 trueControlFlow
  51:   39 ->   43 trueControlFlow
  52:   40 ->   41 trueControlFlow
  53:   41 ->   42 trueControlFlow
  54:   42 ->   39 trueControlFlow
  55:   43 ->   44 trueControlFlow
  56:   44 ->   46 fallThroughFlow
  57:   44 ->   46 trueControlFlow
  58:   46 ->   45 trueControlFlow
  59:   32+ ->   34 trueControlFlow
--
   0: newAction
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: newFile( )
   1:    0 ->    3 trueControlFlow
   2:    1 ->   40 trueControlFlow
   3:    2 ->    7 trueControlFlow
   4:    3 ->    5 trueControlFlow
   5:    4 ->    1 exceptionCatchFlow
   6:    4 ->    4+ trueControlFlow
   7:    5 ->    4 trueControlFlow
   8:    6 ->    2 trueControlFlow
   9:    7 ->    8 trueControlFlow
  10:    7 ->    9 falseControlFlow
  11:    8 ->    9 fallThroughFlow
  12:    8 ->   41 trueControlFlow
  13:    9 ->   11 trueControlFlow
  14:   10 ->   16 trueControlFlow
  15:   10 ->   20 falseControlFlow
  16:   11 ->   13 trueControlFlow
  17:   12 ->   14 trueControlFlow
  18:   13 ->   12 trueControlFlow
  19:   14 ->   10 trueControlFlow
  20:   15 ->   19 trueControlFlow
  21:   16 ->   17 trueControlFlow
  22:   17 ->    1 exceptionCatchFlow
  23:   17 ->   18 trueControlFlow
  24:   18 ->   15 trueControlFlow
  25:   19 ->   20 fallThroughFlow
  26:   19 ->   41 trueControlFlow
  27:   20 ->   22 trueControlFlow
  28:   21 ->   27 trueControlFlow
  29:   22 ->   24 trueControlFlow
  30:   23 ->   23+ trueControlFlow
  31:   24 ->   23 trueControlFlow
  32:   25 ->   21 trueControlFlow
  33:   26 ->   32 trueControlFlow
  34:   27 ->   29 trueControlFlow
  35:   28 ->   30 trueControlFlow
  36:   29 ->   28 trueControlFlow
  37:   30 ->   26 trueControlFlow
  38:   31 ->   36 trueControlFlow
  39:   32 ->   33 trueControlFlow
  40:   33 ->   34 trueControlFlow
  41:   34 ->   31 trueControlFlow
  42:   35 ->   39 trueControlFlow
  43:   36 ->   37 trueControlFlow
  44:   37 ->   38 trueControlFlow
  45:   38 ->   35 trueControlFlow
  46:   39 ->   41 fallThroughFlow
  47:   39 ->   41 trueControlFlow
  48:   41 ->   40 trueControlFlow
  49:    4+ ->    6 trueControlFlow
  50:   23+ ->   23+ trueControlFlow
  51:   23+ ->   23+ trueControlFlow
  52:   23+ ->   23+ trueControlFlow
  53:   23+ ->   23+ trueControlFlow
  54:   23+ ->   23+ trueControlFlow
  55:   23+ ->   23+ trueControlFlow
  56:   23+ ->   23+ trueControlFlow
  57:   23+ ->   23+ trueControlFlow
  58:   23+ ->   23+ trueControlFlow
  59:   23+ ->   23+ trueControlFlow
  60:   23+ ->   25 trueControlFlow
--
   0: windowListener
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: saveAsFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1:    0 ->    2 trueControlFlow
   2:    1 ->   34 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    8 trueControlFlow
   5:    4 ->    6 trueControlFlow
   6:    5 ->    1 exceptionCatchFlow
   7:    5 ->    5+ trueControlFlow
   8:    6 ->    5 trueControlFlow
   9:    7 ->    3 trueControlFlow
  10:    8 ->    9 trueControlFlow
  11:    8 ->   10 falseControlFlow
  12:    9 ->   10 fallThroughFlow
  13:    9 ->   35 trueControlFlow
  14:   10 ->   12 trueControlFlow
  15:   11 ->   18 trueControlFlow
  16:   11 ->   32 falseControlFlow
  17:   12 ->   14 trueControlFlow
  18:   13 ->    1 exceptionCatchFlow
  19:   13 ->   16 trueControlFlow
  20:   14 ->   15 trueControlFlow
  21:   15 ->   13 trueControlFlow
  22:   16 ->   11 trueControlFlow
  23:   17 ->   23 trueControlFlow
  24:   18 ->   20 trueControlFlow
  25:   19 ->   21 trueControlFlow
  26:   20 ->   19 trueControlFlow
  27:   21 ->   17 trueControlFlow
  28:   22 ->   28 trueControlFlow
  29:   23 ->   25 trueControlFlow
  30:   24 ->   26 trueControlFlow
  31:   25 ->   24 trueControlFlow
  32:   26 ->   22 trueControlFlow
  33:   27 ->   31 trueControlFlow
  34:   28 ->   29 trueControlFlow
  35:   29 ->   30 trueControlFlow
  36:   30 ->   27 trueControlFlow
  37:   31 ->   32 fallThroughFlow
  38:   31 ->   35 trueControlFlow
  39:   32 ->   33 trueControlFlow
  40:   33 ->   35 fallThroughFlow
  41:   33 ->   35 trueControlFlow
  42:   35 ->   34 trueControlFlow
  43:    5+ ->    7 trueControlFlow
--
   0: menuBar
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: getToolBar( )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 fallThroughFlow
   3:    1 ->    3 trueControlFlow
   4:    3 ->    2 trueControlFlow
--
   0: closeAllFiles( )
   1:    0 ->    3 trueControlFlow
   2:    1 ->   13 trueControlFlow
   3:    2 ->    7 trueControlFlow
   4:    2 ->   14 falseControlFlow
   5:    3 ->    4 trueControlFlow
   6:    4 ->    5 trueControlFlow
   7:    5 ->    2 trueControlFlow
   8:    6 ->   11 trueControlFlow
   9:    6 ->   12 falseControlFlow
  10:    7 ->    9 trueControlFlow
  11:    8 ->    1 exceptionCatchFlow
  12:    8 ->    8+ trueControlFlow
  13:    9 ->    8 trueControlFlow
  14:   10 ->    6 trueControlFlow
  15:   11 ->   12 fallThroughFlow
  16:   11 ->   14 trueControlFlow
  17:   12 ->    3 trueControlFlow (L = 2)
  18:   14 ->   13 trueControlFlow
  19:    8+ ->   10 trueControlFlow
--
   0: redoAction
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: getMenuBar( )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 fallThroughFlow
   3:    1 ->    3 trueControlFlow
   4:    3 ->    2 trueControlFlow
--
   0: openFile( )
   1:    0 ->    4 trueControlFlow
   2:    1 ->   16 trueControlFlow
   3:    2 ->   16 trueControlFlow
   4:    3 ->    8 trueControlFlow
   5:    4 ->    6 trueControlFlow
   6:    5 ->    1 exceptionCatchFlow
   7:    5 ->    5+ trueControlFlow
   8:    6 ->    5 trueControlFlow
   9:    7 ->    3 trueControlFlow
  10:    8 ->    9 trueControlFlow
  11:    8 ->   10 falseControlFlow
  12:    9 ->   10 fallThroughFlow
  13:    9 ->   17 trueControlFlow
  14:   10 ->   12 trueControlFlow
  15:   11 ->   17 fallThroughFlow
  16:   11 ->   17 trueControlFlow
  17:   12 ->   14 trueControlFlow
  18:   13 ->    1 exceptionCatchFlow
  19:   13 ->    2 exceptionCatchFlow
  20:   13 ->   13+ trueControlFlow
  21:   14 ->   13 trueControlFlow
  22:   15 ->   11 trueControlFlow
  23:   17 ->   16 trueControlFlow
  24:    5+ ->    7 trueControlFlow
  25:   13+ ->   13+ trueControlFlow
  26:   13+ ->   13+ trueControlFlow
  27:   13+ ->   13+ trueControlFlow
  28:   13+ ->   13+ trueControlFlow
  29:   13+ ->   13+ trueControlFlow
  30:   13+ ->   13+ trueControlFlow
  31:   13+ ->   13+ trueControlFlow
  32:   13+ ->   13+ trueControlFlow
  33:   13+ ->   13+ trueControlFlow
  34:   13+ ->   13+ trueControlFlow
  35:   13+ ->   13+ trueControlFlow
  36:   13+ ->   13+ trueControlFlow
  37:   13+ ->   13+ trueControlFlow
  38:   13+ ->   13+ trueControlFlow
  39:   13+ ->   15 trueControlFlow
--
   0: fileExists( java.lang.String )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    7 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    2 trueControlFlow
   7:    6 ->   11 fallThroughFlow
   8:    6 ->   11 trueControlFlow
   9:    7 ->    8 trueControlFlow
  10:    8 ->    9 trueControlFlow
  11:    9 ->    6 trueControlFlow
  12:   11 ->   10 trueControlFlow
--
   0: initToolBar( javax.swing.JToolBar )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    7 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    2 trueControlFlow
   7:    6 ->   11 trueControlFlow
   8:    7 ->    8 trueControlFlow
   9:    8 ->    9 trueControlFlow
  10:    9 ->    6 trueControlFlow
  11:   10 ->   15 trueControlFlow
  12:   11 ->   12 trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   10 trueControlFlow
  15:   14 ->   19 trueControlFlow
  16:   15 ->   16 trueControlFlow
  17:   16 ->   17 trueControlFlow
  18:   17 ->   14 trueControlFlow
  19:   18 ->   23 trueControlFlow
  20:   19 ->   20 trueControlFlow
  21:   20 ->   21 trueControlFlow
  22:   21 ->   18 trueControlFlow
  23:   22 ->   27 trueControlFlow
  24:   23 ->   24 trueControlFlow
  25:   24 ->   25 trueControlFlow
  26:   25 ->   22 trueControlFlow
  27:   26 ->   31 trueControlFlow
  28:   27 ->   28 trueControlFlow
  29:   28 ->   29 trueControlFlow
  30:   29 ->   26 trueControlFlow
  31:   30 ->   35 trueControlFlow
  32:   31 ->   32 trueControlFlow
  33:   32 ->   33 trueControlFlow
  34:   33 ->   30 trueControlFlow
  35:   34 ->   39 trueControlFlow
  36:   35 ->   36 trueControlFlow
  37:   36 ->   37 trueControlFlow
  38:   37 ->   34 trueControlFlow
  39:   38 ->   43 trueControlFlow
  40:   39 ->   40 trueControlFlow
  41:   40 ->   41 trueControlFlow
  42:   41 ->   38 trueControlFlow
  43:   42 ->   47 trueControlFlow
  44:   43 ->   44 trueControlFlow
  45:   44 ->   45 trueControlFlow
  46:   45 ->   42 trueControlFlow
  47:   46 ->   51 trueControlFlow
  48:   47 ->   48 trueControlFlow
  49:   48 ->   49 trueControlFlow
  50:   49 ->   46 trueControlFlow
  51:   50 ->   55 trueControlFlow
  52:   51 ->   52 trueControlFlow
  53:   52 ->   53 trueControlFlow
  54:   53 ->   50 trueControlFlow
  55:   54 ->   59 trueControlFlow
  56:   55 ->   56 trueControlFlow
  57:   56 ->   57 trueControlFlow
  58:   57 ->   54 trueControlFlow
  59:   58 ->   63 trueControlFlow
  60:   59 ->   60 trueControlFlow
  61:   60 ->   61 trueControlFlow
  62:   61 ->   58 trueControlFlow
  63:   62 ->   67 trueControlFlow
  64:   63 ->   64 trueControlFlow
  65:   64 ->   65 trueControlFlow
  66:   65 ->   62 trueControlFlow
  67:   66 ->   71 trueControlFlow
  68:   67 ->   68 trueControlFlow
  69:   68 ->   69 trueControlFlow
  70:   69 ->   66 trueControlFlow
  71:   70 ->   75 trueControlFlow
  72:   71 ->   72 trueControlFlow
  73:   72 ->   73 trueControlFlow
  74:   73 ->   70 trueControlFlow
  75:   74 ->   79 trueControlFlow
  76:   75 ->   76 trueControlFlow
  77:   76 ->   77 trueControlFlow
  78:   77 ->   74 trueControlFlow
  79:   78 ->   83 trueControlFlow
  80:   79 ->   80 trueControlFlow
  81:   80 ->   81 trueControlFlow
  82:   81 ->   78 trueControlFlow
  83:   83 ->   82 trueControlFlow
--
   0: RECENT_FILES
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: addRecentFile( java.lang.String )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    6 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    2 trueControlFlow
   7:    6 ->    8 trueControlFlow
   8:    6 ->   21 falseControlFlow
   9:    7 ->   12 trueControlFlow
  10:    8 ->    9 trueControlFlow
  11:    9 ->   10 trueControlFlow
  12:   10 ->    7 trueControlFlow
  13:   11 ->   16 trueControlFlow
  14:   11 ->   19 falseControlFlow
  15:   12 ->   13 trueControlFlow
  16:   13 ->   14 trueControlFlow
  17:   14 ->   11 trueControlFlow
  18:   15 ->   19 trueControlFlow
  19:   16 ->   17 trueControlFlow
  20:   17 ->   18 trueControlFlow
  21:   18 ->   15 trueControlFlow
  22:   19 ->   28 trueControlFlow
  23:   20 ->   25 trueControlFlow
  24:   21 ->   22 trueControlFlow
  25:   22 ->   23 trueControlFlow
  26:   23 ->   20 trueControlFlow
  27:   24 ->   28 trueControlFlow
  28:   25 ->   26 trueControlFlow
  29:   26 ->   27 trueControlFlow
  30:   27 ->   24 trueControlFlow
  31:   28 ->   30 trueControlFlow
  32:   30 ->   29 trueControlFlow
--
   0: fileListMenu
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas java.lang.String )
   1:    0 ->    2 trueControlFlow
   2:    1 ->   25 trueControlFlow
   3:    2 ->    3 trueControlFlow
   4:    3 ->    6 trueControlFlow
   5:    4 ->   12 trueControlFlow
   6:    5 ->   10 trueControlFlow
   7:    6 ->    7 trueControlFlow
   8:    7 ->    8 trueControlFlow
   9:    8 ->    5 trueControlFlow
  10:    9 ->   11 trueControlFlow
  11:   10 ->    9 trueControlFlow
  12:   11 ->    4 trueControlFlow
  13:   12 ->   14 trueControlFlow
  14:   12 ->   18 falseControlFlow
  15:   13 ->   17 trueControlFlow
  16:   14 ->   15 trueControlFlow
  17:   15 ->    1 exceptionCatchFlow
  18:   15 ->   16 trueControlFlow
  19:   16 ->   13 trueControlFlow
  20:   17 ->   18 fallThroughFlow
  21:   17 ->   26 trueControlFlow
  22:   18 ->   20 trueControlFlow
  23:   19 ->   24 trueControlFlow
  24:   20 ->   22 trueControlFlow
  25:   21 ->   23 trueControlFlow
  26:   22 ->   21 trueControlFlow
  27:   23 ->   19 trueControlFlow
  28:   24 ->   26 fallThroughFlow
  29:   24 ->   26 trueControlFlow
  30:   26 ->   25 trueControlFlow
--
   0: clipboard
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: initEditActions( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->   17 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->   15 trueControlFlow
   5:    4 ->    6 trueControlFlow
   6:    5 ->    3 trueControlFlow
   7:    6 ->    9 trueControlFlow
   8:    7 ->   14 trueControlFlow
   9:    8 ->   12 trueControlFlow
  10:    9 ->   10 trueControlFlow
  11:   10 ->   11 trueControlFlow
  12:   11 ->    8 trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->    7 trueControlFlow
  15:   14 ->    5 trueControlFlow
  16:   15 ->    1 trueControlFlow
  17:   16 ->   32 trueControlFlow
  18:   17 ->   19 trueControlFlow
  19:   18 ->   30 trueControlFlow
  20:   19 ->   21 trueControlFlow
  21:   20 ->   18 trueControlFlow
  22:   21 ->   24 trueControlFlow
  23:   22 ->   29 trueControlFlow
  24:   23 ->   27 trueControlFlow
  25:   24 ->   25 trueControlFlow
  26:   25 ->   26 trueControlFlow
  27:   26 ->   23 trueControlFlow
  28:   27 ->   28 trueControlFlow
  29:   28 ->   22 trueControlFlow
  30:   29 ->   20 trueControlFlow
  31:   30 ->   16 trueControlFlow
  32:   31 ->   47 trueControlFlow
  33:   32 ->   34 trueControlFlow
  34:   33 ->   45 trueControlFlow
  35:   34 ->   36 trueControlFlow
  36:   35 ->   33 trueControlFlow
  37:   36 ->   39 trueControlFlow
  38:   37 ->   44 trueControlFlow
  39:   38 ->   42 trueControlFlow
  40:   39 ->   40 trueControlFlow
  41:   40 ->   41 trueControlFlow
  42:   41 ->   38 trueControlFlow
  43:   42 ->   43 trueControlFlow
  44:   43 ->   37 trueControlFlow
  45:   44 ->   35 trueControlFlow
  46:   45 ->   31 trueControlFlow
  47:   46 ->   62 trueControlFlow
  48:   47 ->   49 trueControlFlow
  49:   48 ->   60 trueControlFlow
  50:   49 ->   51 trueControlFlow
  51:   50 ->   48 trueControlFlow
  52:   51 ->   54 trueControlFlow
  53:   52 ->   59 trueControlFlow
  54:   53 ->   57 trueControlFlow
  55:   54 ->   55 trueControlFlow
  56:   55 ->   56 trueControlFlow
  57:   56 ->   53 trueControlFlow
  58:   57 ->   58 trueControlFlow
  59:   58 ->   52 trueControlFlow
  60:   59 ->   50 trueControlFlow
  61:   60 ->   46 trueControlFlow
  62:   61 ->   77 trueControlFlow
  63:   62 ->   64 trueControlFlow
  64:   63 ->   75 trueControlFlow
  65:   64 ->   66 trueControlFlow
  66:   65 ->   63 trueControlFlow
  67:   66 ->   69 trueControlFlow
  68:   67 ->   74 trueControlFlow
  69:   68 ->   72 trueControlFlow
  70:   69 ->   70 trueControlFlow
  71:   70 ->   71 trueControlFlow
  72:   71 ->   68 trueControlFlow
  73:   72 ->   73 trueControlFlow
  74:   73 ->   67 trueControlFlow
  75:   74 ->   65 trueControlFlow
  76:   75 ->   61 trueControlFlow
  77:   76 ->   82 trueControlFlow
  78:   77 ->   79 trueControlFlow
  79:   78 ->   80 trueControlFlow
  80:   79 ->   78 trueControlFlow
  81:   80 ->   76 trueControlFlow
  82:   82 ->   81 trueControlFlow
--
   0: updateRedoState( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    5 trueControlFlow
   3:    2 ->    3 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    1 trueControlFlow
   6:    5 ->    6 trueControlFlow
   7:    5 ->    7 falseControlFlow
   8:    6 ->    7 fallThroughFlow
   9:    6 ->   26 trueControlFlow
  10:    7 ->    9 trueControlFlow
  11:    8 ->   13 trueControlFlow
  12:    9 ->   10 trueControlFlow
  13:   10 ->   11 trueControlFlow
  14:   11 ->    8 trueControlFlow
  15:   12 ->   17 trueControlFlow
  16:   12 ->   21 falseControlFlow
  17:   13 ->   14 trueControlFlow
  18:   14 ->   15 trueControlFlow
  19:   15 ->   12 trueControlFlow
  20:   16 ->   24 trueControlFlow
  21:   17 ->   18 trueControlFlow
  22:   18 ->   19 trueControlFlow
  23:   19 ->   16 trueControlFlow
  24:   20 ->   24 trueControlFlow
  25:   21 ->   22 trueControlFlow
  26:   22 ->   23 trueControlFlow
  27:   23 ->   20 trueControlFlow
  28:   24 ->   26 trueControlFlow
  29:   26 ->   25 trueControlFlow
--
   0: directory
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: tabbedCanvas
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: fileListener
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: autoSave
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: saveAction
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: initMenuBar( javax.swing.JMenuBar )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    7 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    2 trueControlFlow
   7:    6 ->   11 trueControlFlow
   8:    7 ->    8 trueControlFlow
   9:    8 ->    9 trueControlFlow
  10:    9 ->    6 trueControlFlow
  11:   10 ->   15 trueControlFlow
  12:   11 ->   12 trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   10 trueControlFlow
  15:   14 ->   19 trueControlFlow
  16:   15 ->   16 trueControlFlow
  17:   16 ->   16+ trueControlFlow
  18:   17 ->   14 trueControlFlow
  19:   18 ->   24 trueControlFlow
  20:   19 ->   21 trueControlFlow
  21:   20 ->   20+ trueControlFlow
  22:   21 ->   20 trueControlFlow
  23:   22 ->   18 trueControlFlow
  24:   23 ->   28 trueControlFlow
  25:   24 ->   25 trueControlFlow
  26:   25 ->   26 trueControlFlow
  27:   26 ->   23 trueControlFlow
  28:   27 ->   32 trueControlFlow
  29:   28 ->   29 trueControlFlow
  30:   29 ->   30 trueControlFlow
  31:   30 ->   27 trueControlFlow
  32:   31 ->   36 trueControlFlow
  33:   32 ->   33 trueControlFlow
  34:   33 ->   34 trueControlFlow
  35:   34 ->   31 trueControlFlow
  36:   35 ->   40 trueControlFlow
  37:   36 ->   37 trueControlFlow
  38:   37 ->   37+ trueControlFlow
  39:   38 ->   35 trueControlFlow
  40:   39 ->   45 trueControlFlow
  41:   40 ->   42 trueControlFlow
  42:   41 ->   43 trueControlFlow
  43:   42 ->   41 trueControlFlow
  44:   43 ->   39 trueControlFlow
  45:   44 ->   49 trueControlFlow
  46:   45 ->   46 trueControlFlow
  47:   46 ->   47 trueControlFlow
  48:   47 ->   44 trueControlFlow
  49:   48 ->   53 trueControlFlow
  50:   49 ->   50 trueControlFlow
  51:   50 ->   51 trueControlFlow
  52:   51 ->   48 trueControlFlow
  53:   52 ->   57 trueControlFlow
  54:   53 ->   54 trueControlFlow
  55:   54 ->   55 trueControlFlow
  56:   55 ->   52 trueControlFlow
  57:   56 ->   61 trueControlFlow
  58:   57 ->   58 trueControlFlow
  59:   58 ->   59 trueControlFlow
  60:   59 ->   56 trueControlFlow
  61:   60 ->   68 trueControlFlow
  62:   61 ->   63 trueControlFlow
  63:   62 ->   66 trueControlFlow
  64:   63 ->   64 trueControlFlow
  65:   64 ->   65 trueControlFlow
  66:   65 ->   62 trueControlFlow
  67:   66 ->   60 trueControlFlow
  68:   68 ->   67 trueControlFlow
  69:   16+ ->   16+ trueControlFlow
  70:   16+ ->   16+ trueControlFlow
  71:   16+ ->   17 trueControlFlow
  72:   20+ ->   20+ trueControlFlow
  73:   20+ ->   22 trueControlFlow
  74:   37+ ->   37+ trueControlFlow
  75:   37+ ->   37+ trueControlFlow
  76:   37+ ->   37+ trueControlFlow
  77:   37+ ->   37+ trueControlFlow
  78:   37+ ->   37+ trueControlFlow
  79:   37+ ->   38 trueControlFlow
--
   0: pasteAction
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: initFileMenu( javax.swing.JMenu )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    7 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    2 trueControlFlow
   7:    6 ->   11 trueControlFlow
   8:    7 ->    8 trueControlFlow
   9:    8 ->    9 trueControlFlow
  10:    9 ->    6 trueControlFlow
  11:   10 ->   15 trueControlFlow
  12:   11 ->   12 trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   10 trueControlFlow
  15:   14 ->   22 trueControlFlow
  16:   15 ->   17 trueControlFlow
  17:   16 ->   20 trueControlFlow
  18:   17 ->   18 trueControlFlow
  19:   18 ->   19 trueControlFlow
  20:   19 ->   16 trueControlFlow
  21:   20 ->   14 trueControlFlow
  22:   21 ->   26 trueControlFlow
  23:   22 ->   23 trueControlFlow
  24:   23 ->   24 trueControlFlow
  25:   24 ->   21 trueControlFlow
  26:   25 ->   30 trueControlFlow
  27:   26 ->   27 trueControlFlow
  28:   27 ->   28 trueControlFlow
  29:   28 ->   25 trueControlFlow
  30:   29 ->   34 trueControlFlow
  31:   30 ->   31 trueControlFlow
  32:   31 ->   32 trueControlFlow
  33:   32 ->   29 trueControlFlow
  34:   33 ->   41 trueControlFlow
  35:   34 ->   36 trueControlFlow
  36:   35 ->   39 trueControlFlow
  37:   36 ->   37 trueControlFlow
  38:   37 ->   38 trueControlFlow
  39:   38 ->   35 trueControlFlow
  40:   39 ->   33 trueControlFlow
  41:   40 ->   45 trueControlFlow
  42:   41 ->   42 trueControlFlow
  43:   42 ->   43 trueControlFlow
  44:   43 ->   40 trueControlFlow
  45:   44 ->   49 trueControlFlow
  46:   45 ->   46 trueControlFlow
  47:   46 ->   47 trueControlFlow
  48:   47 ->   44 trueControlFlow
  49:   48 ->   53 trueControlFlow
  50:   49 ->   50 trueControlFlow
  51:   50 ->   51 trueControlFlow
  52:   51 ->   48 trueControlFlow
  53:   52 ->   60 trueControlFlow
  54:   53 ->   55 trueControlFlow
  55:   54 ->   58 trueControlFlow
  56:   55 ->   56 trueControlFlow
  57:   56 ->   57 trueControlFlow
  58:   57 ->   54 trueControlFlow
  59:   58 ->   52 trueControlFlow
  60:   59 ->   64 trueControlFlow
  61:   60 ->   61 trueControlFlow
  62:   61 ->   62 trueControlFlow
  63:   62 ->   59 trueControlFlow
  64:   63 ->   68 trueControlFlow
  65:   64 ->   65 trueControlFlow
  66:   65 ->   66 trueControlFlow
  67:   66 ->   63 trueControlFlow
  68:   67 ->   72 trueControlFlow
  69:   68 ->   69 trueControlFlow
  70:   69 ->   70 trueControlFlow
  71:   70 ->   67 trueControlFlow
  72:   71 ->   76 trueControlFlow
  73:   72 ->   73 trueControlFlow
  74:   73 ->   74 trueControlFlow
  75:   74 ->   71 trueControlFlow
  76:   75 ->   83 trueControlFlow
  77:   76 ->   78 trueControlFlow
  78:   77 ->   81 trueControlFlow
  79:   78 ->   79 trueControlFlow
  80:   79 ->   80 trueControlFlow
  81:   80 ->   77 trueControlFlow
  82:   81 ->   75 trueControlFlow
  83:   82 ->   87 trueControlFlow
  84:   83 ->   84 trueControlFlow
  85:   84 ->   85 trueControlFlow
  86:   85 ->   82 trueControlFlow
  87:   86 ->   91 trueControlFlow
  88:   87 ->   88 trueControlFlow
  89:   88 ->   89 trueControlFlow
  90:   89 ->   86 trueControlFlow
  91:   90 ->   95 trueControlFlow
  92:   91 ->   92 trueControlFlow
  93:   92 ->   93 trueControlFlow
  94:   93 ->   90 trueControlFlow
  95:   94 ->  102 trueControlFlow
  96:   95 ->   97 trueControlFlow
  97:   96 ->  100 trueControlFlow
  98:   97 ->   98 trueControlFlow
  99:   98 ->   99 trueControlFlow
 100:   99 ->   96 trueControlFlow
 101:  100 ->   94 trueControlFlow
 102:  101 ->  106 trueControlFlow
 103:  102 ->  103 trueControlFlow
 104:  103 ->  104 trueControlFlow
 105:  104 ->  101 trueControlFlow
 106:  105 ->  110 trueControlFlow
 107:  106 ->  107 trueControlFlow
 108:  107 ->  108 trueControlFlow
 109:  108 ->  105 trueControlFlow
 110:  109 ->  114 trueControlFlow
 111:  110 ->  111 trueControlFlow
 112:  111 ->  112 trueControlFlow
 113:  112 ->  109 trueControlFlow
 114:  113 ->  118 trueControlFlow
 115:  114 ->  115 trueControlFlow
 116:  115 ->  116 trueControlFlow
 117:  116 ->  113 trueControlFlow
 118:  117 ->  122 trueControlFlow
 119:  118 ->  119 trueControlFlow
 120:  119 ->  120 trueControlFlow
 121:  120 ->  117 trueControlFlow
 122:  121 ->  126 trueControlFlow
 123:  122 ->  123 trueControlFlow
 124:  123 ->  124 trueControlFlow
 125:  124 ->  121 trueControlFlow
 126:  125 ->  130 trueControlFlow
 127:  126 ->  127 trueControlFlow
 128:  127 ->  128 trueControlFlow
 129:  128 ->  125 trueControlFlow
 130:  129 ->  134 trueControlFlow
 131:  130 ->  131 trueControlFlow
 132:  131 ->  132 trueControlFlow
 133:  132 ->  129 trueControlFlow
 134:  133 ->  138 trueControlFlow
 135:  134 ->  135 trueControlFlow
 136:  135 ->  136 trueControlFlow
 137:  136 ->  133 trueControlFlow
 138:  137 ->  142 trueControlFlow
 139:  138 ->  139 trueControlFlow
 140:  139 ->  140 trueControlFlow
 141:  140 ->  137 trueControlFlow
 142:  141 ->  146 trueControlFlow
 143:  142 ->  143 trueControlFlow
 144:  143 ->  144 trueControlFlow
 145:  144 ->  141 trueControlFlow
 146:  145 ->  150 trueControlFlow
 147:  146 ->  147 trueControlFlow
 148:  147 ->  148 trueControlFlow
 149:  148 ->  145 trueControlFlow
 150:  149 ->  157 trueControlFlow
 151:  150 ->  152 trueControlFlow
 152:  151 ->  155 trueControlFlow
 153:  152 ->  153 trueControlFlow
 154:  153 ->  154 trueControlFlow
 155:  154 ->  151 trueControlFlow
 156:  155 ->  149 trueControlFlow
 157:  157 ->  156 trueControlFlow
--
   0: updateUndoState( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    5 trueControlFlow
   3:    2 ->    3 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    1 trueControlFlow
   6:    5 ->    6 trueControlFlow
   7:    5 ->    7 falseControlFlow
   8:    6 ->    7 fallThroughFlow
   9:    6 ->   26 trueControlFlow
  10:    7 ->    9 trueControlFlow
  11:    8 ->   13 trueControlFlow
  12:    9 ->   10 trueControlFlow
  13:   10 ->   11 trueControlFlow
  14:   11 ->    8 trueControlFlow
  15:   12 ->   17 trueControlFlow
  16:   12 ->   21 falseControlFlow
  17:   13 ->   14 trueControlFlow
  18:   14 ->   15 trueControlFlow
  19:   15 ->   12 trueControlFlow
  20:   16 ->   24 trueControlFlow
  21:   17 ->   18 trueControlFlow
  22:   18 ->   19 trueControlFlow
  23:   19 ->   16 trueControlFlow
  24:   20 ->   24 trueControlFlow
  25:   21 ->   22 trueControlFlow
  26:   22 ->   23 trueControlFlow
  27:   23 ->   20 trueControlFlow
  28:   24 ->   26 trueControlFlow
  29:   26 ->   25 trueControlFlow
--
   0: saveFile( jp.ac.ritsumei.cs.draw.DrawCanvas )
   1:    0 ->    2 trueControlFlow
   2:    1 ->   15 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->   16 fallThroughFlow
   5:    3 ->   16 trueControlFlow
   6:    4 ->    6 trueControlFlow
   7:    5 ->    1 exceptionCatchFlow
   8:    5 ->   14 trueControlFlow
   9:    6 ->    9 trueControlFlow
  10:    7 ->    5 trueControlFlow
  11:    8 ->   12 trueControlFlow
  12:    9 ->   10 trueControlFlow
  13:   10 ->   11 trueControlFlow
  14:   11 ->    8 trueControlFlow
  15:   12 ->   13 trueControlFlow
  16:   13 ->    7 trueControlFlow
  17:   14 ->    3 trueControlFlow
  18:   16 ->   15 trueControlFlow
--
   0: buildRecentFileMenu( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    5 trueControlFlow
   3:    2 ->    3 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    1 trueControlFlow
   6:    5 ->    7 trueControlFlow
   7:    5 ->   19 falseControlFlow
   8:    6 ->   11 trueControlFlow
   9:    7 ->    8 trueControlFlow
  10:    8 ->    9 trueControlFlow
  11:    9 ->    6 trueControlFlow
  12:   10 ->   15 trueControlFlow
  13:   11 ->   12 trueControlFlow
  14:   12 ->   13 trueControlFlow
  15:   13 ->   10 trueControlFlow
  16:   14 ->    5 trueControlFlow (L = 5)
  17:   15 ->   16 trueControlFlow
  18:   16 ->   17 trueControlFlow
  19:   17 ->   14 trueControlFlow
  20:   19 ->   18 trueControlFlow
--
   0: openFile( java.lang.String )
   1:    0 ->    3 trueControlFlow
   2:    1 ->   66 trueControlFlow
   3:    2 ->   66 trueControlFlow
   4:    3 ->    5 trueControlFlow
   5:    4 ->   10 trueControlFlow
   6:    5 ->    7 trueControlFlow
   7:    6 ->    8 trueControlFlow
   8:    7 ->    6 trueControlFlow
   9:    8 ->    4 trueControlFlow
  10:    9 ->   15 trueControlFlow
  11:    9 ->   32 falseControlFlow
  12:   10 ->   12 trueControlFlow
  13:   11 ->   13 trueControlFlow
  14:   12 ->   11 trueControlFlow
  15:   13 ->    9 trueControlFlow
  16:   14 ->   19 trueControlFlow
  17:   14 ->   24 falseControlFlow
  18:   15 ->   16 trueControlFlow
  19:   16 ->   17 trueControlFlow
  20:   17 ->   14 trueControlFlow
  21:   18 ->   22 trueControlFlow
  22:   19 ->   20 trueControlFlow
  23:   20 ->    1 exceptionCatchFlow
  24:   20 ->   21 trueControlFlow
  25:   21 ->   18 trueControlFlow
  26:   22 ->   24 fallThroughFlow
  27:   22 ->   30 trueControlFlow
  28:   23 ->   27 trueControlFlow
  29:   24 ->   25 trueControlFlow
  30:   25 ->    1 exceptionCatchFlow
  31:   25 ->   26 trueControlFlow
  32:   26 ->   23 trueControlFlow
  33:   27 ->   28 trueControlFlow
  34:   27 ->   29 falseControlFlow
  35:   28 ->   29 fallThroughFlow
  36:   28 ->   67 trueControlFlow
  37:   29 ->   30 trueControlFlow
  38:   30 ->   36 trueControlFlow
  39:   31 ->   36 trueControlFlow
  40:   32 ->   34 trueControlFlow
  41:   33 ->   33+ trueControlFlow
  42:   34 ->   33 trueControlFlow
  43:   35 ->   31 trueControlFlow
  44:   36 ->   39 trueControlFlow
  45:   37 ->   45 trueControlFlow
  46:   38 ->   43 trueControlFlow
  47:   39 ->   40 trueControlFlow
  48:   40 ->   41 trueControlFlow
  49:   41 ->   38 trueControlFlow
  50:   42 ->    2 exceptionCatchFlow
  51:   42 ->   42+ trueControlFlow
  52:   43 ->   42 trueControlFlow
  53:   44 ->   37 trueControlFlow
  54:   45 ->   47 trueControlFlow
  55:   45 ->   51 falseControlFlow
  56:   46 ->   50 trueControlFlow
  57:   47 ->   48 trueControlFlow
  58:   48 ->    1 exceptionCatchFlow
  59:   48 ->   49 trueControlFlow
  60:   49 ->   46 trueControlFlow
  61:   50 ->   51 fallThroughFlow
  62:   50 ->   67 trueControlFlow
  63:   51 ->   53 trueControlFlow
  64:   52 ->   58 trueControlFlow
  65:   53 ->   55 trueControlFlow
  66:   54 ->   54+ trueControlFlow
  67:   55 ->   54 trueControlFlow
  68:   56 ->   52 trueControlFlow
  69:   57 ->   62 trueControlFlow
  70:   58 ->   59 trueControlFlow
  71:   59 ->   60 trueControlFlow
  72:   60 ->   57 trueControlFlow
  73:   61 ->   65 trueControlFlow
  74:   62 ->   63 trueControlFlow
  75:   63 ->   64 trueControlFlow
  76:   64 ->   61 trueControlFlow
  77:   65 ->   67 fallThroughFlow
  78:   65 ->   67 trueControlFlow
  79:   67 ->   66 trueControlFlow
  80:   33+ ->   33+ trueControlFlow
  81:   33+ ->   33+ trueControlFlow
  82:   33+ ->   33+ trueControlFlow
  83:   33+ ->   33+ trueControlFlow
  84:   33+ ->   33+ trueControlFlow
  85:   33+ ->   33+ trueControlFlow
  86:   33+ ->   33+ trueControlFlow
  87:   33+ ->   33+ trueControlFlow
  88:   33+ ->   33+ trueControlFlow
  89:   33+ ->   33+ trueControlFlow
  90:   33+ ->   35 trueControlFlow
  91:   42+ ->   42+ trueControlFlow
  92:   42+ ->   42+ trueControlFlow
  93:   42+ ->   42+ trueControlFlow
  94:   42+ ->   44 trueControlFlow
  95:   54+ ->   56 trueControlFlow
--
   0: openAction
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: closeFile( )
   1:    0 ->    3 trueControlFlow
   2:    1 ->   11 trueControlFlow
   3:    2 ->    7 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    2 trueControlFlow
   7:    6 ->   12 trueControlFlow
   8:    7 ->    9 trueControlFlow
   9:    8 ->    1 exceptionCatchFlow
  10:    8 ->    8+ trueControlFlow
  11:    9 ->    8 trueControlFlow
  12:   10 ->    6 trueControlFlow
  13:   12 ->   11 trueControlFlow
  14:    8+ ->   10 trueControlFlow
--
   0: initEditMenu( javax.swing.JMenu )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    7 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    2 trueControlFlow
   7:    6 ->   11 trueControlFlow
   8:    7 ->    8 trueControlFlow
   9:    8 ->    9 trueControlFlow
  10:    9 ->    6 trueControlFlow
  11:   10 ->   15 trueControlFlow
  12:   11 ->   12 trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   10 trueControlFlow
  15:   14 ->   22 trueControlFlow
  16:   15 ->   17 trueControlFlow
  17:   16 ->   20 trueControlFlow
  18:   17 ->   18 trueControlFlow
  19:   18 ->   19 trueControlFlow
  20:   19 ->   16 trueControlFlow
  21:   20 ->   14 trueControlFlow
  22:   21 ->   26 trueControlFlow
  23:   22 ->   23 trueControlFlow
  24:   23 ->   24 trueControlFlow
  25:   24 ->   21 trueControlFlow
  26:   25 ->   30 trueControlFlow
  27:   26 ->   27 trueControlFlow
  28:   27 ->   28 trueControlFlow
  29:   28 ->   25 trueControlFlow
  30:   29 ->   34 trueControlFlow
  31:   30 ->   31 trueControlFlow
  32:   31 ->   32 trueControlFlow
  33:   32 ->   29 trueControlFlow
  34:   33 ->   38 trueControlFlow
  35:   34 ->   35 trueControlFlow
  36:   35 ->   36 trueControlFlow
  37:   36 ->   33 trueControlFlow
  38:   37 ->   45 trueControlFlow
  39:   38 ->   40 trueControlFlow
  40:   39 ->   43 trueControlFlow
  41:   40 ->   41 trueControlFlow
  42:   41 ->   42 trueControlFlow
  43:   42 ->   39 trueControlFlow
  44:   43 ->   37 trueControlFlow
  45:   44 ->   49 trueControlFlow
  46:   45 ->   46 trueControlFlow
  47:   46 ->   47 trueControlFlow
  48:   47 ->   44 trueControlFlow
  49:   48 ->   53 trueControlFlow
  50:   49 ->   50 trueControlFlow
  51:   50 ->   51 trueControlFlow
  52:   51 ->   48 trueControlFlow
  53:   52 ->   57 trueControlFlow
  54:   53 ->   54 trueControlFlow
  55:   54 ->   55 trueControlFlow
  56:   55 ->   52 trueControlFlow
  57:   56 ->   61 trueControlFlow
  58:   57 ->   58 trueControlFlow
  59:   58 ->   59 trueControlFlow
  60:   59 ->   56 trueControlFlow
  61:   60 ->   65 trueControlFlow
  62:   61 ->   62 trueControlFlow
  63:   62 ->   63 trueControlFlow
  64:   63 ->   60 trueControlFlow
  65:   64 ->   72 trueControlFlow
  66:   65 ->   67 trueControlFlow
  67:   66 ->   70 trueControlFlow
  68:   67 ->   68 trueControlFlow
  69:   68 ->   69 trueControlFlow
  70:   69 ->   66 trueControlFlow
  71:   70 ->   64 trueControlFlow
  72:   71 ->   76 trueControlFlow
  73:   72 ->   73 trueControlFlow
  74:   73 ->   74 trueControlFlow
  75:   74 ->   71 trueControlFlow
  76:   75 ->   80 trueControlFlow
  77:   76 ->   77 trueControlFlow
  78:   77 ->   78 trueControlFlow
  79:   78 ->   75 trueControlFlow
  80:   79 ->   84 trueControlFlow
  81:   80 ->   81 trueControlFlow
  82:   81 ->   82 trueControlFlow
  83:   82 ->   79 trueControlFlow
  84:   83 ->   88 trueControlFlow
  85:   84 ->   85 trueControlFlow
  86:   85 ->   86 trueControlFlow
  87:   86 ->   83 trueControlFlow
  88:   87 ->   95 trueControlFlow
  89:   88 ->   90 trueControlFlow
  90:   89 ->   93 trueControlFlow
  91:   90 ->   91 trueControlFlow
  92:   91 ->   92 trueControlFlow
  93:   92 ->   89 trueControlFlow
  94:   93 ->   87 trueControlFlow
  95:   94 ->   99 trueControlFlow
  96:   95 ->   96 trueControlFlow
  97:   96 ->   97 trueControlFlow
  98:   97 ->   94 trueControlFlow
  99:   98 ->  103 trueControlFlow
 100:   99 ->  100 trueControlFlow
 101:  100 ->  101 trueControlFlow
 102:  101 ->   98 trueControlFlow
 103:  102 ->  107 trueControlFlow
 104:  103 ->  104 trueControlFlow
 105:  104 ->  105 trueControlFlow
 106:  105 ->  102 trueControlFlow
 107:  106 ->  111 trueControlFlow
 108:  107 ->  108 trueControlFlow
 109:  108 ->  109 trueControlFlow
 110:  109 ->  106 trueControlFlow
 111:  110 ->  118 trueControlFlow
 112:  111 ->  113 trueControlFlow
 113:  112 ->  116 trueControlFlow
 114:  113 ->  114 trueControlFlow
 115:  114 ->  115 trueControlFlow
 116:  115 ->  112 trueControlFlow
 117:  116 ->  110 trueControlFlow
 118:  117 ->  122 trueControlFlow
 119:  118 ->  119 trueControlFlow
 120:  119 ->  120 trueControlFlow
 121:  120 ->  117 trueControlFlow
 122:  121 ->  126 trueControlFlow
 123:  122 ->  123 trueControlFlow
 124:  123 ->  124 trueControlFlow
 125:  124 ->  121 trueControlFlow
 126:  125 ->  130 trueControlFlow
 127:  126 ->  127 trueControlFlow
 128:  127 ->  128 trueControlFlow
 129:  128 ->  125 trueControlFlow
 130:  129 ->  134 trueControlFlow
 131:  130 ->  131 trueControlFlow
 132:  131 ->  132 trueControlFlow
 133:  132 ->  129 trueControlFlow
 134:  133 ->  138 trueControlFlow
 135:  134 ->  135 trueControlFlow
 136:  135 ->  136 trueControlFlow
 137:  136 ->  133 trueControlFlow
 138:  137 ->  145 trueControlFlow
 139:  138 ->  140 trueControlFlow
 140:  139 ->  143 trueControlFlow
 141:  140 ->  141 trueControlFlow
 142:  141 ->  142 trueControlFlow
 143:  142 ->  139 trueControlFlow
 144:  143 ->  137 trueControlFlow
 145:  144 ->  149 trueControlFlow
 146:  145 ->  146 trueControlFlow
 147:  146 ->  147 trueControlFlow
 148:  147 ->  144 trueControlFlow
 149:  149 ->  148 trueControlFlow
--
----- CCFG (to here) -----

