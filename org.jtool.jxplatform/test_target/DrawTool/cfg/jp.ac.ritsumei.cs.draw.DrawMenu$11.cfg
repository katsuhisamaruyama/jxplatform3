----- CCFG (from here) -----
Class Name = jp.ac.ritsumei.cs.draw.DrawMenu$11
   0 fieldEntry [ serialVersionUID ]
   1 fieldDeclaration D = { jp.ac.ritsumei.cs.draw.DrawMenu$11.serialVersionUID } U = { jp.ac.ritsumei.cs.draw.DrawMenu$11.serialVersionUID }
   2 fieldExit
--
   0 methodEntry [ actionPerformed( java.awt.event.ActionEvent ) ]
   1 formalIn D = { evt$24 } U = {  }
   2 localDeclaration D = { canvas$25 } U = { this.tabbedCanvas.!getCurrentCanvas( ) }
   3 receiver D = {  } U = { this.tabbedCanvas }
   4 methodCall D = {  } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab } TO = jp.ac.ritsumei.cs.draw.TabbedCanvas#getCurrentCanvas( )
   5 actualOut D = { this.tabbedCanvas.!getCurrentCanvas( ) } U = { this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab }
   6 assignment D = {  } U = { canvas$25.!deleteFigure( ) }
   7 receiver D = {  } U = { canvas$25 }
   8 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$25.figureManager, canvas$25.figureManager.figures, canvas$25.grabbedFigure, canvas$25.menu, canvas$25.menu.canvas$0.undoManager, canvas$25.menu.clipboard, canvas$25.menu.copyAction, canvas$25.menu.cutAction, canvas$25.menu.deleteAction, canvas$25.menu.pasteAction, canvas$25.menu.redoAction, canvas$25.menu.tabbedCanvas, canvas$25.menu.tabbedCanvas.canvases, canvas$25.menu.tabbedCanvas.selectedTab, canvas$25.menu.undoAction, canvas$25.menu.undoManager$1.!javax.swing.undo.UndoManager.edits, canvas$25.menu.undoManager$1.!javax.swing.undo.UndoManager.inProgress, canvas$25.menu.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd, canvas$25.support, canvas$25.support.!javax.swing.undo.CompoundEdit.edits, canvas$25.support.!javax.swing.undo.CompoundEdit.inProgress, canvas$25.support.!javax.swing.undo.UndoableEditSupport.compoundEdit, canvas$25.support.!javax.swing.undo.UndoableEditSupport.listeners, canvas$25.support.!javax.swing.undo.UndoableEditSupport.realSource, canvas$25.support.!javax.swing.undo.UndoableEditSupport.updateLevel, figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY, figure$1.color, figure$1.endX, figure$1.endY, figure$1.outlineWidth, figure$1.startX, figure$1.startY, this, this.!java.awt.Component.height, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.width, this.!java.awt.Component.x, this.!java.awt.Component.y, this.clipboard.color, this.clipboard.endX, this.clipboard.endY, this.clipboard.outlineWidth, this.clipboard.startX, this.clipboard.startY, this.currentFigure, this.currentFigure.color, this.currentFigure.endX, this.currentFigure.endY, this.currentFigure.outlineWidth, this.currentFigure.startX, this.currentFigure.startY, this.grabbedFigure.color, this.grabbedFigure.endX, this.grabbedFigure.endY, this.grabbedFigure.outlineWidth, this.grabbedFigure.startX, this.grabbedFigure.startY, this.tabbedCanvas.!getCurrentCanvas( ).figureManager, this.tabbedCanvas.!getCurrentCanvas( ).figureManager.figures, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure, this.tabbedCanvas.!getCurrentCanvas( ).menu, this.tabbedCanvas.!getCurrentCanvas( ).menu.canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).menu.clipboard, this.tabbedCanvas.!getCurrentCanvas( ).menu.copyAction, this.tabbedCanvas.!getCurrentCanvas( ).menu.cutAction, this.tabbedCanvas.!getCurrentCanvas( ).menu.deleteAction, this.tabbedCanvas.!getCurrentCanvas( ).menu.pasteAction, this.tabbedCanvas.!getCurrentCanvas( ).menu.redoAction, this.tabbedCanvas.!getCurrentCanvas( ).menu.tabbedCanvas, this.tabbedCanvas.!getCurrentCanvas( ).menu.tabbedCanvas.canvases, this.tabbedCanvas.!getCurrentCanvas( ).menu.tabbedCanvas.selectedTab, this.tabbedCanvas.!getCurrentCanvas( ).menu.undoAction, this.tabbedCanvas.!getCurrentCanvas( ).menu.undoManager$1.!javax.swing.undo.UndoManager.edits, this.tabbedCanvas.!getCurrentCanvas( ).menu.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.tabbedCanvas.!getCurrentCanvas( ).menu.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd, this.tabbedCanvas.!getCurrentCanvas( ).support, this.tabbedCanvas.!getCurrentCanvas( ).support.!javax.swing.undo.CompoundEdit.edits, this.tabbedCanvas.!getCurrentCanvas( ).support.!javax.swing.undo.CompoundEdit.inProgress, this.tabbedCanvas.!getCurrentCanvas( ).support.!javax.swing.undo.UndoableEditSupport.compoundEdit, this.tabbedCanvas.!getCurrentCanvas( ).support.!javax.swing.undo.UndoableEditSupport.listeners, this.tabbedCanvas.!getCurrentCanvas( ).support.!javax.swing.undo.UndoableEditSupport.realSource, this.tabbedCanvas.!getCurrentCanvas( ).support.!javax.swing.undo.UndoableEditSupport.updateLevel } TO = jp.ac.ritsumei.cs.draw.DrawCanvas#deleteFigure( )
   9 actualOut D = { canvas$25.!deleteFigure( ) } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, canvas$25.figureManager, canvas$25.figureManager.figures, canvas$25.grabbedFigure, canvas$25.menu, canvas$25.menu.canvas$0.undoManager, canvas$25.menu.clipboard, canvas$25.menu.copyAction, canvas$25.menu.cutAction, canvas$25.menu.deleteAction, canvas$25.menu.pasteAction, canvas$25.menu.redoAction, canvas$25.menu.tabbedCanvas, canvas$25.menu.tabbedCanvas.canvases, canvas$25.menu.tabbedCanvas.selectedTab, canvas$25.menu.undoAction, canvas$25.menu.undoManager$1.!javax.swing.undo.UndoManager.edits, canvas$25.menu.undoManager$1.!javax.swing.undo.UndoManager.inProgress, canvas$25.menu.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd, canvas$25.support, canvas$25.support.!javax.swing.undo.CompoundEdit.edits, canvas$25.support.!javax.swing.undo.CompoundEdit.inProgress, canvas$25.support.!javax.swing.undo.UndoableEditSupport.compoundEdit, canvas$25.support.!javax.swing.undo.UndoableEditSupport.listeners, canvas$25.support.!javax.swing.undo.UndoableEditSupport.realSource, canvas$25.support.!javax.swing.undo.UndoableEditSupport.updateLevel, figure$0.color, figure$0.endX, figure$0.endY, figure$0.outlineWidth, figure$0.startX, figure$0.startY, figure$1.color, figure$1.endX, figure$1.endY, figure$1.outlineWidth, figure$1.startX, figure$1.startY, this, this.!java.awt.Component.height, this.!java.awt.Component.parent, this.!java.awt.Component.peer, this.!java.awt.Component.width, this.!java.awt.Component.x, this.!java.awt.Component.y, this.clipboard.color, this.clipboard.endX, this.clipboard.endY, this.clipboard.outlineWidth, this.clipboard.startX, this.clipboard.startY, this.currentFigure, this.currentFigure.color, this.currentFigure.endX, this.currentFigure.endY, this.currentFigure.outlineWidth, this.currentFigure.startX, this.currentFigure.startY, this.grabbedFigure.color, this.grabbedFigure.endX, this.grabbedFigure.endY, this.grabbedFigure.outlineWidth, this.grabbedFigure.startX, this.grabbedFigure.startY, this.tabbedCanvas.!getCurrentCanvas( ).figureManager, this.tabbedCanvas.!getCurrentCanvas( ).figureManager.figures, this.tabbedCanvas.!getCurrentCanvas( ).grabbedFigure, this.tabbedCanvas.!getCurrentCanvas( ).menu, this.tabbedCanvas.!getCurrentCanvas( ).menu.canvas$0.undoManager, this.tabbedCanvas.!getCurrentCanvas( ).menu.clipboard, this.tabbedCanvas.!getCurrentCanvas( ).menu.copyAction, this.tabbedCanvas.!getCurrentCanvas( ).menu.cutAction, this.tabbedCanvas.!getCurrentCanvas( ).menu.deleteAction, this.tabbedCanvas.!getCurrentCanvas( ).menu.pasteAction, this.tabbedCanvas.!getCurrentCanvas( ).menu.redoAction, this.tabbedCanvas.!getCurrentCanvas( ).menu.tabbedCanvas, this.tabbedCanvas.!getCurrentCanvas( ).menu.tabbedCanvas.canvases, this.tabbedCanvas.!getCurrentCanvas( ).menu.tabbedCanvas.selectedTab, this.tabbedCanvas.!getCurrentCanvas( ).menu.undoAction, this.tabbedCanvas.!getCurrentCanvas( ).menu.undoManager$1.!javax.swing.undo.UndoManager.edits, this.tabbedCanvas.!getCurrentCanvas( ).menu.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.tabbedCanvas.!getCurrentCanvas( ).menu.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd, this.tabbedCanvas.!getCurrentCanvas( ).support, this.tabbedCanvas.!getCurrentCanvas( ).support.!javax.swing.undo.CompoundEdit.edits, this.tabbedCanvas.!getCurrentCanvas( ).support.!javax.swing.undo.CompoundEdit.inProgress, this.tabbedCanvas.!getCurrentCanvas( ).support.!javax.swing.undo.UndoableEditSupport.compoundEdit, this.tabbedCanvas.!getCurrentCanvas( ).support.!javax.swing.undo.UndoableEditSupport.listeners, this.tabbedCanvas.!getCurrentCanvas( ).support.!javax.swing.undo.UndoableEditSupport.realSource, this.tabbedCanvas.!getCurrentCanvas( ).support.!javax.swing.undo.UndoableEditSupport.updateLevel }
  10 assignment D = {  } U = { this.!updateUndoState( ) }
  11 receiver D = {  } U = {  }
  12 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoAction, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateUndoState( )
  13 actualOut D = { this.!updateUndoState( ) } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoAction, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd }
  14 assignment D = {  } U = { this.!updateRedoState( ) }
  15 receiver D = {  } U = {  }
  16 methodCall D = {  } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.redoAction, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd } TO = jp.ac.ritsumei.cs.draw.DrawMenu#updateRedoState( )
  17 actualOut D = { this.!updateRedoState( ) } U = { canvas$0.changed, canvas$0.curX, canvas$0.curY, canvas$0.currentFigure, canvas$0.figureManager, canvas$0.grabbedFigure, canvas$0.isGrabMode, canvas$0.menu, canvas$0.selector, canvas$0.support, canvas$0.undoManager, this.canvas$0.undoManager, this.redoAction, this.tabbedCanvas, this.tabbedCanvas.canvases, this.tabbedCanvas.selectedTab, this.undoManager$1.!javax.swing.undo.UndoManager.edits, this.undoManager$1.!javax.swing.undo.UndoManager.inProgress, this.undoManager$1.!javax.swing.undo.UndoManager.indexOfNextAdd }
  18 methodExit
  19 formalOut D = {  } U = { $_ }
* actualOut D = { this.changed } U = {  }
* actualOut D = { this.currentFigure } U = {  }
* actualOut D = { this.grabbedFigure } U = {  }
* actualOut D = { super.canvas } U = {  }
* actualOut D = { super.figure } U = {  }
--
   0: serialVersionUID
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: actionPerformed( java.awt.event.ActionEvent )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    7 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    2 trueControlFlow
   7:    6 ->   11 trueControlFlow
   8:    7 ->    8 trueControlFlow
   9:    8 -> * trueControlFlow
  10:    9 ->    6 trueControlFlow
  11:   10 ->   15 trueControlFlow
  12:   11 ->   12 trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   10 trueControlFlow
  15:   14 ->   19 trueControlFlow
  16:   15 ->   16 trueControlFlow
  17:   16 ->   17 trueControlFlow
  18:   17 ->   14 trueControlFlow
  19:   19 ->   18 trueControlFlow
  20: * -> * trueControlFlow
  21: * -> * trueControlFlow
  22: * -> * trueControlFlow
  23: * -> * trueControlFlow
  24: * ->    9 trueControlFlow
--
----- CCFG (to here) -----

