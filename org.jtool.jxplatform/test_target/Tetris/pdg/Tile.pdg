----- ClDG (from here) -----
Class Name = Tile
   0 methodEntry [ Tile#setPosX( int ) ]
   1 formalIn D = { x$0 } U = {  }
   2 assignment D = { this.posX } U = { x$0 }
   4 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Tile#setPosY( int ) ]
   1 formalIn D = { y$0 } U = {  }
   2 assignment D = { this.posY } U = { y$0 }
   4 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ Tile#SIZE ]
   1 fieldDeclaration D = { Tile.SIZE } U = { Tile.SIZE }
--
   0 methodEntry [ Tile#getPosX( ) ]
   1 returnSt D = { $_ } U = { this.posX }
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Tile#getPosY( ) ]
   1 returnSt D = { $_ } U = { this.posY }
   3 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ Tile#color ]
   1 fieldDeclaration D = { this.color } U = { this.color }
--
   0 constructorEntry [ Tile#Tile( int int java.awt.Color ) ]
   1 formalIn D = { x$0 } U = {  }
   2 formalIn D = { y$1 } U = {  }
   3 formalIn D = { c$2 } U = {  }
   4 assignment D = { this.posX } U = { x$0 }
   5 assignment D = { this.posY } U = { y$1 }
   6 assignment D = { this.color } U = { c$2 }
   8 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Tile#paint( java.awt.Graphics int int ) ]
   1 formalIn D = { g$0 } U = {  }
   2 formalIn D = { offsetX$1 } U = {  }
   3 formalIn D = { offsetY$2 } U = {  }
   4 localDeclaration D = { left$3 } U = { Tile.SIZE, offsetX$1, this.posX }
   5 localDeclaration D = { right$4 } U = { Tile.SIZE, offsetX$1, this.posX }
   6 localDeclaration D = { top$5 } U = { Tile.SIZE, offsetY$2, this.posY }
   7 localDeclaration D = { bottom$6 } U = { Tile.SIZE, offsetY$2, this.posY }
   8 assignment D = {  } U = { g$0.!setColor( java.awt.Color ) }
   9 receiver D = {  } U = { g$0 }
  10 methodCall D = {  } U = { this.color } TO = java.awt.Graphics#setColor( java.awt.Color )
  11 actualOut D = { g$0.!setColor( java.awt.Color ) } U = {  }
  12 assignment D = {  } U = { g$0.!fillRect( int int int int ) }
  13 receiver D = {  } U = { g$0 }
  14 methodCall D = {  } U = { Tile.BORDER, Tile.SIZE, left$3, top$5 } TO = java.awt.Graphics#fillRect( int int int int )
  15 actualOut D = { g$0.!fillRect( int int int int ) } U = {  }
  16 assignment D = {  } U = { g$0.!setColor( java.awt.Color ) }
  17 receiver D = {  } U = { g$0 }
  18 methodCall D = {  } U = { Color.white } TO = java.awt.Graphics#setColor( java.awt.Color )
  19 actualOut D = { g$0.!setColor( java.awt.Color ) } U = {  }
  20 localDeclaration D = { i$7 } U = {  }
  21 forSt D = {  } U = { Tile.BORDER, i$7 }
  22 assignment D = {  } U = { g$0.!drawLine( int int int int ) }
  23 receiver D = {  } U = { g$0 }
  24 methodCall D = {  } U = { i$7, left$3, right$4, top$5 } TO = java.awt.Graphics#drawLine( int int int int )
  25 actualOut D = { g$0.!drawLine( int int int int ) } U = {  }
  26 assignment D = {  } U = { g$0.!drawLine( int int int int ) }
  27 receiver D = {  } U = { g$0 }
  28 methodCall D = {  } U = { bottom$6, i$7, left$3, top$5 } TO = java.awt.Graphics#drawLine( int int int int )
  29 actualOut D = { g$0.!drawLine( int int int int ) } U = {  }
  30 assignment D = { i$7 } U = { i$7 }
  31 assignment D = {  } U = { g$0.!setColor( java.awt.Color ) }
  32 receiver D = {  } U = { g$0 }
  33 methodCall D = {  } U = { this.color } TO = java.awt.Graphics#setColor( java.awt.Color )
  34 actualOut D = { g$0.!setColor( java.awt.Color ) } U = {  }
  35 assignment D = {  } U = { g$0.!drawLine( int int int int ) }
  36 receiver D = {  } U = { g$0 }
  37 methodCall D = {  } U = { Tile.BORDER, left$3, top$5 } TO = java.awt.Graphics#drawLine( int int int int )
  38 actualOut D = { g$0.!drawLine( int int int int ) } U = {  }
  39 assignment D = {  } U = { g$0.!setColor( java.awt.Color ) }
  40 receiver D = {  } U = { g$0 }
  41 methodCall D = {  } U = { this.color.!darker( ) } TO = java.awt.Graphics#setColor( java.awt.Color )
  42 receiver D = {  } U = { this.color }
  43 methodCall D = {  } U = {  } TO = java.awt.Color#darker( )
* actualOut D = { this.color.!darker( ), this.color.!java.awt.Color.cs, this.color.!java.awt.Color.falpha, this.color.!java.awt.Color.frgbvalue, this.color.!java.awt.Color.fvalue, this.color.!java.awt.Color.value } U = {  }
  45 actualOut D = { g$0.!setColor( java.awt.Color ) } U = {  }
  46 localDeclaration D = { i$8 } U = {  }
  47 forSt D = {  } U = { Tile.BORDER, i$8 }
  48 assignment D = {  } U = { g$0.!drawLine( int int int int ) }
  49 receiver D = {  } U = { g$0 }
  50 methodCall D = {  } U = { bottom$6, i$8, left$3, right$4 } TO = java.awt.Graphics#drawLine( int int int int )
  51 actualOut D = { g$0.!drawLine( int int int int ) } U = {  }
  52 assignment D = {  } U = { g$0.!drawLine( int int int int ) }
  53 receiver D = {  } U = { g$0 }
  54 methodCall D = {  } U = { bottom$6, i$8, right$4, top$5 } TO = java.awt.Graphics#drawLine( int int int int )
  55 actualOut D = { g$0.!drawLine( int int int int ) } U = {  }
  56 assignment D = { i$8 } U = { i$8 }
  57 assignment D = {  } U = { g$0.!setColor( java.awt.Color ) }
  58 receiver D = {  } U = { g$0 }
  59 methodCall D = {  } U = { Color.black } TO = java.awt.Graphics#setColor( java.awt.Color )
  60 actualOut D = { g$0.!setColor( java.awt.Color ) } U = {  }
  61 assignment D = {  } U = { g$0.!drawRect( int int int int ) }
  62 receiver D = {  } U = { g$0 }
  63 methodCall D = {  } U = { Tile.SIZE, left$3, top$5 } TO = java.awt.Graphics#drawRect( int int int int )
  64 actualOut D = { g$0.!drawRect( int int int int ) } U = {  }
  66 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ Tile#posX ]
   1 fieldDeclaration D = { this.posX } U = { this.posX }
--
   0 fieldEntry [ Tile#posY ]
   1 fieldDeclaration D = { this.posY } U = { this.posY }
--
   0 fieldEntry [ Tile#BORDER ]
   1 fieldDeclaration D = { Tile.BORDER } U = { Tile.BORDER }
--
   0 methodEntry [ Tile#setPosXY( int int ) ]
   1 formalIn D = { x$0 } U = {  }
   2 formalIn D = { y$1 } U = {  }
   3 assignment D = { this.posX } U = { x$0 }
   4 assignment D = { this.posY } U = { y$1 }
   6 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Tile#paint( java.awt.Graphics ) ]
   1 formalIn D = { g$0 } U = {  }
   2 assignment D = {  } U = { this.!paint( java.awt.Graphics int int ) }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { Color.black, Color.white, Tile.BORDER, Tile.SIZE, this.color, this.posX, this.posY } TO = Tile#paint( java.awt.Graphics int int )
   5 actualIn D = {  } U = { g$0 }
   6 actualIn D = {  } U = {  }
   7 actualIn D = {  } U = {  }
* actualOut D = { this.!paint( java.awt.Graphics int int ), this.color.!java.awt.Color.cs, this.color.!java.awt.Color.falpha, this.color.!java.awt.Color.frgbvalue, this.color.!java.awt.Color.fvalue, this.color.!java.awt.Color.value } U = { Color.black, Color.white, Tile.BORDER, Tile.SIZE, this.color, this.posX, this.posY }
  10 formalOut D = {  } U = { $_ }
--
   0: setPosX( int )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    1 ->    2 loopIndependentDefUseDependence x$0
--
   0: setPosY( int )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    4 trueControlDependence
   4:    1 ->    2 loopIndependentDefUseDependence y$0
--
   0: SIZE
   1:    0 ->    1 trueControlDependence
--
   0: getPosX( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    1 ->    3 loopIndependentDefUseDependence $_
--
   0: getPosY( )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    3 trueControlDependence
   3:    1 ->    3 loopIndependentDefUseDependence $_
--
   0: color
   1:    0 ->    1 trueControlDependence
--
   0: Tile( int int java.awt.Color )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    8 trueControlDependence
   8:    1 ->    4 loopIndependentDefUseDependence x$0
   9:    2 ->    5 loopIndependentDefUseDependence y$1
  10:    3 ->    6 loopIndependentDefUseDependence c$2
--
   0: paint( java.awt.Graphics int int )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->    8 trueControlDependence
   9:    0 ->    9 trueControlDependence
  10:    0 ->   10 trueControlDependence
  11:    0 ->   11 trueControlDependence
  12:    0 ->   12 trueControlDependence
  13:    0 ->   13 trueControlDependence
  14:    0 ->   14 trueControlDependence
  15:    0 ->   15 trueControlDependence
  16:    0 ->   16 trueControlDependence
  17:    0 ->   17 trueControlDependence
  18:    0 ->   18 trueControlDependence
  19:    0 ->   19 trueControlDependence
  20:    0 ->   20 trueControlDependence
  21:    0 ->   21 trueControlDependence
  22:    0 ->   31 trueControlDependence
  23:    0 ->   32 trueControlDependence
  24:    0 ->   33 trueControlDependence
  25:    0 ->   34 trueControlDependence
  26:    0 ->   35 trueControlDependence
  27:    0 ->   36 trueControlDependence
  28:    0 ->   37 trueControlDependence
  29:    0 ->   38 trueControlDependence
  30:    0 ->   39 trueControlDependence
  31:    0 ->   40 trueControlDependence
  32:    0 ->   41 trueControlDependence
  33:    0 ->   42 trueControlDependence
  34:    0 ->   43 trueControlDependence
  35:    0 ->   45 trueControlDependence
  36:    0 ->   46 trueControlDependence
  37:    0 ->   47 trueControlDependence
  38:    0 ->   57 trueControlDependence
  39:    0 ->   58 trueControlDependence
  40:    0 ->   59 trueControlDependence
  41:    0 ->   60 trueControlDependence
  42:    0 ->   61 trueControlDependence
  43:    0 ->   62 trueControlDependence
  44:    0 ->   63 trueControlDependence
  45:    0 ->   64 trueControlDependence
  46:    0 ->   66 trueControlDependence
  47:    0 -> * trueControlDependence
  48:    1 ->    9 loopIndependentDefUseDependence g$0
  49:    1 ->   13 loopIndependentDefUseDependence g$0
  50:    1 ->   17 loopIndependentDefUseDependence g$0
  51:    1 ->   23 loopIndependentDefUseDependence g$0
  52:    1 ->   27 loopIndependentDefUseDependence g$0
  53:    1 ->   32 loopIndependentDefUseDependence g$0
  54:    1 ->   36 loopIndependentDefUseDependence g$0
  55:    1 ->   40 loopIndependentDefUseDependence g$0
  56:    1 ->   49 loopIndependentDefUseDependence g$0
  57:    1 ->   53 loopIndependentDefUseDependence g$0
  58:    1 ->   58 loopIndependentDefUseDependence g$0
  59:    1 ->   62 loopIndependentDefUseDependence g$0
  60:    2 ->    4 loopIndependentDefUseDependence offsetX$1
  61:    2 ->    5 loopIndependentDefUseDependence offsetX$1
  62:    3 ->    6 loopIndependentDefUseDependence offsetY$2
  63:    3 ->    7 loopIndependentDefUseDependence offsetY$2
  64:    4 ->   14 declaration
  65:    4 ->   14 loopIndependentDefUseDependence left$3
  66:    4 ->   24 declaration
  67:    4 ->   24 loopIndependentDefUseDependence left$3
  68:    4 ->   28 declaration
  69:    4 ->   28 loopIndependentDefUseDependence left$3
  70:    4 ->   37 declaration
  71:    4 ->   37 loopIndependentDefUseDependence left$3
  72:    4 ->   50 declaration
  73:    4 ->   50 loopIndependentDefUseDependence left$3
  74:    4 ->   63 declaration
  75:    4 ->   63 loopIndependentDefUseDependence left$3
  76:    5 ->   24 declaration
  77:    5 ->   24 loopIndependentDefUseDependence right$4
  78:    5 ->   50 declaration
  79:    5 ->   50 loopIndependentDefUseDependence right$4
  80:    5 ->   54 declaration
  81:    5 ->   54 loopIndependentDefUseDependence right$4
  82:    6 ->   14 declaration
  83:    6 ->   14 loopIndependentDefUseDependence top$5
  84:    6 ->   24 declaration
  85:    6 ->   24 loopIndependentDefUseDependence top$5
  86:    6 ->   28 declaration
  87:    6 ->   28 loopIndependentDefUseDependence top$5
  88:    6 ->   37 declaration
  89:    6 ->   37 loopIndependentDefUseDependence top$5
  90:    6 ->   54 declaration
  91:    6 ->   54 loopIndependentDefUseDependence top$5
  92:    6 ->   63 declaration
  93:    6 ->   63 loopIndependentDefUseDependence top$5
  94:    7 ->   28 declaration
  95:    7 ->   28 loopIndependentDefUseDependence bottom$6
  96:    7 ->   50 declaration
  97:    7 ->   50 loopIndependentDefUseDependence bottom$6
  98:    7 ->   54 declaration
  99:    7 ->   54 loopIndependentDefUseDependence bottom$6
 100:   11 ->    8 loopIndependentDefUseDependence g$0.!setColor( java.awt.Color )
 101:   11 ->   19 outputDependence g$0.!setColor( java.awt.Color )
 102:   15 ->   12 loopIndependentDefUseDependence g$0.!fillRect( int int int int )
 103:   19 ->   16 loopIndependentDefUseDependence g$0.!setColor( java.awt.Color )
 104:   19 ->   34 outputDependence g$0.!setColor( java.awt.Color )
 105:   20 ->   21 declaration
 106:   20 ->   21 loopIndependentDefUseDependence i$7
 107:   20 ->   24 declaration
 108:   20 ->   24 loopIndependentDefUseDependence i$7
 109:   20 ->   28 declaration
 110:   20 ->   28 loopIndependentDefUseDependence i$7
 111:   20 ->   30 declaration
 112:   20 ->   30 loopIndependentDefUseDependence i$7
 113:   21 ->   22 trueControlDependence
 114:   21 ->   23 trueControlDependence
 115:   21 ->   24 trueControlDependence
 116:   21 ->   25 trueControlDependence
 117:   21 ->   26 trueControlDependence
 118:   21 ->   27 trueControlDependence
 119:   21 ->   28 trueControlDependence
 120:   21 ->   29 trueControlDependence
 121:   21 ->   30 trueControlDependence
 122:   25 ->   22 loopIndependentDefUseDependence g$0.!drawLine( int int int int )
 123:   25 ->   29 outputDependence g$0.!drawLine( int int int int )
 124:   29 ->   25 outputDependence g$0.!drawLine( int int int int )
 125:   29 ->   26 loopIndependentDefUseDependence g$0.!drawLine( int int int int )
 126:   29 ->   38 outputDependence g$0.!drawLine( int int int int )
 127:   30 ->   21 loopCarriedDefUseDependence i$7 (LC =   21)
 128:   30 ->   24 loopCarriedDefUseDependence i$7 (LC =   21)
 129:   30 ->   28 loopCarriedDefUseDependence i$7 (LC =   21)
 130:   30 ->   30 loopCarriedDefUseDependence i$7 (LC =   21)
 131:   34 ->   31 loopIndependentDefUseDependence g$0.!setColor( java.awt.Color )
 132:   34 ->   45 outputDependence g$0.!setColor( java.awt.Color )
 133:   38 ->   35 loopIndependentDefUseDependence g$0.!drawLine( int int int int )
 134:   38 ->   51 outputDependence g$0.!drawLine( int int int int )
 135:   45 ->   39 loopIndependentDefUseDependence g$0.!setColor( java.awt.Color )
 136:   45 ->   60 outputDependence g$0.!setColor( java.awt.Color )
 137:   46 ->   47 declaration
 138:   46 ->   47 loopIndependentDefUseDependence i$8
 139:   46 ->   50 declaration
 140:   46 ->   50 loopIndependentDefUseDependence i$8
 141:   46 ->   54 declaration
 142:   46 ->   54 loopIndependentDefUseDependence i$8
 143:   46 ->   56 declaration
 144:   46 ->   56 loopIndependentDefUseDependence i$8
 145:   47 ->   48 trueControlDependence
 146:   47 ->   49 trueControlDependence
 147:   47 ->   50 trueControlDependence
 148:   47 ->   51 trueControlDependence
 149:   47 ->   52 trueControlDependence
 150:   47 ->   53 trueControlDependence
 151:   47 ->   54 trueControlDependence
 152:   47 ->   55 trueControlDependence
 153:   47 ->   56 trueControlDependence
 154:   51 ->   48 loopIndependentDefUseDependence g$0.!drawLine( int int int int )
 155:   51 ->   55 outputDependence g$0.!drawLine( int int int int )
 156:   55 ->   51 outputDependence g$0.!drawLine( int int int int )
 157:   55 ->   52 loopIndependentDefUseDependence g$0.!drawLine( int int int int )
 158:   56 ->   47 loopCarriedDefUseDependence i$8 (LC =   47)
 159:   56 ->   50 loopCarriedDefUseDependence i$8 (LC =   47)
 160:   56 ->   54 loopCarriedDefUseDependence i$8 (LC =   47)
 161:   56 ->   56 loopCarriedDefUseDependence i$8 (LC =   47)
 162:   60 ->   57 loopIndependentDefUseDependence g$0.!setColor( java.awt.Color )
 163:   64 ->   61 loopIndependentDefUseDependence g$0.!drawRect( int int int int )
 164: * ->   41 loopIndependentDefUseDependence this.color.!darker( )
--
   0: posX
   1:    0 ->    1 trueControlDependence
--
   0: posY
   1:    0 ->    1 trueControlDependence
--
   0: BORDER
   1:    0 ->    1 trueControlDependence
--
   0: setPosXY( int int )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    6 trueControlDependence
   6:    1 ->    3 loopIndependentDefUseDependence x$0
   7:    2 ->    4 loopIndependentDefUseDependence y$1
--
   0: paint( java.awt.Graphics )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    4 trueControlDependence
   5:    0 ->    5 trueControlDependence
   6:    0 ->    6 trueControlDependence
   7:    0 ->    7 trueControlDependence
   8:    0 ->   10 trueControlDependence
   9:    0 -> * trueControlDependence
  10:    1 ->    5 loopIndependentDefUseDependence g$0
  11: * ->    2 loopIndependentDefUseDependence this.!paint( java.awt.Graphics int int )
--
----- ClDG (to here) -----

