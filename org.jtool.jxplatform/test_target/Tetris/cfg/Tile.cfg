----- CCFG (from here) -----
Class Name = Tile
   0 methodEntry [ setPosX( int ) ]
   1 formalIn D = { x$0 } U = {  }
   2 assignment D = { this.posX } U = { x$0 }
   3 methodExit
   4 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ setPosY( int ) ]
   1 formalIn D = { y$0 } U = {  }
   2 assignment D = { this.posY } U = { y$0 }
   3 methodExit
   4 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ SIZE ]
   1 fieldDeclaration D = { Tile.SIZE } U = { Tile.SIZE }
   2 fieldExit
--
   0 methodEntry [ getPosX( ) ]
   1 returnSt D = { $_ } U = { this.posX }
   2 methodExit
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ getPosY( ) ]
   1 returnSt D = { $_ } U = { this.posY }
   2 methodExit
   3 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ color ]
   1 fieldDeclaration D = { this.color } U = { this.color }
   2 fieldExit
--
   0 constructorEntry [ Tile( int int java.awt.Color ) ]
   1 formalIn D = { x$0 } U = {  }
   2 formalIn D = { y$1 } U = {  }
   3 formalIn D = { c$2 } U = {  }
   4 assignment D = { this.posX } U = { x$0 }
   5 assignment D = { this.posY } U = { y$1 }
   6 assignment D = { this.color } U = { c$2 }
   7 constructorExit
   8 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ paint( java.awt.Graphics int int ) ]
   1 formalIn D = { g$0 } U = {  }
   2 formalIn D = { offsetX$1 } U = {  }
   3 formalIn D = { offsetY$2 } U = {  }
   4 localDeclaration D = { left$3 } U = { Tile.SIZE, offsetX$1, this.posX }
   5 localDeclaration D = { right$4 } U = { Tile.SIZE, offsetX$1, this.posX }
   6 localDeclaration D = { top$5 } U = { Tile.SIZE, offsetY$2, this.posY }
   7 localDeclaration D = { bottom$6 } U = { Tile.SIZE, offsetY$2, this.posY }
   8 assignment D = {  } U = { g$0.!setColor( java.awt.Color ) }
   9 receiver D = {  } U = { g$0 }
  10 methodCall D = {  } U = { this.color } TO = java.awt.Graphics#setColor( java.awt.Color )
  11 actualOut D = { g$0.!setColor( java.awt.Color ) } U = {  }
  12 assignment D = {  } U = { g$0.!fillRect( int int int int ) }
  13 receiver D = {  } U = { g$0 }
  14 methodCall D = {  } U = { Tile.BORDER, Tile.SIZE, left$3, top$5 } TO = java.awt.Graphics#fillRect( int int int int )
  15 actualOut D = { g$0.!fillRect( int int int int ) } U = {  }
  16 assignment D = {  } U = { g$0.!setColor( java.awt.Color ) }
  17 receiver D = {  } U = { g$0 }
  18 methodCall D = {  } U = { Color.white } TO = java.awt.Graphics#setColor( java.awt.Color )
  19 actualOut D = { g$0.!setColor( java.awt.Color ) } U = {  }
  20 localDeclaration D = { i$7 } U = {  }
  21 forSt D = {  } U = { Tile.BORDER, i$7 }
  22 assignment D = {  } U = { g$0.!drawLine( int int int int ) }
  23 receiver D = {  } U = { g$0 }
  24 methodCall D = {  } U = { i$7, left$3, right$4, top$5 } TO = java.awt.Graphics#drawLine( int int int int )
  25 actualOut D = { g$0.!drawLine( int int int int ) } U = {  }
  26 assignment D = {  } U = { g$0.!drawLine( int int int int ) }
  27 receiver D = {  } U = { g$0 }
  28 methodCall D = {  } U = { bottom$6, i$7, left$3, top$5 } TO = java.awt.Graphics#drawLine( int int int int )
  29 actualOut D = { g$0.!drawLine( int int int int ) } U = {  }
  30 assignment D = { i$7 } U = { i$7 }
  31 assignment D = {  } U = { g$0.!setColor( java.awt.Color ) }
  32 receiver D = {  } U = { g$0 }
  33 methodCall D = {  } U = { this.color } TO = java.awt.Graphics#setColor( java.awt.Color )
  34 actualOut D = { g$0.!setColor( java.awt.Color ) } U = {  }
  35 assignment D = {  } U = { g$0.!drawLine( int int int int ) }
  36 receiver D = {  } U = { g$0 }
  37 methodCall D = {  } U = { Tile.BORDER, left$3, top$5 } TO = java.awt.Graphics#drawLine( int int int int )
  38 actualOut D = { g$0.!drawLine( int int int int ) } U = {  }
  39 assignment D = {  } U = { g$0.!setColor( java.awt.Color ) }
  40 receiver D = {  } U = { g$0 }
  41 methodCall D = {  } U = { this.color.!darker( ) } TO = java.awt.Graphics#setColor( java.awt.Color )
  42 receiver D = {  } U = { this.color }
  43 methodCall D = {  } U = {  } TO = java.awt.Color#darker( )
  44 actualOut D = { this.color.!darker( ), this.color.!java.awt.Color.cs, this.color.!java.awt.Color.falpha, this.color.!java.awt.Color.frgbvalue, this.color.!java.awt.Color.fvalue, this.color.!java.awt.Color.value } U = {  }
  45 actualOut D = { g$0.!setColor( java.awt.Color ) } U = {  }
  46 localDeclaration D = { i$8 } U = {  }
  47 forSt D = {  } U = { Tile.BORDER, i$8 }
  48 assignment D = {  } U = { g$0.!drawLine( int int int int ) }
  49 receiver D = {  } U = { g$0 }
  50 methodCall D = {  } U = { bottom$6, i$8, left$3, right$4 } TO = java.awt.Graphics#drawLine( int int int int )
  51 actualOut D = { g$0.!drawLine( int int int int ) } U = {  }
  52 assignment D = {  } U = { g$0.!drawLine( int int int int ) }
  53 receiver D = {  } U = { g$0 }
  54 methodCall D = {  } U = { bottom$6, i$8, right$4, top$5 } TO = java.awt.Graphics#drawLine( int int int int )
  55 actualOut D = { g$0.!drawLine( int int int int ) } U = {  }
  56 assignment D = { i$8 } U = { i$8 }
  57 assignment D = {  } U = { g$0.!setColor( java.awt.Color ) }
  58 receiver D = {  } U = { g$0 }
  59 methodCall D = {  } U = { Color.black } TO = java.awt.Graphics#setColor( java.awt.Color )
  60 actualOut D = { g$0.!setColor( java.awt.Color ) } U = {  }
  61 assignment D = {  } U = { g$0.!drawRect( int int int int ) }
  62 receiver D = {  } U = { g$0 }
  63 methodCall D = {  } U = { Tile.SIZE, left$3, top$5 } TO = java.awt.Graphics#drawRect( int int int int )
  64 actualOut D = { g$0.!drawRect( int int int int ) } U = {  }
  65 methodExit
  66 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ posX ]
   1 fieldDeclaration D = { this.posX } U = { this.posX }
   2 fieldExit
--
   0 fieldEntry [ posY ]
   1 fieldDeclaration D = { this.posY } U = { this.posY }
   2 fieldExit
--
   0 fieldEntry [ BORDER ]
   1 fieldDeclaration D = { Tile.BORDER } U = { Tile.BORDER }
   2 fieldExit
--
   0 methodEntry [ setPosXY( int int ) ]
   1 formalIn D = { x$0 } U = {  }
   2 formalIn D = { y$1 } U = {  }
   3 assignment D = { this.posX } U = { x$0 }
   4 assignment D = { this.posY } U = { y$1 }
   5 methodExit
   6 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ paint( java.awt.Graphics ) ]
   1 formalIn D = { g$0 } U = {  }
   2 assignment D = {  } U = { this.!paint( java.awt.Graphics int int ) }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { Color.black, Color.white, Tile.BORDER, Tile.SIZE, this.color, this.posX, this.posY } TO = Tile#paint( java.awt.Graphics int int )
   5 actualIn D = {  } U = { g$0 }
   6 actualIn D = {  } U = {  }
   7 actualIn D = {  } U = {  }
   8 actualOut D = { this.!paint( java.awt.Graphics int int ), this.color.!java.awt.Color.cs, this.color.!java.awt.Color.falpha, this.color.!java.awt.Color.frgbvalue, this.color.!java.awt.Color.fvalue, this.color.!java.awt.Color.value } U = { Color.black, Color.white, Tile.BORDER, Tile.SIZE, this.color, this.posX, this.posY }
   9 methodExit
  10 formalOut D = {  } U = { $_ }
--
   0: setPosX( int )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 4 -> 3 trueControlFlow
--
   0: setPosY( int )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 4 -> 3 trueControlFlow
--
   0: SIZE
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: getPosX( )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 1 -> 3 fallThroughFlow
   4: 3 -> 2 trueControlFlow
--
   0: getPosY( )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 1 -> 3 fallThroughFlow
   4: 3 -> 2 trueControlFlow
--
   0: color
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: Tile( int int java.awt.Color )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 3 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 6 trueControlFlow
   7: 6 -> 8 trueControlFlow
   8: 8 -> 7 trueControlFlow
--
   0: paint( java.awt.Graphics int int )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 3 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 6 trueControlFlow
   7: 6 -> 7 trueControlFlow
   8: 7 -> 9 trueControlFlow
   9: 8 -> 13 trueControlFlow
  10: 9 -> 10 trueControlFlow
  11: 10 -> 11 trueControlFlow
  12: 11 -> 8 trueControlFlow
  13: 12 -> 17 trueControlFlow
  14: 13 -> 14 trueControlFlow
  15: 14 -> 15 trueControlFlow
  16: 15 -> 12 trueControlFlow
  17: 16 -> 20 trueControlFlow
  18: 17 -> 18 trueControlFlow
  19: 18 -> 19 trueControlFlow
  20: 19 -> 16 trueControlFlow
  21: 20 -> 21 trueControlFlow
  22: 21 -> 23 trueControlFlow
  23: 21 -> 32 falseControlFlow
  24: 22 -> 27 trueControlFlow
  25: 23 -> 24 trueControlFlow
  26: 24 -> 25 trueControlFlow
  27: 25 -> 22 trueControlFlow
  28: 26 -> 30 trueControlFlow
  29: 27 -> 28 trueControlFlow
  30: 28 -> 29 trueControlFlow
  31: 29 -> 26 trueControlFlow
  32: 30 -> 21 trueControlFlow (LC = 21)
  33: 31 -> 36 trueControlFlow
  34: 32 -> 33 trueControlFlow
  35: 33 -> 34 trueControlFlow
  36: 34 -> 31 trueControlFlow
  37: 35 -> 40 trueControlFlow
  38: 36 -> 37 trueControlFlow
  39: 37 -> 38 trueControlFlow
  40: 38 -> 35 trueControlFlow
  41: 39 -> 46 trueControlFlow
  42: 40 -> 42 trueControlFlow
  43: 41 -> 45 trueControlFlow
  44: 42 -> 43 trueControlFlow
  45: 43 -> 44 trueControlFlow
  46: 44 -> 41 trueControlFlow
  47: 45 -> 39 trueControlFlow
  48: 46 -> 47 trueControlFlow
  49: 47 -> 49 trueControlFlow
  50: 47 -> 58 falseControlFlow
  51: 48 -> 53 trueControlFlow
  52: 49 -> 50 trueControlFlow
  53: 50 -> 51 trueControlFlow
  54: 51 -> 48 trueControlFlow
  55: 52 -> 56 trueControlFlow
  56: 53 -> 54 trueControlFlow
  57: 54 -> 55 trueControlFlow
  58: 55 -> 52 trueControlFlow
  59: 56 -> 47 trueControlFlow (LC = 47)
  60: 57 -> 62 trueControlFlow
  61: 58 -> 59 trueControlFlow
  62: 59 -> 60 trueControlFlow
  63: 60 -> 57 trueControlFlow
  64: 61 -> 66 trueControlFlow
  65: 62 -> 63 trueControlFlow
  66: 63 -> 64 trueControlFlow
  67: 64 -> 61 trueControlFlow
  68: 66 -> 65 trueControlFlow
--
   0: posX
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: posY
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: BORDER
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
   0: setPosXY( int int )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 3 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 6 trueControlFlow
   6: 6 -> 5 trueControlFlow
--
   0: paint( java.awt.Graphics )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 2 -> 10 trueControlFlow
   4: 3 -> 5 trueControlFlow
   5: 4 -> 8 trueControlFlow
   6: 5 -> 6 trueControlFlow
   7: 6 -> 7 trueControlFlow
   8: 7 -> 4 trueControlFlow
   9: 8 -> 2 trueControlFlow
  10: 10 -> 9 trueControlFlow
--
----- CCFG (to here) -----

