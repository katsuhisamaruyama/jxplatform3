----- CCFG (from here) -----
Class Name = Producer
   0 methodEntry [ run( ) ]
   1 trySt D = {  } U = {  }
   2 localDeclaration D = { i$0 } U = {  }
   3 forSt D = {  } U = { i$0 }
   4 localDeclaration D = { data$1 } U = { this.!valueOf }
   5 receiver D = {  } U = {  }
   6 methodCall D = {  } U = { i$0, this.COMPACT_STRINGS } TO = java.lang.String#valueOf( int )
   7 actualOut D = { this.!valueOf } U = { this.COMPACT_STRINGS }
   8 assignment D = {  } U = { this.storage.!put }
   9 receiver D = {  } U = { this.storage }
  10 methodCall D = { this.storage.data } U = { this.storage.data } TO = Storage#put( java.lang.String )
  11 actualIn D = {  } U = { data$1, this.!valueOf }
  12 actualOut D = { this.storage.!put, this.storage.data } U = { this.storage.data }
  13 assignment D = {  } U = { System.out.!println }
  14 receiver D = {  } U = { System.out }
  15 methodCall D = { System.out, System.out.trouble } U = { $java.lang.String, System.out, System.out.autoFlush, System.out.charOut, System.out.textOut, data$1, java.io.FilterOutputStream.out, this.!valueOf } TO = java.io.PrintStream#println( java.lang.String )
  16 actualOut D = { System.out, System.out.!println, System.out.trouble } U = { System.out, System.out.autoFlush, System.out.charOut, System.out.textOut, java.io.FilterOutputStream.out }
  17 assignment D = {  } U = { this.!sleep }
  18 receiver D = {  } U = {  }
  19 methodCall D = {  } U = { this.!random } TO = java.lang.Thread#sleep( long )
  20 receiver D = {  } U = {  }
  21 methodCall D = {  } U = { this$RandomNumberGeneratorHolder.randomNumberGenerator } TO = java.lang.Math#random( )
  22 actualOut D = { this.!random } U = { this$RandomNumberGeneratorHolder.randomNumberGenerator }
  23 actualOut D = { this.!sleep } U = {  }
  24 assignment D = { i$0 } U = { i$0 }
  25 assignment D = {  } U = { this.storage.!put }
  26 receiver D = {  } U = { this.storage }
  27 methodCall D = { this.storage.data } U = { this.storage.data } TO = Storage#put( java.lang.String )
  28 actualIn D = {  } U = { $java.lang.String }
  29 actualOut D = { this.storage.!put, this.storage.data } U = { this.storage.data }
  30 merge trySt(1)
  31 catchClause D = { e$2 } U = {  }
  32 methodExit
  33 formalOut D = {  } U = { $_, System.out, System.out.trouble, this.storage.data }
--
   0 constructorEntry [ Producer( Storage ) ]
   1 formalIn D = { storage$0 } U = {  }
   2 assignment D = { this.storage } U = { storage$0, this }
   3 constructorExit
   4 formalOut D = {  } U = { $_, this.storage }
--
   0 fieldEntry [ storage ]
   1 fieldDeclaration D = { this.storage } U = { this.storage }
   2 fieldExit
--
   0: run( )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 1 -> 30 fallThroughFlow
   4: 2 -> 3 trueControlFlow
   5: 3 -> 5 trueControlFlow
   6: 3 -> 26 falseControlFlow
   7: 4 -> 9 trueControlFlow
   8: 5 -> 6 trueControlFlow
   9: 6 -> 7 trueControlFlow
  10: 7 -> 4 trueControlFlow
  11: 8 -> 14 trueControlFlow
  12: 9 -> 11 trueControlFlow
  13: 10 -> 12 trueControlFlow
  14: 10 -> 31 exceptionCatchFlow
  15: 11 -> 10 trueControlFlow
  16: 12 -> 8 trueControlFlow
  17: 13 -> 18 trueControlFlow
  18: 14 -> 15 trueControlFlow
  19: 15 -> 16 trueControlFlow
  20: 16 -> 13 trueControlFlow
  21: 17 -> 24 trueControlFlow
  22: 18 -> 20 trueControlFlow
  23: 19 -> 23 trueControlFlow
  24: 19 -> 31 exceptionCatchFlow
  25: 20 -> 21 trueControlFlow
  26: 21 -> 22 trueControlFlow
  27: 22 -> 19 trueControlFlow
  28: 23 -> 17 trueControlFlow
  29: 24 -> 3 trueControlFlow (LC = 3)
  30: 25 -> 30 trueControlFlow
  31: 26 -> 28 trueControlFlow
  32: 27 -> 29 trueControlFlow
  33: 27 -> 31 exceptionCatchFlow
  34: 28 -> 27 trueControlFlow
  35: 29 -> 25 trueControlFlow
  36: 30 -> 33 trueControlFlow
  37: 31 -> 30 trueControlFlow
  38: 33 -> 32 trueControlFlow
--
   0: Producer( Storage )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 4 -> 3 trueControlFlow
--
   0: storage
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
--
----- CCFG (to here) -----

