----- CCFG (from here) -----
Class Name = Sample110FX
   0 methodEntry [ Sample110FX#main( java.lang.String[] ) ]
   1 formalIn D = { args$0 } U = {  }
   2 assignment D = {  } U = { this.!launch( java.lang.String[] ) }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { args$0, this.!com.sun.javafx.application.LauncherImpl.savedPreloaderClass, this.!java.lang.Class.name, this.!java.lang.StackTraceElement.declaringClass, this.!java.lang.StackTraceElement.methodName, this.!java.lang.String.value, this.!java.lang.StringBuilder.count, this.!java.lang.StringBuilder.value, this.!java.lang.System.err, this.!java.lang.Thread.EMPTY_STACK_TRACE, this.!java.lang.Thread.contextClassLoader, this.!sun.security.util.SecurityConstants.GET_CLASSLOADER_PERMISSION, this.!sun.security.util.SecurityConstants.GET_STACK_TRACE_PERMISSION } TO = javafx.application.Application#launch( java.lang.String[] )
   5 actualOut D = { this.!launch( java.lang.String[] ) } U = { this.!com.sun.javafx.application.LauncherImpl.savedPreloaderClass, this.!java.lang.Class.name, this.!java.lang.StackTraceElement.declaringClass, this.!java.lang.StackTraceElement.methodName, this.!java.lang.String.value, this.!java.lang.StringBuilder.count, this.!java.lang.StringBuilder.value, this.!java.lang.System.err, this.!java.lang.Thread.EMPTY_STACK_TRACE, this.!java.lang.Thread.contextClassLoader, this.!sun.security.util.SecurityConstants.GET_CLASSLOADER_PERMISSION, this.!sun.security.util.SecurityConstants.GET_STACK_TRACE_PERMISSION }
   6 methodExit
   7 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Sample110FX#action( javafx.event.ActionEvent ) ]
   1 formalIn D = { event$0 } U = {  }
   2 localDeclaration D = { alert$1 } U = { javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = { $java.lang.String, Alert.AlertType.INFORMATION, Alert.AlertType.INFORMATION.YES, Alert.AlertType.INFORMATION.YES.CANCEL, javafx.scene.control.Alert.!javafx.scene.Node.styleClass, javafx.scene.control.Alert.!javafx.scene.control.Alert.alertType, javafx.scene.control.Alert.!javafx.scene.control.Alert.buttonsListener, javafx.scene.control.Alert.!javafx.scene.control.Alert.dialogPaneRef, javafx.scene.control.Alert.!javafx.scene.control.Alert.hasCustomButtons, javafx.scene.control.Alert.!javafx.scene.control.Alert.headerTextListener, javafx.scene.control.Alert.!javafx.scene.control.Alert.titleListener, javafx.scene.control.Alert.!javafx.scene.control.Dialog.dialog, javafx.scene.control.Alert.!javafx.scene.control.Dialog.dialogPane, javafx.scene.control.Alert.!javafx.scene.control.DialogPane.buttons, javafx.scene.control.Alert.!javafx.scene.control.DialogPane.contentText, javafx.scene.control.Alert.!javafx.stage.Modality.APPLICATION_MODAL } TO = javafx.scene.control.Alert#Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] )
* actualOut D = { javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ), javafx.scene.control.Alert.!javafx.scene.control.Alert$1.styleClasses, javafx.scene.control.Alert.!javafx.scene.control.Alert$1.this$0, javafx.scene.control.Alert.!javafx.scene.control.Alert.alertType, javafx.scene.control.Alert.!javafx.scene.control.Alert.buttonsListener, javafx.scene.control.Alert.!javafx.scene.control.Alert.dialogPaneRef, javafx.scene.control.Alert.!javafx.scene.control.Alert.hasCustomButtons, javafx.scene.control.Alert.!javafx.scene.control.Alert.hasCustomHeaderText, javafx.scene.control.Alert.!javafx.scene.control.Alert.hasCustomTitle, javafx.scene.control.Alert.!javafx.scene.control.Alert.headerTextListener, javafx.scene.control.Alert.!javafx.scene.control.Alert.installingDefaults, javafx.scene.control.Alert.!javafx.scene.control.Alert.titleListener, javafx.scene.control.Alert.!javafx.scene.control.Dialog.dialog, javafx.scene.control.Alert.!javafx.scene.control.Dialog.dialogPane, javafx.scene.control.Alert.!javafx.scene.control.Dialog.eventHandlerManager, javafx.scene.control.Alert.!javafx.scene.control.Dialog.resultConverterProperty, javafx.scene.control.Alert.!javafx.scene.control.Dialog.resultProperty } U = { javafx.scene.control.Alert.!javafx.scene.Node.styleClass, javafx.scene.control.Alert.!javafx.scene.control.Alert.alertType, javafx.scene.control.Alert.!javafx.scene.control.Alert.buttonsListener, javafx.scene.control.Alert.!javafx.scene.control.Alert.dialogPaneRef, javafx.scene.control.Alert.!javafx.scene.control.Alert.hasCustomButtons, javafx.scene.control.Alert.!javafx.scene.control.Alert.headerTextListener, javafx.scene.control.Alert.!javafx.scene.control.Alert.titleListener, javafx.scene.control.Alert.!javafx.scene.control.Dialog.dialog, javafx.scene.control.Alert.!javafx.scene.control.Dialog.dialogPane, javafx.scene.control.Alert.!javafx.scene.control.DialogPane.buttons, javafx.scene.control.Alert.!javafx.scene.control.DialogPane.contentText, javafx.scene.control.Alert.!javafx.stage.Modality.APPLICATION_MODAL }
   6 assignment D = {  } U = { alert$1.!setTitle( java.lang.String ) }
   7 receiver D = {  } U = { alert$1 }
   8 methodCall D = {  } U = { $java.lang.String, alert$1.!javafx.scene.control.Dialog.dialog, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!javafx.scene.control.Dialog.dialog } TO = javafx.scene.control.Dialog#setTitle( java.lang.String )
   9 actualOut D = { alert$1.!setTitle( java.lang.String ) } U = { alert$1.!javafx.scene.control.Dialog.dialog, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!javafx.scene.control.Dialog.dialog }
  10 assignment D = {  } U = { alert$1.!setHeaderText( java.lang.String ) }
  11 receiver D = {  } U = { alert$1 }
  12 methodCall D = {  } U = { alert$1.!javafx.scene.control.Dialog.dialogPane, alert$1.!javafx.scene.control.DialogPane.headerText, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!javafx.scene.control.Dialog.dialogPane, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!javafx.scene.control.DialogPane.headerText } TO = javafx.scene.control.Dialog#setHeaderText( java.lang.String )
  13 actualOut D = { alert$1.!setHeaderText( java.lang.String ) } U = { alert$1.!javafx.scene.control.Dialog.dialogPane, alert$1.!javafx.scene.control.DialogPane.headerText, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!javafx.scene.control.Dialog.dialogPane, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!javafx.scene.control.DialogPane.headerText }
  14 assignment D = {  } U = { alert$1.!setContentText( java.lang.String ) }
  15 receiver D = {  } U = { alert$1 }
  16 methodCall D = {  } U = { $java.lang.String, alert$1.!javafx.scene.control.Dialog.dialogPane, alert$1.!javafx.scene.control.DialogPane.contentText, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!javafx.scene.control.Dialog.dialogPane, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!javafx.scene.control.DialogPane.contentText } TO = javafx.scene.control.Dialog#setContentText( java.lang.String )
  17 actualOut D = { alert$1.!setContentText( java.lang.String ) } U = { alert$1.!javafx.scene.control.Dialog.dialogPane, alert$1.!javafx.scene.control.DialogPane.contentText, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!javafx.scene.control.Dialog.dialogPane, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!javafx.scene.control.DialogPane.contentText }
  18 localDeclaration D = { result$2 } U = { alert$1.!showAndWait( ) }
  19 receiver D = {  } U = { alert$1 }
  20 methodCall D = {  } U = { alert$1.!com.sun.javafx.tk.Toolkit.TOOLKIT, alert$1.!com.sun.javafx.tk.Toolkit.tk, alert$1.!java.lang.System.err, alert$1.!javafx.scene.control.Dialog.dialog, alert$1.!javafx.scene.control.DialogEvent.DIALOG_SHOWING, alert$1.!javafx.scene.control.DialogEvent.DIALOG_SHOWN, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!com.sun.javafx.tk.Toolkit.TOOLKIT, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!com.sun.javafx.tk.Toolkit.tk, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!java.lang.System.err, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!javafx.scene.control.Dialog.dialog, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!javafx.scene.control.DialogEvent.DIALOG_SHOWING, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!javafx.scene.control.DialogEvent.DIALOG_SHOWN } TO = javafx.scene.control.Dialog#showAndWait( )
* actualOut D = { alert$1.!com.sun.javafx.tk.Toolkit.TOOLKIT, alert$1.!showAndWait( ) } U = { alert$1.!com.sun.javafx.tk.Toolkit.TOOLKIT, alert$1.!com.sun.javafx.tk.Toolkit.tk, alert$1.!java.lang.System.err, alert$1.!javafx.scene.control.Dialog.dialog, alert$1.!javafx.scene.control.DialogEvent.DIALOG_SHOWING, alert$1.!javafx.scene.control.DialogEvent.DIALOG_SHOWN, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!com.sun.javafx.tk.Toolkit.TOOLKIT, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!com.sun.javafx.tk.Toolkit.tk, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!java.lang.System.err, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!javafx.scene.control.Dialog.dialog, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!javafx.scene.control.DialogEvent.DIALOG_SHOWING, javafx.scene.control.Alert.!Alert( javafx.scene.control.Alert.AlertType java.lang.String javafx.scene.control.ButtonType[] ).!javafx.scene.control.DialogEvent.DIALOG_SHOWN }
  22 ifSt D = {  } U = { ButtonType.YES, result$2.!get( ), result$2.!isPresent( ) }
  23 receiver D = {  } U = { result$2 }
  24 methodCall D = {  } U = { alert$1.!showAndWait( ).!java.util.Optional.value, result$2.!java.util.Optional.value } TO = java.util.Optional#isPresent( )
  25 actualOut D = { result$2.!isPresent( ) } U = { alert$1.!showAndWait( ).!java.util.Optional.value, result$2.!java.util.Optional.value }
  26 receiver D = {  } U = { result$2 }
  27 methodCall D = {  } U = { alert$1.!showAndWait( ).!java.util.Optional.value, result$2.!java.util.Optional.value } TO = java.util.Optional#get( )
  28 actualOut D = { result$2.!get( ) } U = { alert$1.!showAndWait( ).!java.util.Optional.value, result$2.!java.util.Optional.value }
  29 assignment D = {  } U = { this.!exit( ) }
  30 receiver D = {  } U = {  }
  31 methodCall D = {  } U = { this.!com.sun.javafx.application.PlatformImpl.platformExit } TO = javafx.application.Platform#exit( )
  32 actualOut D = { this.!exit( ) } U = { this.!com.sun.javafx.application.PlatformImpl.platformExit }
  33 merge ifSt(22)
  34 methodExit
  35 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Sample110FX#Sample110FX( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Sample110FX#start( javafx.stage.Stage ) ]
   1 throwsClause D = {  } U = { $java.lang.Exception }
   2 formalIn D = { stage$0 } U = {  }
   3 assignment D = {  } U = { stage$0.!setTitle( java.lang.String ) }
   4 receiver D = {  } U = { stage$0 }
   5 methodCall D = {  } U = { $java.lang.String, stage$0.!javafx.stage.Stage.title } TO = javafx.stage.Stage#setTitle( java.lang.String )
* actualOut D = { stage$0.!javafx.stage.Stage.title, stage$0.!setTitle( java.lang.String ) } U = { stage$0.!javafx.stage.Stage.title }
   7 assignment D = {  } U = { stage$0.!setWidth( double ) }
   8 receiver D = {  } U = { stage$0 }
   9 methodCall D = {  } U = { stage$0.!javafx.beans.property.DoublePropertyBase.value, stage$0.!javafx.stage.Window.peerBoundsConfigurator, stage$0.!javafx.stage.Window.width } TO = javafx.stage.Window#setWidth( double )
* actualOut D = { stage$0.!javafx.beans.property.DoublePropertyBase.value, stage$0.!javafx.stage.Window$TKBoundsConfigurator.windowWidth, stage$0.!javafx.stage.Window.widthExplicit, stage$0.!setWidth( double ) } U = { stage$0.!javafx.beans.property.DoublePropertyBase.value, stage$0.!javafx.stage.Window.peerBoundsConfigurator, stage$0.!javafx.stage.Window.width }
  11 assignment D = {  } U = { stage$0.!setHeight( double ) }
  12 receiver D = {  } U = { stage$0 }
  13 methodCall D = {  } U = { stage$0.!javafx.beans.property.DoublePropertyBase.value, stage$0.!javafx.stage.Window.height, stage$0.!javafx.stage.Window.peerBoundsConfigurator } TO = javafx.stage.Window#setHeight( double )
* actualOut D = { stage$0.!javafx.beans.property.DoublePropertyBase.value, stage$0.!javafx.stage.Window$TKBoundsConfigurator.windowHeight, stage$0.!javafx.stage.Window.heightExplicit, stage$0.!setHeight( double ) } U = { stage$0.!javafx.beans.property.DoublePropertyBase.value, stage$0.!javafx.stage.Window.height, stage$0.!javafx.stage.Window.peerBoundsConfigurator }
  15 localDeclaration D = { root$1 } U = { javafx.scene.Group.!Group( ) }
  16 receiver D = {  } U = {  }
  17 constructorCall D = {  } U = { javafx.scene.Group.!com.sun.javafx.scene.LayoutFlags.CLEAN, javafx.scene.Group.!com.sun.javafx.scene.LayoutFlags.NEEDS_LAYOUT, javafx.scene.Group.!javafx.scene.AccessibleRole.PARENT, javafx.scene.Group.!javafx.scene.Parent.children } TO = javafx.scene.Group#Group( )
* actualOut D = { javafx.scene.Group.!Group( ), javafx.scene.Group.!javafx.scene.Parent.BOTTOM_INVALID, javafx.scene.Group.!javafx.scene.Parent.FAR_INVALID, javafx.scene.Group.!javafx.scene.Parent.LEFT_INVALID, javafx.scene.Group.!javafx.scene.Parent.NEAR_INVALID, javafx.scene.Group.!javafx.scene.Parent.RIGHT_INVALID, javafx.scene.Group.!javafx.scene.Parent.TOP_INVALID, javafx.scene.Group.!javafx.scene.Parent.cachedBounds, javafx.scene.Group.!javafx.scene.Parent.childSet, javafx.scene.Group.!javafx.scene.Parent.children, javafx.scene.Group.!javafx.scene.Parent.childrenTriggerPermutation, javafx.scene.Group.!javafx.scene.Parent.layoutFlag, javafx.scene.Group.!javafx.scene.Parent.layoutRoot, javafx.scene.Group.!javafx.scene.Parent.minHeightCache, javafx.scene.Group.!javafx.scene.Parent.minWidthCache, javafx.scene.Group.!javafx.scene.Parent.performingLayout, javafx.scene.Group.!javafx.scene.Parent.pgChildrenSize, javafx.scene.Group.!javafx.scene.Parent.prefHeightCache, javafx.scene.Group.!javafx.scene.Parent.prefWidthCache, javafx.scene.Group.!javafx.scene.Parent.removedChildrenOptimizationDisabled, javafx.scene.Group.!javafx.scene.Parent.sceneRoot, javafx.scene.Group.!javafx.scene.Parent.sizeCacheClear, javafx.scene.Group.!javafx.scene.Parent.startIdx, javafx.scene.Group.!javafx.scene.Parent.stylesheets, javafx.scene.Group.!javafx.scene.Parent.tmp, javafx.scene.Group.!javafx.scene.Parent.unmodifiableChildren, javafx.scene.Group.!javafx.scene.Parent.unmodifiableManagedChildren } U = { javafx.scene.Group.!com.sun.javafx.scene.LayoutFlags.CLEAN, javafx.scene.Group.!com.sun.javafx.scene.LayoutFlags.NEEDS_LAYOUT, javafx.scene.Group.!javafx.scene.AccessibleRole.PARENT, javafx.scene.Group.!javafx.scene.Parent.children }
  19 localDeclaration D = { button$2 } U = { javafx.scene.control.Button.!Button( java.lang.String ) }
  20 receiver D = {  } U = {  }
  21 constructorCall D = {  } U = { $java.lang.String, javafx.scene.control.Button.!javafx.scene.AccessibleRole.BUTTON } TO = javafx.scene.control.Button#Button( java.lang.String )
* actualOut D = { javafx.scene.control.Button.!Button( java.lang.String ), javafx.scene.control.Button.!javafx.scene.control.ButtonBase.armed, javafx.scene.control.Button.!javafx.scene.control.ButtonBase.onAction } U = { javafx.scene.control.Button.!javafx.scene.AccessibleRole.BUTTON }
  23 assignment D = {  } U = { button$2.!setOnAction( javafx.event.EventHandler ) }
  24 receiver D = {  } U = { button$2 }
  25 methodCall D = {  } U = { $LAMBDA, button$2.!javafx.scene.control.ButtonBase.onAction, javafx.scene.control.Button.!Button( java.lang.String ).!javafx.scene.control.ButtonBase.onAction } TO = javafx.scene.control.ButtonBase#setOnAction( javafx.event.EventHandler )
  26 lambda D = { $LAMBDA } U = { this.!action( javafx.event.ActionEvent ) }
  27 receiver D = {  } U = {  }
  28 methodCall D = {  } U = { Alert.AlertType.INFORMATION, Alert.AlertType.INFORMATION.YES, Alert.AlertType.INFORMATION.YES.CANCEL, ButtonType.YES, this.!com.sun.javafx.application.PlatformImpl.platformExit, this.alert$1.!com.sun.javafx.tk.Toolkit.TOOLKIT, this.alert$1.!com.sun.javafx.tk.Toolkit.tk, this.alert$1.!java.lang.System.err, this.alert$1.!javafx.scene.control.Dialog.dialog, this.alert$1.!javafx.scene.control.DialogEvent.DIALOG_SHOWING, this.alert$1.!javafx.scene.control.DialogEvent.DIALOG_SHOWN, this.alert$1.!javafx.scene.control.DialogPane.headerText, this.javafx.scene.control.Alert.!javafx.scene.Node.styleClass, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.alertType, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.buttonsListener, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.dialogPaneRef, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.hasCustomButtons, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.headerTextListener, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.titleListener, this.javafx.scene.control.Alert.!javafx.scene.control.Dialog.dialog, this.javafx.scene.control.Alert.!javafx.scene.control.Dialog.dialogPane, this.javafx.scene.control.Alert.!javafx.scene.control.DialogPane.buttons, this.javafx.scene.control.Alert.!javafx.scene.control.DialogPane.contentText, this.javafx.scene.control.Alert.!javafx.stage.Modality.APPLICATION_MODAL, this.result$2.!java.util.Optional.value } TO = Sample110FX#action( javafx.event.ActionEvent )
  29 actualIn D = {  } U = { event$3 }
* actualOut D = { this.!action( javafx.event.ActionEvent ), this.alert$1.!com.sun.javafx.tk.Toolkit.TOOLKIT, this.javafx.scene.control.Alert.!javafx.scene.control.Alert$1.styleClasses, this.javafx.scene.control.Alert.!javafx.scene.control.Alert$1.this$0, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.alertType, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.buttonsListener, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.dialogPaneRef, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.hasCustomButtons, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.hasCustomHeaderText, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.hasCustomTitle, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.headerTextListener, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.installingDefaults, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.titleListener, this.javafx.scene.control.Alert.!javafx.scene.control.Dialog.dialog, this.javafx.scene.control.Alert.!javafx.scene.control.Dialog.dialogPane, this.javafx.scene.control.Alert.!javafx.scene.control.Dialog.eventHandlerManager, this.javafx.scene.control.Alert.!javafx.scene.control.Dialog.resultConverterProperty, this.javafx.scene.control.Alert.!javafx.scene.control.Dialog.resultProperty } U = { Alert.AlertType.INFORMATION, Alert.AlertType.INFORMATION.YES, Alert.AlertType.INFORMATION.YES.CANCEL, ButtonType.YES, this.!com.sun.javafx.application.PlatformImpl.platformExit, this.alert$1.!com.sun.javafx.tk.Toolkit.TOOLKIT, this.alert$1.!com.sun.javafx.tk.Toolkit.tk, this.alert$1.!java.lang.System.err, this.alert$1.!javafx.scene.control.Dialog.dialog, this.alert$1.!javafx.scene.control.DialogEvent.DIALOG_SHOWING, this.alert$1.!javafx.scene.control.DialogEvent.DIALOG_SHOWN, this.alert$1.!javafx.scene.control.DialogPane.headerText, this.javafx.scene.control.Alert.!javafx.scene.Node.styleClass, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.alertType, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.buttonsListener, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.dialogPaneRef, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.hasCustomButtons, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.headerTextListener, this.javafx.scene.control.Alert.!javafx.scene.control.Alert.titleListener, this.javafx.scene.control.Alert.!javafx.scene.control.Dialog.dialog, this.javafx.scene.control.Alert.!javafx.scene.control.Dialog.dialogPane, this.javafx.scene.control.Alert.!javafx.scene.control.DialogPane.buttons, this.javafx.scene.control.Alert.!javafx.scene.control.DialogPane.contentText, this.javafx.scene.control.Alert.!javafx.stage.Modality.APPLICATION_MODAL, this.result$2.!java.util.Optional.value }
  31 actualOut D = { button$2.!setOnAction( javafx.event.EventHandler ) } U = { button$2.!javafx.scene.control.ButtonBase.onAction, javafx.scene.control.Button.!Button( java.lang.String ).!javafx.scene.control.ButtonBase.onAction }
  32 assignment D = {  } U = { root$1.!getChildren( ).!add( java.lang.Object ) }
  33 receiver D = {  } U = { root$1.!getChildren( ) }
  34 receiver D = {  } U = { root$1 }
  35 methodCall D = {  } U = { javafx.scene.Group.!Group( ).!javafx.scene.Parent.children, root$1.!javafx.scene.Parent.children } TO = javafx.scene.Group#getChildren( )
  36 actualOut D = { root$1.!getChildren( ) } U = { javafx.scene.Group.!Group( ).!javafx.scene.Parent.children, root$1.!javafx.scene.Parent.children }
  37 methodCall D = {  } U = { button$2 } TO = java.util.List#add( java.lang.Object )
  38 actualOut D = { root$1.!getChildren( ).!add( java.lang.Object ) } U = {  }
  39 localDeclaration D = { scene$4 } U = { javafx.scene.Scene.!Scene( javafx.scene.Parent ) }
  40 receiver D = {  } U = {  }
  41 constructorCall D = {  } U = { javafx.scene.Scene.!javafx.application.ConditionalFeature.SCENE3D, javafx.scene.Scene.!javafx.scene.SceneAntialiasing.DISABLED, javafx.scene.Scene.!javafx.scene.paint.Color.WHITE, root$1 } TO = javafx.scene.Scene#Scene( javafx.scene.Parent )
* actualOut D = { javafx.scene.Scene.!Scene( javafx.scene.Parent ), javafx.scene.Scene.!javafx.scene.Scene.acc, javafx.scene.Scene.!javafx.scene.Scene.antiAliasing, javafx.scene.Scene.!javafx.scene.Scene.depthBuffer, javafx.scene.Scene.!javafx.scene.Scene.dndGesture, javafx.scene.Scene.!javafx.scene.Scene.focusDirty, javafx.scene.Scene.!javafx.scene.Scene.focusOwner, javafx.scene.Scene.!javafx.scene.Scene.heightSetByUser, javafx.scene.Scene.!javafx.scene.Scene.keyHandler, javafx.scene.Scene.!javafx.scene.Scene.lights, javafx.scene.Scene.!javafx.scene.Scene.nextTouchEvent, javafx.scene.Scene.!javafx.scene.Scene.rotateGesture, javafx.scene.Scene.!javafx.scene.Scene.scenePulseListener, javafx.scene.Scene.!javafx.scene.Scene.scrollGesture, javafx.scene.Scene.!javafx.scene.Scene.sizeInitialized, javafx.scene.Scene.!javafx.scene.Scene.stylesheets, javafx.scene.Scene.!javafx.scene.Scene.swipeGesture, javafx.scene.Scene.!javafx.scene.Scene.testPulseListener, javafx.scene.Scene.!javafx.scene.Scene.tmpTargetWrapper, javafx.scene.Scene.!javafx.scene.Scene.touchEventSetId, javafx.scene.Scene.!javafx.scene.Scene.touchMap, javafx.scene.Scene.!javafx.scene.Scene.touchPointIndex, javafx.scene.Scene.!javafx.scene.Scene.touchPoints, javafx.scene.Scene.!javafx.scene.Scene.touchTargets, javafx.scene.Scene.!javafx.scene.Scene.traversalEngine, javafx.scene.Scene.!javafx.scene.Scene.userAgentStylesheet, javafx.scene.Scene.!javafx.scene.Scene.widthSetByUser, javafx.scene.Scene.!javafx.scene.Scene.zoomGesture } U = { javafx.scene.Scene.!javafx.application.ConditionalFeature.SCENE3D, javafx.scene.Scene.!javafx.scene.SceneAntialiasing.DISABLED, javafx.scene.Scene.!javafx.scene.paint.Color.WHITE }
  43 assignment D = {  } U = { stage$0.!setScene( javafx.scene.Scene ) }
  44 receiver D = {  } U = { stage$0 }
  45 methodCall D = {  } U = { scene$4, stage$0.!com.sun.javafx.tk.Toolkit.TOOLKIT, stage$0.!com.sun.javafx.tk.Toolkit.tk, stage$0.!java.lang.System.err, stage$0.!javafx.stage.Window.scene } TO = javafx.stage.Stage#setScene( javafx.scene.Scene )
* actualOut D = { stage$0.!com.sun.javafx.tk.Toolkit.TOOLKIT, stage$0.!setScene( javafx.scene.Scene ) } U = { stage$0.!com.sun.javafx.tk.Toolkit.TOOLKIT, stage$0.!com.sun.javafx.tk.Toolkit.tk, stage$0.!java.lang.System.err, stage$0.!javafx.stage.Window.scene }
  47 assignment D = {  } U = { stage$0.!show( ) }
  48 receiver D = {  } U = { stage$0 }
  49 methodCall D = {  } U = {  } TO = javafx.stage.Stage#show( )
  50 actualOut D = { stage$0.!show( ) } U = {  }
  51 methodExit
  52 formalOut D = {  } U = { $_ }
--
   0: main( java.lang.String[] )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    7 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    2 trueControlFlow
   7:    7 ->    6 trueControlFlow
--
   0: action( javafx.event.ActionEvent )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    7 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 -> * trueControlFlow
   6: * ->    2 trueControlFlow
   7:    6 ->   11 trueControlFlow
   8:    7 ->    8 trueControlFlow
   9:    8 ->    9 trueControlFlow
  10:    9 ->    6 trueControlFlow
  11:   10 ->   15 trueControlFlow
  12:   11 ->   12 trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   10 trueControlFlow
  15:   14 ->   19 trueControlFlow
  16:   15 ->   16 trueControlFlow
  17:   16 ->   17 trueControlFlow
  18:   17 ->   14 trueControlFlow
  19:   18 ->   23 trueControlFlow
  20:   19 ->   20 trueControlFlow
  21:   20 -> * trueControlFlow
  22: * ->   18 trueControlFlow
  23:   22 ->   30 trueControlFlow
  24:   22 ->   33 falseControlFlow
  25:   23 ->   24 trueControlFlow
  26:   24 ->   25 trueControlFlow
  27:   25 ->   26 trueControlFlow
  28:   26 ->   27 trueControlFlow
  29:   27 ->   28 trueControlFlow
  30:   28 ->   22 trueControlFlow
  31:   29 ->   33 trueControlFlow
  32:   30 ->   31 trueControlFlow
  33:   31 ->   32 trueControlFlow
  34:   32 ->   29 trueControlFlow
  35:   33 ->   35 trueControlFlow
  36:   35 ->   34 trueControlFlow
--
   0: Sample110FX( )
   1:    0 ->    2 trueControlFlow
   2:    2 ->    1 trueControlFlow
--
   0: start( javafx.stage.Stage )
   1:    0 ->    2 trueControlFlow
   2:    1 ->   51 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    8 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 -> * trueControlFlow
   7: * ->    3 trueControlFlow
   8:    7 ->   12 trueControlFlow
   9:    8 ->    9 trueControlFlow
  10:    9 -> * trueControlFlow
  11: * ->    7 trueControlFlow
  12:   11 ->   16 trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 -> * trueControlFlow
  15: * ->   11 trueControlFlow
  16:   15 ->   20 trueControlFlow
  17:   16 ->   17 trueControlFlow
  18:   17 -> * trueControlFlow
  19: * ->   15 trueControlFlow
  20:   19 ->   24 trueControlFlow
  21:   20 ->   21 trueControlFlow
  22:   21 -> * trueControlFlow
  23: * ->   19 trueControlFlow
  24:   23 ->   34 trueControlFlow
  25:   24 ->   27 trueControlFlow
  26:   25 ->   31 trueControlFlow
  27:   26 ->   25 trueControlFlow
  28:   27 ->   29 trueControlFlow
  29:   28 -> * trueControlFlow
  30:   29 ->   28 trueControlFlow
  31: * ->   26 trueControlFlow
  32:   31 ->   23 trueControlFlow
  33:   32 ->   40 trueControlFlow
  34:   33 ->   37 trueControlFlow
  35:   34 ->   35 trueControlFlow
  36:   35 ->   36 trueControlFlow
  37:   36 ->   33 trueControlFlow
  38:   37 ->   38 trueControlFlow
  39:   38 ->   32 trueControlFlow
  40:   39 ->   44 trueControlFlow
  41:   40 ->   41 trueControlFlow
  42:   41 -> * trueControlFlow
  43: * ->   39 trueControlFlow
  44:   43 ->   48 trueControlFlow
  45:   44 ->   45 trueControlFlow
  46:   45 -> * trueControlFlow
  47: * ->   43 trueControlFlow
  48:   47 ->   52 trueControlFlow
  49:   48 ->   49 trueControlFlow
  50:   49 ->   50 trueControlFlow
  51:   50 ->   47 trueControlFlow
  52:   52 ->   51 trueControlFlow
--
----- CCFG (to here) -----

