----- CCFG (from here) -----
Class Name = Sample20
   0 constructorEntry [ Sample20( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ main( java.lang.String[] ) ]
   1 formalIn D = { args$0 } U = {  }
   2 localDeclaration D = { thread$1 } U = { ThreadA.!ThreadA( ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = {  } TO = ThreadA#ThreadA( )
   5 actualOut D = { ThreadA.!ThreadA( ) } U = {  }
   6 assignment D = {  } U = { thread$1.!start( ) }
   7 receiver D = {  } U = { thread$1 }
   8 methodCall D = {  } U = { ThreadA.!ThreadA( ).!java.lang.Thread.group, ThreadA.!ThreadA( ).!java.lang.Thread.threadStatus, ThreadA.!ThreadA( ).!java.lang.ThreadGroup.destroyed, ThreadA.!ThreadA( ).!java.lang.ThreadGroup.nUnstartedThreads, ThreadA.!ThreadA( ).!java.lang.ThreadGroup.nthreads, ThreadA.!ThreadA( ).!java.lang.ThreadGroup.threads, thread$1.!java.lang.Thread.group, thread$1.!java.lang.Thread.threadStatus, thread$1.!java.lang.ThreadGroup.destroyed, thread$1.!java.lang.ThreadGroup.nUnstartedThreads, thread$1.!java.lang.ThreadGroup.nthreads, thread$1.!java.lang.ThreadGroup.threads } TO = java.lang.Thread#start( )
* actualOut D = { thread$1.!java.lang.ThreadGroup.nUnstartedThreads, thread$1.!java.lang.ThreadGroup.nthreads, thread$1.!java.lang.ThreadGroup.threads, thread$1.!start( ) } U = { ThreadA.!ThreadA( ).!java.lang.Thread.group, ThreadA.!ThreadA( ).!java.lang.Thread.threadStatus, ThreadA.!ThreadA( ).!java.lang.ThreadGroup.destroyed, ThreadA.!ThreadA( ).!java.lang.ThreadGroup.nUnstartedThreads, ThreadA.!ThreadA( ).!java.lang.ThreadGroup.nthreads, ThreadA.!ThreadA( ).!java.lang.ThreadGroup.threads, thread$1.!java.lang.Thread.group, thread$1.!java.lang.Thread.threadStatus, thread$1.!java.lang.ThreadGroup.destroyed, thread$1.!java.lang.ThreadGroup.nUnstartedThreads, thread$1.!java.lang.ThreadGroup.nthreads, thread$1.!java.lang.ThreadGroup.threads }
  10 localDeclaration D = { i$2 } U = {  }
  11 forSt D = {  } U = { i$2 }
  12 assignment D = {  } U = { System.out.!println( java.lang.String ) }
  13 receiver D = {  } U = { System.out }
  14 methodCall D = {  } U = { $java.lang.String, System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut, i$2 } TO = java.io.PrintStream#println( java.lang.String )
* actualOut D = { System.out.!java.io.PrintStream.trouble, System.out.!println( java.lang.String ) } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut }
  16 assignment D = { i$2 } U = { i$2 }
  17 methodExit
  18 formalOut D = {  } U = { $_ }
--
   0: Sample20( )
   1:    0 ->    2 trueControlFlow
   2:    2 ->    1 trueControlFlow
--
   0: main( java.lang.String[] )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    7 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    2 trueControlFlow
   7:    6 ->   10 trueControlFlow
   8:    7 ->    8 trueControlFlow
   9:    8 -> * trueControlFlow
  10: * ->    6 trueControlFlow
  11:   10 ->   11 trueControlFlow
  12:   11 ->   13 trueControlFlow
  13:   11 ->   18 falseControlFlow
  14:   12 ->   16 trueControlFlow
  15:   13 ->   14 trueControlFlow
  16:   14 -> * trueControlFlow
  17: * ->   12 trueControlFlow
  18:   16 ->   11 trueControlFlow (LC =   11)
  19:   18 ->   17 trueControlFlow
--
----- CCFG (to here) -----

