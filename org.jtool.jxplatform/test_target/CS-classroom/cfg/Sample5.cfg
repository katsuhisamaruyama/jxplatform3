----- CCFG (from here) -----
Class Name = Sample5
   0 constructorEntry [ Sample5( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ main( java.lang.String[] ) ]
   1 formalIn D = { args$0 } U = {  }
   2 localDeclaration D = { shape$1 } U = {  }
   3 localDeclaration D = { line$2 } U = { Line.!Line( int int int int ) }
   4 receiver D = {  } U = {  }
   5 constructorCall D = {  } U = {  } TO = Line#Line( int int int int )
   6 actualIn D = {  } U = {  }
   7 actualIn D = {  } U = {  }
   8 actualIn D = {  } U = {  }
   9 actualIn D = {  } U = {  }
  10 actualOut D = { Line.!Line( int int int int ) } U = {  }
  11 assignment D = {  } U = { line$2.!draw( ) }
  12 receiver D = {  } U = { line$2 }
  13 methodCall D = {  } U = { Line.!Line( int int int int ).System.out.!java.io.PrintStream.autoFlush, Line.!Line( int int int int ).System.out.!java.io.PrintStream.charOut, Line.!Line( int int int int ).System.out.!java.io.PrintStream.out, Line.!Line( int int int int ).System.out.!java.io.PrintStream.textOut, System.out, line$2.System.out.!java.io.PrintStream.autoFlush, line$2.System.out.!java.io.PrintStream.charOut, line$2.System.out.!java.io.PrintStream.out, line$2.System.out.!java.io.PrintStream.textOut } TO = Line#draw( )
  14 actualOut D = { line$2.!draw( ), line$2.System.out.!java.io.PrintStream.trouble } U = { Line.!Line( int int int int ).System.out.!java.io.PrintStream.autoFlush, Line.!Line( int int int int ).System.out.!java.io.PrintStream.charOut, Line.!Line( int int int int ).System.out.!java.io.PrintStream.out, Line.!Line( int int int int ).System.out.!java.io.PrintStream.textOut, System.out, line$2.System.out.!java.io.PrintStream.autoFlush, line$2.System.out.!java.io.PrintStream.charOut, line$2.System.out.!java.io.PrintStream.out, line$2.System.out.!java.io.PrintStream.textOut }
  15 localDeclaration D = { rectangle$3 } U = { Rectangle.!Rectangle( int int int int ) }
  16 receiver D = {  } U = {  }
  17 constructorCall D = {  } U = {  } TO = Rectangle#Rectangle( int int int int )
  18 actualIn D = {  } U = {  }
  19 actualIn D = {  } U = {  }
  20 actualIn D = {  } U = {  }
  21 actualIn D = {  } U = {  }
  22 actualOut D = { Rectangle.!Rectangle( int int int int ) } U = {  }
  23 assignment D = {  } U = { rectangle$3.!draw( ) }
  24 receiver D = {  } U = { rectangle$3 }
  25 methodCall D = {  } U = { Rectangle.!Rectangle( int int int int ).System.out.!java.io.PrintStream.autoFlush, Rectangle.!Rectangle( int int int int ).System.out.!java.io.PrintStream.charOut, Rectangle.!Rectangle( int int int int ).System.out.!java.io.PrintStream.out, Rectangle.!Rectangle( int int int int ).System.out.!java.io.PrintStream.textOut, System.out, rectangle$3.System.out.!java.io.PrintStream.autoFlush, rectangle$3.System.out.!java.io.PrintStream.charOut, rectangle$3.System.out.!java.io.PrintStream.out, rectangle$3.System.out.!java.io.PrintStream.textOut } TO = Rectangle#draw( )
  26 actualOut D = { rectangle$3.!draw( ), rectangle$3.System.out.!java.io.PrintStream.trouble } U = { Rectangle.!Rectangle( int int int int ).System.out.!java.io.PrintStream.autoFlush, Rectangle.!Rectangle( int int int int ).System.out.!java.io.PrintStream.charOut, Rectangle.!Rectangle( int int int int ).System.out.!java.io.PrintStream.out, Rectangle.!Rectangle( int int int int ).System.out.!java.io.PrintStream.textOut, System.out, rectangle$3.System.out.!java.io.PrintStream.autoFlush, rectangle$3.System.out.!java.io.PrintStream.charOut, rectangle$3.System.out.!java.io.PrintStream.out, rectangle$3.System.out.!java.io.PrintStream.textOut }
  27 assignment D = { shape$1 } U = { line$2 }
  28 assignment D = {  } U = { shape$1.!draw( ) }
  29 receiver D = {  } U = { line$2, shape$1 }
  30 methodCall D = {  } U = { System.out, line$2.System.out.!java.io.PrintStream.autoFlush, line$2.System.out.!java.io.PrintStream.charOut, line$2.System.out.!java.io.PrintStream.out, line$2.System.out.!java.io.PrintStream.textOut, shape$1.System.out.!java.io.PrintStream.autoFlush, shape$1.System.out.!java.io.PrintStream.charOut, shape$1.System.out.!java.io.PrintStream.out, shape$1.System.out.!java.io.PrintStream.textOut } TO = Shape#draw( )
  31 actualOut D = { shape$1.!draw( ), shape$1.System.out.!java.io.PrintStream.trouble } U = { System.out, line$2.System.out.!java.io.PrintStream.autoFlush, line$2.System.out.!java.io.PrintStream.charOut, line$2.System.out.!java.io.PrintStream.out, line$2.System.out.!java.io.PrintStream.textOut, shape$1.System.out.!java.io.PrintStream.autoFlush, shape$1.System.out.!java.io.PrintStream.charOut, shape$1.System.out.!java.io.PrintStream.out, shape$1.System.out.!java.io.PrintStream.textOut }
  32 assignment D = { shape$1 } U = { rectangle$3 }
  33 assignment D = {  } U = { shape$1.!draw( ) }
  34 receiver D = {  } U = { rectangle$3, shape$1 }
  35 methodCall D = {  } U = { System.out, rectangle$3.System.out.!java.io.PrintStream.autoFlush, rectangle$3.System.out.!java.io.PrintStream.charOut, rectangle$3.System.out.!java.io.PrintStream.out, rectangle$3.System.out.!java.io.PrintStream.textOut, shape$1.System.out.!java.io.PrintStream.autoFlush, shape$1.System.out.!java.io.PrintStream.charOut, shape$1.System.out.!java.io.PrintStream.out, shape$1.System.out.!java.io.PrintStream.textOut } TO = Shape#draw( )
  36 actualOut D = { shape$1.!draw( ), shape$1.System.out.!java.io.PrintStream.trouble } U = { System.out, rectangle$3.System.out.!java.io.PrintStream.autoFlush, rectangle$3.System.out.!java.io.PrintStream.charOut, rectangle$3.System.out.!java.io.PrintStream.out, rectangle$3.System.out.!java.io.PrintStream.textOut, shape$1.System.out.!java.io.PrintStream.autoFlush, shape$1.System.out.!java.io.PrintStream.charOut, shape$1.System.out.!java.io.PrintStream.out, shape$1.System.out.!java.io.PrintStream.textOut }
  37 methodExit
  38 formalOut D = {  } U = { $_ }
  39 actualOut D = { Line.!Line( int int int int ).x1 } U = {  }
  40 actualOut D = { Line.!Line( int int int int ).x2 } U = {  }
  41 actualOut D = { Line.!Line( int int int int ).y1 } U = {  }
  42 actualOut D = { Line.!Line( int int int int ).y2 } U = {  }
  43 actualOut D = { Rectangle.!Rectangle( int int int int ).x1 } U = {  }
  44 actualOut D = { Rectangle.!Rectangle( int int int int ).x2 } U = {  }
  45 actualOut D = { Rectangle.!Rectangle( int int int int ).y1 } U = {  }
  46 actualOut D = { Rectangle.!Rectangle( int int int int ).y2 } U = {  }
--
   0: Sample5( )
   1: 0 -> 2 trueControlFlow
   2: 2 -> 1 trueControlFlow
--
   0: main( java.lang.String[] )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 12 trueControlFlow
   5: 4 -> 6 trueControlFlow
   6: 5 -> 39 trueControlFlow
   7: 6 -> 7 trueControlFlow
   8: 7 -> 8 trueControlFlow
   9: 8 -> 9 trueControlFlow
  10: 9 -> 5 trueControlFlow
  11: 10 -> 3 trueControlFlow
  12: 11 -> 16 trueControlFlow
  13: 12 -> 13 trueControlFlow
  14: 13 -> 14 trueControlFlow
  15: 14 -> 11 trueControlFlow
  16: 15 -> 24 trueControlFlow
  17: 16 -> 18 trueControlFlow
  18: 17 -> 43 trueControlFlow
  19: 18 -> 19 trueControlFlow
  20: 19 -> 20 trueControlFlow
  21: 20 -> 21 trueControlFlow
  22: 21 -> 17 trueControlFlow
  23: 22 -> 15 trueControlFlow
  24: 23 -> 27 trueControlFlow
  25: 24 -> 25 trueControlFlow
  26: 25 -> 26 trueControlFlow
  27: 26 -> 23 trueControlFlow
  28: 27 -> 29 trueControlFlow
  29: 28 -> 32 trueControlFlow
  30: 29 -> 30 trueControlFlow
  31: 30 -> 31 trueControlFlow
  32: 31 -> 28 trueControlFlow
  33: 32 -> 34 trueControlFlow
  34: 33 -> 38 trueControlFlow
  35: 34 -> 35 trueControlFlow
  36: 35 -> 36 trueControlFlow
  37: 36 -> 33 trueControlFlow
  38: 38 -> 37 trueControlFlow
  39: 39 -> 40 trueControlFlow
  40: 40 -> 41 trueControlFlow
  41: 41 -> 42 trueControlFlow
  42: 42 -> 10 trueControlFlow
  43: 43 -> 44 trueControlFlow
  44: 44 -> 45 trueControlFlow
  45: 45 -> 46 trueControlFlow
  46: 46 -> 22 trueControlFlow
--
----- CCFG (to here) -----

