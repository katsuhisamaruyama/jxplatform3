----- CCFG (from here) -----
Class Name = Sample2Test
   0 constructorEntry [ Sample2Test( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ test1( ) ]
   1 localDeclaration D = { circle$0 } U = { circle$0.!Circle }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { circle$0.radius, circle$0.x, circle$0.y } U = { circle$0.radius, circle$0.x, circle$0.y } TO = Circle#Circle( int int int )
   4 actualIn D = {  } U = {  }
   5 actualIn D = {  } U = {  }
   6 actualIn D = {  } U = {  }
   7 actualOut D = { circle$0.!Circle, circle$0.radius, circle$0.x, circle$0.y } U = { circle$0.radius, circle$0.x, circle$0.y }
   8 assignment D = {  } U = { this.!assertEquals }
   9 receiver D = {  } U = {  }
  10 methodCall D = {  } U = { circle$0.!getX } TO = org.junit.Assert#assertEquals( long long )
  11 receiver D = {  } U = { circle$0 }
  12 methodCall D = {  } U = { circle$0.x } TO = Circle#getX( )
  13 actualOut D = { circle$0.!getX } U = { circle$0.x }
  14 actualOut D = { this.!assertEquals } U = {  }
  15 methodExit
  16 formalOut D = {  } U = { $_, circle$0.radius, circle$0.x, circle$0.y }
--
   0 methodEntry [ test2( ) ]
   1 localDeclaration D = { circle$0 } U = { circle$0.!Circle }
   2 receiver D = {  } U = {  }
   3 constructorCall D = { circle$0.radius, circle$0.x, circle$0.y } U = { circle$0.radius, circle$0.x, circle$0.y } TO = Circle#Circle( int int int )
   4 actualIn D = {  } U = {  }
   5 actualIn D = {  } U = {  }
   6 actualIn D = {  } U = {  }
   7 actualOut D = { circle$0.!Circle, circle$0.radius, circle$0.x, circle$0.y } U = { circle$0.radius, circle$0.x, circle$0.y }
   8 assignment D = {  } U = { this.!assertEquals }
   9 receiver D = {  } U = {  }
  10 methodCall D = {  } U = { circle$0.!getY } TO = org.junit.Assert#assertEquals( long long )
  11 receiver D = {  } U = { circle$0 }
  12 methodCall D = {  } U = { circle$0.y } TO = Circle#getY( )
  13 actualOut D = { circle$0.!getY } U = { circle$0.y }
  14 actualOut D = { this.!assertEquals } U = {  }
  15 methodExit
  16 formalOut D = {  } U = { $_, circle$0.radius, circle$0.x, circle$0.y }
--
   0: Sample2Test( )
   1: 0 -> 2 trueControlFlow
   2: 2 -> 1 trueControlFlow
--
   0: test1( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 9 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 7 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 6 trueControlFlow
   7: 6 -> 3 trueControlFlow
   8: 7 -> 1 trueControlFlow
   9: 8 -> 16 trueControlFlow
  10: 9 -> 11 trueControlFlow
  11: 10 -> 14 trueControlFlow
  12: 11 -> 12 trueControlFlow
  13: 12 -> 13 trueControlFlow
  14: 13 -> 10 trueControlFlow
  15: 14 -> 8 trueControlFlow
  16: 16 -> 15 trueControlFlow
--
   0: test2( )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 9 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 7 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 6 trueControlFlow
   7: 6 -> 3 trueControlFlow
   8: 7 -> 1 trueControlFlow
   9: 8 -> 16 trueControlFlow
  10: 9 -> 11 trueControlFlow
  11: 10 -> 14 trueControlFlow
  12: 11 -> 12 trueControlFlow
  13: 12 -> 13 trueControlFlow
  14: 13 -> 10 trueControlFlow
  15: 14 -> 8 trueControlFlow
  16: 16 -> 15 trueControlFlow
--
----- CCFG (to here) -----

