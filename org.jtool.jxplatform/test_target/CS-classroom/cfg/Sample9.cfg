----- CCFG (from here) -----
Class Name = Sample9
   0 methodEntry [ main( java.lang.String[] ) ]
   1 formalIn D = { args$0 } U = {  }
   2 localDeclaration D = { filename$1 } U = { $java.lang.String }
   3 trySt D = {  } U = {  }
   4 localDeclaration D = { pw$4 } U = { pw$4.!PrintWriter }
   5 receiver D = {  } U = {  }
   6 constructorCall D = { pw$4.autoFlush, pw$4.out, pw$4.psOut, pw$4.trouble } U = { pw$4.!BufferedWriter } TO = java.io.PrintWriter#PrintWriter( java.io.Writer )
   7 receiver D = {  } U = {  }
   8 constructorCall D = { pw$4.cb, pw$4.nChars, pw$4.nextChar, pw$4.out } U = { pw$4.!FileWriter, pw$4.defaultCharBufferSize } TO = java.io.BufferedWriter#BufferedWriter( java.io.Writer )
   9 receiver D = {  } U = {  }
  10 constructorCall D = { java.io.OutputStreamWriter.se } U = { filename$1 } TO = java.io.FileWriter#FileWriter( java.lang.String )
  11 actualOut D = { java.io.OutputStreamWriter.se, pw$4.!FileWriter } U = {  }
  12 actualOut D = { pw$4.!BufferedWriter, pw$4.cb, pw$4.nChars, pw$4.nextChar, pw$4.out } U = { pw$4.defaultCharBufferSize }
  13 actualOut D = { pw$4.!PrintWriter, pw$4.autoFlush, pw$4.out, pw$4.psOut, pw$4.trouble } U = {  }
  14 assignment D = {  } U = { pw$4.!println }
  15 receiver D = {  } U = { pw$4 }
  16 methodCall D = {  } U = { $java.lang.String, java.io.Writer.lock, pw$4 } TO = java.io.PrintWriter#println( java.lang.String )
  17 actualOut D = { pw$4.!println } U = { java.io.Writer.lock }
  18 assignment D = {  } U = { pw$4.!println }
  19 receiver D = {  } U = { pw$4 }
  20 methodCall D = {  } U = { $java.lang.String, java.io.Writer.lock, pw$4 } TO = java.io.PrintWriter#println( java.lang.String )
  21 actualOut D = { pw$4.!println } U = { java.io.Writer.lock }
  22 merge trySt(3)
  23 catchClause D = { e$5 } U = {  }
  24 assignment D = {  } U = { System.out.!println }
  25 receiver D = {  } U = { System.out }
  26 methodCall D = { System.out, System.out.trouble } U = { $java.lang.String, System.out, System.out.autoFlush, System.out.charOut, System.out.textOut, filename$1, java.io.FilterOutputStream.out } TO = java.io.PrintStream#println( java.lang.String )
  27 actualOut D = { System.out, System.out.!println, System.out.trouble } U = { System.out, System.out.autoFlush, System.out.charOut, System.out.textOut, java.io.FilterOutputStream.out }
  28 trySt D = {  } U = {  }
  29 localDeclaration D = { br$8 } U = { br$8.!BufferedReader }
  30 receiver D = {  } U = {  }
  31 constructorCall D = { br$8.cb, br$8.in, br$8.markedChar, br$8.markedSkipLF, br$8.nChars, br$8.nextChar, br$8.readAheadLimit, br$8.skipLF } U = { br$8.!FileReader, br$8.defaultCharBufferSize } TO = java.io.BufferedReader#BufferedReader( java.io.Reader )
  32 receiver D = {  } U = {  }
  33 constructorCall D = { java.io.InputStreamReader.sd } U = { filename$1 } TO = java.io.FileReader#FileReader( java.lang.String )
  34 actualOut D = { br$8.!FileReader, java.io.InputStreamReader.sd } U = {  }
  35 actualOut D = { br$8.!BufferedReader, br$8.cb, br$8.in, br$8.markedChar, br$8.markedSkipLF, br$8.nChars, br$8.nextChar, br$8.readAheadLimit, br$8.skipLF } U = { br$8.defaultCharBufferSize }
  36 localDeclaration D = { line$9 } U = {  }
  37 whileSt D = { line$9 } U = { br$8.!readLine }
  38 receiver D = {  } U = { br$8 }
  39 methodCall D = { br$8, br$8.nextChar, br$8.skipLF } U = { br$8, br$8.cb, br$8.defaultExpectedLineLength, br$8.nChars, br$8.nextChar, br$8.skipLF, java.io.Reader.lock } TO = java.io.BufferedReader#readLine( )
  40 actualOut D = { br$8, br$8.!readLine, br$8.nextChar, br$8.skipLF } U = { br$8, br$8.cb, br$8.defaultExpectedLineLength, br$8.nChars, br$8.nextChar, br$8.skipLF, java.io.Reader.lock }
  41 assignment D = {  } U = { System.out.!println }
  42 receiver D = {  } U = { System.out }
  43 methodCall D = { System.out, System.out.trouble } U = { System.out, System.out.autoFlush, System.out.charOut, System.out.textOut, br$8.!readLine, java.io.FilterOutputStream.out, line$9 } TO = java.io.PrintStream#println( java.lang.String )
  44 actualOut D = { System.out, System.out.!println, System.out.trouble } U = { System.out, System.out.autoFlush, System.out.charOut, System.out.textOut, java.io.FilterOutputStream.out }
  45 merge trySt(28)
  46 catchClause D = { e$10 } U = {  }
  47 assignment D = {  } U = { System.out.!println }
  48 receiver D = {  } U = { System.out }
  49 methodCall D = { System.out, System.out.trouble } U = { $java.lang.String, System.out, System.out.autoFlush, System.out.charOut, System.out.textOut, filename$1, java.io.FilterOutputStream.out } TO = java.io.PrintStream#println( java.lang.String )
  50 actualOut D = { System.out, System.out.!println, System.out.trouble } U = { System.out, System.out.autoFlush, System.out.charOut, System.out.textOut, java.io.FilterOutputStream.out }
  51 catchClause D = { e$11 } U = {  }
  52 assignment D = {  } U = { System.out.!println }
  53 receiver D = {  } U = { System.out }
  54 methodCall D = { System.out, System.out.trouble } U = { $java.lang.String, System.out, System.out.autoFlush, System.out.charOut, System.out.textOut, filename$1, java.io.FilterOutputStream.out } TO = java.io.PrintStream#println( java.lang.String )
  55 actualOut D = { System.out, System.out.!println, System.out.trouble } U = { System.out, System.out.autoFlush, System.out.charOut, System.out.textOut, java.io.FilterOutputStream.out }
  56 methodExit
  57 formalOut D = {  } U = { $_, System.out, System.out.trouble, br$8.cb, br$8.in, br$8.markedChar, br$8.markedSkipLF, br$8.nChars, br$8.nextChar, br$8.readAheadLimit, br$8.skipLF, java.io.InputStreamReader.sd, java.io.OutputStreamWriter.se, pw$4.autoFlush, pw$4.cb, pw$4.nChars, pw$4.nextChar, pw$4.out, pw$4.psOut, pw$4.trouble }
--
   0 constructorEntry [ Sample9( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0: main( java.lang.String[] )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 2 trueControlFlow
   3: 2 -> 3 trueControlFlow
   4: 3 -> 5 trueControlFlow
   5: 3 -> 22 fallThroughFlow
   6: 4 -> 15 trueControlFlow
   7: 5 -> 7 trueControlFlow
   8: 6 -> 13 trueControlFlow
   9: 7 -> 9 trueControlFlow
  10: 8 -> 12 trueControlFlow
  11: 9 -> 10 trueControlFlow
  12: 10 -> 11 trueControlFlow
  13: 10 -> 23 exceptionCatchFlow
  14: 11 -> 8 trueControlFlow
  15: 12 -> 6 trueControlFlow
  16: 13 -> 4 trueControlFlow
  17: 14 -> 19 trueControlFlow
  18: 15 -> 16 trueControlFlow
  19: 16 -> 17 trueControlFlow
  20: 17 -> 14 trueControlFlow
  21: 18 -> 22 trueControlFlow
  22: 19 -> 20 trueControlFlow
  23: 20 -> 21 trueControlFlow
  24: 21 -> 18 trueControlFlow
  25: 22 -> 28 trueControlFlow
  26: 23 -> 25 trueControlFlow
  27: 24 -> 22 trueControlFlow
  28: 25 -> 26 trueControlFlow
  29: 26 -> 27 trueControlFlow
  30: 27 -> 24 trueControlFlow
  31: 28 -> 30 trueControlFlow
  32: 28 -> 45 fallThroughFlow
  33: 29 -> 36 trueControlFlow
  34: 30 -> 32 trueControlFlow
  35: 31 -> 35 trueControlFlow
  36: 32 -> 33 trueControlFlow
  37: 33 -> 34 trueControlFlow
  38: 33 -> 46 exceptionCatchFlow
  39: 33 -> 51 exceptionCatchFlow
  40: 34 -> 31 trueControlFlow
  41: 35 -> 29 trueControlFlow
  42: 36 -> 38 trueControlFlow
  43: 37 -> 42 trueControlFlow
  44: 37 -> 45 falseControlFlow
  45: 38 -> 39 trueControlFlow
  46: 39 -> 40 trueControlFlow
  47: 39 -> 51 exceptionCatchFlow
  48: 40 -> 37 trueControlFlow
  49: 41 -> 37 trueControlFlow (LC = 37)
  50: 42 -> 43 trueControlFlow
  51: 43 -> 44 trueControlFlow
  52: 44 -> 41 trueControlFlow
  53: 45 -> 57 trueControlFlow
  54: 46 -> 48 trueControlFlow
  55: 47 -> 45 trueControlFlow
  56: 48 -> 49 trueControlFlow
  57: 49 -> 50 trueControlFlow
  58: 50 -> 47 trueControlFlow
  59: 51 -> 53 trueControlFlow
  60: 52 -> 45 trueControlFlow
  61: 53 -> 54 trueControlFlow
  62: 54 -> 55 trueControlFlow
  63: 55 -> 52 trueControlFlow
  64: 57 -> 56 trueControlFlow
--
   0: Sample9( )
   1: 0 -> 2 trueControlFlow
   2: 2 -> 1 trueControlFlow
--
----- CCFG (to here) -----

