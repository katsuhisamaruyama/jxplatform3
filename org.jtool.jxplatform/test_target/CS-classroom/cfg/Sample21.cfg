----- CCFG (from here) -----
Class Name = Sample21
   0 constructorEntry [ Sample21#Sample21( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Sample21#main( java.lang.String[] ) ]
   1 formalIn D = { args$0 } U = {  }
   2 localDeclaration D = { th$1 } U = { ThreadB.!ThreadB( ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = {  } TO = ThreadB#ThreadB( )
   5 actualOut D = { ThreadB.!ThreadB( ) } U = {  }
   6 localDeclaration D = { thread$2 } U = { java.lang.Thread.!Thread( java.lang.Runnable ) }
   7 receiver D = {  } U = {  }
   8 constructorCall D = {  } U = { java.lang.Thread.!java.lang.StringBuilder.count, java.lang.Thread.!java.lang.StringBuilder.value, java.lang.Thread.!java.lang.Thread.threadInitNumber, th$1 } TO = java.lang.Thread#Thread( java.lang.Runnable )
   9 actualOut D = { java.lang.Thread.!Thread( java.lang.Runnable ), java.lang.Thread.!java.lang.Thread.threadInitNumber } U = { java.lang.Thread.!java.lang.StringBuilder.count, java.lang.Thread.!java.lang.StringBuilder.value, java.lang.Thread.!java.lang.Thread.threadInitNumber }
  10 assignment D = {  } U = { thread$2.!start( ) }
  11 receiver D = {  } U = { thread$2 }
  12 methodCall D = {  } U = { java.lang.Thread.!Thread( java.lang.Runnable ).!java.lang.Thread.group, java.lang.Thread.!Thread( java.lang.Runnable ).!java.lang.Thread.threadStatus, java.lang.Thread.!Thread( java.lang.Runnable ).!java.lang.ThreadGroup.destroyed, java.lang.Thread.!Thread( java.lang.Runnable ).!java.lang.ThreadGroup.nUnstartedThreads, java.lang.Thread.!Thread( java.lang.Runnable ).!java.lang.ThreadGroup.nthreads, java.lang.Thread.!Thread( java.lang.Runnable ).!java.lang.ThreadGroup.threads, thread$2.!java.lang.Thread.group, thread$2.!java.lang.Thread.threadStatus, thread$2.!java.lang.ThreadGroup.destroyed, thread$2.!java.lang.ThreadGroup.nUnstartedThreads, thread$2.!java.lang.ThreadGroup.nthreads, thread$2.!java.lang.ThreadGroup.threads } TO = java.lang.Thread#start( )
  13 actualOut D = { thread$2.!java.lang.ThreadGroup.nUnstartedThreads, thread$2.!java.lang.ThreadGroup.nthreads, thread$2.!java.lang.ThreadGroup.threads, thread$2.!start( ) } U = { java.lang.Thread.!Thread( java.lang.Runnable ).!java.lang.Thread.group, java.lang.Thread.!Thread( java.lang.Runnable ).!java.lang.Thread.threadStatus, java.lang.Thread.!Thread( java.lang.Runnable ).!java.lang.ThreadGroup.destroyed, java.lang.Thread.!Thread( java.lang.Runnable ).!java.lang.ThreadGroup.nUnstartedThreads, java.lang.Thread.!Thread( java.lang.Runnable ).!java.lang.ThreadGroup.nthreads, java.lang.Thread.!Thread( java.lang.Runnable ).!java.lang.ThreadGroup.threads, thread$2.!java.lang.Thread.group, thread$2.!java.lang.Thread.threadStatus, thread$2.!java.lang.ThreadGroup.destroyed, thread$2.!java.lang.ThreadGroup.nUnstartedThreads, thread$2.!java.lang.ThreadGroup.nthreads, thread$2.!java.lang.ThreadGroup.threads }
  14 localDeclaration D = { i$3 } U = {  }
  15 forSt D = {  } U = { i$3 }
  16 assignment D = {  } U = { System.out.!println( java.lang.String ) }
  17 receiver D = {  } U = { System.out }
  18 methodCall D = {  } U = { $java.lang.String, System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut, i$3 } TO = java.io.PrintStream#println( java.lang.String )
  19 actualOut D = { System.out.!java.io.PrintStream.trouble, System.out.!println( java.lang.String ) } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut }
  20 assignment D = { i$3 } U = { i$3 }
  21 methodExit
  22 formalOut D = {  } U = { $_ }
--
   0: Sample21( )
   1:    0 ->    2 trueControlFlow
   2:    2 ->    1 trueControlFlow
--
   0: main( java.lang.String[] )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    7 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    2 trueControlFlow
   7:    6 ->   11 trueControlFlow
   8:    7 ->    8 trueControlFlow
   9:    8 ->    9 trueControlFlow
  10:    9 ->    6 trueControlFlow
  11:   10 ->   14 trueControlFlow
  12:   11 ->   12 trueControlFlow
  13:   12 ->   13 trueControlFlow
  14:   13 ->   10 trueControlFlow
  15:   14 ->   15 trueControlFlow
  16:   15 ->   17 trueControlFlow
  17:   15 ->   22 falseControlFlow
  18:   16 ->   20 trueControlFlow
  19:   17 ->   18 trueControlFlow
  20:   18 ->   19 trueControlFlow
  21:   19 ->   16 trueControlFlow
  22:   20 ->   15 trueControlFlow (L = 15)
  23:   22 ->   21 trueControlFlow
--
----- CCFG (to here) -----

