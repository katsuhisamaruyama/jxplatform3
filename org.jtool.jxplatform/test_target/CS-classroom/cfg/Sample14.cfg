----- CCFG (from here) -----
Class Name = Sample14
   0 methodEntry [ Sample14#main( java.lang.String[] ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { args$0 } U = {  }
   3 localDeclaration D = { frame$1 } U = { javax.swing.JFrame.!JFrame( java.lang.String ) }
   4 receiver D = {  } U = {  }
   5 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JFrame#JFrame( java.lang.String )
   6 actualOut D = { javax.swing.JFrame.!JFrame( java.lang.String ), javax.swing.JFrame.!java.awt.Frame.frameSerializedDataVersion, javax.swing.JFrame.!java.awt.Frame.mbManagement, javax.swing.JFrame.!java.awt.Frame.resizable, javax.swing.JFrame.!java.awt.Frame.state, javax.swing.JFrame.!java.awt.Frame.title, javax.swing.JFrame.!java.awt.Frame.undecorated, javax.swing.JFrame.!javax.swing.JFrame.accessibleContext, javax.swing.JFrame.!javax.swing.JFrame.defaultCloseOperation, javax.swing.JFrame.!javax.swing.JFrame.rootPaneCheckingEnabled } U = {  }
   7 localDeclaration D = { contentPane$2 } U = { frame$1.!getContentPane( ) }
   8 receiver D = {  } U = { frame$1 }
   9 methodCall D = {  } U = { frame$1.!javax.swing.JFrame.rootPane, frame$1.!javax.swing.JRootPane.contentPane, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JFrame.rootPane, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JRootPane.contentPane } TO = javax.swing.JFrame#getContentPane( )
  10 actualOut D = { frame$1.!getContentPane( ) } U = { frame$1.!javax.swing.JFrame.rootPane, frame$1.!javax.swing.JRootPane.contentPane, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JFrame.rootPane, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JRootPane.contentPane }
  11 localDeclaration D = { panel$3 } U = { PanelB.!PanelB( ) }
  12 receiver D = {  } U = {  }
  13 constructorCall D = {  } U = { PanelB.!java.awt.Component.parent, PanelB.!java.awt.Container.component, PanelB.!java.awt.Container.containerListener, PanelB.!java.awt.Container.eventMask, PanelB.!java.awt.Container.layoutMgr, PanelB.!java.awt.Container.peer, PanelB.button$1.!javax.swing.AbstractButton.listenerList, PanelB.button$1.!javax.swing.event.EventListenerList.NULL_ARRAY, PanelB.button$1.!javax.swing.event.EventListenerList.listenerList, button$1.CENTER, label$0.NORTH } TO = PanelB#PanelB( )
  14 actualOut D = { PanelB.!PanelB( ), PanelB.!java.awt.Component.parent, PanelB.!java.awt.Container.layoutMgr, PanelB.button$1.!javax.swing.event.EventListenerList.listenerList, PanelB.java.awt.BorderLayout.!java.awt.BorderLayout.hgap, PanelB.java.awt.BorderLayout.!java.awt.BorderLayout.vgap, PanelB.javax.swing.JLabel.!javax.swing.JLabel.defaultIcon, PanelB.javax.swing.JLabel.!javax.swing.JLabel.disabledIcon, PanelB.javax.swing.JLabel.!javax.swing.JLabel.disabledIconSet, PanelB.javax.swing.JLabel.!javax.swing.JLabel.horizontalAlignment, PanelB.javax.swing.JLabel.!javax.swing.JLabel.horizontalTextPosition, PanelB.javax.swing.JLabel.!javax.swing.JLabel.iconTextGap, PanelB.javax.swing.JLabel.!javax.swing.JLabel.labelFor, PanelB.javax.swing.JLabel.!javax.swing.JLabel.mnemonic, PanelB.javax.swing.JLabel.!javax.swing.JLabel.mnemonicIndex, PanelB.javax.swing.JLabel.!javax.swing.JLabel.text, PanelB.javax.swing.JLabel.!javax.swing.JLabel.verticalAlignment, PanelB.javax.swing.JLabel.!javax.swing.JLabel.verticalTextPosition } U = { PanelB.!java.awt.Component.parent, PanelB.!java.awt.Container.component, PanelB.!java.awt.Container.containerListener, PanelB.!java.awt.Container.eventMask, PanelB.!java.awt.Container.layoutMgr, PanelB.!java.awt.Container.peer, PanelB.button$1.!javax.swing.AbstractButton.listenerList, PanelB.button$1.!javax.swing.event.EventListenerList.NULL_ARRAY, PanelB.button$1.!javax.swing.event.EventListenerList.listenerList, button$1.CENTER, label$0.NORTH }
  15 assignment D = {  } U = { contentPane$2.!add( java.awt.Component ) }
  16 receiver D = {  } U = { contentPane$2 }
  17 methodCall D = {  } U = { contentPane$2.!java.awt.Component.parent, contentPane$2.!java.awt.Container.component, contentPane$2.!java.awt.Container.containerListener, contentPane$2.!java.awt.Container.eventMask, contentPane$2.!java.awt.Container.layoutMgr, contentPane$2.!java.awt.Container.peer, frame$1.!getContentPane( ).!java.awt.Component.parent, frame$1.!getContentPane( ).!java.awt.Container.component, frame$1.!getContentPane( ).!java.awt.Container.containerListener, frame$1.!getContentPane( ).!java.awt.Container.eventMask, frame$1.!getContentPane( ).!java.awt.Container.layoutMgr, frame$1.!getContentPane( ).!java.awt.Container.peer, panel$3 } TO = java.awt.Container#add( java.awt.Component )
  18 actualOut D = { contentPane$2.!add( java.awt.Component ), contentPane$2.!java.awt.Component.parent } U = { contentPane$2.!java.awt.Component.parent, contentPane$2.!java.awt.Container.component, contentPane$2.!java.awt.Container.containerListener, contentPane$2.!java.awt.Container.eventMask, contentPane$2.!java.awt.Container.layoutMgr, contentPane$2.!java.awt.Container.peer, frame$1.!getContentPane( ).!java.awt.Component.parent, frame$1.!getContentPane( ).!java.awt.Container.component, frame$1.!getContentPane( ).!java.awt.Container.containerListener, frame$1.!getContentPane( ).!java.awt.Container.eventMask, frame$1.!getContentPane( ).!java.awt.Container.layoutMgr, frame$1.!getContentPane( ).!java.awt.Container.peer }
  19 assignment D = {  } U = { frame$1.!setDefaultCloseOperation( int ) }
  20 receiver D = {  } U = { frame$1 }
  21 methodCall D = {  } U = { JFrame.EXIT_ON_CLOSE, frame$1.!java.awt.Component.changeSupport, frame$1.!java.lang.System.security, frame$1.!javax.swing.JFrame.defaultCloseOperation, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Component.changeSupport, javax.swing.JFrame.!JFrame( java.lang.String ).!java.lang.System.security, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JFrame.defaultCloseOperation } TO = javax.swing.JFrame#setDefaultCloseOperation( int )
  22 actualOut D = { frame$1.!javax.swing.JFrame.defaultCloseOperation, frame$1.!setDefaultCloseOperation( int ) } U = { frame$1.!java.awt.Component.changeSupport, frame$1.!java.lang.System.security, frame$1.!javax.swing.JFrame.defaultCloseOperation, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Component.changeSupport, javax.swing.JFrame.!JFrame( java.lang.String ).!java.lang.System.security, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JFrame.defaultCloseOperation }
  23 assignment D = {  } U = { frame$1.!setSize( int int ) }
  24 receiver D = {  } U = { frame$1 }
  25 methodCall D = {  } U = {  } TO = java.awt.Window#setSize( int int )
  26 actualOut D = { frame$1.!setSize( int int ) } U = {  }
  27 assignment D = {  } U = { frame$1.!setVisible( boolean ) }
  28 receiver D = {  } U = { frame$1 }
  29 methodCall D = {  } U = {  } TO = java.awt.Window#setVisible( boolean )
  30 actualOut D = { frame$1.!setVisible( boolean ) } U = {  }
  31 methodExit
  32 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Sample14#Sample14( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0: main( java.lang.String[] )
   1:    0 ->    2 trueControlFlow
   2:    1 ->   31 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    8 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    1 exceptionCatchFlow
   7:    5 ->    6 trueControlFlow
   8:    6 ->    3 trueControlFlow
   9:    7 ->   12 trueControlFlow
  10:    8 ->    9 trueControlFlow
  11:    9 ->   10 trueControlFlow
  12:   10 ->    7 trueControlFlow
  13:   11 ->   16 trueControlFlow
  14:   12 ->   13 trueControlFlow
  15:   13 ->   14 trueControlFlow
  16:   14 ->   11 trueControlFlow
  17:   15 ->   20 trueControlFlow
  18:   16 ->   17 trueControlFlow
  19:   17 ->   18 trueControlFlow
  20:   18 ->   15 trueControlFlow
  21:   19 ->   24 trueControlFlow
  22:   20 ->   21 trueControlFlow
  23:   21 ->   22 trueControlFlow
  24:   22 ->   19 trueControlFlow
  25:   23 ->   28 trueControlFlow
  26:   24 ->   25 trueControlFlow
  27:   25 ->   26 trueControlFlow
  28:   26 ->   23 trueControlFlow
  29:   27 ->   32 trueControlFlow
  30:   28 ->   29 trueControlFlow
  31:   29 ->   30 trueControlFlow
  32:   30 ->   27 trueControlFlow
  33:   32 ->   31 trueControlFlow
--
   0: Sample14( )
   1:    0 ->    2 trueControlFlow
   2:    2 ->    1 trueControlFlow
--
----- CCFG (to here) -----

