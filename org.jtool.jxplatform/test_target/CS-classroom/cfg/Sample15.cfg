----- CCFG (from here) -----
Class Name = Sample15
   0 constructorEntry [ Sample15( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ main( java.lang.String[] ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { args$0 } U = {  }
   3 localDeclaration D = { frame$1 } U = { frame$1.!JFrame }
   4 receiver D = {  } U = {  }
   5 constructorCall D = { frame$1.accessibleContext, frame$1.defaultCloseOperation, frame$1.rootPaneCheckingEnabled, java.awt.Frame.frameSerializedDataVersion, java.awt.Frame.mbManagement, java.awt.Frame.resizable, java.awt.Frame.state, java.awt.Frame.title, java.awt.Frame.undecorated } U = { $java.lang.String, frame$1.rootPane } TO = javax.swing.JFrame#JFrame( java.lang.String )
   6 actualOut D = { frame$1.!JFrame, frame$1.accessibleContext, frame$1.defaultCloseOperation, frame$1.rootPaneCheckingEnabled, java.awt.Frame.frameSerializedDataVersion, java.awt.Frame.mbManagement, java.awt.Frame.resizable, java.awt.Frame.state, java.awt.Frame.title, java.awt.Frame.undecorated } U = { frame$1.rootPane }
   7 localDeclaration D = { contentPane$2 } U = { frame$1.!getContentPane }
   8 receiver D = {  } U = { frame$1 }
   9 methodCall D = {  } U = { frame$1, frame$1.rootPane, javax.swing.JRootPane.contentPane } TO = javax.swing.JFrame#getContentPane( )
  10 actualOut D = { frame$1.!getContentPane } U = { frame$1.rootPane, javax.swing.JRootPane.contentPane }
  11 localDeclaration D = { label$3 } U = { label$3.!JLabel }
  12 receiver D = {  } U = {  }
  13 constructorCall D = { label$3.defaultIcon, label$3.disabledIcon, label$3.disabledIconSet, label$3.horizontalAlignment, label$3.horizontalTextPosition, label$3.iconTextGap, label$3.labelFor, label$3.mnemonic, label$3.mnemonicIndex, label$3.text, label$3.verticalAlignment, label$3.verticalTextPosition } U = { $java.lang.String, $java.lang.String.CENTER, java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, java.lang.String.COMPACT_STRINGS, java.lang.String.coder, java.lang.String.value, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.accessibility.AccessibleContext.accessibleName, javax.swing.JComponent.revalidateRunnableScheduled, label$3.mnemonic, label$3.mnemonicIndex, label$3.text } TO = javax.swing.JLabel#JLabel( java.lang.String int )
  14 actualOut D = { label$3.!JLabel, label$3.defaultIcon, label$3.disabledIcon, label$3.disabledIconSet, label$3.horizontalAlignment, label$3.horizontalTextPosition, label$3.iconTextGap, label$3.labelFor, label$3.mnemonic, label$3.mnemonicIndex, label$3.text, label$3.verticalAlignment, label$3.verticalTextPosition } U = { java.awt.Component.accessibleContext, java.awt.Component.changeSupport, java.awt.Component.height, java.awt.Component.width, java.lang.String.COMPACT_STRINGS, java.lang.String.coder, java.lang.String.value, javax.accessibility.AccessibleContext.accessibleChangeSupport, javax.accessibility.AccessibleContext.accessibleName, javax.swing.JComponent.revalidateRunnableScheduled, label$3.mnemonic, label$3.mnemonicIndex, label$3.text }
  15 assignment D = {  } U = { contentPane$2.!add }
  16 receiver D = {  } U = { contentPane$2, frame$1.!getContentPane }
  17 methodCall D = { contentPane$2, frame$1.!getContentPane, java.awt.Component.parent } U = { contentPane$2, contentPane$2.component, contentPane$2.containerListener, contentPane$2.layoutMgr, frame$1.!getContentPane, java.awt.Component.eventMask, java.awt.Component.parent, java.awt.Component.peer, label$3 } TO = java.awt.Container#add( java.awt.Component )
  18 actualOut D = { contentPane$2, contentPane$2.!add, frame$1.!getContentPane, java.awt.Component.parent } U = { contentPane$2, contentPane$2.component, contentPane$2.containerListener, contentPane$2.layoutMgr, frame$1.!getContentPane, java.awt.Component.eventMask, java.awt.Component.parent, java.awt.Component.peer }
  19 assignment D = {  } U = { frame$1.!addWindowListener }
  20 receiver D = {  } U = { frame$1 }
  21 methodCall D = { frame$1, frame$1.windowListener, java.awt.Component.newEventsOnly } U = { .!, frame$1, frame$1.windowListener } TO = java.awt.Window#addWindowListener( java.awt.event.WindowListener )
  22 receiver D = {  } U = {  }
  23 constructorCall D = {  } U = {  } TO = java.awt.event.WindowAdapter#WindowAdapter( )
  24 actualOut D = { .! } U = {  }
  25 actualOut D = { frame$1, frame$1.!addWindowListener, frame$1.windowListener, java.awt.Component.newEventsOnly } U = { frame$1, frame$1.windowListener }
  26 assignment D = {  } U = { frame$1.!setSize }
  27 receiver D = {  } U = { frame$1 }
  28 methodCall D = {  } U = {  } TO = java.awt.Window#setSize( int int )
  29 actualOut D = { frame$1.!setSize } U = {  }
  30 assignment D = {  } U = { frame$1.!setVisible }
  31 receiver D = {  } U = { frame$1 }
  32 methodCall D = {  } U = {  } TO = java.awt.Window#setVisible( boolean )
  33 actualOut D = { frame$1.!setVisible } U = {  }
  34 methodExit
  35 formalOut D = {  } U = { $_, frame$1.accessibleContext, frame$1.defaultCloseOperation, frame$1.rootPaneCheckingEnabled, frame$1.windowListener, java.awt.Component.newEventsOnly, java.awt.Component.parent, java.awt.Frame.frameSerializedDataVersion, java.awt.Frame.mbManagement, java.awt.Frame.resizable, java.awt.Frame.state, java.awt.Frame.title, java.awt.Frame.undecorated, label$3.defaultIcon, label$3.disabledIcon, label$3.disabledIconSet, label$3.horizontalAlignment, label$3.horizontalTextPosition, label$3.iconTextGap, label$3.labelFor, label$3.mnemonic, label$3.mnemonicIndex, label$3.text, label$3.verticalAlignment, label$3.verticalTextPosition }
--
   0: Sample15( )
   1: 0 -> 2 trueControlFlow
   2: 2 -> 1 trueControlFlow
--
   0: main( java.lang.String[] )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 34 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 8 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 1 exceptionCatchFlow
   7: 5 -> 6 trueControlFlow
   8: 6 -> 3 trueControlFlow
   9: 7 -> 12 trueControlFlow
  10: 8 -> 9 trueControlFlow
  11: 9 -> 10 trueControlFlow
  12: 10 -> 7 trueControlFlow
  13: 11 -> 16 trueControlFlow
  14: 12 -> 13 trueControlFlow
  15: 13 -> 14 trueControlFlow
  16: 14 -> 11 trueControlFlow
  17: 15 -> 20 trueControlFlow
  18: 16 -> 17 trueControlFlow
  19: 17 -> 18 trueControlFlow
  20: 18 -> 15 trueControlFlow
  21: 19 -> 27 trueControlFlow
  22: 20 -> 22 trueControlFlow
  23: 21 -> 25 trueControlFlow
  24: 22 -> 23 trueControlFlow
  25: 23 -> 24 trueControlFlow
  26: 24 -> 21 trueControlFlow
  27: 25 -> 19 trueControlFlow
  28: 26 -> 31 trueControlFlow
  29: 27 -> 28 trueControlFlow
  30: 28 -> 29 trueControlFlow
  31: 29 -> 26 trueControlFlow
  32: 30 -> 35 trueControlFlow
  33: 31 -> 32 trueControlFlow
  34: 32 -> 33 trueControlFlow
  35: 33 -> 30 trueControlFlow
  36: 35 -> 34 trueControlFlow
--
----- CCFG (to here) -----

