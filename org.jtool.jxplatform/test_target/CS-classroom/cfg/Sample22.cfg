----- CCFG (from here) -----
Class Name = Sample22
   0 methodEntry [ main( java.lang.String[] ) ]
   1 formalIn D = { args$0 } U = {  }
   2 localDeclaration D = { storage$1 } U = { storage$1.!Storage }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = {  } TO = Storage#Storage( )
   5 actualOut D = { storage$1.!Storage } U = {  }
   6 localDeclaration D = { producer$2 } U = { producer$2.!Producer }
   7 receiver D = {  } U = {  }
   8 constructorCall D = { producer$2.storage } U = { producer$2.storage } TO = Producer#Producer( Storage )
   9 actualIn D = {  } U = { storage$1 }
  10 actualOut D = { producer$2.!Producer, producer$2.storage } U = { producer$2.storage }
  11 localDeclaration D = { consumer$3 } U = { consumer$3.!Consumer }
  12 receiver D = {  } U = {  }
  13 constructorCall D = { consumer$3.storage } U = { consumer$3.storage } TO = Consumer#Consumer( Storage )
  14 actualIn D = {  } U = { storage$1 }
  15 actualOut D = { consumer$3.!Consumer, consumer$3.storage } U = { consumer$3.storage }
  16 assignment D = {  } U = { producer$2.!start }
  17 receiver D = {  } U = { producer$2 }
  18 methodCall D = { producer$2, producer$2Group.nUnstartedThreads, producer$2Group.nthreads, producer$2Group.threads } U = { producer$2, producer$2.group, producer$2.threadStatus, producer$2Group.destroyed, producer$2Group.nUnstartedThreads, producer$2Group.nthreads, producer$2Group.threads } TO = java.lang.Thread#start( )
  19 actualOut D = { producer$2, producer$2.!start, producer$2Group.nUnstartedThreads, producer$2Group.nthreads, producer$2Group.threads } U = { producer$2, producer$2.group, producer$2.threadStatus, producer$2Group.destroyed, producer$2Group.nUnstartedThreads, producer$2Group.nthreads, producer$2Group.threads }
  20 assignment D = {  } U = { consumer$3.!start }
  21 receiver D = {  } U = { consumer$3 }
  22 methodCall D = { consumer$3, consumer$3Group.nUnstartedThreads, consumer$3Group.nthreads, consumer$3Group.threads } U = { consumer$3, consumer$3.group, consumer$3.threadStatus, consumer$3Group.destroyed, consumer$3Group.nUnstartedThreads, consumer$3Group.nthreads, consumer$3Group.threads } TO = java.lang.Thread#start( )
  23 actualOut D = { consumer$3, consumer$3.!start, consumer$3Group.nUnstartedThreads, consumer$3Group.nthreads, consumer$3Group.threads } U = { consumer$3, consumer$3.group, consumer$3.threadStatus, consumer$3Group.destroyed, consumer$3Group.nUnstartedThreads, consumer$3Group.nthreads, consumer$3Group.threads }
  24 methodExit
  25 formalOut D = {  } U = { $_, consumer$3.storage, consumer$3Group.nUnstartedThreads, consumer$3Group.nthreads, consumer$3Group.threads, producer$2.storage, producer$2Group.nUnstartedThreads, producer$2Group.nthreads, producer$2Group.threads }
--
   0 constructorEntry [ Sample22( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0: main( java.lang.String[] )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 2 -> 7 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 2 trueControlFlow
   7: 6 -> 12 trueControlFlow
   8: 7 -> 9 trueControlFlow
   9: 8 -> 10 trueControlFlow
  10: 9 -> 8 trueControlFlow
  11: 10 -> 6 trueControlFlow
  12: 11 -> 17 trueControlFlow
  13: 12 -> 14 trueControlFlow
  14: 13 -> 15 trueControlFlow
  15: 14 -> 13 trueControlFlow
  16: 15 -> 11 trueControlFlow
  17: 16 -> 21 trueControlFlow
  18: 17 -> 18 trueControlFlow
  19: 18 -> 19 trueControlFlow
  20: 19 -> 16 trueControlFlow
  21: 20 -> 25 trueControlFlow
  22: 21 -> 22 trueControlFlow
  23: 22 -> 23 trueControlFlow
  24: 23 -> 20 trueControlFlow
  25: 25 -> 24 trueControlFlow
--
   0: Sample22( )
   1: 0 -> 2 trueControlFlow
   2: 2 -> 1 trueControlFlow
--
----- CCFG (to here) -----

