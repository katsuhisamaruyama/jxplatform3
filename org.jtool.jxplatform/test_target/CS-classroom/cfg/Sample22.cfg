----- CCFG (from here) -----
Class Name = Sample22
   0 methodEntry [ Sample22#main( java.lang.String[] ) ]
   1 formalIn D = { args$0 } U = {  }
   2 localDeclaration D = { storage$1 } U = { Storage.!Storage( ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = {  } TO = Storage#Storage( )
   5 actualOut D = { Storage.!Storage( ) } U = {  }
   6 localDeclaration D = { producer$2 } U = { Producer.!Producer( Storage ) }
   7 receiver D = {  } U = {  }
   8 constructorCall D = {  } U = { storage$0.data } TO = Producer#Producer( Storage )
   9 actualIn D = {  } U = { Storage.!Storage( ).data, storage$1, storage$1.data }
  10 actualOut D = { Producer.!Producer( Storage ) } U = { storage$0.data }
  11 localDeclaration D = { consumer$3 } U = { Consumer.!Consumer( Storage ) }
  12 receiver D = {  } U = {  }
  13 constructorCall D = {  } U = { storage$0.data } TO = Consumer#Consumer( Storage )
  14 actualIn D = {  } U = { Storage.!Storage( ).data, storage$1, storage$1.data }
  15 actualOut D = { Consumer.!Consumer( Storage ) } U = { storage$0.data }
  16 assignment D = {  } U = { producer$2.!start( ) }
  17 receiver D = {  } U = { producer$2 }
  18 methodCall D = {  } U = { Producer.!Producer( Storage ).!java.lang.Thread$FieldHolder.threadStatus, Producer.!Producer( Storage ).!java.lang.Thread.holder, producer$2.!java.lang.Thread$FieldHolder.threadStatus, producer$2.!java.lang.Thread.holder } TO = java.lang.Thread#start( )
  19 actualOut D = { producer$2.!start( ) } U = { Producer.!Producer( Storage ).!java.lang.Thread$FieldHolder.threadStatus, Producer.!Producer( Storage ).!java.lang.Thread.holder, producer$2.!java.lang.Thread$FieldHolder.threadStatus, producer$2.!java.lang.Thread.holder }
  20 assignment D = {  } U = { consumer$3.!start( ) }
  21 receiver D = {  } U = { consumer$3 }
  22 methodCall D = {  } U = { Consumer.!Consumer( Storage ).!java.lang.Thread$FieldHolder.threadStatus, Consumer.!Consumer( Storage ).!java.lang.Thread.holder, consumer$3.!java.lang.Thread$FieldHolder.threadStatus, consumer$3.!java.lang.Thread.holder } TO = java.lang.Thread#start( )
  23 actualOut D = { consumer$3.!start( ) } U = { Consumer.!Consumer( Storage ).!java.lang.Thread$FieldHolder.threadStatus, Consumer.!Consumer( Storage ).!java.lang.Thread.holder, consumer$3.!java.lang.Thread$FieldHolder.threadStatus, consumer$3.!java.lang.Thread.holder }
  24 methodExit
  25 formalOut D = {  } U = { $_ }
   8+ actualOutByFieldAccess D = { Producer.!Producer( Storage ).storage } U = {  }
  13+ actualOutByFieldAccess D = { Consumer.!Consumer( Storage ).storage } U = {  }
--
   0 constructorEntry [ Sample22#Sample22( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0: main( java.lang.String[] )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    7 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    2 trueControlFlow
   7:    6 ->   12 trueControlFlow
   8:    7 ->    9 trueControlFlow
   9:    8 ->    8+ trueControlFlow
  10:    9 ->    8 trueControlFlow
  11:   10 ->    6 trueControlFlow
  12:   11 ->   17 trueControlFlow
  13:   12 ->   14 trueControlFlow
  14:   13 ->   13+ trueControlFlow
  15:   14 ->   13 trueControlFlow
  16:   15 ->   11 trueControlFlow
  17:   16 ->   21 trueControlFlow
  18:   17 ->   18 trueControlFlow
  19:   18 ->   19 trueControlFlow
  20:   19 ->   16 trueControlFlow
  21:   20 ->   25 trueControlFlow
  22:   21 ->   22 trueControlFlow
  23:   22 ->   23 trueControlFlow
  24:   23 ->   20 trueControlFlow
  25:   25 ->   24 trueControlFlow
  26:    8+ ->   10 trueControlFlow
  27:   13+ ->   15 trueControlFlow
--
   0: Sample22( )
   1:    0 ->    2 trueControlFlow
   2:    2 ->    1 trueControlFlow
--
----- CCFG (to here) -----


