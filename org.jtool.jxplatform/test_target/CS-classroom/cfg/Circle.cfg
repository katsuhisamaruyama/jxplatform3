----- CCFG (from here) -----
Class Name = Circle
   0 constructorEntry [ Circle#Circle( int ) ]
   1 formalIn D = { x$0 } U = {  }
   2 assignment D = {  } U = { this.!Circle( int int ) }
   3 receiver D = {  } U = {  }
   4 constructorCall D = {  } U = {  } TO = Circle#Circle( int int )
   5 actualIn D = {  } U = { x$0 }
   6 actualIn D = {  } U = {  }
   7 actualOut D = { this.!Circle( int int ) } U = {  }
   8 constructorExit
   9 formalOut D = {  } U = { $_ }
   4+ actualOutByFieldAccess D = { this.radius } U = {  }
   4+ actualOutByFieldAccess D = { this.x } U = {  }
   4+ actualOutByFieldAccess D = { this.y } U = {  }
--
   0 fieldEntry [ Circle#radius ]
   1 fieldDeclaration D = { this.radius } U = { this.radius }
   2 fieldExit
--
   0 constructorEntry [ Circle#Circle( int int ) ]
   1 formalIn D = { x$0 } U = {  }
   2 formalIn D = { y$1 } U = {  }
   3 assignment D = {  } U = { this.!Circle( int int int ) }
   4 receiver D = {  } U = {  }
   5 constructorCall D = {  } U = {  } TO = Circle#Circle( int int int )
   6 actualIn D = {  } U = { x$0 }
   7 actualIn D = {  } U = { y$1 }
   8 actualIn D = {  } U = {  }
   9 actualOut D = { this.!Circle( int int int ) } U = {  }
  10 constructorExit
  11 formalOut D = {  } U = { $_ }
   5+ actualOutByFieldAccess D = { this.radius } U = {  }
   5+ actualOutByFieldAccess D = { this.x } U = {  }
   5+ actualOutByFieldAccess D = { this.y } U = {  }
--
   0 methodEntry [ Circle#getY( ) ]
   1 returnSt D = { $_ } U = { this.y }
   2 methodExit
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Circle#getRadius( ) ]
   1 returnSt D = { $_ } U = { this.radius }
   2 methodExit
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Circle#getX( ) ]
   1 returnSt D = { $_ } U = { this.x }
   2 methodExit
   3 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Circle#setRadius( int ) ]
   1 formalIn D = { r$0 } U = {  }
   2 assignment D = { this.radius } U = { r$0 }
   3 methodExit
   4 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Circle#print( ) ]
   1 assignment D = {  } U = { System.out.!println( java.lang.String ) }
   2 receiver D = {  } U = { System.out }
   3 methodCall D = {  } U = { $java.lang.String, System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut, this.radius, this.x, this.y } TO = java.io.PrintStream#println( java.lang.String )
   4 actualOut D = { System.out.!java.io.PrintStream.trouble, System.out.!println( java.lang.String ) } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut }
   5 methodExit
   6 formalOut D = {  } U = { $_ }
--
   0 fieldEntry [ Circle#y ]
   1 fieldDeclaration D = { this.y } U = { this.y }
   2 fieldExit
--
   0 fieldEntry [ Circle#x ]
   1 fieldDeclaration D = { this.x } U = { this.x }
   2 fieldExit
--
   0 constructorEntry [ Circle#Circle( int int int ) ]
   1 formalIn D = { x$0 } U = {  }
   2 formalIn D = { y$1 } U = {  }
   3 formalIn D = { r$2 } U = {  }
   4 assignment D = { this.x } U = { x$0 }
   5 assignment D = { this.y } U = { y$1 }
   6 assignment D = { this.radius } U = { r$2 }
   7 constructorExit
   8 formalOut D = {  } U = { $_ }
--
   0: Circle( int )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 trueControlFlow
   3:    2 ->    9 trueControlFlow
   4:    3 ->    5 trueControlFlow
   5:    4 ->    4+ trueControlFlow
   6:    5 ->    6 trueControlFlow
   7:    6 ->    4 trueControlFlow
   8:    7 ->    2 trueControlFlow
   9:    9 ->    8 trueControlFlow
  10:    4+ ->    4+ trueControlFlow
  11:    4+ ->    4+ trueControlFlow
  12:    4+ ->    7 trueControlFlow
--
   0: radius
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: Circle( int int )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->   11 trueControlFlow
   5:    4 ->    6 trueControlFlow
   6:    5 ->    5+ trueControlFlow
   7:    6 ->    7 trueControlFlow
   8:    7 ->    8 trueControlFlow
   9:    8 ->    5 trueControlFlow
  10:    9 ->    3 trueControlFlow
  11:   11 ->   10 trueControlFlow
  12:    5+ ->    5+ trueControlFlow
  13:    5+ ->    5+ trueControlFlow
  14:    5+ ->    9 trueControlFlow
--
   0: getY( )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 fallThroughFlow
   3:    1 ->    3 trueControlFlow
   4:    3 ->    2 trueControlFlow
--
   0: getRadius( )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 fallThroughFlow
   3:    1 ->    3 trueControlFlow
   4:    3 ->    2 trueControlFlow
--
   0: getX( )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    3 fallThroughFlow
   3:    1 ->    3 trueControlFlow
   4:    3 ->    2 trueControlFlow
--
   0: setRadius( int )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    4 ->    3 trueControlFlow
--
   0: print( )
   1:    0 ->    2 trueControlFlow
   2:    1 ->    6 trueControlFlow
   3:    2 ->    3 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    1 trueControlFlow
   6:    6 ->    5 trueControlFlow
--
   0: y
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: x
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
--
   0: Circle( int int int )
   1:    0 ->    1 trueControlFlow
   2:    1 ->    2 trueControlFlow
   3:    2 ->    3 trueControlFlow
   4:    3 ->    4 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    6 trueControlFlow
   7:    6 ->    8 trueControlFlow
   8:    8 ->    7 trueControlFlow
--
----- CCFG (to here) -----

