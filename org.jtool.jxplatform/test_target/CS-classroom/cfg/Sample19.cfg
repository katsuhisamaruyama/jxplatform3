----- CCFG (from here) -----
Class Name = Sample19
   0 constructorEntry [ Sample19#Sample19( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Sample19#main( java.lang.String[] ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { args$0 } U = {  }
   3 localDeclaration D = { frame$1 } U = { javax.swing.JFrame.!JFrame( java.lang.String ) }
   4 receiver D = {  } U = {  }
   5 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JFrame#JFrame( java.lang.String )
   6 actualOut D = { javax.swing.JFrame.!JFrame( java.lang.String ), javax.swing.JFrame.!java.awt.Frame.frameSerializedDataVersion, javax.swing.JFrame.!java.awt.Frame.mbManagement, javax.swing.JFrame.!java.awt.Frame.resizable, javax.swing.JFrame.!java.awt.Frame.state, javax.swing.JFrame.!java.awt.Frame.title, javax.swing.JFrame.!java.awt.Frame.undecorated, javax.swing.JFrame.!javax.swing.JFrame.accessibleContext, javax.swing.JFrame.!javax.swing.JFrame.defaultCloseOperation, javax.swing.JFrame.!javax.swing.JFrame.rootPaneCheckingEnabled } U = {  }
   7 localDeclaration D = { contentPane$2 } U = { frame$1.!getContentPane( ) }
   8 receiver D = {  } U = { frame$1 }
   9 methodCall D = {  } U = { frame$1.!javax.swing.JFrame.rootPane, frame$1.!javax.swing.JRootPane.contentPane, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JFrame.rootPane, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JRootPane.contentPane } TO = javax.swing.JFrame#getContentPane( )
  10 actualOut D = { frame$1.!getContentPane( ) } U = { frame$1.!javax.swing.JFrame.rootPane, frame$1.!javax.swing.JRootPane.contentPane, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JFrame.rootPane, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JRootPane.contentPane }
  11 localDeclaration D = { dialog$3 } U = { DialogA.!DialogA( java.awt.Frame java.lang.String java.lang.String ) }
  12 receiver D = {  } U = {  }
  13 constructorCall D = {  } U = { DialogA.contentPane$3.!java.awt.Component.parent, DialogA.contentPane$3.!java.awt.Container.component, DialogA.contentPane$3.!java.awt.Container.containerListener, DialogA.contentPane$3.!java.awt.Container.eventMask, DialogA.contentPane$3.!java.awt.Container.layoutMgr, DialogA.contentPane$3.!java.awt.Container.peer, DialogA.super.!java.awt.Dialog$ModalityType.MODELESS, DialogA.super.!java.awt.Dialog.DEFAULT_MODALITY_TYPE, DialogA.super.!java.awt.Window.windowListener, DialogA.super.!javax.swing.SwingUtilities.sharedOwnerFrameKey, DialogA.yesButton$4.!javax.swing.AbstractButton.listenerList, DialogA.yesButton$4.!javax.swing.event.EventListenerList.NULL_ARRAY, DialogA.yesButton$4.!javax.swing.event.EventListenerList.listenerList, label$6.CENTER, msg$2.CENTER, this.!java.awt.Container.component, this.!java.awt.Container.peer, this.!java.awt.Dimension.height, this.!java.awt.Dimension.width, this.!java.awt.Window.allWindows, this.!java.awt.Window.beforeFirstShow, this.!java.awt.Window.parent, this.!java.awt.Window.peer, this.!java.awt.Window.x, this.!java.awt.Window.y, this.!javax.swing.JDialog.rootPane, this.!javax.swing.JRootPane.contentPane, yesButton$4.EAST } TO = DialogA#DialogA( java.awt.Frame java.lang.String java.lang.String )
  14 actualIn D = {  } U = { frame$1 }
  15 actualIn D = {  } U = { $java.lang.String }
  16 actualIn D = {  } U = { $java.lang.String }
  17 actualOut D = { DialogA.!DialogA( java.awt.Frame java.lang.String java.lang.String ), DialogA.contentPane$3.!java.awt.Component.parent, DialogA.javax.swing.JLabel.!javax.swing.JLabel.defaultIcon, DialogA.javax.swing.JLabel.!javax.swing.JLabel.disabledIcon, DialogA.javax.swing.JLabel.!javax.swing.JLabel.disabledIconSet, DialogA.javax.swing.JLabel.!javax.swing.JLabel.horizontalAlignment, DialogA.javax.swing.JLabel.!javax.swing.JLabel.horizontalTextPosition, DialogA.javax.swing.JLabel.!javax.swing.JLabel.iconTextGap, DialogA.javax.swing.JLabel.!javax.swing.JLabel.labelFor, DialogA.javax.swing.JLabel.!javax.swing.JLabel.mnemonic, DialogA.javax.swing.JLabel.!javax.swing.JLabel.mnemonicIndex, DialogA.javax.swing.JLabel.!javax.swing.JLabel.text, DialogA.javax.swing.JLabel.!javax.swing.JLabel.verticalAlignment, DialogA.javax.swing.JLabel.!javax.swing.JLabel.verticalTextPosition, DialogA.super.!java.awt.Window.newEventsOnly, DialogA.super.!java.awt.Window.windowListener, DialogA.super.!javax.swing.JDialog.accessibleContext, DialogA.super.!javax.swing.JDialog.defaultCloseOperation, DialogA.super.!javax.swing.JDialog.rootPaneCheckingEnabled, DialogA.yesButton$4.!javax.swing.event.EventListenerList.listenerList, this.!java.awt.Container.descendUnconditionallyWhenValidating, this.!java.awt.Container.dispatcher, this.!java.awt.Window.isPacked, this.!java.awt.Window.peer } U = { DialogA.contentPane$3.!java.awt.Component.parent, DialogA.contentPane$3.!java.awt.Container.component, DialogA.contentPane$3.!java.awt.Container.containerListener, DialogA.contentPane$3.!java.awt.Container.eventMask, DialogA.contentPane$3.!java.awt.Container.layoutMgr, DialogA.contentPane$3.!java.awt.Container.peer, DialogA.super.!java.awt.Dialog$ModalityType.MODELESS, DialogA.super.!java.awt.Dialog.DEFAULT_MODALITY_TYPE, DialogA.super.!java.awt.Window.windowListener, DialogA.super.!javax.swing.SwingUtilities.sharedOwnerFrameKey, DialogA.yesButton$4.!javax.swing.AbstractButton.listenerList, DialogA.yesButton$4.!javax.swing.event.EventListenerList.NULL_ARRAY, DialogA.yesButton$4.!javax.swing.event.EventListenerList.listenerList, label$6.CENTER, msg$2.CENTER, this.!java.awt.Container.component, this.!java.awt.Container.peer, this.!java.awt.Dimension.height, this.!java.awt.Dimension.width, this.!java.awt.Window.allWindows, this.!java.awt.Window.beforeFirstShow, this.!java.awt.Window.parent, this.!java.awt.Window.peer, this.!java.awt.Window.x, this.!java.awt.Window.y, this.!javax.swing.JDialog.rootPane, this.!javax.swing.JRootPane.contentPane, yesButton$4.EAST }
  18 localDeclaration D = { button$4 } U = { javax.swing.JButton.!JButton( java.lang.String ) }
  19 receiver D = {  } U = {  }
  20 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JButton#JButton( java.lang.String )
  21 actualOut D = { javax.swing.JButton.!JButton( java.lang.String ) } U = {  }
  22 assignment D = {  } U = { contentPane$2.!add( java.awt.Component ) }
  23 receiver D = {  } U = { contentPane$2 }
  24 methodCall D = {  } U = { button$4, contentPane$2.!java.awt.Component.parent, contentPane$2.!java.awt.Container.component, contentPane$2.!java.awt.Container.containerListener, contentPane$2.!java.awt.Container.eventMask, contentPane$2.!java.awt.Container.layoutMgr, contentPane$2.!java.awt.Container.peer, frame$1.!getContentPane( ).!java.awt.Component.parent, frame$1.!getContentPane( ).!java.awt.Container.component, frame$1.!getContentPane( ).!java.awt.Container.containerListener, frame$1.!getContentPane( ).!java.awt.Container.eventMask, frame$1.!getContentPane( ).!java.awt.Container.layoutMgr, frame$1.!getContentPane( ).!java.awt.Container.peer } TO = java.awt.Container#add( java.awt.Component )
  25 actualOut D = { contentPane$2.!add( java.awt.Component ), contentPane$2.!java.awt.Component.parent } U = { contentPane$2.!java.awt.Component.parent, contentPane$2.!java.awt.Container.component, contentPane$2.!java.awt.Container.containerListener, contentPane$2.!java.awt.Container.eventMask, contentPane$2.!java.awt.Container.layoutMgr, contentPane$2.!java.awt.Container.peer, frame$1.!getContentPane( ).!java.awt.Component.parent, frame$1.!getContentPane( ).!java.awt.Container.component, frame$1.!getContentPane( ).!java.awt.Container.containerListener, frame$1.!getContentPane( ).!java.awt.Container.eventMask, frame$1.!getContentPane( ).!java.awt.Container.layoutMgr, frame$1.!getContentPane( ).!java.awt.Container.peer }
  26 assignment D = {  } U = { button$4.!addActionListener( java.awt.event.ActionListener ) }
  27 receiver D = {  } U = { button$4 }
  28 methodCall D = {  } U = { .!ActionListener( ), button$4.!javax.swing.AbstractButton.listenerList, button$4.!javax.swing.event.EventListenerList.NULL_ARRAY, button$4.!javax.swing.event.EventListenerList.listenerList, javax.swing.JButton.!JButton( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JButton.!JButton( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JButton.!JButton( java.lang.String ).!javax.swing.event.EventListenerList.listenerList } TO = javax.swing.AbstractButton#addActionListener( java.awt.event.ActionListener )
  29 receiver D = {  } U = {  }
  30 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
  31 actualOut D = { .!ActionListener( ) } U = {  }
  32 actualOut D = { button$4.!addActionListener( java.awt.event.ActionListener ), button$4.!javax.swing.event.EventListenerList.listenerList } U = { button$4.!javax.swing.AbstractButton.listenerList, button$4.!javax.swing.event.EventListenerList.NULL_ARRAY, button$4.!javax.swing.event.EventListenerList.listenerList, javax.swing.JButton.!JButton( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JButton.!JButton( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JButton.!JButton( java.lang.String ).!javax.swing.event.EventListenerList.listenerList }
  33 assignment D = {  } U = { frame$1.!setDefaultCloseOperation( int ) }
  34 receiver D = {  } U = { frame$1 }
  35 methodCall D = {  } U = { JFrame.EXIT_ON_CLOSE, frame$1.!java.awt.Component.changeSupport, frame$1.!java.lang.System.security, frame$1.!javax.swing.JFrame.defaultCloseOperation, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Component.changeSupport, javax.swing.JFrame.!JFrame( java.lang.String ).!java.lang.System.security, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JFrame.defaultCloseOperation } TO = javax.swing.JFrame#setDefaultCloseOperation( int )
  36 actualOut D = { frame$1.!javax.swing.JFrame.defaultCloseOperation, frame$1.!setDefaultCloseOperation( int ) } U = { frame$1.!java.awt.Component.changeSupport, frame$1.!java.lang.System.security, frame$1.!javax.swing.JFrame.defaultCloseOperation, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Component.changeSupport, javax.swing.JFrame.!JFrame( java.lang.String ).!java.lang.System.security, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JFrame.defaultCloseOperation }
  37 assignment D = {  } U = { frame$1.!pack( ) }
  38 receiver D = {  } U = { frame$1 }
  39 methodCall D = {  } U = { frame$1.!java.awt.Container.component, frame$1.!java.awt.Container.peer, frame$1.!java.awt.Dimension.height, frame$1.!java.awt.Dimension.width, frame$1.!java.awt.Window.allWindows, frame$1.!java.awt.Window.beforeFirstShow, frame$1.!java.awt.Window.parent, frame$1.!java.awt.Window.peer, frame$1.!java.awt.Window.x, frame$1.!java.awt.Window.y, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Container.component, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Container.peer, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Dimension.height, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Dimension.width, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.allWindows, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.beforeFirstShow, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.parent, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.peer, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.x, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.y } TO = java.awt.Window#pack( )
  40 actualOut D = { frame$1.!java.awt.Container.descendUnconditionallyWhenValidating, frame$1.!java.awt.Container.dispatcher, frame$1.!java.awt.Window.isPacked, frame$1.!java.awt.Window.peer, frame$1.!pack( ) } U = { frame$1.!java.awt.Container.component, frame$1.!java.awt.Container.peer, frame$1.!java.awt.Dimension.height, frame$1.!java.awt.Dimension.width, frame$1.!java.awt.Window.allWindows, frame$1.!java.awt.Window.beforeFirstShow, frame$1.!java.awt.Window.parent, frame$1.!java.awt.Window.peer, frame$1.!java.awt.Window.x, frame$1.!java.awt.Window.y, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Container.component, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Container.peer, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Dimension.height, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Dimension.width, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.allWindows, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.beforeFirstShow, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.parent, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.peer, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.x, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.y }
  41 assignment D = {  } U = { frame$1.!setSize( int int ) }
  42 receiver D = {  } U = { frame$1 }
  43 methodCall D = {  } U = {  } TO = java.awt.Window#setSize( int int )
  44 actualOut D = { frame$1.!setSize( int int ) } U = {  }
  45 assignment D = {  } U = { frame$1.!setVisible( boolean ) }
  46 receiver D = {  } U = { frame$1 }
  47 methodCall D = {  } U = {  } TO = java.awt.Window#setVisible( boolean )
  48 actualOut D = { frame$1.!setVisible( boolean ) } U = {  }
  49 methodExit
  50 formalOut D = {  } U = { $_ }
--
   0: Sample19( )
   1:    0 ->    2 trueControlFlow
   2:    2 ->    1 trueControlFlow
--
   0: main( java.lang.String[] )
   1:    0 ->    2 trueControlFlow
   2:    1 ->   49 trueControlFlow
   3:    2 ->    4 trueControlFlow
   4:    3 ->    8 trueControlFlow
   5:    4 ->    5 trueControlFlow
   6:    5 ->    1 exceptionCatchFlow
   7:    5 ->    6 trueControlFlow
   8:    6 ->    3 trueControlFlow
   9:    7 ->   12 trueControlFlow
  10:    8 ->    9 trueControlFlow
  11:    9 ->   10 trueControlFlow
  12:   10 ->    7 trueControlFlow
  13:   11 ->   19 trueControlFlow
  14:   12 ->   14 trueControlFlow
  15:   13 ->   17 trueControlFlow
  16:   14 ->   15 trueControlFlow
  17:   15 ->   16 trueControlFlow
  18:   16 ->   13 trueControlFlow
  19:   17 ->   11 trueControlFlow
  20:   18 ->   23 trueControlFlow
  21:   19 ->   20 trueControlFlow
  22:   20 ->   21 trueControlFlow
  23:   21 ->   18 trueControlFlow
  24:   22 ->   27 trueControlFlow
  25:   23 ->   24 trueControlFlow
  26:   24 ->   25 trueControlFlow
  27:   25 ->   22 trueControlFlow
  28:   26 ->   34 trueControlFlow
  29:   27 ->   29 trueControlFlow
  30:   28 ->   32 trueControlFlow
  31:   29 ->   30 trueControlFlow
  32:   30 ->   31 trueControlFlow
  33:   31 ->   28 trueControlFlow
  34:   32 ->   26 trueControlFlow
  35:   33 ->   38 trueControlFlow
  36:   34 ->   35 trueControlFlow
  37:   35 ->   36 trueControlFlow
  38:   36 ->   33 trueControlFlow
  39:   37 ->   42 trueControlFlow
  40:   38 ->   39 trueControlFlow
  41:   39 ->   40 trueControlFlow
  42:   40 ->   37 trueControlFlow
  43:   41 ->   46 trueControlFlow
  44:   42 ->   43 trueControlFlow
  45:   43 ->   44 trueControlFlow
  46:   44 ->   41 trueControlFlow
  47:   45 ->   50 trueControlFlow
  48:   46 ->   47 trueControlFlow
  49:   47 ->   48 trueControlFlow
  50:   48 ->   45 trueControlFlow
  51:   50 ->   49 trueControlFlow
--
----- CCFG (to here) -----

