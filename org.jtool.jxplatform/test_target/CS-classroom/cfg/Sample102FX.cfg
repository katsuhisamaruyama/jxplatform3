----- CCFG (from here) -----
Class Name = Sample102FX
   0 constructorEntry [ Sample102FX( ) ]
   1 constructorExit
--
   0 methodEntry [ start( javafx.stage.Stage ) ]
   1 throwsClause D = {  } U = { $java.lang.Exception }
   2 formalIn D = { stage$0 } U = {  }
   3 assignment D = {  } U = { stage$0.!setTitle }
   4 receiver D = {  } U = { stage$0 }
   5 methodCall D = { stage$0, stage$0.title } U = { $java.lang.String, stage$0, stage$0.title } TO = javafx.stage.Stage#setTitle( java.lang.String )
   6 actualOut D = { stage$0, stage$0.!setTitle } U = { stage$0 }
   7 assignment D = {  } U = { stage$0.!setWidth }
   8 receiver D = {  } U = { stage$0 }
   9 methodCall D = { javafx.beans.property.DoublePropertyBase.value, stage$0, stage$0$TKBoundsConfigurator.windowWidth, stage$0.widthExplicit } U = { java.lang.AbstractStringBuilder.count, java.lang.AbstractStringBuilder.value, javafx.beans.property.DoublePropertyBase.value, stage$0, stage$0.peerBoundsConfigurator, stage$0.width } TO = javafx.stage.Window#setWidth( double )
  10 actualOut D = { stage$0, stage$0.!setWidth } U = { stage$0 }
  11 assignment D = {  } U = { stage$0.!setHeight }
  12 receiver D = {  } U = { stage$0 }
  13 methodCall D = { javafx.beans.property.DoublePropertyBase.value, stage$0, stage$0$TKBoundsConfigurator.windowHeight, stage$0.heightExplicit } U = { java.lang.AbstractStringBuilder.count, java.lang.AbstractStringBuilder.value, javafx.beans.property.DoublePropertyBase.value, stage$0, stage$0.height, stage$0.peerBoundsConfigurator } TO = javafx.stage.Window#setHeight( double )
  14 actualOut D = { stage$0, stage$0.!setHeight } U = { stage$0 }
  15 localDeclaration D = { pane$1 } U = { pane$1.!BorderPane }
  16 receiver D = {  } U = {  }
  17 constructorCall D = {  } U = {  } TO = javafx.scene.layout.BorderPane#BorderPane( )
  18 actualOut D = { pane$1.!BorderPane } U = {  }
  19 localDeclaration D = { label$2 } U = { label$2.!Label }
  20 receiver D = {  } U = {  }
  21 constructorCall D = { label$2.mnemonicStateListener, label$2ed.imageUrl } U = { $java.lang.String, java.lang.Boolean.FALSE, javafx.scene.AccessibleRole.TEXT } TO = javafx.scene.control.Label#Label( java.lang.String )
  22 actualOut D = { label$2.!Label } U = {  }
  23 assignment D = {  } U = { pane$1.!setTop }
  24 receiver D = {  } U = { pane$1 }
  25 methodCall D = { pane$1, pane$1.top } U = { label$2, pane$1, pane$1.top } TO = javafx.scene.layout.BorderPane#setTop( javafx.scene.Node )
  26 actualOut D = { pane$1, pane$1.!setTop } U = { pane$1 }
  27 assignment D = {  } U = { this.!setAlignment }
  28 receiver D = {  } U = {  }
  29 methodCall D = {  } U = { label$2, label$2.CENTER } TO = javafx.scene.layout.BorderPane#setAlignment( javafx.scene.Node javafx.geometry.Pos )
  30 actualOut D = { this.!setAlignment } U = {  }
  31 localDeclaration D = { button$3 } U = { button$3.!Button }
  32 receiver D = {  } U = {  }
  33 constructorCall D = { button$3Base.armed, button$3Base.onAction } U = { $java.lang.String, javafx.scene.AccessibleRole.BUTTON } TO = javafx.scene.control.Button#Button( java.lang.String )
  34 actualOut D = { button$3.!Button } U = {  }
  35 assignment D = {  } U = { pane$1.!setCenter }
  36 receiver D = {  } U = { pane$1 }
  37 methodCall D = { pane$1, pane$1.center } U = { button$3, pane$1, pane$1.center } TO = javafx.scene.layout.BorderPane#setCenter( javafx.scene.Node )
  38 actualOut D = { pane$1, pane$1.!setCenter } U = { pane$1 }
  39 assignment D = {  } U = { this.!setAlignment }
  40 receiver D = {  } U = {  }
  41 methodCall D = {  } U = { button$3, button$3.CENTER } TO = javafx.scene.layout.BorderPane#setAlignment( javafx.scene.Node javafx.geometry.Pos )
  42 actualOut D = { this.!setAlignment } U = {  }
  43 localDeclaration D = { bh$4 } U = { bh$4.!ButtonEventHandler }
  44 receiver D = {  } U = {  }
  45 constructorCall D = { bh$4.label } U = {  } TO = ButtonEventHandler#ButtonEventHandler( javafx.scene.control.Label )
  46 actualIn D = {  } U = { label$2 }
  47 actualOut D = { bh$4.!ButtonEventHandler } U = {  }
  48 assignment D = {  } U = { button$3.!setOnAction }
  49 receiver D = {  } U = { button$3 }
  50 methodCall D = {  } U = { bh$4, button$3, button$3.onAction } TO = javafx.scene.control.ButtonBase#setOnAction( javafx.event.EventHandler )
  51 actualOut D = { button$3.!setOnAction } U = {  }
  52 localDeclaration D = { scene$5 } U = { scene$5.!Scene }
  53 receiver D = {  } U = {  }
  54 constructorCall D = { scene$5.acc, scene$5.antiAliasing, scene$5.depthBuffer, scene$5.dndGesture, scene$5.focusDirty, scene$5.focusOwner, scene$5.heightSetByUser, scene$5.keyHandler, scene$5.lights, scene$5.nextTouchEvent, scene$5.rotateGesture, scene$5.scenePulseListener, scene$5.scrollGesture, scene$5.sizeInitialized, scene$5.stylesheets, scene$5.swipeGesture, scene$5.testPulseListener, scene$5.tmpTargetWrapper, scene$5.touchEventSetId, scene$5.touchMap, scene$5.touchPointIndex, scene$5.touchPoints, scene$5.touchTargets, scene$5.traversalEngine, scene$5.userAgentStylesheet, scene$5.widthSetByUser, scene$5.zoomGesture } U = { java.lang.Class.name, javafx.application.ConditionalFeature.SCENE3D, javafx.scene.paint.Color.WHITE, pane$1, scene$5Antialiasing.DISABLED } TO = javafx.scene.Scene#Scene( javafx.scene.Parent )
  55 actualOut D = { scene$5.!Scene } U = {  }
  56 assignment D = {  } U = { stage$0.!setScene }
  57 receiver D = {  } U = { stage$0 }
  58 methodCall D = { com.sun.javafx.tk.Toolkit.TOOLKIT, stage$0 } U = { com.sun.javafx.tk.Toolkit.TOOLKIT, com.sun.javafx.tk.Toolkit.tk, java.lang.AbstractStringBuilder.count, java.lang.AbstractStringBuilder.value, java.lang.System.err, javafx.stage.Window.scene, scene$5, stage$0, sun.security.util.SecurityConstants.GET_CLASSLOADER_PERMISSION } TO = javafx.stage.Stage#setScene( javafx.scene.Scene )
  59 actualOut D = { stage$0, stage$0.!setScene } U = { stage$0 }
  60 assignment D = {  } U = { stage$0.!show }
  61 receiver D = {  } U = { stage$0 }
  62 methodCall D = {  } U = {  } TO = javafx.stage.Stage#show( )
  63 actualOut D = { stage$0.!show } U = {  }
  64 methodExit
  65 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ main( java.lang.String[] ) ]
   1 formalIn D = { args$0 } U = {  }
   2 assignment D = {  } U = { this.!launch }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { args$0, com.sun.javafx.application.LauncherImpl.savedPreloaderClass, java.lang.AbstractStringBuilder.count, java.lang.AbstractStringBuilder.value, java.lang.Class.name, java.lang.StackTraceElement.declaringClass, java.lang.StackTraceElement.methodName, java.lang.String.value, java.lang.System.err, java.lang.Thread.EMPTY_STACK_TRACE, java.lang.Thread.contextClassLoader, sun.security.util.SecurityConstants.GET_CLASSLOADER_PERMISSION, sun.security.util.SecurityConstants.GET_STACK_TRACE_PERMISSION } TO = javafx.application.Application#launch( java.lang.String[] )
   5 actualOut D = { this.!launch } U = {  }
   6 methodExit
   7 formalOut D = {  } U = { $_ }
--
   0: Sample102FX( )
   1: 0 -> 1 trueControlFlow
--
   0: start( javafx.stage.Stage )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 64 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 8 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 6 trueControlFlow
   7: 6 -> 3 trueControlFlow
   8: 7 -> 12 trueControlFlow
   9: 8 -> 9 trueControlFlow
  10: 9 -> 10 trueControlFlow
  11: 10 -> 7 trueControlFlow
  12: 11 -> 16 trueControlFlow
  13: 12 -> 13 trueControlFlow
  14: 13 -> 14 trueControlFlow
  15: 14 -> 11 trueControlFlow
  16: 15 -> 20 trueControlFlow
  17: 16 -> 17 trueControlFlow
  18: 17 -> 18 trueControlFlow
  19: 18 -> 15 trueControlFlow
  20: 19 -> 24 trueControlFlow
  21: 20 -> 21 trueControlFlow
  22: 21 -> 22 trueControlFlow
  23: 22 -> 19 trueControlFlow
  24: 23 -> 28 trueControlFlow
  25: 24 -> 25 trueControlFlow
  26: 25 -> 26 trueControlFlow
  27: 26 -> 23 trueControlFlow
  28: 27 -> 32 trueControlFlow
  29: 28 -> 29 trueControlFlow
  30: 29 -> 30 trueControlFlow
  31: 30 -> 27 trueControlFlow
  32: 31 -> 36 trueControlFlow
  33: 32 -> 33 trueControlFlow
  34: 33 -> 34 trueControlFlow
  35: 34 -> 31 trueControlFlow
  36: 35 -> 40 trueControlFlow
  37: 36 -> 37 trueControlFlow
  38: 37 -> 38 trueControlFlow
  39: 38 -> 35 trueControlFlow
  40: 39 -> 44 trueControlFlow
  41: 40 -> 41 trueControlFlow
  42: 41 -> 42 trueControlFlow
  43: 42 -> 39 trueControlFlow
  44: 43 -> 49 trueControlFlow
  45: 44 -> 46 trueControlFlow
  46: 45 -> 47 trueControlFlow
  47: 46 -> 45 trueControlFlow
  48: 47 -> 43 trueControlFlow
  49: 48 -> 53 trueControlFlow
  50: 49 -> 50 trueControlFlow
  51: 50 -> 51 trueControlFlow
  52: 51 -> 48 trueControlFlow
  53: 52 -> 57 trueControlFlow
  54: 53 -> 54 trueControlFlow
  55: 54 -> 55 trueControlFlow
  56: 55 -> 52 trueControlFlow
  57: 56 -> 61 trueControlFlow
  58: 57 -> 58 trueControlFlow
  59: 58 -> 59 trueControlFlow
  60: 59 -> 56 trueControlFlow
  61: 60 -> 65 trueControlFlow
  62: 61 -> 62 trueControlFlow
  63: 62 -> 63 trueControlFlow
  64: 63 -> 60 trueControlFlow
  65: 65 -> 64 trueControlFlow
--
   0: main( java.lang.String[] )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 2 -> 7 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 2 trueControlFlow
   7: 7 -> 6 trueControlFlow
--
----- CCFG (to here) -----

