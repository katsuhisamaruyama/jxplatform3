----- CCFG (from here) -----
Class Name = Sample109FX
   0 methodEntry [ start( javafx.stage.Stage ) ]
   1 throwsClause D = {  } U = { $java.lang.Exception }
   2 formalIn D = { stage$0 } U = {  }
   3 assignment D = {  } U = { stage$0.!setTitle }
   4 receiver D = {  } U = { stage$0 }
   5 methodCall D = { stage$0, stage$0.title } U = { $java.lang.String, stage$0, stage$0.title } TO = javafx.stage.Stage#setTitle( java.lang.String )
   6 actualOut D = { stage$0, stage$0.!setTitle, stage$0.title } U = { stage$0, stage$0.title }
   7 assignment D = {  } U = { stage$0.!setWidth }
   8 receiver D = {  } U = { stage$0 }
   9 methodCall D = { javafx.beans.property.DoublePropertyBase.value, stage$0, stage$0$TKBoundsConfigurator.windowWidth, stage$0.widthExplicit } U = { javafx.beans.property.DoublePropertyBase.value, stage$0, stage$0.peerBoundsConfigurator, stage$0.width } TO = javafx.stage.Window#setWidth( double )
  10 actualOut D = { javafx.beans.property.DoublePropertyBase.value, stage$0, stage$0$TKBoundsConfigurator.windowWidth, stage$0.!setWidth, stage$0.widthExplicit } U = { javafx.beans.property.DoublePropertyBase.value, stage$0, stage$0.peerBoundsConfigurator, stage$0.width }
  11 assignment D = {  } U = { stage$0.!setHeight }
  12 receiver D = {  } U = { stage$0 }
  13 methodCall D = { javafx.beans.property.DoublePropertyBase.value, stage$0, stage$0$TKBoundsConfigurator.windowHeight, stage$0.heightExplicit } U = { javafx.beans.property.DoublePropertyBase.value, stage$0, stage$0.height, stage$0.peerBoundsConfigurator } TO = javafx.stage.Window#setHeight( double )
  14 actualOut D = { javafx.beans.property.DoublePropertyBase.value, stage$0, stage$0$TKBoundsConfigurator.windowHeight, stage$0.!setHeight, stage$0.heightExplicit } U = { javafx.beans.property.DoublePropertyBase.value, stage$0, stage$0.height, stage$0.peerBoundsConfigurator }
  15 localDeclaration D = { menuBar$1 } U = { menuBar$1.!MenuBar }
  16 receiver D = {  } U = {  }
  17 constructorCall D = { menuBar$1.menus } U = { java.lang.Boolean.FALSE, javafx.scene.AccessibleRole.MENU_BAR } TO = javafx.scene.control.MenuBar#MenuBar( )
  18 actualOut D = { menuBar$1.!MenuBar, menuBar$1.menus } U = { java.lang.Boolean.FALSE, javafx.scene.AccessibleRole.MENU_BAR }
  19 localDeclaration D = { fileMenu$2 } U = { fileMenu$2.!Menu }
  20 receiver D = {  } U = {  }
  21 constructorCall D = {  } U = { $java.lang.String } TO = javafx.scene.control.Menu#Menu( java.lang.String )
  22 actualOut D = { fileMenu$2.!Menu } U = {  }
  23 assignment D = {  } U = { menuBar$1.!getMenus.!addAll }
  24 receiver D = {  } U = { menuBar$1.!getMenus }
  25 receiver D = {  } U = { menuBar$1 }
  26 methodCall D = {  } U = { menuBar$1, menuBar$1.menus } TO = javafx.scene.control.MenuBar#getMenus( )
  27 actualOut D = { menuBar$1.!getMenus } U = { menuBar$1.menus }
  28 methodCall D = {  } U = { fileMenu$2 } TO = javafx.collections.ObservableList#addAll( java.lang.Object[] )
  29 actualOut D = { menuBar$1.!getMenus.!addAll } U = {  }
  30 localDeclaration D = { openItem$3 } U = { openItem$3.!MenuItem }
  31 receiver D = {  } U = {  }
  32 constructorCall D = { openItem$3.eventHandlerManager, openItem$3.styleClass } U = { $java.lang.String, openItem$3.styleClass } TO = javafx.scene.control.MenuItem#MenuItem( java.lang.String )
  33 actualOut D = { openItem$3.!MenuItem, openItem$3.eventHandlerManager, openItem$3.styleClass } U = { openItem$3.styleClass }
  34 localDeclaration D = { saveItem$4 } U = { saveItem$4.!MenuItem }
  35 receiver D = {  } U = {  }
  36 constructorCall D = { saveItem$4.eventHandlerManager, saveItem$4.styleClass } U = { $java.lang.String, saveItem$4.styleClass } TO = javafx.scene.control.MenuItem#MenuItem( java.lang.String )
  37 actualOut D = { saveItem$4.!MenuItem, saveItem$4.eventHandlerManager, saveItem$4.styleClass } U = { saveItem$4.styleClass }
  38 localDeclaration D = { sp$5 } U = { sp$5.!SeparatorMenuItem }
  39 receiver D = {  } U = {  }
  40 constructorCall D = { javafx.scene.control.Separator.orientation } U = { java.lang.Boolean.FALSE, javafx.geometry.Orientation.HORIZONTAL, javafx.geometry.Orientation.VERTICAL, javafx.scene.control.MenuItem.styleClass, javafx.scene.control.Separator.HORIZONTAL_PSEUDOCLASS_STATE, javafx.scene.control.Separator.VERTICAL_PSEUDOCLASS_STATE } TO = javafx.scene.control.SeparatorMenuItem#SeparatorMenuItem( )
  41 actualOut D = { javafx.scene.control.Separator.orientation, sp$5.!SeparatorMenuItem } U = { java.lang.Boolean.FALSE, javafx.geometry.Orientation.HORIZONTAL, javafx.geometry.Orientation.VERTICAL, javafx.scene.control.MenuItem.styleClass, javafx.scene.control.Separator.HORIZONTAL_PSEUDOCLASS_STATE, javafx.scene.control.Separator.VERTICAL_PSEUDOCLASS_STATE }
  42 localDeclaration D = { exitItem$6 } U = { exitItem$6.!MenuItem }
  43 receiver D = {  } U = {  }
  44 constructorCall D = { exitItem$6.eventHandlerManager, exitItem$6.styleClass } U = { $java.lang.String, exitItem$6.styleClass } TO = javafx.scene.control.MenuItem#MenuItem( java.lang.String )
  45 actualOut D = { exitItem$6.!MenuItem, exitItem$6.eventHandlerManager, exitItem$6.styleClass } U = { exitItem$6.styleClass }
  46 assignment D = {  } U = { fileMenu$2.!getItems.!addAll }
  47 receiver D = {  } U = { fileMenu$2.!getItems }
  48 receiver D = {  } U = { fileMenu$2 }
  49 methodCall D = {  } U = { fileMenu$2, fileMenu$2.items } TO = javafx.scene.control.Menu#getItems( )
  50 actualOut D = { fileMenu$2.!getItems } U = { fileMenu$2.items }
  51 methodCall D = {  } U = { exitItem$6, openItem$3, saveItem$4, sp$5 } TO = javafx.collections.ObservableList#addAll( java.lang.Object[] )
  52 actualOut D = { fileMenu$2.!getItems.!addAll } U = {  }
  53 assignment D = {  } U = { exitItem$6.!setOnAction }
  54 receiver D = {  } U = { exitItem$6 }
  55 methodCall D = { exitItem$6, exitItem$6.onAction } U = { $LAMBDA, exitItem$6, exitItem$6.onAction } TO = javafx.scene.control.MenuItem#setOnAction( javafx.event.EventHandler )
  56 lambda D = { $LAMBDA } U = { this.!exit }
  57 receiver D = {  } U = {  }
  58 methodCall D = {  } U = { com.sun.thisImpl.platformExit } TO = javafx.application.Platform#exit( )
  59 actualOut D = { this.!exit } U = { com.sun.thisImpl.platformExit }
  60 actualOut D = { exitItem$6, exitItem$6.!setOnAction, exitItem$6.onAction } U = { exitItem$6, exitItem$6.onAction }
  61 localDeclaration D = { menuArea$8 } U = { menuArea$8.!VBox }
  62 receiver D = {  } U = {  }
  63 constructorCall D = { menuArea$8.biasDirty, menuArea$8.performingLayout } U = {  } TO = javafx.scene.layout.VBox#VBox( )
  64 actualOut D = { menuArea$8.!VBox, menuArea$8.biasDirty, menuArea$8.performingLayout } U = {  }
  65 assignment D = {  } U = { menuArea$8.!getChildren.!addAll }
  66 receiver D = {  } U = { menuArea$8.!getChildren }
  67 receiver D = {  } U = { menuArea$8 }
  68 methodCall D = {  } U = { javafx.scene.Parent.children, menuArea$8 } TO = javafx.scene.layout.Pane#getChildren( )
  69 actualOut D = { menuArea$8.!getChildren } U = { javafx.scene.Parent.children }
  70 methodCall D = {  } U = { menuBar$1 } TO = javafx.collections.ObservableList#addAll( java.lang.Object[] )
  71 actualOut D = { menuArea$8.!getChildren.!addAll } U = {  }
  72 localDeclaration D = { scene$9 } U = { scene$9.!Scene }
  73 receiver D = {  } U = {  }
  74 constructorCall D = { scene$9.acc, scene$9.antiAliasing, scene$9.depthBuffer, scene$9.dndGesture, scene$9.focusDirty, scene$9.focusOwner, scene$9.heightSetByUser, scene$9.keyHandler, scene$9.lights, scene$9.nextTouchEvent, scene$9.rotateGesture, scene$9.scenePulseListener, scene$9.scrollGesture, scene$9.sizeInitialized, scene$9.stylesheets, scene$9.swipeGesture, scene$9.testPulseListener, scene$9.tmpTargetWrapper, scene$9.touchEventSetId, scene$9.touchMap, scene$9.touchPointIndex, scene$9.touchPoints, scene$9.touchTargets, scene$9.traversalEngine, scene$9.userAgentStylesheet, scene$9.widthSetByUser, scene$9.zoomGesture } U = { javafx.application.ConditionalFeature.SCENE3D, javafx.scene.paint.Color.WHITE, menuArea$8, scene$9Antialiasing.DISABLED } TO = javafx.scene.Scene#Scene( javafx.scene.Parent )
  75 actualOut D = { scene$9.!Scene, scene$9.acc, scene$9.antiAliasing, scene$9.depthBuffer, scene$9.dndGesture, scene$9.focusDirty, scene$9.focusOwner, scene$9.heightSetByUser, scene$9.keyHandler, scene$9.lights, scene$9.nextTouchEvent, scene$9.rotateGesture, scene$9.scenePulseListener, scene$9.scrollGesture, scene$9.sizeInitialized, scene$9.stylesheets, scene$9.swipeGesture, scene$9.testPulseListener, scene$9.tmpTargetWrapper, scene$9.touchEventSetId, scene$9.touchMap, scene$9.touchPointIndex, scene$9.touchPoints, scene$9.touchTargets, scene$9.traversalEngine, scene$9.userAgentStylesheet, scene$9.widthSetByUser, scene$9.zoomGesture } U = { javafx.application.ConditionalFeature.SCENE3D, javafx.scene.paint.Color.WHITE, scene$9Antialiasing.DISABLED }
  76 assignment D = {  } U = { stage$0.!setScene }
  77 receiver D = {  } U = { stage$0 }
  78 methodCall D = { com.sun.javafx.tk.Toolkit.TOOLKIT, stage$0 } U = { com.sun.javafx.tk.Toolkit.TOOLKIT, com.sun.javafx.tk.Toolkit.tk, java.lang.System.err, javafx.stage.Window.scene, scene$9, stage$0 } TO = javafx.stage.Stage#setScene( javafx.scene.Scene )
  79 actualOut D = { com.sun.javafx.tk.Toolkit.TOOLKIT, stage$0, stage$0.!setScene } U = { com.sun.javafx.tk.Toolkit.TOOLKIT, com.sun.javafx.tk.Toolkit.tk, java.lang.System.err, javafx.stage.Window.scene, stage$0 }
  80 assignment D = {  } U = { stage$0.!show }
  81 receiver D = {  } U = { stage$0 }
  82 methodCall D = {  } U = {  } TO = javafx.stage.Stage#show( )
  83 actualOut D = { stage$0.!show } U = {  }
  84 methodExit
  85 formalOut D = {  } U = { $_, com.sun.javafx.tk.Toolkit.TOOLKIT, exitItem$6.eventHandlerManager, exitItem$6.onAction, exitItem$6.styleClass, javafx.beans.property.DoublePropertyBase.value, javafx.scene.control.Separator.orientation, menuArea$8.biasDirty, menuArea$8.performingLayout, menuBar$1.menus, openItem$3.eventHandlerManager, openItem$3.styleClass, saveItem$4.eventHandlerManager, saveItem$4.styleClass, scene$9.acc, scene$9.antiAliasing, scene$9.depthBuffer, scene$9.dndGesture, scene$9.focusDirty, scene$9.focusOwner, scene$9.heightSetByUser, scene$9.keyHandler, scene$9.lights, scene$9.nextTouchEvent, scene$9.rotateGesture, scene$9.scenePulseListener, scene$9.scrollGesture, scene$9.sizeInitialized, scene$9.stylesheets, scene$9.swipeGesture, scene$9.testPulseListener, scene$9.tmpTargetWrapper, scene$9.touchEventSetId, scene$9.touchMap, scene$9.touchPointIndex, scene$9.touchPoints, scene$9.touchTargets, scene$9.traversalEngine, scene$9.userAgentStylesheet, scene$9.widthSetByUser, scene$9.zoomGesture, stage$0$TKBoundsConfigurator.windowHeight, stage$0$TKBoundsConfigurator.windowWidth, stage$0.heightExplicit, stage$0.title, stage$0.widthExplicit }
--
   0 constructorEntry [ Sample109FX( ) ]
   1 constructorExit
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ main( java.lang.String[] ) ]
   1 formalIn D = { args$0 } U = {  }
   2 assignment D = {  } U = { this.!launch }
   3 receiver D = {  } U = {  }
   4 methodCall D = {  } U = { args$0, com.sun.javafx.application.LauncherImpl.savedPreloaderClass, java.lang.AbstractStringBuilder.count, java.lang.AbstractStringBuilder.value, java.lang.Class.name, java.lang.StackTraceElement.declaringClass, java.lang.StackTraceElement.methodName, java.lang.String.value, java.lang.System.err, java.lang.Thread.EMPTY_STACK_TRACE, java.lang.Thread.contextClassLoader, sun.security.util.SecurityConstants.GET_CLASSLOADER_PERMISSION, sun.security.util.SecurityConstants.GET_STACK_TRACE_PERMISSION } TO = javafx.application.Application#launch( java.lang.String[] )
   5 actualOut D = { this.!launch } U = { com.sun.javafx.application.LauncherImpl.savedPreloaderClass, java.lang.AbstractStringBuilder.count, java.lang.AbstractStringBuilder.value, java.lang.Class.name, java.lang.StackTraceElement.declaringClass, java.lang.StackTraceElement.methodName, java.lang.String.value, java.lang.System.err, java.lang.Thread.EMPTY_STACK_TRACE, java.lang.Thread.contextClassLoader, sun.security.util.SecurityConstants.GET_CLASSLOADER_PERMISSION, sun.security.util.SecurityConstants.GET_STACK_TRACE_PERMISSION }
   6 methodExit
   7 formalOut D = {  } U = { $_ }
--
   0: start( javafx.stage.Stage )
   1: 0 -> 2 trueControlFlow
   2: 1 -> 84 trueControlFlow
   3: 2 -> 4 trueControlFlow
   4: 3 -> 8 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 6 trueControlFlow
   7: 6 -> 3 trueControlFlow
   8: 7 -> 12 trueControlFlow
   9: 8 -> 9 trueControlFlow
  10: 9 -> 10 trueControlFlow
  11: 10 -> 7 trueControlFlow
  12: 11 -> 16 trueControlFlow
  13: 12 -> 13 trueControlFlow
  14: 13 -> 14 trueControlFlow
  15: 14 -> 11 trueControlFlow
  16: 15 -> 20 trueControlFlow
  17: 16 -> 17 trueControlFlow
  18: 17 -> 18 trueControlFlow
  19: 18 -> 15 trueControlFlow
  20: 19 -> 25 trueControlFlow
  21: 20 -> 21 trueControlFlow
  22: 21 -> 22 trueControlFlow
  23: 22 -> 19 trueControlFlow
  24: 23 -> 31 trueControlFlow
  25: 24 -> 28 trueControlFlow
  26: 25 -> 26 trueControlFlow
  27: 26 -> 27 trueControlFlow
  28: 27 -> 24 trueControlFlow
  29: 28 -> 29 trueControlFlow
  30: 29 -> 23 trueControlFlow
  31: 30 -> 35 trueControlFlow
  32: 31 -> 32 trueControlFlow
  33: 32 -> 33 trueControlFlow
  34: 33 -> 30 trueControlFlow
  35: 34 -> 39 trueControlFlow
  36: 35 -> 36 trueControlFlow
  37: 36 -> 37 trueControlFlow
  38: 37 -> 34 trueControlFlow
  39: 38 -> 43 trueControlFlow
  40: 39 -> 40 trueControlFlow
  41: 40 -> 41 trueControlFlow
  42: 41 -> 38 trueControlFlow
  43: 42 -> 48 trueControlFlow
  44: 43 -> 44 trueControlFlow
  45: 44 -> 45 trueControlFlow
  46: 45 -> 42 trueControlFlow
  47: 46 -> 54 trueControlFlow
  48: 47 -> 51 trueControlFlow
  49: 48 -> 49 trueControlFlow
  50: 49 -> 50 trueControlFlow
  51: 50 -> 47 trueControlFlow
  52: 51 -> 52 trueControlFlow
  53: 52 -> 46 trueControlFlow
  54: 53 -> 62 trueControlFlow
  55: 54 -> 57 trueControlFlow
  56: 55 -> 60 trueControlFlow
  57: 56 -> 55 trueControlFlow
  58: 57 -> 58 trueControlFlow
  59: 58 -> 59 trueControlFlow
  60: 59 -> 56 trueControlFlow
  61: 60 -> 53 trueControlFlow
  62: 61 -> 67 trueControlFlow
  63: 62 -> 63 trueControlFlow
  64: 63 -> 64 trueControlFlow
  65: 64 -> 61 trueControlFlow
  66: 65 -> 73 trueControlFlow
  67: 66 -> 70 trueControlFlow
  68: 67 -> 68 trueControlFlow
  69: 68 -> 69 trueControlFlow
  70: 69 -> 66 trueControlFlow
  71: 70 -> 71 trueControlFlow
  72: 71 -> 65 trueControlFlow
  73: 72 -> 77 trueControlFlow
  74: 73 -> 74 trueControlFlow
  75: 74 -> 75 trueControlFlow
  76: 75 -> 72 trueControlFlow
  77: 76 -> 81 trueControlFlow
  78: 77 -> 78 trueControlFlow
  79: 78 -> 79 trueControlFlow
  80: 79 -> 76 trueControlFlow
  81: 80 -> 85 trueControlFlow
  82: 81 -> 82 trueControlFlow
  83: 82 -> 83 trueControlFlow
  84: 83 -> 80 trueControlFlow
  85: 85 -> 84 trueControlFlow
--
   0: Sample109FX( )
   1: 0 -> 2 trueControlFlow
   2: 2 -> 1 trueControlFlow
--
   0: main( java.lang.String[] )
   1: 0 -> 1 trueControlFlow
   2: 1 -> 3 trueControlFlow
   3: 2 -> 7 trueControlFlow
   4: 3 -> 4 trueControlFlow
   5: 4 -> 5 trueControlFlow
   6: 5 -> 2 trueControlFlow
   7: 7 -> 6 trueControlFlow
--
----- CCFG (to here) -----

