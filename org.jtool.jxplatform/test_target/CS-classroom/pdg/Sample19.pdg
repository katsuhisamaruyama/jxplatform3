----- ClDG (from here) -----
Class Name = Sample19
   0 constructorEntry [ Sample19#Sample19( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ Sample19#main( java.lang.String[] ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { args$0 } U = {  }
   3 localDeclaration D = { frame$1 } U = { javax.swing.JFrame.!JFrame( java.lang.String ) }
   4 receiver D = {  } U = {  }
   5 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JFrame#JFrame( java.lang.String )
* actualOut D = { javax.swing.JFrame.!JFrame( java.lang.String ), javax.swing.JFrame.!java.awt.Frame.frameSerializedDataVersion, javax.swing.JFrame.!java.awt.Frame.mbManagement, javax.swing.JFrame.!java.awt.Frame.resizable, javax.swing.JFrame.!java.awt.Frame.state, javax.swing.JFrame.!java.awt.Frame.title, javax.swing.JFrame.!java.awt.Frame.undecorated, javax.swing.JFrame.!javax.swing.JFrame.accessibleContext, javax.swing.JFrame.!javax.swing.JFrame.defaultCloseOperation, javax.swing.JFrame.!javax.swing.JFrame.rootPaneCheckingEnabled } U = {  }
   7 localDeclaration D = { contentPane$2 } U = { frame$1.!getContentPane( ) }
   8 receiver D = {  } U = { frame$1 }
   9 methodCall D = {  } U = { frame$1.!javax.swing.JFrame.rootPane, frame$1.!javax.swing.JRootPane.contentPane, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JFrame.rootPane, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JRootPane.contentPane } TO = javax.swing.JFrame#getContentPane( )
  10 actualOut D = { frame$1.!getContentPane( ) } U = { frame$1.!javax.swing.JFrame.rootPane, frame$1.!javax.swing.JRootPane.contentPane, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JFrame.rootPane, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JRootPane.contentPane }
  11 localDeclaration D = { dialog$3 } U = { DialogA.!DialogA( java.awt.Frame java.lang.String java.lang.String ) }
  12 receiver D = {  } U = {  }
  13 constructorCall D = {  } U = { DialogA.contentPane$3.!java.awt.Component.parent, DialogA.contentPane$3.!java.awt.Container.component, DialogA.contentPane$3.!java.awt.Container.containerListener, DialogA.contentPane$3.!java.awt.Container.eventMask, DialogA.contentPane$3.!java.awt.Container.layoutMgr, DialogA.contentPane$3.!java.awt.Container.peer, DialogA.super.!java.awt.Dialog$ModalityType.MODELESS, DialogA.super.!java.awt.Dialog.DEFAULT_MODALITY_TYPE, DialogA.super.!java.awt.Window.windowListener, DialogA.super.!javax.swing.SwingUtilities.sharedOwnerFrameKey, DialogA.yesButton$4.!javax.swing.AbstractButton.listenerList, DialogA.yesButton$4.!javax.swing.event.EventListenerList.NULL_ARRAY, DialogA.yesButton$4.!javax.swing.event.EventListenerList.listenerList, label$6.CENTER, msg$2.CENTER, this.!java.awt.Container.component, this.!java.awt.Container.peer, this.!java.awt.Dimension.height, this.!java.awt.Dimension.width, this.!java.awt.Window.allWindows, this.!java.awt.Window.beforeFirstShow, this.!java.awt.Window.parent, this.!java.awt.Window.peer, this.!java.awt.Window.x, this.!java.awt.Window.y, this.!javax.swing.JDialog.rootPane, this.!javax.swing.JRootPane.contentPane, yesButton$4.EAST } TO = DialogA#DialogA( java.awt.Frame java.lang.String java.lang.String )
  14 actualIn D = {  } U = { frame$1 }
  15 actualIn D = {  } U = { $java.lang.String }
  16 actualIn D = {  } U = { $java.lang.String }
* actualOut D = { DialogA.!DialogA( java.awt.Frame java.lang.String java.lang.String ), DialogA.contentPane$3.!java.awt.Component.parent, DialogA.javax.swing.JLabel.!javax.swing.JLabel.defaultIcon, DialogA.javax.swing.JLabel.!javax.swing.JLabel.disabledIcon, DialogA.javax.swing.JLabel.!javax.swing.JLabel.disabledIconSet, DialogA.javax.swing.JLabel.!javax.swing.JLabel.horizontalAlignment, DialogA.javax.swing.JLabel.!javax.swing.JLabel.horizontalTextPosition, DialogA.javax.swing.JLabel.!javax.swing.JLabel.iconTextGap, DialogA.javax.swing.JLabel.!javax.swing.JLabel.labelFor, DialogA.javax.swing.JLabel.!javax.swing.JLabel.mnemonic, DialogA.javax.swing.JLabel.!javax.swing.JLabel.mnemonicIndex, DialogA.javax.swing.JLabel.!javax.swing.JLabel.text, DialogA.javax.swing.JLabel.!javax.swing.JLabel.verticalAlignment, DialogA.javax.swing.JLabel.!javax.swing.JLabel.verticalTextPosition, DialogA.super.!java.awt.Window.newEventsOnly, DialogA.super.!java.awt.Window.windowListener, DialogA.super.!javax.swing.JDialog.accessibleContext, DialogA.super.!javax.swing.JDialog.defaultCloseOperation, DialogA.super.!javax.swing.JDialog.rootPaneCheckingEnabled, DialogA.yesButton$4.!javax.swing.event.EventListenerList.listenerList, this.!java.awt.Container.descendUnconditionallyWhenValidating, this.!java.awt.Container.dispatcher, this.!java.awt.Window.isPacked, this.!java.awt.Window.peer } U = { DialogA.contentPane$3.!java.awt.Component.parent, DialogA.contentPane$3.!java.awt.Container.component, DialogA.contentPane$3.!java.awt.Container.containerListener, DialogA.contentPane$3.!java.awt.Container.eventMask, DialogA.contentPane$3.!java.awt.Container.layoutMgr, DialogA.contentPane$3.!java.awt.Container.peer, DialogA.super.!java.awt.Dialog$ModalityType.MODELESS, DialogA.super.!java.awt.Dialog.DEFAULT_MODALITY_TYPE, DialogA.super.!java.awt.Window.windowListener, DialogA.super.!javax.swing.SwingUtilities.sharedOwnerFrameKey, DialogA.yesButton$4.!javax.swing.AbstractButton.listenerList, DialogA.yesButton$4.!javax.swing.event.EventListenerList.NULL_ARRAY, DialogA.yesButton$4.!javax.swing.event.EventListenerList.listenerList, label$6.CENTER, msg$2.CENTER, this.!java.awt.Container.component, this.!java.awt.Container.peer, this.!java.awt.Dimension.height, this.!java.awt.Dimension.width, this.!java.awt.Window.allWindows, this.!java.awt.Window.beforeFirstShow, this.!java.awt.Window.parent, this.!java.awt.Window.peer, this.!java.awt.Window.x, this.!java.awt.Window.y, this.!javax.swing.JDialog.rootPane, this.!javax.swing.JRootPane.contentPane, yesButton$4.EAST }
  18 localDeclaration D = { button$4 } U = { javax.swing.JButton.!JButton( java.lang.String ) }
  19 receiver D = {  } U = {  }
  20 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JButton#JButton( java.lang.String )
  21 actualOut D = { javax.swing.JButton.!JButton( java.lang.String ) } U = {  }
  22 assignment D = {  } U = { contentPane$2.!add( java.awt.Component ) }
  23 receiver D = {  } U = { contentPane$2 }
  24 methodCall D = {  } U = { button$4, contentPane$2.!java.awt.Component.parent, contentPane$2.!java.awt.Container.component, contentPane$2.!java.awt.Container.containerListener, contentPane$2.!java.awt.Container.eventMask, contentPane$2.!java.awt.Container.layoutMgr, contentPane$2.!java.awt.Container.peer, frame$1.!getContentPane( ).!java.awt.Component.parent, frame$1.!getContentPane( ).!java.awt.Container.component, frame$1.!getContentPane( ).!java.awt.Container.containerListener, frame$1.!getContentPane( ).!java.awt.Container.eventMask, frame$1.!getContentPane( ).!java.awt.Container.layoutMgr, frame$1.!getContentPane( ).!java.awt.Container.peer } TO = java.awt.Container#add( java.awt.Component )
* actualOut D = { contentPane$2.!add( java.awt.Component ), contentPane$2.!java.awt.Component.parent } U = { contentPane$2.!java.awt.Component.parent, contentPane$2.!java.awt.Container.component, contentPane$2.!java.awt.Container.containerListener, contentPane$2.!java.awt.Container.eventMask, contentPane$2.!java.awt.Container.layoutMgr, contentPane$2.!java.awt.Container.peer, frame$1.!getContentPane( ).!java.awt.Component.parent, frame$1.!getContentPane( ).!java.awt.Container.component, frame$1.!getContentPane( ).!java.awt.Container.containerListener, frame$1.!getContentPane( ).!java.awt.Container.eventMask, frame$1.!getContentPane( ).!java.awt.Container.layoutMgr, frame$1.!getContentPane( ).!java.awt.Container.peer }
  26 assignment D = {  } U = { button$4.!addActionListener( java.awt.event.ActionListener ) }
  27 receiver D = {  } U = { button$4 }
  28 methodCall D = {  } U = { .!ActionListener( ), button$4.!javax.swing.AbstractButton.listenerList, button$4.!javax.swing.event.EventListenerList.NULL_ARRAY, button$4.!javax.swing.event.EventListenerList.listenerList, javax.swing.JButton.!JButton( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JButton.!JButton( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JButton.!JButton( java.lang.String ).!javax.swing.event.EventListenerList.listenerList } TO = javax.swing.AbstractButton#addActionListener( java.awt.event.ActionListener )
  29 receiver D = {  } U = {  }
  30 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
  31 actualOut D = { .!ActionListener( ) } U = {  }
* actualOut D = { button$4.!addActionListener( java.awt.event.ActionListener ), button$4.!javax.swing.event.EventListenerList.listenerList } U = { button$4.!javax.swing.AbstractButton.listenerList, button$4.!javax.swing.event.EventListenerList.NULL_ARRAY, button$4.!javax.swing.event.EventListenerList.listenerList, javax.swing.JButton.!JButton( java.lang.String ).!javax.swing.AbstractButton.listenerList, javax.swing.JButton.!JButton( java.lang.String ).!javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.JButton.!JButton( java.lang.String ).!javax.swing.event.EventListenerList.listenerList }
  33 assignment D = {  } U = { frame$1.!setDefaultCloseOperation( int ) }
  34 receiver D = {  } U = { frame$1 }
  35 methodCall D = {  } U = { JFrame.EXIT_ON_CLOSE, frame$1.!java.awt.Component.changeSupport, frame$1.!java.lang.System.security, frame$1.!javax.swing.JFrame.defaultCloseOperation, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Component.changeSupport, javax.swing.JFrame.!JFrame( java.lang.String ).!java.lang.System.security, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JFrame.defaultCloseOperation } TO = javax.swing.JFrame#setDefaultCloseOperation( int )
* actualOut D = { frame$1.!javax.swing.JFrame.defaultCloseOperation, frame$1.!setDefaultCloseOperation( int ) } U = { frame$1.!java.awt.Component.changeSupport, frame$1.!java.lang.System.security, frame$1.!javax.swing.JFrame.defaultCloseOperation, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Component.changeSupport, javax.swing.JFrame.!JFrame( java.lang.String ).!java.lang.System.security, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JFrame.defaultCloseOperation }
  37 assignment D = {  } U = { frame$1.!pack( ) }
  38 receiver D = {  } U = { frame$1 }
  39 methodCall D = {  } U = { frame$1.!java.awt.Container.component, frame$1.!java.awt.Container.peer, frame$1.!java.awt.Dimension.height, frame$1.!java.awt.Dimension.width, frame$1.!java.awt.Window.allWindows, frame$1.!java.awt.Window.beforeFirstShow, frame$1.!java.awt.Window.parent, frame$1.!java.awt.Window.peer, frame$1.!java.awt.Window.x, frame$1.!java.awt.Window.y, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Container.component, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Container.peer, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Dimension.height, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Dimension.width, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.allWindows, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.beforeFirstShow, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.parent, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.peer, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.x, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.y } TO = java.awt.Window#pack( )
* actualOut D = { frame$1.!java.awt.Container.descendUnconditionallyWhenValidating, frame$1.!java.awt.Container.dispatcher, frame$1.!java.awt.Window.isPacked, frame$1.!java.awt.Window.peer, frame$1.!pack( ) } U = { frame$1.!java.awt.Container.component, frame$1.!java.awt.Container.peer, frame$1.!java.awt.Dimension.height, frame$1.!java.awt.Dimension.width, frame$1.!java.awt.Window.allWindows, frame$1.!java.awt.Window.beforeFirstShow, frame$1.!java.awt.Window.parent, frame$1.!java.awt.Window.peer, frame$1.!java.awt.Window.x, frame$1.!java.awt.Window.y, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Container.component, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Container.peer, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Dimension.height, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Dimension.width, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.allWindows, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.beforeFirstShow, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.parent, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.peer, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.x, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Window.y }
  41 assignment D = {  } U = { frame$1.!setSize( int int ) }
  42 receiver D = {  } U = { frame$1 }
  43 methodCall D = {  } U = {  } TO = java.awt.Window#setSize( int int )
  44 actualOut D = { frame$1.!setSize( int int ) } U = {  }
  45 assignment D = {  } U = { frame$1.!setVisible( boolean ) }
  46 receiver D = {  } U = { frame$1 }
  47 methodCall D = {  } U = {  } TO = java.awt.Window#setVisible( boolean )
  48 actualOut D = { frame$1.!setVisible( boolean ) } U = {  }
  50 formalOut D = {  } U = { $_ }
--
   0: Sample19( )
   1:    0 ->    2 trueControlDependence
--
   0: main( java.lang.String[] )
   1:    0 ->    2 trueControlDependence
   2:    0 ->    4 trueControlDependence
   3:    0 ->    5 trueControlDependence
   4:    3 ->    8 declaration
   5:    3 ->    8 loopIndependentDefUseDependence frame$1
   6:    3 ->   14 declaration
   7:    3 ->   14 loopIndependentDefUseDependence frame$1
   8:    3 ->   34 declaration
   9:    3 ->   34 loopIndependentDefUseDependence frame$1
  10:    3 ->   38 declaration
  11:    3 ->   38 loopIndependentDefUseDependence frame$1
  12:    3 ->   42 declaration
  13:    3 ->   42 loopIndependentDefUseDependence frame$1
  14:    3 ->   46 declaration
  15:    3 ->   46 loopIndependentDefUseDependence frame$1
  16:    5 ->    1 exceptionCatch
  17:    5 ->    3 trueControlDependence
  18:    5 ->    7 trueControlDependence
  19:    5 ->    8 trueControlDependence
  20:    5 ->    9 trueControlDependence
  21:    5 ->   10 trueControlDependence
  22:    5 ->   11 trueControlDependence
  23:    5 ->   12 trueControlDependence
  24:    5 ->   13 trueControlDependence
  25:    5 ->   14 trueControlDependence
  26:    5 ->   15 trueControlDependence
  27:    5 ->   16 trueControlDependence
  28:    5 ->   18 trueControlDependence
  29:    5 ->   19 trueControlDependence
  30:    5 ->   20 trueControlDependence
  31:    5 ->   21 trueControlDependence
  32:    5 ->   22 trueControlDependence
  33:    5 ->   23 trueControlDependence
  34:    5 ->   24 trueControlDependence
  35:    5 ->   26 trueControlDependence
  36:    5 ->   27 trueControlDependence
  37:    5 ->   28 trueControlDependence
  38:    5 ->   29 trueControlDependence
  39:    5 ->   30 trueControlDependence
  40:    5 ->   31 trueControlDependence
  41:    5 ->   33 trueControlDependence
  42:    5 ->   34 trueControlDependence
  43:    5 ->   35 trueControlDependence
  44:    5 ->   37 trueControlDependence
  45:    5 ->   38 trueControlDependence
  46:    5 ->   39 trueControlDependence
  47:    5 ->   41 trueControlDependence
  48:    5 ->   42 trueControlDependence
  49:    5 ->   43 trueControlDependence
  50:    5 ->   44 trueControlDependence
  51:    5 ->   45 trueControlDependence
  52:    5 ->   46 trueControlDependence
  53:    5 ->   47 trueControlDependence
  54:    5 ->   48 trueControlDependence
  55:    5 ->   50 trueControlDependence
  56:    5 -> * trueControlDependence
  57:    5 -> * trueControlDependence
  58:    5 -> * trueControlDependence
  59:    5 -> * trueControlDependence
  60:    5 -> * trueControlDependence
  61:    5 -> * trueControlDependence
  62:    7 ->   23 declaration
  63:    7 ->   23 loopIndependentDefUseDependence contentPane$2
  64:   10 ->    7 loopIndependentDefUseDependence frame$1.!getContentPane( )
  65:   18 ->   24 declaration
  66:   18 ->   24 loopIndependentDefUseDependence button$4
  67:   18 ->   27 declaration
  68:   18 ->   27 loopIndependentDefUseDependence button$4
  69:   21 ->   18 loopIndependentDefUseDependence javax.swing.JButton.!JButton( java.lang.String )
  70:   31 ->   28 loopIndependentDefUseDependence .!ActionListener( )
  71:   44 ->   41 loopIndependentDefUseDependence frame$1.!setSize( int int )
  72:   48 ->   45 loopIndependentDefUseDependence frame$1.!setVisible( boolean )
  73: * ->    3 loopIndependentDefUseDependence javax.swing.JFrame.!JFrame( java.lang.String )
  74: * ->   11 loopIndependentDefUseDependence DialogA.!DialogA( java.awt.Frame java.lang.String java.lang.String )
  75: * ->   22 loopIndependentDefUseDependence contentPane$2.!add( java.awt.Component )
  76: * ->   26 loopIndependentDefUseDependence button$4.!addActionListener( java.awt.event.ActionListener )
  77: * ->   33 loopIndependentDefUseDependence frame$1.!setDefaultCloseOperation( int )
  78: * ->   37 loopIndependentDefUseDependence frame$1.!pack( )
--
----- ClDG (to here) -----

