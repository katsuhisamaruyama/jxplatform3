----- ClDG (from here) -----
Class Name = Sample2
   0 constructorEntry [ Sample2( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ main( java.lang.String[] ) ]
   1 formalIn D = { args$0 } U = {  }
   2 localDeclaration D = { circle1$1 } U = { circle1$1.!Circle }
   3 receiver D = {  } U = {  }
   4 constructorCall D = { circle1$1.radius, circle1$1.x, circle1$1.y } U = { circle1$1.radius, circle1$1.x, circle1$1.y } TO = Circle#Circle( int int int )
   5 actualIn D = {  } U = {  }
   6 actualIn D = {  } U = {  }
   7 actualIn D = {  } U = {  }
   8 actualOut D = { circle1$1.!Circle, circle1$1.radius, circle1$1.x, circle1$1.y } U = { circle1$1.radius, circle1$1.x, circle1$1.y }
   9 assignment D = {  } U = { System.out.!println }
  10 receiver D = {  } U = { System.out }
  11 methodCall D = { System.out, System.out.trouble } U = { $java.lang.String, System.out, System.out.autoFlush, System.out.charOut, System.out.textOut, circle1$1, circle1$1.radius, java.io.FilterOutputStream.out } TO = java.io.PrintStream#println( java.lang.String )
  12 actualOut D = { System.out, System.out.!println, System.out.trouble } U = { System.out, System.out.autoFlush, System.out.charOut, System.out.textOut, java.io.FilterOutputStream.out }
  13 assignment D = {  } U = { System.out.!println }
  14 receiver D = {  } U = { System.out }
  15 methodCall D = { System.out, System.out.trouble } U = { $java.lang.String, System.out, System.out.autoFlush, System.out.charOut, System.out.textOut, circle1$1.!getRadius, java.io.FilterOutputStream.out } TO = java.io.PrintStream#println( java.lang.String )
  16 receiver D = {  } U = { circle1$1 }
  17 methodCall D = {  } U = { circle1$1.radius } TO = Circle#getRadius( )
  18 actualOut D = { circle1$1.!getRadius } U = { circle1$1.radius }
  19 actualOut D = { System.out, System.out.!println, System.out.trouble } U = { System.out, System.out.autoFlush, System.out.charOut, System.out.textOut, java.io.FilterOutputStream.out }
  20 assignment D = {  } U = { circle1$1.!print }
  21 receiver D = {  } U = { circle1$1 }
  22 methodCall D = {  } U = { circle1$1.radius, circle1$1.x, circle1$1.y } TO = Circle#print( )
  23 actualOut D = { circle1$1.!print } U = { circle1$1.radius, circle1$1.x, circle1$1.y }
  24 localDeclaration D = { circle2$2 } U = { circle2$2.!Circle }
  25 receiver D = {  } U = {  }
  26 constructorCall D = { circle2$2.radius, circle2$2.x, circle2$2.y } U = { circle2$2.radius, circle2$2.x, circle2$2.y } TO = Circle#Circle( int int )
  27 actualIn D = {  } U = {  }
  28 actualIn D = {  } U = {  }
  29 actualOut D = { circle2$2.!Circle, circle2$2.radius, circle2$2.x, circle2$2.y } U = { circle2$2.radius, circle2$2.x, circle2$2.y }
  30 assignment D = {  } U = { System.out.!println }
  31 receiver D = {  } U = { System.out }
  32 methodCall D = { System.out, System.out.trouble } U = { $java.lang.String, System.out, System.out.autoFlush, System.out.charOut, System.out.textOut, circle2$2.!getRadius, java.io.FilterOutputStream.out } TO = java.io.PrintStream#println( java.lang.String )
  33 receiver D = {  } U = { circle2$2 }
  34 methodCall D = {  } U = { circle2$2.radius } TO = Circle#getRadius( )
  35 actualOut D = { circle2$2.!getRadius } U = { circle2$2.radius }
  36 actualOut D = { System.out, System.out.!println, System.out.trouble } U = { System.out, System.out.autoFlush, System.out.charOut, System.out.textOut, java.io.FilterOutputStream.out }
  37 assignment D = {  } U = { circle2$2.!setRadius }
  38 receiver D = {  } U = { circle2$2 }
  39 methodCall D = { circle2$2.radius } U = { circle2$2.radius } TO = Circle#setRadius( int )
  40 actualIn D = {  } U = {  }
  41 actualOut D = { circle2$2.!setRadius, circle2$2.radius } U = { circle2$2.radius }
  42 assignment D = {  } U = { System.out.!println }
  43 receiver D = {  } U = { System.out }
  44 methodCall D = { System.out, System.out.trouble } U = { $java.lang.String, System.out, System.out.autoFlush, System.out.charOut, System.out.textOut, circle2$2.!getRadius, java.io.FilterOutputStream.out } TO = java.io.PrintStream#println( java.lang.String )
  45 receiver D = {  } U = { circle2$2 }
  46 methodCall D = {  } U = { circle2$2.radius } TO = Circle#getRadius( )
  47 actualOut D = { circle2$2.!getRadius } U = { circle2$2.radius }
  48 actualOut D = { System.out, System.out.!println, System.out.trouble } U = { System.out, System.out.autoFlush, System.out.charOut, System.out.textOut, java.io.FilterOutputStream.out }
  49 assignment D = {  } U = { circle2$2.!print }
  50 receiver D = {  } U = { circle2$2 }
  51 methodCall D = {  } U = { circle2$2.radius, circle2$2.x, circle2$2.y } TO = Circle#print( )
  52 actualOut D = { circle2$2.!print } U = { circle2$2.radius, circle2$2.x, circle2$2.y }
  54 formalOut D = {  } U = { $_, System.out, System.out.trouble, circle1$1.radius, circle1$1.x, circle1$1.y, circle2$2.radius, circle2$2.x, circle2$2.y }
--
   0: Sample2( )
   1: 0 -> 2 trueControlDependence
--
   0: main( java.lang.String[] )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 10 trueControlDependence
   3: 0 -> 11 trueControlDependence
   4: 0 -> 12 trueControlDependence
   5: 0 -> 13 trueControlDependence
   6: 0 -> 14 trueControlDependence
   7: 0 -> 15 trueControlDependence
   8: 0 -> 16 trueControlDependence
   9: 0 -> 17 trueControlDependence
  10: 0 -> 18 trueControlDependence
  11: 0 -> 19 trueControlDependence
  12: 0 -> 2 trueControlDependence
  13: 0 -> 20 trueControlDependence
  14: 0 -> 21 trueControlDependence
  15: 0 -> 22 trueControlDependence
  16: 0 -> 23 trueControlDependence
  17: 0 -> 24 trueControlDependence
  18: 0 -> 25 trueControlDependence
  19: 0 -> 26 trueControlDependence
  20: 0 -> 27 trueControlDependence
  21: 0 -> 28 trueControlDependence
  22: 0 -> 29 trueControlDependence
  23: 0 -> 3 trueControlDependence
  24: 0 -> 30 trueControlDependence
  25: 0 -> 31 trueControlDependence
  26: 0 -> 32 trueControlDependence
  27: 0 -> 33 trueControlDependence
  28: 0 -> 34 trueControlDependence
  29: 0 -> 35 trueControlDependence
  30: 0 -> 36 trueControlDependence
  31: 0 -> 37 trueControlDependence
  32: 0 -> 38 trueControlDependence
  33: 0 -> 39 trueControlDependence
  34: 0 -> 4 trueControlDependence
  35: 0 -> 40 trueControlDependence
  36: 0 -> 41 trueControlDependence
  37: 0 -> 42 trueControlDependence
  38: 0 -> 43 trueControlDependence
  39: 0 -> 44 trueControlDependence
  40: 0 -> 45 trueControlDependence
  41: 0 -> 46 trueControlDependence
  42: 0 -> 47 trueControlDependence
  43: 0 -> 48 trueControlDependence
  44: 0 -> 49 trueControlDependence
  45: 0 -> 5 trueControlDependence
  46: 0 -> 50 trueControlDependence
  47: 0 -> 51 trueControlDependence
  48: 0 -> 52 trueControlDependence
  49: 0 -> 54 trueControlDependence
  50: 0 -> 6 trueControlDependence
  51: 0 -> 7 trueControlDependence
  52: 0 -> 8 trueControlDependence
  53: 0 -> 9 trueControlDependence
  54: 11 -> 12 loopIndependentDefUseDependence System.out
  55: 11 -> 12 outputDependence System.out.trouble
  56: 12 -> 14 loopIndependentDefUseDependence System.out
  57: 12 -> 15 loopIndependentDefUseDependence System.out
  58: 12 -> 15 outputDependence System.out.trouble
  59: 12 -> 19 outputDependence System.out.!println
  60: 12 -> 9 loopIndependentDefUseDependence System.out.!println
  61: 15 -> 19 loopIndependentDefUseDependence System.out
  62: 15 -> 19 outputDependence System.out.trouble
  63: 18 -> 15 loopIndependentDefUseDependence circle1$1.!getRadius
  64: 19 -> 13 loopIndependentDefUseDependence System.out.!println
  65: 19 -> 31 loopIndependentDefUseDependence System.out
  66: 19 -> 32 loopIndependentDefUseDependence System.out
  67: 19 -> 32 outputDependence System.out.trouble
  68: 19 -> 36 outputDependence System.out.!println
  69: 2 -> 11 declaration
  70: 2 -> 11 loopIndependentDefUseDependence circle1$1
  71: 2 -> 16 declaration
  72: 2 -> 16 loopIndependentDefUseDependence circle1$1
  73: 2 -> 21 declaration
  74: 2 -> 21 loopIndependentDefUseDependence circle1$1
  75: 23 -> 20 loopIndependentDefUseDependence circle1$1.!print
  76: 24 -> 33 declaration
  77: 24 -> 33 loopIndependentDefUseDependence circle2$2
  78: 24 -> 38 declaration
  79: 24 -> 38 loopIndependentDefUseDependence circle2$2
  80: 24 -> 45 declaration
  81: 24 -> 45 loopIndependentDefUseDependence circle2$2
  82: 24 -> 50 declaration
  83: 24 -> 50 loopIndependentDefUseDependence circle2$2
  84: 26 -> 29 loopIndependentDefUseDependence circle2$2.radius
  85: 26 -> 29 loopIndependentDefUseDependence circle2$2.x
  86: 26 -> 29 loopIndependentDefUseDependence circle2$2.y
  87: 27 -> 29 summary
  88: 28 -> 29 summary
  89: 29 -> 24 loopIndependentDefUseDependence circle2$2.!Circle
  90: 29 -> 34 loopIndependentDefUseDependence circle2$2.radius
  91: 29 -> 35 loopIndependentDefUseDependence circle2$2.radius
  92: 29 -> 39 loopIndependentDefUseDependence circle2$2.radius
  93: 29 -> 51 loopIndependentDefUseDependence circle2$2.x
  94: 29 -> 51 loopIndependentDefUseDependence circle2$2.y
  95: 29 -> 52 loopIndependentDefUseDependence circle2$2.x
  96: 29 -> 52 loopIndependentDefUseDependence circle2$2.y
  97: 29 -> 54 loopIndependentDefUseDependence circle2$2.x
  98: 29 -> 54 loopIndependentDefUseDependence circle2$2.y
  99: 32 -> 36 loopIndependentDefUseDependence System.out
 100: 32 -> 36 outputDependence System.out.trouble
 101: 35 -> 32 loopIndependentDefUseDependence circle2$2.!getRadius
 102: 35 -> 47 outputDependence circle2$2.!getRadius
 103: 36 -> 30 loopIndependentDefUseDependence System.out.!println
 104: 36 -> 43 loopIndependentDefUseDependence System.out
 105: 36 -> 44 loopIndependentDefUseDependence System.out
 106: 36 -> 44 outputDependence System.out.trouble
 107: 36 -> 48 outputDependence System.out.!println
 108: 39 -> 41 loopIndependentDefUseDependence circle2$2.radius
 109: 4 -> 8 loopIndependentDefUseDependence circle1$1.radius
 110: 4 -> 8 loopIndependentDefUseDependence circle1$1.x
 111: 4 -> 8 loopIndependentDefUseDependence circle1$1.y
 112: 40 -> 41 summary
 113: 41 -> 37 loopIndependentDefUseDependence circle2$2.!setRadius
 114: 41 -> 46 loopIndependentDefUseDependence circle2$2.radius
 115: 41 -> 47 loopIndependentDefUseDependence circle2$2.radius
 116: 41 -> 51 loopIndependentDefUseDependence circle2$2.radius
 117: 41 -> 52 loopIndependentDefUseDependence circle2$2.radius
 118: 41 -> 54 loopIndependentDefUseDependence circle2$2.radius
 119: 44 -> 48 loopIndependentDefUseDependence System.out
 120: 44 -> 48 outputDependence System.out.trouble
 121: 47 -> 44 loopIndependentDefUseDependence circle2$2.!getRadius
 122: 48 -> 42 loopIndependentDefUseDependence System.out.!println
 123: 48 -> 54 loopIndependentDefUseDependence System.out
 124: 48 -> 54 loopIndependentDefUseDependence System.out.trouble
 125: 5 -> 8 summary
 126: 52 -> 49 loopIndependentDefUseDependence circle2$2.!print
 127: 6 -> 8 summary
 128: 7 -> 8 summary
 129: 8 -> 11 loopIndependentDefUseDependence circle1$1.radius
 130: 8 -> 17 loopIndependentDefUseDependence circle1$1.radius
 131: 8 -> 18 loopIndependentDefUseDependence circle1$1.radius
 132: 8 -> 2 loopIndependentDefUseDependence circle1$1.!Circle
 133: 8 -> 22 loopIndependentDefUseDependence circle1$1.radius
 134: 8 -> 22 loopIndependentDefUseDependence circle1$1.x
 135: 8 -> 22 loopIndependentDefUseDependence circle1$1.y
 136: 8 -> 23 loopIndependentDefUseDependence circle1$1.radius
 137: 8 -> 23 loopIndependentDefUseDependence circle1$1.x
 138: 8 -> 23 loopIndependentDefUseDependence circle1$1.y
 139: 8 -> 54 loopIndependentDefUseDependence circle1$1.radius
 140: 8 -> 54 loopIndependentDefUseDependence circle1$1.x
 141: 8 -> 54 loopIndependentDefUseDependence circle1$1.y
--
----- ClDG (to here) -----

