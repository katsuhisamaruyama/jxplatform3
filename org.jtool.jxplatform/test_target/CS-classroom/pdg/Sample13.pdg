----- ClDG (from here) -----
Class Name = Sample13
   0 methodEntry [ main( java.lang.String[] ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { args$0 } U = {  }
   3 localDeclaration D = { frame$1 } U = { frame$1.!JFrame }
   4 receiver D = {  } U = {  }
   5 constructorCall D = { frame$1.accessibleContext, frame$1.defaultCloseOperation, frame$1.rootPaneCheckingEnabled, java.awt.Frame.frameSerializedDataVersion, java.awt.Frame.mbManagement, java.awt.Frame.resizable, java.awt.Frame.state, java.awt.Frame.title, java.awt.Frame.undecorated } U = { $java.lang.String } TO = javax.swing.JFrame#JFrame( java.lang.String )
   6 actualOut D = { frame$1.!JFrame, frame$1.accessibleContext, frame$1.defaultCloseOperation, frame$1.rootPaneCheckingEnabled, java.awt.Frame.frameSerializedDataVersion, java.awt.Frame.mbManagement, java.awt.Frame.resizable, java.awt.Frame.state, java.awt.Frame.title, java.awt.Frame.undecorated } U = {  }
   7 localDeclaration D = { contentPane$2 } U = { frame$1.!getContentPane }
   8 receiver D = {  } U = { frame$1 }
   9 methodCall D = {  } U = { frame$1, frame$1.rootPane, javax.swing.JRootPane.contentPane } TO = javax.swing.JFrame#getContentPane( )
  10 actualOut D = { frame$1.!getContentPane } U = { frame$1.rootPane, javax.swing.JRootPane.contentPane }
  11 localDeclaration D = { panel$3 } U = { panel$3.!PanelA }
  12 receiver D = {  } U = {  }
  13 constructorCall D = { panel$3.label } U = { panel$3.label } TO = PanelA#PanelA( )
  14 actualOut D = { panel$3.!PanelA, panel$3.label } U = { panel$3.label }
  15 assignment D = {  } U = { contentPane$2.!add }
  16 receiver D = {  } U = { contentPane$2, frame$1.!getContentPane }
  17 methodCall D = { contentPane$2, java.awt.Component.parent } U = { contentPane$2, contentPane$2.component, contentPane$2.containerListener, contentPane$2.layoutMgr, java.awt.Component.eventMask, java.awt.Component.parent, java.awt.Component.peer, panel$3 } TO = java.awt.Container#add( java.awt.Component )
  18 actualOut D = { contentPane$2, contentPane$2.!add, java.awt.Component.parent } U = { contentPane$2, contentPane$2.component, contentPane$2.containerListener, contentPane$2.layoutMgr, java.awt.Component.eventMask, java.awt.Component.parent, java.awt.Component.peer }
  19 assignment D = {  } U = { frame$1.!setDefaultCloseOperation }
  20 receiver D = {  } U = { frame$1 }
  21 methodCall D = { frame$1, frame$1.defaultCloseOperation } U = { JFrame.EXIT_ON_CLOSE, frame$1, frame$1.defaultCloseOperation, java.awt.Component.changeSupport, java.lang.System.security } TO = javax.swing.JFrame#setDefaultCloseOperation( int )
  22 actualOut D = { frame$1, frame$1.!setDefaultCloseOperation, frame$1.defaultCloseOperation } U = { frame$1, frame$1.defaultCloseOperation, java.awt.Component.changeSupport, java.lang.System.security }
  23 assignment D = {  } U = { frame$1.!setSize }
  24 receiver D = {  } U = { frame$1 }
  25 methodCall D = {  } U = {  } TO = java.awt.Window#setSize( int int )
  26 actualOut D = { frame$1.!setSize } U = {  }
  27 assignment D = {  } U = { frame$1.!setVisible }
  28 receiver D = {  } U = { frame$1 }
  29 methodCall D = {  } U = {  } TO = java.awt.Window#setVisible( boolean )
  30 actualOut D = { frame$1.!setVisible } U = {  }
  32 formalOut D = {  } U = { $_, frame$1.accessibleContext, frame$1.defaultCloseOperation, frame$1.rootPaneCheckingEnabled, java.awt.Component.parent, java.awt.Frame.frameSerializedDataVersion, java.awt.Frame.mbManagement, java.awt.Frame.resizable, java.awt.Frame.state, java.awt.Frame.title, java.awt.Frame.undecorated, panel$3.label }
--
   0 constructorEntry [ Sample13( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0: main( java.lang.String[] )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 32 trueControlDependence
   4: 0 -> 4 trueControlDependence
   5: 0 -> 5 trueControlDependence
   6: 0 -> 6 trueControlDependence
   7: 10 -> 16 loopIndependentDefUseDependence frame$1.!getContentPane
   8: 10 -> 7 loopIndependentDefUseDependence frame$1.!getContentPane
   9: 11 -> 17 declaration
  10: 11 -> 17 loopIndependentDefUseDependence panel$3
  11: 13 -> 14 loopIndependentDefUseDependence panel$3.label
  12: 14 -> 11 loopIndependentDefUseDependence panel$3.!PanelA
  13: 14 -> 32 loopIndependentDefUseDependence panel$3.label
  14: 17 -> 18 loopIndependentDefUseDependence contentPane$2
  15: 17 -> 18 loopIndependentDefUseDependence java.awt.Component.parent
  16: 18 -> 15 loopIndependentDefUseDependence contentPane$2.!add
  17: 18 -> 32 loopIndependentDefUseDependence java.awt.Component.parent
  18: 21 -> 22 loopIndependentDefUseDependence frame$1
  19: 21 -> 22 loopIndependentDefUseDependence frame$1.defaultCloseOperation
  20: 22 -> 19 loopIndependentDefUseDependence frame$1.!setDefaultCloseOperation
  21: 22 -> 24 loopIndependentDefUseDependence frame$1
  22: 22 -> 28 loopIndependentDefUseDependence frame$1
  23: 22 -> 32 loopIndependentDefUseDependence frame$1.defaultCloseOperation
  24: 26 -> 23 loopIndependentDefUseDependence frame$1.!setSize
  25: 3 -> 20 declaration
  26: 3 -> 20 loopIndependentDefUseDependence frame$1
  27: 3 -> 21 declaration
  28: 3 -> 21 loopIndependentDefUseDependence frame$1
  29: 3 -> 22 declaration
  30: 3 -> 24 declaration
  31: 3 -> 28 declaration
  32: 3 -> 8 declaration
  33: 3 -> 8 loopIndependentDefUseDependence frame$1
  34: 3 -> 9 declaration
  35: 3 -> 9 loopIndependentDefUseDependence frame$1
  36: 30 -> 27 loopIndependentDefUseDependence frame$1.!setVisible
  37: 5 -> 1 exceptionCatch
  38: 5 -> 10 trueControlDependence
  39: 5 -> 11 trueControlDependence
  40: 5 -> 12 trueControlDependence
  41: 5 -> 13 trueControlDependence
  42: 5 -> 14 trueControlDependence
  43: 5 -> 15 trueControlDependence
  44: 5 -> 16 trueControlDependence
  45: 5 -> 17 trueControlDependence
  46: 5 -> 18 trueControlDependence
  47: 5 -> 19 trueControlDependence
  48: 5 -> 20 trueControlDependence
  49: 5 -> 21 trueControlDependence
  50: 5 -> 22 trueControlDependence
  51: 5 -> 23 trueControlDependence
  52: 5 -> 24 trueControlDependence
  53: 5 -> 25 trueControlDependence
  54: 5 -> 26 trueControlDependence
  55: 5 -> 27 trueControlDependence
  56: 5 -> 28 trueControlDependence
  57: 5 -> 29 trueControlDependence
  58: 5 -> 3 trueControlDependence
  59: 5 -> 30 trueControlDependence
  60: 5 -> 6 outputDependence frame$1.accessibleContext
  61: 5 -> 6 outputDependence frame$1.defaultCloseOperation
  62: 5 -> 6 outputDependence frame$1.rootPaneCheckingEnabled
  63: 5 -> 6 outputDependence java.awt.Frame.frameSerializedDataVersion
  64: 5 -> 6 outputDependence java.awt.Frame.mbManagement
  65: 5 -> 6 outputDependence java.awt.Frame.resizable
  66: 5 -> 6 outputDependence java.awt.Frame.state
  67: 5 -> 6 outputDependence java.awt.Frame.title
  68: 5 -> 6 outputDependence java.awt.Frame.undecorated
  69: 5 -> 7 trueControlDependence
  70: 5 -> 8 trueControlDependence
  71: 5 -> 9 trueControlDependence
  72: 6 -> 21 loopIndependentDefUseDependence frame$1.defaultCloseOperation
  73: 6 -> 3 loopIndependentDefUseDependence frame$1.!JFrame
  74: 6 -> 32 loopIndependentDefUseDependence frame$1.accessibleContext
  75: 6 -> 32 loopIndependentDefUseDependence frame$1.rootPaneCheckingEnabled
  76: 6 -> 32 loopIndependentDefUseDependence java.awt.Frame.frameSerializedDataVersion
  77: 6 -> 32 loopIndependentDefUseDependence java.awt.Frame.mbManagement
  78: 6 -> 32 loopIndependentDefUseDependence java.awt.Frame.resizable
  79: 6 -> 32 loopIndependentDefUseDependence java.awt.Frame.state
  80: 6 -> 32 loopIndependentDefUseDependence java.awt.Frame.title
  81: 6 -> 32 loopIndependentDefUseDependence java.awt.Frame.undecorated
  82: 7 -> 16 declaration
  83: 7 -> 16 loopIndependentDefUseDependence contentPane$2
  84: 7 -> 17 declaration
  85: 7 -> 17 loopIndependentDefUseDependence contentPane$2
  86: 7 -> 18 declaration
--
   0: Sample13( )
   1: 0 -> 2 trueControlDependence
--
----- ClDG (to here) -----

