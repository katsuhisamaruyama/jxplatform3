----- ClDG (from here) -----
Class Name = Sample13
   0 methodEntry [ main( java.lang.String[] ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { args$0 } U = {  }
   3 localDeclaration D = { frame$1 } U = { javax.swing.JFrame.!JFrame( java.lang.String ) }
   4 receiver D = {  } U = {  }
   5 constructorCall D = {  } U = { $java.lang.String } TO = javax.swing.JFrame#JFrame( java.lang.String )
* actualOut D = { javax.swing.JFrame.!JFrame( java.lang.String ), javax.swing.JFrame.!java.awt.Frame.frameSerializedDataVersion, javax.swing.JFrame.!java.awt.Frame.mbManagement, javax.swing.JFrame.!java.awt.Frame.resizable, javax.swing.JFrame.!java.awt.Frame.state, javax.swing.JFrame.!java.awt.Frame.title, javax.swing.JFrame.!java.awt.Frame.undecorated, javax.swing.JFrame.!javax.swing.JFrame.accessibleContext, javax.swing.JFrame.!javax.swing.JFrame.defaultCloseOperation, javax.swing.JFrame.!javax.swing.JFrame.rootPaneCheckingEnabled } U = {  }
   7 localDeclaration D = { contentPane$2 } U = { frame$1.!getContentPane( ) }
   8 receiver D = {  } U = { frame$1 }
   9 methodCall D = {  } U = { frame$1.!javax.swing.JFrame.rootPane, frame$1.!javax.swing.JRootPane.contentPane, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JFrame.rootPane, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JRootPane.contentPane } TO = javax.swing.JFrame#getContentPane( )
  10 actualOut D = { frame$1.!getContentPane( ) } U = { frame$1.!javax.swing.JFrame.rootPane, frame$1.!javax.swing.JRootPane.contentPane, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JFrame.rootPane, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JRootPane.contentPane }
  11 localDeclaration D = { panel$3 } U = { PanelA.!PanelA( ) }
  12 receiver D = {  } U = {  }
  13 constructorCall D = {  } U = { PanelA.!PanelA( ).label, PanelA.button$0.!javax.swing.AbstractButton.listenerList, PanelA.button$0.!javax.swing.event.EventListenerList.NULL_ARRAY, PanelA.button$0.!javax.swing.event.EventListenerList.listenerList, button$0.CENTER, this, this.!java.awt.Component.parent, this.!java.awt.Container.component, this.!java.awt.Container.containerListener, this.!java.awt.Container.eventMask, this.!java.awt.Container.layoutMgr, this.!java.awt.Container.peer, this.label.NORTH } TO = PanelA#PanelA( )
* actualOut D = { PanelA.!PanelA( ), PanelA.button$0.!javax.swing.event.EventListenerList.listenerList, PanelA.java.awt.BorderLayout.!java.awt.BorderLayout.hgap, PanelA.java.awt.BorderLayout.!java.awt.BorderLayout.vgap, PanelA.javax.swing.JLabel.!javax.swing.JLabel.defaultIcon, PanelA.javax.swing.JLabel.!javax.swing.JLabel.disabledIcon, PanelA.javax.swing.JLabel.!javax.swing.JLabel.disabledIconSet, PanelA.javax.swing.JLabel.!javax.swing.JLabel.horizontalAlignment, PanelA.javax.swing.JLabel.!javax.swing.JLabel.horizontalTextPosition, PanelA.javax.swing.JLabel.!javax.swing.JLabel.iconTextGap, PanelA.javax.swing.JLabel.!javax.swing.JLabel.labelFor, PanelA.javax.swing.JLabel.!javax.swing.JLabel.mnemonic, PanelA.javax.swing.JLabel.!javax.swing.JLabel.mnemonicIndex, PanelA.javax.swing.JLabel.!javax.swing.JLabel.text, PanelA.javax.swing.JLabel.!javax.swing.JLabel.verticalAlignment, PanelA.javax.swing.JLabel.!javax.swing.JLabel.verticalTextPosition, this.!java.awt.Component.parent, this.!java.awt.Container.layoutMgr } U = { PanelA.!PanelA( ).label, PanelA.button$0.!javax.swing.AbstractButton.listenerList, PanelA.button$0.!javax.swing.event.EventListenerList.NULL_ARRAY, PanelA.button$0.!javax.swing.event.EventListenerList.listenerList, button$0.CENTER, this, this.!java.awt.Component.parent, this.!java.awt.Container.component, this.!java.awt.Container.containerListener, this.!java.awt.Container.eventMask, this.!java.awt.Container.layoutMgr, this.!java.awt.Container.peer, this.label.NORTH }
  15 assignment D = {  } U = { contentPane$2.!add( java.awt.Component ) }
  16 receiver D = {  } U = { contentPane$2 }
  17 methodCall D = {  } U = { PanelA.!PanelA( ).flag, PanelA.!PanelA( ).label, contentPane$2.!java.awt.Component.parent, contentPane$2.!java.awt.Container.component, contentPane$2.!java.awt.Container.containerListener, contentPane$2.!java.awt.Container.eventMask, contentPane$2.!java.awt.Container.layoutMgr, contentPane$2.!java.awt.Container.peer, frame$1.!getContentPane( ).!java.awt.Component.parent, frame$1.!getContentPane( ).!java.awt.Container.component, frame$1.!getContentPane( ).!java.awt.Container.containerListener, frame$1.!getContentPane( ).!java.awt.Container.eventMask, frame$1.!getContentPane( ).!java.awt.Container.layoutMgr, frame$1.!getContentPane( ).!java.awt.Container.peer, panel$3, panel$3.flag, panel$3.label } TO = java.awt.Container#add( java.awt.Component )
* actualOut D = { contentPane$2.!add( java.awt.Component ), contentPane$2.!java.awt.Component.parent } U = { contentPane$2.!java.awt.Component.parent, contentPane$2.!java.awt.Container.component, contentPane$2.!java.awt.Container.containerListener, contentPane$2.!java.awt.Container.eventMask, contentPane$2.!java.awt.Container.layoutMgr, contentPane$2.!java.awt.Container.peer, frame$1.!getContentPane( ).!java.awt.Component.parent, frame$1.!getContentPane( ).!java.awt.Container.component, frame$1.!getContentPane( ).!java.awt.Container.containerListener, frame$1.!getContentPane( ).!java.awt.Container.eventMask, frame$1.!getContentPane( ).!java.awt.Container.layoutMgr, frame$1.!getContentPane( ).!java.awt.Container.peer }
  19 assignment D = {  } U = { frame$1.!setDefaultCloseOperation( int ) }
  20 receiver D = {  } U = { frame$1 }
  21 methodCall D = {  } U = { JFrame.EXIT_ON_CLOSE, frame$1.!java.awt.Component.changeSupport, frame$1.!java.lang.System.security, frame$1.!javax.swing.JFrame.defaultCloseOperation, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Component.changeSupport, javax.swing.JFrame.!JFrame( java.lang.String ).!java.lang.System.security, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JFrame.defaultCloseOperation } TO = javax.swing.JFrame#setDefaultCloseOperation( int )
* actualOut D = { frame$1.!javax.swing.JFrame.defaultCloseOperation, frame$1.!setDefaultCloseOperation( int ) } U = { frame$1.!java.awt.Component.changeSupport, frame$1.!java.lang.System.security, frame$1.!javax.swing.JFrame.defaultCloseOperation, javax.swing.JFrame.!JFrame( java.lang.String ).!java.awt.Component.changeSupport, javax.swing.JFrame.!JFrame( java.lang.String ).!java.lang.System.security, javax.swing.JFrame.!JFrame( java.lang.String ).!javax.swing.JFrame.defaultCloseOperation }
  23 assignment D = {  } U = { frame$1.!setSize( int int ) }
  24 receiver D = {  } U = { frame$1 }
  25 methodCall D = {  } U = {  } TO = java.awt.Window#setSize( int int )
  26 actualOut D = { frame$1.!setSize( int int ) } U = {  }
  27 assignment D = {  } U = { frame$1.!setVisible( boolean ) }
  28 receiver D = {  } U = { frame$1 }
  29 methodCall D = {  } U = {  } TO = java.awt.Window#setVisible( boolean )
  30 actualOut D = { frame$1.!setVisible( boolean ) } U = {  }
  32 formalOut D = {  } U = { $_ }
* actualOut D = { PanelA.!PanelA( ).label } U = {  }
--
   0 constructorEntry [ Sample13( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0: main( java.lang.String[] )
   1:    0 ->    2 trueControlDependence
   2:    0 ->    4 trueControlDependence
   3:    0 ->    5 trueControlDependence
   4:    3 ->    8 declaration
   5:    3 ->    8 loopIndependentDefUseDependence frame$1
   6:    3 ->   20 declaration
   7:    3 ->   20 loopIndependentDefUseDependence frame$1
   8:    3 ->   24 declaration
   9:    3 ->   24 loopIndependentDefUseDependence frame$1
  10:    3 ->   28 declaration
  11:    3 ->   28 loopIndependentDefUseDependence frame$1
  12:    5 ->    1 exceptionCatch
  13:    5 ->    3 trueControlDependence
  14:    5 ->    7 trueControlDependence
  15:    5 ->    8 trueControlDependence
  16:    5 ->    9 trueControlDependence
  17:    5 ->   10 trueControlDependence
  18:    5 ->   11 trueControlDependence
  19:    5 ->   12 trueControlDependence
  20:    5 ->   13 trueControlDependence
  21:    5 ->   15 trueControlDependence
  22:    5 ->   16 trueControlDependence
  23:    5 ->   17 trueControlDependence
  24:    5 ->   19 trueControlDependence
  25:    5 ->   20 trueControlDependence
  26:    5 ->   21 trueControlDependence
  27:    5 ->   23 trueControlDependence
  28:    5 ->   24 trueControlDependence
  29:    5 ->   25 trueControlDependence
  30:    5 ->   26 trueControlDependence
  31:    5 ->   27 trueControlDependence
  32:    5 ->   28 trueControlDependence
  33:    5 ->   29 trueControlDependence
  34:    5 ->   30 trueControlDependence
  35:    5 ->   32 trueControlDependence
  36:    5 -> * trueControlDependence
  37:    5 -> * trueControlDependence
  38:    5 -> * trueControlDependence
  39:    5 -> * trueControlDependence
  40:    5 -> * trueControlDependence
  41:    7 ->   16 declaration
  42:    7 ->   16 loopIndependentDefUseDependence contentPane$2
  43:   10 ->    7 loopIndependentDefUseDependence frame$1.!getContentPane( )
  44:   11 ->   17 declaration
  45:   11 ->   17 loopIndependentDefUseDependence panel$3
  46:   26 ->   23 loopIndependentDefUseDependence frame$1.!setSize( int int )
  47:   30 ->   27 loopIndependentDefUseDependence frame$1.!setVisible( boolean )
  48: * ->    3 loopIndependentDefUseDependence javax.swing.JFrame.!JFrame( java.lang.String )
  49: * ->   11 loopIndependentDefUseDependence PanelA.!PanelA( )
  50: * ->   15 loopIndependentDefUseDependence contentPane$2.!add( java.awt.Component )
  51: * ->   17 loopIndependentDefUseDependence PanelA.!PanelA( ).label
  52: * ->   19 loopIndependentDefUseDependence frame$1.!setDefaultCloseOperation( int )
  53: * -> * loopIndependentDefUseDependence PanelA.!PanelA( ).label
--
   0: Sample13( )
   1:    0 ->    2 trueControlDependence
--
----- ClDG (to here) -----

