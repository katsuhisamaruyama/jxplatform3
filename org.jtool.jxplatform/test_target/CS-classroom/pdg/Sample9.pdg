----- ClDG (from here) -----
Class Name = Sample9
   0 methodEntry [ Sample9#main( java.lang.String[] ) ]
   1 formalIn D = { args$0 } U = {  }
   2 localDeclaration D = { filename$1 } U = { $java.lang.String }
   3 trySt D = {  } U = {  }
   4 localDeclaration D = { pw$4 } U = { java.io.PrintWriter.!PrintWriter( java.io.Writer ) }
   5 receiver D = {  } U = {  }
   6 constructorCall D = {  } U = { java.io.BufferedWriter.!BufferedWriter( java.io.Writer ) } TO = java.io.PrintWriter#PrintWriter( java.io.Writer )
   7 receiver D = {  } U = {  }
   8 constructorCall D = {  } U = { java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize, java.io.FileWriter.!FileWriter( java.lang.String ) } TO = java.io.BufferedWriter#BufferedWriter( java.io.Writer )
   9 receiver D = {  } U = {  }
  10 constructorCall D = {  } U = { filename$1 } TO = java.io.FileWriter#FileWriter( java.lang.String )
  11 actualOut D = { java.io.FileWriter.!FileWriter( java.lang.String ), java.io.FileWriter.!java.io.OutputStreamWriter.se } U = {  }
  12 actualOut D = { java.io.BufferedWriter.!BufferedWriter( java.io.Writer ), java.io.BufferedWriter.!java.io.BufferedWriter.cb, java.io.BufferedWriter.!java.io.BufferedWriter.nChars, java.io.BufferedWriter.!java.io.BufferedWriter.nextChar, java.io.BufferedWriter.!java.io.BufferedWriter.out } U = { java.io.BufferedWriter.!java.io.BufferedWriter.defaultCharBufferSize }
  13 actualOut D = { java.io.PrintWriter.!PrintWriter( java.io.Writer ), java.io.PrintWriter.!java.io.PrintWriter.autoFlush, java.io.PrintWriter.!java.io.PrintWriter.out, java.io.PrintWriter.!java.io.PrintWriter.psOut, java.io.PrintWriter.!java.io.PrintWriter.trouble } U = {  }
  14 assignment D = {  } U = { pw$4.!println( java.lang.String ) }
  15 receiver D = {  } U = { pw$4 }
  16 methodCall D = {  } U = { $java.lang.String, java.io.PrintWriter.!PrintWriter( java.io.Writer ).!java.io.PrintWriter.lock, pw$4.!java.io.PrintWriter.lock } TO = java.io.PrintWriter#println( java.lang.String )
  17 actualOut D = { pw$4.!println( java.lang.String ) } U = { java.io.PrintWriter.!PrintWriter( java.io.Writer ).!java.io.PrintWriter.lock, pw$4.!java.io.PrintWriter.lock }
  18 assignment D = {  } U = { pw$4.!println( java.lang.String ) }
  19 receiver D = {  } U = { pw$4 }
  20 methodCall D = {  } U = { $java.lang.String, java.io.PrintWriter.!PrintWriter( java.io.Writer ).!java.io.PrintWriter.lock, pw$4.!java.io.PrintWriter.lock } TO = java.io.PrintWriter#println( java.lang.String )
  21 actualOut D = { pw$4.!println( java.lang.String ) } U = { java.io.PrintWriter.!PrintWriter( java.io.Writer ).!java.io.PrintWriter.lock, pw$4.!java.io.PrintWriter.lock }
  23 catchClause D = { e$5 } U = {  }
  24 assignment D = {  } U = { System.out.!println( java.lang.String ) }
  25 receiver D = {  } U = { System.out }
  26 methodCall D = {  } U = { $java.lang.String, System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut, filename$1 } TO = java.io.PrintStream#println( java.lang.String )
  27 actualOut D = { System.out.!java.io.PrintStream.trouble, System.out.!println( java.lang.String ) } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut }
  28 trySt D = {  } U = {  }
  29 localDeclaration D = { br$8 } U = { java.io.BufferedReader.!BufferedReader( java.io.Reader ) }
  30 receiver D = {  } U = {  }
  31 constructorCall D = {  } U = { java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize, java.io.FileReader.!FileReader( java.lang.String ) } TO = java.io.BufferedReader#BufferedReader( java.io.Reader )
  32 receiver D = {  } U = {  }
  33 constructorCall D = {  } U = { filename$1 } TO = java.io.FileReader#FileReader( java.lang.String )
  34 actualOut D = { java.io.FileReader.!FileReader( java.lang.String ), java.io.FileReader.!java.io.InputStreamReader.sd } U = {  }
  35 actualOut D = { java.io.BufferedReader.!BufferedReader( java.io.Reader ), java.io.BufferedReader.!java.io.BufferedReader.cb, java.io.BufferedReader.!java.io.BufferedReader.in, java.io.BufferedReader.!java.io.BufferedReader.markedChar, java.io.BufferedReader.!java.io.BufferedReader.markedSkipLF, java.io.BufferedReader.!java.io.BufferedReader.nChars, java.io.BufferedReader.!java.io.BufferedReader.nextChar, java.io.BufferedReader.!java.io.BufferedReader.readAheadLimit, java.io.BufferedReader.!java.io.BufferedReader.skipLF } U = { java.io.BufferedReader.!java.io.BufferedReader.defaultCharBufferSize }
  36 localDeclaration D = { line$9 } U = {  }
  37 whileSt D = { line$9 } U = { br$8.!readLine( ) }
  38 receiver D = {  } U = { br$8 }
  39 methodCall D = {  } U = { br$8.!java.io.BufferedReader.cb, br$8.!java.io.BufferedReader.defaultExpectedLineLength, br$8.!java.io.BufferedReader.lock, br$8.!java.io.BufferedReader.nChars, br$8.!java.io.BufferedReader.nextChar, br$8.!java.io.BufferedReader.skipLF, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.cb, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.defaultExpectedLineLength, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.lock, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.nChars, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.nextChar, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.skipLF } TO = java.io.BufferedReader#readLine( )
  40 actualOut D = { br$8.!java.io.BufferedReader.nextChar, br$8.!java.io.BufferedReader.skipLF, br$8.!readLine( ) } U = { br$8.!java.io.BufferedReader.cb, br$8.!java.io.BufferedReader.defaultExpectedLineLength, br$8.!java.io.BufferedReader.lock, br$8.!java.io.BufferedReader.nChars, br$8.!java.io.BufferedReader.nextChar, br$8.!java.io.BufferedReader.skipLF, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.cb, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.defaultExpectedLineLength, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.lock, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.nChars, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.nextChar, java.io.BufferedReader.!BufferedReader( java.io.Reader ).!java.io.BufferedReader.skipLF }
  41 assignment D = {  } U = { System.out.!println( java.lang.String ) }
  42 receiver D = {  } U = { System.out }
  43 methodCall D = {  } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut, line$9 } TO = java.io.PrintStream#println( java.lang.String )
  44 actualOut D = { System.out.!java.io.PrintStream.trouble, System.out.!println( java.lang.String ) } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut }
  46 catchClause D = { e$10 } U = {  }
  47 assignment D = {  } U = { System.out.!println( java.lang.String ) }
  48 receiver D = {  } U = { System.out }
  49 methodCall D = {  } U = { $java.lang.String, System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut, filename$1 } TO = java.io.PrintStream#println( java.lang.String )
  50 actualOut D = { System.out.!java.io.PrintStream.trouble, System.out.!println( java.lang.String ) } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut }
  51 catchClause D = { e$11 } U = {  }
  52 assignment D = {  } U = { System.out.!println( java.lang.String ) }
  53 receiver D = {  } U = { System.out }
  54 methodCall D = {  } U = { $java.lang.String, System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut, filename$1 } TO = java.io.PrintStream#println( java.lang.String )
  55 actualOut D = { System.out.!java.io.PrintStream.trouble, System.out.!println( java.lang.String ) } U = { System.out.!java.io.PrintStream.autoFlush, System.out.!java.io.PrintStream.charOut, System.out.!java.io.PrintStream.out, System.out.!java.io.PrintStream.textOut }
  57 formalOut D = {  } U = { $_ }
--
   0 constructorEntry [ Sample9#Sample9( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0: main( java.lang.String[] )
   1:    0 ->    1 trueControlDependence
   2:    0 ->    2 trueControlDependence
   3:    0 ->    3 trueControlDependence
   4:    0 ->    5 trueControlDependence
   5:    0 ->    7 trueControlDependence
   6:    0 ->    9 trueControlDependence
   7:    0 ->   10 trueControlDependence
   8:    0 ->   28 trueControlDependence
   9:    0 ->   30 trueControlDependence
  10:    0 ->   32 trueControlDependence
  11:    0 ->   33 trueControlDependence
  12:    0 ->   57 trueControlDependence
  13:    2 ->   10 declaration
  14:    2 ->   10 loopIndependentDefUseDependence filename$1
  15:    2 ->   26 declaration
  16:    2 ->   26 loopIndependentDefUseDependence filename$1
  17:    2 ->   33 declaration
  18:    2 ->   33 loopIndependentDefUseDependence filename$1
  19:    2 ->   49 declaration
  20:    2 ->   49 loopIndependentDefUseDependence filename$1
  21:    2 ->   54 declaration
  22:    2 ->   54 loopIndependentDefUseDependence filename$1
  23:    3 ->   23 trueControlDependence
  24:    4 ->   15 declaration
  25:    4 ->   15 loopIndependentDefUseDependence pw$4
  26:    4 ->   19 declaration
  27:    4 ->   19 loopIndependentDefUseDependence pw$4
  28:   10 ->    4 trueControlDependence
  29:   10 ->    6 trueControlDependence
  30:   10 ->    8 trueControlDependence
  31:   10 ->   11 trueControlDependence
  32:   10 ->   12 trueControlDependence
  33:   10 ->   13 trueControlDependence
  34:   10 ->   14 trueControlDependence
  35:   10 ->   15 trueControlDependence
  36:   10 ->   16 trueControlDependence
  37:   10 ->   17 trueControlDependence
  38:   10 ->   18 trueControlDependence
  39:   10 ->   19 trueControlDependence
  40:   10 ->   20 trueControlDependence
  41:   10 ->   21 trueControlDependence
  42:   10 ->   23 exceptionCatch
  43:   11 ->    8 loopIndependentDefUseDependence java.io.FileWriter.!FileWriter( java.lang.String )
  44:   12 ->    6 loopIndependentDefUseDependence java.io.BufferedWriter.!BufferedWriter( java.io.Writer )
  45:   13 ->    4 loopIndependentDefUseDependence java.io.PrintWriter.!PrintWriter( java.io.Writer )
  46:   17 ->   14 loopIndependentDefUseDependence pw$4.!println( java.lang.String )
  47:   17 ->   21 outputDependence pw$4.!println( java.lang.String )
  48:   21 ->   18 loopIndependentDefUseDependence pw$4.!println( java.lang.String )
  49:   23 ->   24 trueControlDependence
  50:   23 ->   25 trueControlDependence
  51:   23 ->   26 trueControlDependence
  52:   23 ->   27 trueControlDependence
  53:   27 ->   24 loopIndependentDefUseDependence System.out.!println( java.lang.String )
  54:   27 ->   44 outputDependence System.out.!java.io.PrintStream.trouble
  55:   27 ->   44 outputDependence System.out.!println( java.lang.String )
  56:   27 ->   50 outputDependence System.out.!java.io.PrintStream.trouble
  57:   27 ->   50 outputDependence System.out.!println( java.lang.String )
  58:   27 ->   55 outputDependence System.out.!java.io.PrintStream.trouble
  59:   27 ->   55 outputDependence System.out.!println( java.lang.String )
  60:   28 ->   46 trueControlDependence
  61:   28 ->   51 trueControlDependence
  62:   29 ->   38 declaration
  63:   29 ->   38 loopIndependentDefUseDependence br$8
  64:   33 ->   29 trueControlDependence
  65:   33 ->   31 trueControlDependence
  66:   33 ->   34 trueControlDependence
  67:   33 ->   35 trueControlDependence
  68:   33 ->   36 trueControlDependence
  69:   33 ->   38 trueControlDependence
  70:   33 ->   39 trueControlDependence
  71:   33 ->   46 exceptionCatch
  72:   33 ->   51 exceptionCatch
  73:   34 ->   31 loopIndependentDefUseDependence java.io.FileReader.!FileReader( java.lang.String )
  74:   35 ->   29 loopIndependentDefUseDependence java.io.BufferedReader.!BufferedReader( java.io.Reader )
  75:   36 ->   37 declaration
  76:   36 ->   37 outputDependence line$9
  77:   36 ->   43 declaration
  78:   37 ->   37 defOrderDependence line$9
  79:   37 ->   38 trueControlDependence
  80:   37 ->   39 trueControlDependence
  81:   37 ->   41 trueControlDependence
  82:   37 ->   42 trueControlDependence
  83:   37 ->   43 loopIndependentDefUseDependence line$9
  84:   37 ->   43 trueControlDependence
  85:   37 ->   44 trueControlDependence
  86:   39 ->   37 trueControlDependence
  87:   39 ->   40 trueControlDependence
  88:   39 ->   51 exceptionCatch
  89:   40 ->   37 loopCarriedDefUseDependence br$8.!readLine( ) (LC = 37)
  90:   40 ->   39 loopCarriedDefUseDependence br$8.!java.io.BufferedReader.nextChar (LC = 37)
  91:   40 ->   39 loopCarriedDefUseDependence br$8.!java.io.BufferedReader.skipLF (LC = 37)
  92:   40 ->   40 defOrderDependence br$8.!readLine( )
  93:   40 ->   40 loopCarriedDefUseDependence br$8.!java.io.BufferedReader.nextChar (LC = 37)
  94:   40 ->   40 loopCarriedDefUseDependence br$8.!java.io.BufferedReader.skipLF (LC = 37)
  95:   44 ->   41 loopIndependentDefUseDependence System.out.!println( java.lang.String )
  96:   44 ->   44 defOrderDependence System.out.!java.io.PrintStream.trouble
  97:   44 ->   44 defOrderDependence System.out.!println( java.lang.String )
  98:   44 ->   55 outputDependence System.out.!java.io.PrintStream.trouble
  99:   44 ->   55 outputDependence System.out.!println( java.lang.String )
 100:   46 ->   47 trueControlDependence
 101:   46 ->   48 trueControlDependence
 102:   46 ->   49 trueControlDependence
 103:   46 ->   50 trueControlDependence
 104:   50 ->   47 loopIndependentDefUseDependence System.out.!println( java.lang.String )
 105:   51 ->   52 trueControlDependence
 106:   51 ->   53 trueControlDependence
 107:   51 ->   54 trueControlDependence
 108:   51 ->   55 trueControlDependence
 109:   55 ->   52 loopIndependentDefUseDependence System.out.!println( java.lang.String )
--
   0: Sample9( )
   1:    0 ->    2 trueControlDependence
--
----- ClDG (to here) -----

