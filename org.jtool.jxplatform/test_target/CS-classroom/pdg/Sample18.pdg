----- ClDG (from here) -----
Class Name = Sample18
   0 constructorEntry [ Sample18( ) ]
   2 formalOut D = {  } U = { $_ }
--
   0 methodEntry [ main( java.lang.String[] ) ]
   1 throwsClause D = {  } U = { $java.awt.HeadlessException }
   2 formalIn D = { args$0 } U = {  }
   3 localDeclaration D = { frame$1 } U = { frame$1.!JFrame }
   4 receiver D = {  } U = {  }
   5 constructorCall D = { frame$1.accessibleContext, frame$1.defaultCloseOperation, frame$1.rootPaneCheckingEnabled, java.awt.Frame.frameSerializedDataVersion, java.awt.Frame.mbManagement, java.awt.Frame.resizable, java.awt.Frame.state, java.awt.Frame.title, java.awt.Frame.undecorated } U = { $java.lang.String } TO = javax.swing.JFrame#JFrame( java.lang.String )
   6 actualOut D = { frame$1.!JFrame, frame$1.accessibleContext, frame$1.defaultCloseOperation, frame$1.rootPaneCheckingEnabled, java.awt.Frame.frameSerializedDataVersion, java.awt.Frame.mbManagement, java.awt.Frame.resizable, java.awt.Frame.state, java.awt.Frame.title, java.awt.Frame.undecorated } U = {  }
   7 localDeclaration D = { contentPane$2 } U = { frame$1.!getContentPane }
   8 receiver D = {  } U = { frame$1 }
   9 methodCall D = {  } U = { frame$1, frame$1.rootPane, javax.swing.JRootPane.contentPane } TO = javax.swing.JFrame#getContentPane( )
  10 actualOut D = { frame$1.!getContentPane } U = { frame$1.rootPane, javax.swing.JRootPane.contentPane }
  11 localDeclaration D = { menubar$3 } U = { menubar$3.!JMenuBar }
  12 receiver D = {  } U = {  }
  13 constructorCall D = { java.awt.Component.focusTraversalKeysEnabled, javax.swing.DefaultSingleSelectionModel.changeEvent, javax.swing.DefaultSingleSelectionModel.index, javax.swing.DefaultSingleSelectionModel.listenerList, javax.swing.JComponent.inputVerifier, javax.swing.JComponent.listenerList, javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JComponent.verifyInputWhenFocusTarget, menubar$3.margin, menubar$3.paintBorder, menubar$3.selectionModel } U = { java.awt.Component.focusTraversalKeysEnabled, menubar$3.selectionModel } TO = javax.swing.JMenuBar#JMenuBar( )
  14 actualOut D = { java.awt.Component.focusTraversalKeysEnabled, javax.swing.DefaultSingleSelectionModel.changeEvent, javax.swing.DefaultSingleSelectionModel.index, javax.swing.DefaultSingleSelectionModel.listenerList, javax.swing.JComponent.inputVerifier, javax.swing.JComponent.listenerList, javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JComponent.verifyInputWhenFocusTarget, menubar$3.!JMenuBar, menubar$3.margin, menubar$3.paintBorder, menubar$3.selectionModel } U = { java.awt.Component.focusTraversalKeysEnabled, menubar$3.selectionModel }
  15 assignment D = {  } U = { frame$1.!setJMenuBar }
  16 receiver D = {  } U = { frame$1 }
  17 methodCall D = { frame$1, javax.swing.JRootPane.menuBar } U = { frame$1, frame$1.rootPane, javax.swing.JLayeredPane.FRAME_CONTENT_LAYER, javax.swing.JRootPane.layeredPane, javax.swing.JRootPane.menuBar, menubar$3 } TO = javax.swing.JFrame#setJMenuBar( javax.swing.JMenuBar )
  18 actualOut D = { frame$1, frame$1.!setJMenuBar, javax.swing.JRootPane.menuBar } U = { frame$1, frame$1.rootPane, javax.swing.JLayeredPane.FRAME_CONTENT_LAYER, javax.swing.JRootPane.layeredPane, javax.swing.JRootPane.menuBar }
  19 localDeclaration D = { fileMenu$4 } U = { fileMenu$4.!JMenu }
  20 receiver D = {  } U = {  }
  21 constructorCall D = { fileMenu$4.customMenuLocation, fileMenu$4.menuChangeListener, fileMenu$4.menuEvent } U = { $java.lang.String } TO = javax.swing.JMenu#JMenu( java.lang.String )
  22 actualOut D = { fileMenu$4.!JMenu, fileMenu$4.customMenuLocation, fileMenu$4.menuChangeListener, fileMenu$4.menuEvent } U = {  }
  23 assignment D = {  } U = { menubar$3.!add }
  24 receiver D = {  } U = { menubar$3 }
  25 methodCall D = {  } U = { fileMenu$4 } TO = javax.swing.JMenuBar#add( javax.swing.JMenu )
  26 actualOut D = { menubar$3.!add } U = {  }
  27 localDeclaration D = { openItem$5 } U = { openItem$5.!JMenuItem }
  28 receiver D = {  } U = {  }
  29 constructorCall D = { openItem$5.isMouseDragged } U = { $java.lang.String } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
  30 actualOut D = { openItem$5.!JMenuItem, openItem$5.isMouseDragged } U = {  }
  31 assignment D = {  } U = { fileMenu$4.!add }
  32 receiver D = {  } U = { fileMenu$4 }
  33 methodCall D = { fileMenu$4, fileMenu$4.popupListener, fileMenu$4.popupMenu } U = { fileMenu$4, fileMenu$4.popupMenu, openItem$5 } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
  34 actualOut D = { fileMenu$4, fileMenu$4.!add, fileMenu$4.popupListener, fileMenu$4.popupMenu } U = { fileMenu$4, fileMenu$4.popupMenu }
  35 localDeclaration D = { saveItem$6 } U = { saveItem$6.!JMenuItem }
  36 receiver D = {  } U = {  }
  37 constructorCall D = { saveItem$6.isMouseDragged } U = { $java.lang.String } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
  38 actualOut D = { saveItem$6.!JMenuItem, saveItem$6.isMouseDragged } U = {  }
  39 assignment D = {  } U = { fileMenu$4.!add }
  40 receiver D = {  } U = { fileMenu$4 }
  41 methodCall D = { fileMenu$4, fileMenu$4.popupListener, fileMenu$4.popupMenu } U = { fileMenu$4, fileMenu$4.popupMenu, saveItem$6 } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
  42 actualOut D = { fileMenu$4, fileMenu$4.!add, fileMenu$4.popupListener, fileMenu$4.popupMenu } U = { fileMenu$4, fileMenu$4.popupMenu }
  43 assignment D = {  } U = { fileMenu$4.!addSeparator }
  44 receiver D = {  } U = { fileMenu$4 }
  45 methodCall D = { fileMenu$4, fileMenu$4.popupListener, fileMenu$4.popupMenu } U = { fileMenu$4, fileMenu$4.popupMenu } TO = javax.swing.JMenu#addSeparator( )
  46 actualOut D = { fileMenu$4, fileMenu$4.!addSeparator, fileMenu$4.popupListener, fileMenu$4.popupMenu } U = { fileMenu$4, fileMenu$4.popupMenu }
  47 localDeclaration D = { exitItem$7 } U = { exitItem$7.!JMenuItem }
  48 receiver D = {  } U = {  }
  49 constructorCall D = { exitItem$7.isMouseDragged } U = { $java.lang.String } TO = javax.swing.JMenuItem#JMenuItem( java.lang.String )
  50 actualOut D = { exitItem$7.!JMenuItem, exitItem$7.isMouseDragged } U = {  }
  51 assignment D = {  } U = { fileMenu$4.!add }
  52 receiver D = {  } U = { fileMenu$4 }
  53 methodCall D = { fileMenu$4, fileMenu$4.popupListener, fileMenu$4.popupMenu } U = { exitItem$7, fileMenu$4, fileMenu$4.popupMenu } TO = javax.swing.JMenu#add( javax.swing.JMenuItem )
  54 actualOut D = { fileMenu$4, fileMenu$4.!add, fileMenu$4.popupListener, fileMenu$4.popupMenu } U = { fileMenu$4, fileMenu$4.popupMenu }
  55 assignment D = {  } U = { exitItem$7.!addActionListener }
  56 receiver D = {  } U = { exitItem$7 }
  57 methodCall D = { exitItem$7, javax.swing.event.EventListenerList.listenerList } U = { .!, exitItem$7, javax.swing.JComponent.listenerList, javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.event.EventListenerList.listenerList } TO = javax.swing.AbstractButton#addActionListener( java.awt.event.ActionListener )
  58 receiver D = {  } U = {  }
  59 constructorCall D = {  } U = {  } TO = java.awt.event.ActionListener#ActionListener( )
  60 actualOut D = { .! } U = {  }
  61 actualOut D = { exitItem$7, exitItem$7.!addActionListener, javax.swing.event.EventListenerList.listenerList } U = { exitItem$7, javax.swing.JComponent.listenerList, javax.swing.event.EventListenerList.NULL_ARRAY, javax.swing.event.EventListenerList.listenerList }
  62 localDeclaration D = { panel$9 } U = { panel$9.!JPanel }
  63 receiver D = {  } U = {  }
  64 constructorCall D = {  } U = {  } TO = javax.swing.JPanel#JPanel( )
  65 actualOut D = { panel$9.!JPanel } U = {  }
  66 assignment D = {  } U = { panel$9.!setBackground }
  67 receiver D = {  } U = { panel$9 }
  68 methodCall D = { java.awt.Component.background, panel$9 } U = { Color.white, java.awt.Component.background, java.awt.Component.height, java.awt.Component.parent, java.awt.Component.peer, java.awt.Component.width, panel$9 } TO = javax.swing.JComponent#setBackground( java.awt.Color )
  69 actualOut D = { java.awt.Component.background, panel$9, panel$9.!setBackground } U = { java.awt.Component.background, java.awt.Component.height, java.awt.Component.parent, java.awt.Component.peer, java.awt.Component.width, panel$9 }
  70 assignment D = {  } U = { contentPane$2.!add }
  71 receiver D = {  } U = { contentPane$2 }
  72 methodCall D = { contentPane$2, java.awt.Component.parent } U = { contentPane$2, contentPane$2.component, contentPane$2.containerListener, contentPane$2.layoutMgr, java.awt.Component.eventMask, java.awt.Component.parent, java.awt.Component.peer, panel$9 } TO = java.awt.Container#add( java.awt.Component )
  73 actualOut D = { contentPane$2, contentPane$2.!add, java.awt.Component.parent } U = { contentPane$2, contentPane$2.component, contentPane$2.containerListener, contentPane$2.layoutMgr, java.awt.Component.eventMask, java.awt.Component.parent, java.awt.Component.peer }
  74 assignment D = {  } U = { frame$1.!setDefaultCloseOperation }
  75 receiver D = {  } U = { frame$1 }
  76 methodCall D = { frame$1, frame$1.defaultCloseOperation } U = { JFrame.EXIT_ON_CLOSE, frame$1, frame$1.defaultCloseOperation, java.awt.Component.changeSupport, java.lang.System.security } TO = javax.swing.JFrame#setDefaultCloseOperation( int )
  77 actualOut D = { frame$1, frame$1.!setDefaultCloseOperation, frame$1.defaultCloseOperation } U = { frame$1, frame$1.defaultCloseOperation, java.awt.Component.changeSupport, java.lang.System.security }
  78 assignment D = {  } U = { frame$1.!setSize }
  79 receiver D = {  } U = { frame$1 }
  80 methodCall D = {  } U = {  } TO = java.awt.Window#setSize( int int )
  81 actualOut D = { frame$1.!setSize } U = {  }
  82 assignment D = {  } U = { frame$1.!setVisible }
  83 receiver D = {  } U = { frame$1 }
  84 methodCall D = {  } U = {  } TO = java.awt.Window#setVisible( boolean )
  85 actualOut D = { frame$1.!setVisible } U = {  }
  87 formalOut D = {  } U = { $_, exitItem$7.isMouseDragged, fileMenu$4.customMenuLocation, fileMenu$4.menuChangeListener, fileMenu$4.menuEvent, fileMenu$4.popupListener, fileMenu$4.popupMenu, frame$1.accessibleContext, frame$1.defaultCloseOperation, frame$1.rootPaneCheckingEnabled, java.awt.Component.background, java.awt.Component.focusTraversalKeysEnabled, java.awt.Component.parent, java.awt.Frame.frameSerializedDataVersion, java.awt.Frame.mbManagement, java.awt.Frame.resizable, java.awt.Frame.state, java.awt.Frame.title, java.awt.Frame.undecorated, javax.swing.DefaultSingleSelectionModel.changeEvent, javax.swing.DefaultSingleSelectionModel.index, javax.swing.DefaultSingleSelectionModel.listenerList, javax.swing.JComponent.inputVerifier, javax.swing.JComponent.listenerList, javax.swing.JComponent.revalidateRunnableScheduled, javax.swing.JComponent.verifyInputWhenFocusTarget, javax.swing.JRootPane.menuBar, javax.swing.event.EventListenerList.listenerList, menubar$3.margin, menubar$3.paintBorder, menubar$3.selectionModel, openItem$5.isMouseDragged, saveItem$6.isMouseDragged }
--
   0: Sample18( )
   1: 0 -> 2 trueControlDependence
--
   0: main( java.lang.String[] )
   1: 0 -> 1 trueControlDependence
   2: 0 -> 2 trueControlDependence
   3: 0 -> 4 trueControlDependence
   4: 0 -> 5 trueControlDependence
   5: 0 -> 6 trueControlDependence
   6: 0 -> 87 trueControlDependence
   7: 10 -> 7 loopIndependentDefUseDependence frame$1.!getContentPane
   8: 11 -> 17 declaration
   9: 11 -> 17 loopIndependentDefUseDependence menubar$3
  10: 11 -> 24 declaration
  11: 11 -> 24 loopIndependentDefUseDependence menubar$3
  12: 13 -> 14 loopIndependentDefUseDependence java.awt.Component.focusTraversalKeysEnabled
  13: 13 -> 14 loopIndependentDefUseDependence menubar$3.selectionModel
  14: 13 -> 14 outputDependence javax.swing.DefaultSingleSelectionModel.changeEvent
  15: 13 -> 14 outputDependence javax.swing.DefaultSingleSelectionModel.index
  16: 13 -> 14 outputDependence javax.swing.DefaultSingleSelectionModel.listenerList
  17: 13 -> 14 outputDependence javax.swing.JComponent.inputVerifier
  18: 13 -> 14 outputDependence javax.swing.JComponent.listenerList
  19: 13 -> 14 outputDependence javax.swing.JComponent.revalidateRunnableScheduled
  20: 13 -> 14 outputDependence javax.swing.JComponent.verifyInputWhenFocusTarget
  21: 13 -> 14 outputDependence menubar$3.margin
  22: 13 -> 14 outputDependence menubar$3.paintBorder
  23: 14 -> 11 loopIndependentDefUseDependence menubar$3.!JMenuBar
  24: 14 -> 57 loopIndependentDefUseDependence javax.swing.JComponent.listenerList
  25: 14 -> 61 loopIndependentDefUseDependence javax.swing.JComponent.listenerList
  26: 14 -> 87 loopIndependentDefUseDependence java.awt.Component.focusTraversalKeysEnabled
  27: 14 -> 87 loopIndependentDefUseDependence javax.swing.DefaultSingleSelectionModel.changeEvent
  28: 14 -> 87 loopIndependentDefUseDependence javax.swing.DefaultSingleSelectionModel.index
  29: 14 -> 87 loopIndependentDefUseDependence javax.swing.DefaultSingleSelectionModel.listenerList
  30: 14 -> 87 loopIndependentDefUseDependence javax.swing.JComponent.inputVerifier
  31: 14 -> 87 loopIndependentDefUseDependence javax.swing.JComponent.listenerList
  32: 14 -> 87 loopIndependentDefUseDependence javax.swing.JComponent.revalidateRunnableScheduled
  33: 14 -> 87 loopIndependentDefUseDependence javax.swing.JComponent.verifyInputWhenFocusTarget
  34: 14 -> 87 loopIndependentDefUseDependence menubar$3.margin
  35: 14 -> 87 loopIndependentDefUseDependence menubar$3.paintBorder
  36: 14 -> 87 loopIndependentDefUseDependence menubar$3.selectionModel
  37: 17 -> 18 loopIndependentDefUseDependence frame$1
  38: 17 -> 18 loopIndependentDefUseDependence javax.swing.JRootPane.menuBar
  39: 18 -> 15 loopIndependentDefUseDependence frame$1.!setJMenuBar
  40: 18 -> 75 loopIndependentDefUseDependence frame$1
  41: 18 -> 76 loopIndependentDefUseDependence frame$1
  42: 18 -> 87 loopIndependentDefUseDependence javax.swing.JRootPane.menuBar
  43: 19 -> 25 declaration
  44: 19 -> 25 loopIndependentDefUseDependence fileMenu$4
  45: 19 -> 32 declaration
  46: 19 -> 32 loopIndependentDefUseDependence fileMenu$4
  47: 19 -> 33 declaration
  48: 19 -> 33 loopIndependentDefUseDependence fileMenu$4
  49: 19 -> 34 declaration
  50: 19 -> 40 declaration
  51: 19 -> 41 declaration
  52: 19 -> 42 declaration
  53: 19 -> 44 declaration
  54: 19 -> 45 declaration
  55: 19 -> 46 declaration
  56: 19 -> 52 declaration
  57: 19 -> 53 declaration
  58: 19 -> 54 declaration
  59: 21 -> 22 outputDependence fileMenu$4.customMenuLocation
  60: 21 -> 22 outputDependence fileMenu$4.menuChangeListener
  61: 21 -> 22 outputDependence fileMenu$4.menuEvent
  62: 22 -> 19 loopIndependentDefUseDependence fileMenu$4.!JMenu
  63: 22 -> 87 loopIndependentDefUseDependence fileMenu$4.customMenuLocation
  64: 22 -> 87 loopIndependentDefUseDependence fileMenu$4.menuChangeListener
  65: 22 -> 87 loopIndependentDefUseDependence fileMenu$4.menuEvent
  66: 26 -> 23 loopIndependentDefUseDependence menubar$3.!add
  67: 27 -> 33 declaration
  68: 27 -> 33 loopIndependentDefUseDependence openItem$5
  69: 29 -> 30 outputDependence openItem$5.isMouseDragged
  70: 3 -> 16 declaration
  71: 3 -> 16 loopIndependentDefUseDependence frame$1
  72: 3 -> 17 declaration
  73: 3 -> 17 loopIndependentDefUseDependence frame$1
  74: 3 -> 18 declaration
  75: 3 -> 75 declaration
  76: 3 -> 76 declaration
  77: 3 -> 77 declaration
  78: 3 -> 79 declaration
  79: 3 -> 8 declaration
  80: 3 -> 8 loopIndependentDefUseDependence frame$1
  81: 3 -> 83 declaration
  82: 3 -> 9 declaration
  83: 3 -> 9 loopIndependentDefUseDependence frame$1
  84: 30 -> 27 loopIndependentDefUseDependence openItem$5.!JMenuItem
  85: 30 -> 87 loopIndependentDefUseDependence openItem$5.isMouseDragged
  86: 33 -> 34 loopIndependentDefUseDependence fileMenu$4
  87: 33 -> 34 loopIndependentDefUseDependence fileMenu$4.popupMenu
  88: 33 -> 34 outputDependence fileMenu$4.popupListener
  89: 34 -> 31 loopIndependentDefUseDependence fileMenu$4.!add
  90: 34 -> 40 loopIndependentDefUseDependence fileMenu$4
  91: 34 -> 41 loopIndependentDefUseDependence fileMenu$4
  92: 34 -> 41 loopIndependentDefUseDependence fileMenu$4.popupMenu
  93: 34 -> 41 outputDependence fileMenu$4.popupListener
  94: 34 -> 42 outputDependence fileMenu$4.!add
  95: 35 -> 41 declaration
  96: 35 -> 41 loopIndependentDefUseDependence saveItem$6
  97: 37 -> 38 outputDependence saveItem$6.isMouseDragged
  98: 38 -> 35 loopIndependentDefUseDependence saveItem$6.!JMenuItem
  99: 38 -> 87 loopIndependentDefUseDependence saveItem$6.isMouseDragged
 100: 41 -> 42 loopIndependentDefUseDependence fileMenu$4
 101: 41 -> 42 loopIndependentDefUseDependence fileMenu$4.popupMenu
 102: 41 -> 42 outputDependence fileMenu$4.popupListener
 103: 42 -> 39 loopIndependentDefUseDependence fileMenu$4.!add
 104: 42 -> 44 loopIndependentDefUseDependence fileMenu$4
 105: 42 -> 45 loopIndependentDefUseDependence fileMenu$4
 106: 42 -> 45 loopIndependentDefUseDependence fileMenu$4.popupMenu
 107: 42 -> 45 outputDependence fileMenu$4.popupListener
 108: 42 -> 54 outputDependence fileMenu$4.!add
 109: 45 -> 46 loopIndependentDefUseDependence fileMenu$4
 110: 45 -> 46 loopIndependentDefUseDependence fileMenu$4.popupMenu
 111: 45 -> 46 outputDependence fileMenu$4.popupListener
 112: 46 -> 43 loopIndependentDefUseDependence fileMenu$4.!addSeparator
 113: 46 -> 52 loopIndependentDefUseDependence fileMenu$4
 114: 46 -> 53 loopIndependentDefUseDependence fileMenu$4
 115: 46 -> 53 loopIndependentDefUseDependence fileMenu$4.popupMenu
 116: 46 -> 53 outputDependence fileMenu$4.popupListener
 117: 47 -> 53 declaration
 118: 47 -> 53 loopIndependentDefUseDependence exitItem$7
 119: 47 -> 56 declaration
 120: 47 -> 56 loopIndependentDefUseDependence exitItem$7
 121: 47 -> 57 declaration
 122: 47 -> 57 loopIndependentDefUseDependence exitItem$7
 123: 47 -> 61 declaration
 124: 49 -> 50 outputDependence exitItem$7.isMouseDragged
 125: 5 -> 1 exceptionCatch
 126: 5 -> 10 trueControlDependence
 127: 5 -> 11 trueControlDependence
 128: 5 -> 12 trueControlDependence
 129: 5 -> 13 trueControlDependence
 130: 5 -> 14 trueControlDependence
 131: 5 -> 15 trueControlDependence
 132: 5 -> 16 trueControlDependence
 133: 5 -> 17 trueControlDependence
 134: 5 -> 18 trueControlDependence
 135: 5 -> 19 trueControlDependence
 136: 5 -> 20 trueControlDependence
 137: 5 -> 21 trueControlDependence
 138: 5 -> 22 trueControlDependence
 139: 5 -> 23 trueControlDependence
 140: 5 -> 24 trueControlDependence
 141: 5 -> 25 trueControlDependence
 142: 5 -> 26 trueControlDependence
 143: 5 -> 27 trueControlDependence
 144: 5 -> 28 trueControlDependence
 145: 5 -> 29 trueControlDependence
 146: 5 -> 3 trueControlDependence
 147: 5 -> 30 trueControlDependence
 148: 5 -> 31 trueControlDependence
 149: 5 -> 32 trueControlDependence
 150: 5 -> 33 trueControlDependence
 151: 5 -> 34 trueControlDependence
 152: 5 -> 35 trueControlDependence
 153: 5 -> 36 trueControlDependence
 154: 5 -> 37 trueControlDependence
 155: 5 -> 38 trueControlDependence
 156: 5 -> 39 trueControlDependence
 157: 5 -> 40 trueControlDependence
 158: 5 -> 41 trueControlDependence
 159: 5 -> 42 trueControlDependence
 160: 5 -> 43 trueControlDependence
 161: 5 -> 44 trueControlDependence
 162: 5 -> 45 trueControlDependence
 163: 5 -> 46 trueControlDependence
 164: 5 -> 47 trueControlDependence
 165: 5 -> 48 trueControlDependence
 166: 5 -> 49 trueControlDependence
 167: 5 -> 50 trueControlDependence
 168: 5 -> 51 trueControlDependence
 169: 5 -> 52 trueControlDependence
 170: 5 -> 53 trueControlDependence
 171: 5 -> 54 trueControlDependence
 172: 5 -> 55 trueControlDependence
 173: 5 -> 56 trueControlDependence
 174: 5 -> 57 trueControlDependence
 175: 5 -> 58 trueControlDependence
 176: 5 -> 59 trueControlDependence
 177: 5 -> 6 outputDependence frame$1.accessibleContext
 178: 5 -> 6 outputDependence frame$1.defaultCloseOperation
 179: 5 -> 6 outputDependence frame$1.rootPaneCheckingEnabled
 180: 5 -> 6 outputDependence java.awt.Frame.frameSerializedDataVersion
 181: 5 -> 6 outputDependence java.awt.Frame.mbManagement
 182: 5 -> 6 outputDependence java.awt.Frame.resizable
 183: 5 -> 6 outputDependence java.awt.Frame.state
 184: 5 -> 6 outputDependence java.awt.Frame.title
 185: 5 -> 6 outputDependence java.awt.Frame.undecorated
 186: 5 -> 60 trueControlDependence
 187: 5 -> 61 trueControlDependence
 188: 5 -> 62 trueControlDependence
 189: 5 -> 63 trueControlDependence
 190: 5 -> 64 trueControlDependence
 191: 5 -> 65 trueControlDependence
 192: 5 -> 66 trueControlDependence
 193: 5 -> 67 trueControlDependence
 194: 5 -> 68 trueControlDependence
 195: 5 -> 69 trueControlDependence
 196: 5 -> 7 trueControlDependence
 197: 5 -> 70 trueControlDependence
 198: 5 -> 71 trueControlDependence
 199: 5 -> 72 trueControlDependence
 200: 5 -> 73 trueControlDependence
 201: 5 -> 74 trueControlDependence
 202: 5 -> 75 trueControlDependence
 203: 5 -> 76 trueControlDependence
 204: 5 -> 77 trueControlDependence
 205: 5 -> 78 trueControlDependence
 206: 5 -> 79 trueControlDependence
 207: 5 -> 8 trueControlDependence
 208: 5 -> 80 trueControlDependence
 209: 5 -> 81 trueControlDependence
 210: 5 -> 82 trueControlDependence
 211: 5 -> 83 trueControlDependence
 212: 5 -> 84 trueControlDependence
 213: 5 -> 85 trueControlDependence
 214: 5 -> 9 trueControlDependence
 215: 50 -> 47 loopIndependentDefUseDependence exitItem$7.!JMenuItem
 216: 50 -> 87 loopIndependentDefUseDependence exitItem$7.isMouseDragged
 217: 53 -> 54 loopIndependentDefUseDependence fileMenu$4
 218: 53 -> 54 loopIndependentDefUseDependence fileMenu$4.popupMenu
 219: 53 -> 54 outputDependence fileMenu$4.popupListener
 220: 54 -> 51 loopIndependentDefUseDependence fileMenu$4.!add
 221: 54 -> 87 loopIndependentDefUseDependence fileMenu$4.popupListener
 222: 54 -> 87 loopIndependentDefUseDependence fileMenu$4.popupMenu
 223: 57 -> 61 loopIndependentDefUseDependence exitItem$7
 224: 57 -> 61 loopIndependentDefUseDependence javax.swing.event.EventListenerList.listenerList
 225: 6 -> 3 loopIndependentDefUseDependence frame$1.!JFrame
 226: 6 -> 76 loopIndependentDefUseDependence frame$1.defaultCloseOperation
 227: 6 -> 87 loopIndependentDefUseDependence frame$1.accessibleContext
 228: 6 -> 87 loopIndependentDefUseDependence frame$1.rootPaneCheckingEnabled
 229: 6 -> 87 loopIndependentDefUseDependence java.awt.Frame.frameSerializedDataVersion
 230: 6 -> 87 loopIndependentDefUseDependence java.awt.Frame.mbManagement
 231: 6 -> 87 loopIndependentDefUseDependence java.awt.Frame.resizable
 232: 6 -> 87 loopIndependentDefUseDependence java.awt.Frame.state
 233: 6 -> 87 loopIndependentDefUseDependence java.awt.Frame.title
 234: 6 -> 87 loopIndependentDefUseDependence java.awt.Frame.undecorated
 235: 60 -> 57 loopIndependentDefUseDependence .!
 236: 61 -> 55 loopIndependentDefUseDependence exitItem$7.!addActionListener
 237: 61 -> 87 loopIndependentDefUseDependence javax.swing.event.EventListenerList.listenerList
 238: 62 -> 67 declaration
 239: 62 -> 67 loopIndependentDefUseDependence panel$9
 240: 62 -> 68 declaration
 241: 62 -> 68 loopIndependentDefUseDependence panel$9
 242: 62 -> 69 declaration
 243: 62 -> 72 declaration
 244: 65 -> 62 loopIndependentDefUseDependence panel$9.!JPanel
 245: 68 -> 69 loopIndependentDefUseDependence java.awt.Component.background
 246: 68 -> 69 loopIndependentDefUseDependence panel$9
 247: 69 -> 66 loopIndependentDefUseDependence panel$9.!setBackground
 248: 69 -> 72 loopIndependentDefUseDependence panel$9
 249: 69 -> 87 loopIndependentDefUseDependence java.awt.Component.background
 250: 7 -> 71 declaration
 251: 7 -> 71 loopIndependentDefUseDependence contentPane$2
 252: 7 -> 72 declaration
 253: 7 -> 72 loopIndependentDefUseDependence contentPane$2
 254: 7 -> 73 declaration
 255: 72 -> 73 loopIndependentDefUseDependence contentPane$2
 256: 72 -> 73 loopIndependentDefUseDependence java.awt.Component.parent
 257: 73 -> 70 loopIndependentDefUseDependence contentPane$2.!add
 258: 73 -> 87 loopIndependentDefUseDependence java.awt.Component.parent
 259: 76 -> 77 loopIndependentDefUseDependence frame$1
 260: 76 -> 77 loopIndependentDefUseDependence frame$1.defaultCloseOperation
 261: 77 -> 74 loopIndependentDefUseDependence frame$1.!setDefaultCloseOperation
 262: 77 -> 79 loopIndependentDefUseDependence frame$1
 263: 77 -> 83 loopIndependentDefUseDependence frame$1
 264: 77 -> 87 loopIndependentDefUseDependence frame$1.defaultCloseOperation
 265: 81 -> 78 loopIndependentDefUseDependence frame$1.!setSize
 266: 85 -> 82 loopIndependentDefUseDependence frame$1.!setVisible
--
----- ClDG (to here) -----

