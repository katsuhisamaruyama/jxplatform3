/*
 *  Copyright 2025
 *  Software Science and Technology Lab., Ritsumeikan University
 */

plugins {
    id 'java'
    id 'eclipse'
    id 'java-library'
    id 'maven-publish'
    id("com.gradleup.shadow") version "9.1.0"
}

repositories {
    mavenCentral()
    maven { url('https://repo.gradle.org/gradle/libs-releases') }
}

group = 'org.jtool.jxplatform'

eclipse {
    classpath {
        containers 'org.eclipse.pde.core.requiredPlugins'
    }
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

dependencies {
    api group: 'org.eclipse.jdt', name: 'org.eclipse.jdt.core', version: '3.32.0'
    implementation group: 'org.apache.maven', name: 'maven-model', version: '3.8.6'
    implementation group: 'org.apache.maven.shared', name: 'maven-invoker', version: '3.2.0'
    implementation group: 'net.lingala.zip4j', name: 'zip4j', version: '2.11.5'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
    implementation group: 'org.javassist', name: 'javassist', version: '3.29.2-GA'
    implementation group: 'com.google.guava', name: 'guava', version: '33.3.1-jre'
    implementation group: 'commons-io', name: 'commons-io', version: '2.17.0'
    implementation group: 'org.gradle', name: 'gradle-tooling-api', version: '7.4.2'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.36'
    implementation group: 'org.glassfish', name: 'javax.json', version: '1.1.4'
    
    testImplementation 'junit:junit:4.13.2'
}

compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

task ciTest(type: Test) {
    minHeapSize = "6g"
    maxHeapSize = "6g"
    
    include '**/org/jtool/srcmodel/AllSrcTests.class'
    include '**/org/jtool/cfg/AllCFGTests.class'
    include '**/org/jtool/pdg/AllPDGTests.class'
    include '**/org/jtool/slice/AllSliceTests.class'
    include '**/org/jtool/codemanipulation/AllCodeManipulationTests.class'
    
    useJUnit {
        excludeCategories 'org.jtool.jxplatform.util.FlakyByExternalLib'
    }
}

task smokeTest(type: Test) {
    minHeapSize = "6g"
    maxHeapSize = "6g"
    
    include '**/org/jtool/slice/CFGTest.class'
    include '**/org/jtool/slice/PDGTest.class'
    include '**/org/jtool/slice/SliceTest.class'
}

test {
    minHeapSize = "16g"
    maxHeapSize = "16g"
    
    //testLogging {
    //    events 'standard_out', 'standard_error'
    //}
}

task javadoc(type: Javadoc, overwrite: true) {
    description = 'Generates API documents.'
    source = sourceSets.main.allJava
    include("**/org/jtool/srcmodel/*.java")
    include("**/org/jtool/cfg/*.java")
    include("**/org/jtool/pdg/*.java")
    include("**/org/jtool/graph/*.java")
    include("**/org/jtool/slice/*.java")
    include("**/org/jtool/jxplatform/builder/*.java")
    
    options.overview = "src/javadoc/overview.html"
    options.docTitle = "JxPlatform3 API Specification"
    options.windowTitle = "JxPlatform3"
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    
    withSourcesJar()
    withJavadocJar()
}

shadowJar {
    manifest {
        attributes('Main-Class' : 'org.jtool.jxplatform.builder.JavaModelBuilder')
    }
    
    archiveBaseName = 'jxplatform'
    archiveClassifier = 'SNAPSHOT'
    archiveVersion = project.property('currentRelease')
    
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    
    from sourceSets.main.allJava
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId('io.github.katsuhisamaruyama')
            artifactId('jxplatform')
            from components.java
            
            pom {
                name = 'org.jtool.jxplatform'
                description = 'Java source code analyzer'
                url = 'https://github.com/katsuhisamaruyama/jxplatform3'
                licenses {
                    license {
                        name = 'Eclipse Public License 2.0'
                        url = 'https://opensource.org/license/epl-2-0'
                    }
                }
                developers {
                    developer {
                        name = 'Katsuhisa Maruyama'
                        email = 'maru@cs.ritsumei.ac.jp'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/katsuhisamaruyama/jxplatform3.git'
                    developerConnection = 'scm:git:ssh://github.com/katsuhisamaruyama/jxplatform3.git'
                    url = 'https://github.com/katsuhisamaruyama/jxplatform3'
                }
                properties = [
                    "maven.compiler.source": "11",
                    "maven.compiler.target": "11",
                ]
            }
        }
    }
    
    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}
