/*
 *  Copyright 2022
 *  Software Science and Technology Lab., Ritsumeikan University
 */

buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'maven-publish'

group = 'org.jtool.jxplatform'

eclipse {
    classpath {
        containers 'org.eclipse.pde.core.requiredPlugins'
    }
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

sourceCompatibility = '1.11'
targetCompatibility = '1.11'

repositories {
    mavenCentral()
    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
}

dependencies {
    implementation group: 'org.eclipse.jdt', name: 'org.eclipse.jdt.core', version: '3.32.0'
    implementation group: 'org.apache.maven', name: 'maven-model', version: '3.8.6'
    implementation group: 'org.apache.maven.shared', name: 'maven-invoker', version: '3.2.0'
    implementation group: 'net.lingala.zip4j', name: 'zip4j', version: '2.11.2'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
    implementation group: 'org.javassist', name: 'javassist', version: '3.29.2-GA'
    implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation group: 'org.gradle', name: 'gradle-tooling-api', version: '7.4.2'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.36'
    implementation group: 'org.glassfish', name: 'javax.json', version: '1.1.4'
    
    testImplementation 'junit:junit:4.13.2'
}

compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

task ciTest(type: Test) {
    minHeapSize = "6g"
    maxHeapSize = "6g"
    
    include '**/org/jtool/srcmodel/AllSrcTests.class'
    include '**/org/jtool/cfg/AllCFGTests.class'
    include '**/org/jtool/pdg/AllPDGTests.class'
    include '**/org/jtool/slice/AllSliceTests.class'
    include '**/org/jtool/codemanipulation/AllCodeManipulationTests.class'
    
    useJUnit {
        excludeCategories 'org.jtool.jxplatform.util.FlakyByExternalLib'
    }
}

task smokeTest(type: Test) {
    minHeapSize = "6g"
    maxHeapSize = "6g"
    
    include '**/org/jtool/slice/CFGTest.class'
    include '**/org/jtool/slice/PDGTest.class'
    include '**/org/jtool/slice/SliceTest.class'
}

test {
    minHeapSize = "16g"
    maxHeapSize = "16g"
    
    //testLogging {
    //    events 'standard_out', 'standard_error'
    //}
}

task javadoc(type: Javadoc, overwrite: true) {
    description = 'Generates API documents.'
    source = sourceSets.main.allJava
    include("**/org/jtool/srcmodel/*.java")
    include("**/org/jtool/cfg/*.java")
    include("**/org/jtool/pdg/*.java")
    include("**/org/jtool/graph/*.java")
    include("**/org/jtool/slice/*.java")
    include("**/org/jtool/jxplatform/builder/*.java")
    
    options.overview = "src/javadoc/overview.html"
    options.docTitle = "JxPlatform3 API Specification"
    options.windowTitle="JxPlatform3"
}

java {
    withSourcesJar()
    withJavadocJar()
}

shadowJar {
    manifest {
        attributes('Main-Class' : 'org.jtool.jxplatform.builder.JavaModelBuilder')
    }
    
    archiveBaseName = 'jxplatform'
    classifier = 'SNAPSHOT'
    archiveVersion = project.property('currentVersion')
    
    from sourceSets.main.allJava
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

wrapper {
    gradleVersion = "7.5.1"
    distributionType = Wrapper.DistributionType.ALL
}
